[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-W14-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W14-4/tp/actions)","lastModifiedDate":"2021-02-23"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"# Taskify","lastModifiedDate":"2021-02-23"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"1. **Product Name**: Taskify","lastModifiedDate":"2021-02-23"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"2. **Target User Profile**: Anybody -\u003e Students -\u003e University Students","lastModifiedDate":"2021-02-23"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"3. **Value Proposition**: The app will help students manage their tasks (academics/personal/CCA) in a systematic and efficient manner. Optimized for students who are fast-typers and prefer using a  CLI.","lastModifiedDate":"2021-02-23"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"4. **Project Direction**: Morphing","lastModifiedDate":"2021-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"\u003cimg src\u003d\"docs/images/Ui.png\" height\u003d\"500\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"* For the detailed documentation of this project, see the **[Product Website](https://ay2021s2-cs2103t-w14-4.github.io/tp/)**.","lastModifiedDate":"2021-02-23"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"* This project is based on the `AddressBook Level 3` project managed by the [SE-EDU](se-education.org) intiative.","lastModifiedDate":"2021-02-23"}],"authorContributionMap":{"khiaxeng":10,"-":2,"noelmathewisaac":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"CSmortal"},"content":"run {","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"CSmortal"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"CSmortal"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"mainClassName \u003d \u0027seedu.taskify.Main\u0027","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"CSmortal"},"content":"    testCompile group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-params\u0027, version: jUnitVersion","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"noelmathewisaac"},"content":"    archiveName \u003d \u0027taskify.jar\u0027","lastModifiedDate":"2021-03-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"khiaxeng"},"content":"run {","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"khiaxeng"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"khiaxeng":2,"-":71,"CSmortal":5,"noelmathewisaac":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"title: About","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"nav-text: About Us","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"CSmortal"},"content":"## Project Team","lastModifiedDate":"2021-02-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":12,"author":{"gitId":"CSmortal"},"content":"### Wong Khia Xeng","lastModifiedDate":"2021-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"CSmortal"},"content":"\u003cimg src\u003d\"images/khiaxeng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"CSmortal"},"content":"[Github](https://github.com/khiaxeng)","lastModifiedDate":"2021-02-24"},{"lineNumber":17,"author":{"gitId":"CSmortal"},"content":"[[portfolio](team/khiaxeng.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"CSmortal"},"content":"* Responsibilities: Undecided","lastModifiedDate":"2021-02-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"CSmortal"},"content":"### Heng Yong Ming","lastModifiedDate":"2021-02-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"CSmortal"},"content":"\u003cimg src\u003d\"images/hengyongming.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"CSmortal"},"content":"[Github](https://github.com/hengyongming)","lastModifiedDate":"2021-02-24"},{"lineNumber":27,"author":{"gitId":"CSmortal"},"content":"[[portfolio](team/yongming.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"hengyongming"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"### Noel Mathew Issac","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"CSmortal"},"content":"\u003cimg src\u003d\"images/noelmathewisaac.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"CSmortal"},"content":"[Github](https://github.com/noelmathewisaac)","lastModifiedDate":"2021-02-24"},{"lineNumber":36,"author":{"gitId":"CSmortal"},"content":"[[portfolio](team/noel.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"hengyongming"},"content":"* Responsibilities: UI expert","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"CSmortal"},"content":"### Joven Pua Zai Xiong","lastModifiedDate":"2021-02-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"CSmortal"},"content":"\u003cimg src\u003d\"images/csmortal.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"CSmortal"},"content":"[Github](https://github.com/CSmortal)","lastModifiedDate":"2021-02-24"},{"lineNumber":46,"author":{"gitId":"CSmortal"},"content":"[[portfolio](team/jovenpua.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"CSmortal"},"content":"* Responsibilities: Testing","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"hengyongming":2,"-":27,"CSmortal":18,"noelmathewisaac":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"CSmortal"},"content":"layout: page ","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":"* Table of Contents ","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"CSmortal"},"content":"  {:toc}","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"CSmortal"},"content":"* [Setting up, getting started](#setting-up-getting-started)","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"CSmortal"},"content":"* [Design](#design)","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"CSmortal"},"content":"    * [Architecture](#architecture)","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"CSmortal"},"content":"    * [UI component](#ui-component)","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"CSmortal"},"content":"    * [Logic component](#logic-component)","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"CSmortal"},"content":"    * [Model component](#model-component)","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"CSmortal"},"content":"    * [Storage component](#storage-component)","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"CSmortal"},"content":"    * [Common classes](#common-classes)","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"CSmortal"},"content":"* [Implementation](#implementation)","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"CSmortal"},"content":"    * [Proposed Undo/redo feature](#proposed-undoredo-feature)","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"CSmortal"},"content":"        * [Proposed Implementation](#proposed-implementation)","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"CSmortal"},"content":"        * [Design consideration:](#design-consideration)","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"CSmortal"},"content":"            * [Aspect: How undo \u0026 redo executes](#aspect-how-undo--redo-executes)","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"CSmortal"},"content":"    * [Proposed Data archiving](#proposed-data-archiving)","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"CSmortal"},"content":"* [Documentation, logging, testing, configuration, dev-ops]()","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"CSmortal"},"content":"* [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"CSmortal"},"content":"    * [Product scope](#product-scope)","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"CSmortal"},"content":"    * [User stories](#user-stories)","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"CSmortal"},"content":"    * [Use cases](#use-cases)","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"CSmortal"},"content":"    * [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"CSmortal"},"content":"    * [Glossary](#glossary)","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"CSmortal"},"content":"* [Appendix: Instructions for manual testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"CSmortal"},"content":"    * [Launch and shutdown](#launch-and-shutdown)","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"CSmortal"},"content":"    * [Deleting a task](#deleting-a-task)","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"CSmortal"},"content":"    * [Saving data](#saving-data)","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"of each component.","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"diagrams.","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"**`Main`** has two classes","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"is responsible for,","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"noelmathewisaac"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding","lastModifiedDate":"2021-03-01"},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"noelmathewisaac"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface","lastModifiedDate":"2021-03-01"},{"lineNumber":84,"author":{"gitId":"noelmathewisaac"},"content":"and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2021-03-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"noelmathewisaac"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2021-03-01"},{"lineNumber":91,"author":{"gitId":"noelmathewisaac"},"content":"the command `delete 1`.","lastModifiedDate":"2021-03-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"noelmathewisaac"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`","lastModifiedDate":"2021-03-01"},{"lineNumber":105,"author":{"gitId":"noelmathewisaac"},"content":", `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2021-03-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"noelmathewisaac"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2021-03-01"},{"lineNumber":108,"author":{"gitId":"noelmathewisaac"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2021-03-01"},{"lineNumber":109,"author":{"gitId":"noelmathewisaac"},"content":"the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2021-03-01"},{"lineNumber":110,"author":{"gitId":"noelmathewisaac"},"content":"is specified","lastModifiedDate":"2021-03-01"},{"lineNumber":111,"author":{"gitId":"noelmathewisaac"},"content":"in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-03-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"noelmathewisaac"},"content":"1. The command execution can affect the `Model` (e.g. adding a task).","lastModifiedDate":"2021-03-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"noelmathewisaac"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying","lastModifiedDate":"2021-03-01"},{"lineNumber":130,"author":{"gitId":"noelmathewisaac"},"content":"   help to the user.","lastModifiedDate":"2021-03-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"noelmathewisaac"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API","lastModifiedDate":"2021-03-01"},{"lineNumber":133,"author":{"gitId":"noelmathewisaac"},"content":"call.","lastModifiedDate":"2021-03-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* stores the address book data.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"noelmathewisaac"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that","lastModifiedDate":"2021-03-01"},{"lineNumber":151,"author":{"gitId":"noelmathewisaac"},"content":"  the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-03-01"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"hengyongming"},"content":"**Value proposition**: help students manage their tasks in a systematic and efficient manner","lastModifiedDate":"2021-02-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                   | So that I can…​                                             |","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"noelmathewisaac"},"content":"| `* * *`  | university student                         | add tasks                      | track a task that I have to do                                         |","lastModifiedDate":"2021-03-24"},{"lineNumber":204,"author":{"gitId":"noelmathewisaac"},"content":"| `* * *`  | university student                         | check off tasks                | view which tasks have been completed                                   |","lastModifiedDate":"2021-03-24"},{"lineNumber":205,"author":{"gitId":"noelmathewisaac"},"content":"| `* * *`  | university student                         | edit task details              | update any changes to the tasks                                        |","lastModifiedDate":"2021-03-24"},{"lineNumber":206,"author":{"gitId":"noelmathewisaac"},"content":"| `* * *`    | organized university student             | list all my tasks in a structured manner   | feel more in control of my schedules and tasks             |","lastModifiedDate":"2021-03-24"},{"lineNumber":207,"author":{"gitId":"noelmathewisaac"},"content":"| `* * *`  | university student                         | delete tasks                   | declutter the list of tasks                                            |","lastModifiedDate":"2021-03-24"},{"lineNumber":208,"author":{"gitId":"noelmathewisaac"},"content":"| `* * *`  | university student                         | view deadlines of tasks        | finish tasks that are more urgent                                      |","lastModifiedDate":"2021-03-24"},{"lineNumber":209,"author":{"gitId":"noelmathewisaac"},"content":"| `* * *`  | busy university student                    | tag the task based on category | organise my tasks efficiently                                          |","lastModifiedDate":"2021-03-24"},{"lineNumber":210,"author":{"gitId":"noelmathewisaac"},"content":"| `* * *`  | university student                         | set status of a task           | get an overview of my progress                         |","lastModifiedDate":"2021-03-24"},{"lineNumber":211,"author":{"gitId":"noelmathewisaac"},"content":"| `* * *`  | university student                         | view a list of completed and uncompleted tasks           | have a better understanding of my progress so far|","lastModifiedDate":"2021-03-24"},{"lineNumber":212,"author":{"gitId":"noelmathewisaac"},"content":"| `* * *`    | busy university student                    | view tasks based on category tags         | locate tasks easily                                     |","lastModifiedDate":"2021-03-24"},{"lineNumber":213,"author":{"gitId":"noelmathewisaac"},"content":"| `* *`    | busy university student                    | search for tasks based on date         | easily plan my schedule                                   |","lastModifiedDate":"2021-03-24"},{"lineNumber":214,"author":{"gitId":"noelmathewisaac"},"content":"| `* *`    | busy university student                    | delete multiple tasks at once        | clean up the task in the app easily                                   |","lastModifiedDate":"2021-03-24"},{"lineNumber":215,"author":{"gitId":"noelmathewisaac"},"content":"| `* *`    | organized university student               | view all tasks in chronological order (of date) | plan my day/week efficiently                             |","lastModifiedDate":"2021-03-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"CSmortal"},"content":"(For all use cases below, the **System** is the `Taskify` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-02-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":224,"author":{"gitId":"CSmortal"},"content":"---","lastModifiedDate":"2021-02-26"},{"lineNumber":225,"author":{"gitId":"CSmortal"},"content":"**Use case 1: Delete a Task**","lastModifiedDate":"2021-02-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"CSmortal"},"content":"1. User requests to list all Tasks","lastModifiedDate":"2021-02-26"},{"lineNumber":230,"author":{"gitId":"CSmortal"},"content":"2. Taskify shows a list of Tasks","lastModifiedDate":"2021-02-26"},{"lineNumber":231,"author":{"gitId":"CSmortal"},"content":"3. User requests to delete a specific Task in the list","lastModifiedDate":"2021-02-26"},{"lineNumber":232,"author":{"gitId":"CSmortal"},"content":"4. Taskify deletes the Task","lastModifiedDate":"2021-02-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"CSmortal"},"content":"    * 2a1. Taskify warns that the list is empty.","lastModifiedDate":"2021-03-17"},{"lineNumber":240,"author":{"gitId":"-"},"content":"      ","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"CSmortal"},"content":"    * 3a1. Taskify warns that the index entered is invalid.","lastModifiedDate":"2021-03-17"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"CSmortal"},"content":"      Use case ends.","lastModifiedDate":"2021-03-17"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":249,"author":{"gitId":"CSmortal"},"content":"---","lastModifiedDate":"2021-02-26"},{"lineNumber":250,"author":{"gitId":"CSmortal"},"content":"**Use case 2: Add a Task**","lastModifiedDate":"2021-02-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":252,"author":{"gitId":"CSmortal"},"content":"**MSS**","lastModifiedDate":"2021-02-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":254,"author":{"gitId":"CSmortal"},"content":"1. User requests to add a Task to the list","lastModifiedDate":"2021-02-26"},{"lineNumber":255,"author":{"gitId":"CSmortal"},"content":"2. Taskify adds the Task to the list","lastModifiedDate":"2021-02-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":257,"author":{"gitId":"CSmortal"},"content":"   Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":259,"author":{"gitId":"CSmortal"},"content":"**Extensions**","lastModifiedDate":"2021-02-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":261,"author":{"gitId":"CSmortal"},"content":"* 1a. The Task to be added already exists in the list","lastModifiedDate":"2021-02-26"},{"lineNumber":262,"author":{"gitId":"CSmortal"},"content":"    * 1a1. Taskify warns the User that there is already such a Task","lastModifiedDate":"2021-03-17"},{"lineNumber":263,"author":{"gitId":"CSmortal"},"content":"      ","lastModifiedDate":"2021-03-17"},{"lineNumber":264,"author":{"gitId":"CSmortal"},"content":"        Use case ends.","lastModifiedDate":"2021-03-17"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":266,"author":{"gitId":"CSmortal"},"content":"* 1b. The User fails to fill in any of the compulsory fields to create a new Task","lastModifiedDate":"2021-03-17"},{"lineNumber":267,"author":{"gitId":"CSmortal"},"content":"    * 1b1. Taskify informs the User of the format of creating a new Task","lastModifiedDate":"2021-03-17"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":269,"author":{"gitId":"CSmortal"},"content":"        Use case ends.","lastModifiedDate":"2021-03-17"},{"lineNumber":270,"author":{"gitId":"CSmortal"},"content":"* 1c. The User\u0027s input is unrecognisable to Taskify","lastModifiedDate":"2021-03-17"},{"lineNumber":271,"author":{"gitId":"CSmortal"},"content":"    * 1c1. Taskify informs the User of the format of creating a new Task","lastModifiedDate":"2021-03-17"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":273,"author":{"gitId":"CSmortal"},"content":"        Use case ends.","lastModifiedDate":"2021-03-17"},{"lineNumber":274,"author":{"gitId":"CSmortal"},"content":"---","lastModifiedDate":"2021-02-26"},{"lineNumber":275,"author":{"gitId":"CSmortal"},"content":"**Use case 3: Set status of Task**","lastModifiedDate":"2021-03-17"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":277,"author":{"gitId":"CSmortal"},"content":"**MSS**","lastModifiedDate":"2021-02-26"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":279,"author":{"gitId":"CSmortal"},"content":"1. User requests to list all Tasks","lastModifiedDate":"2021-02-26"},{"lineNumber":280,"author":{"gitId":"CSmortal"},"content":"2. Taskify shows a list of Tasks","lastModifiedDate":"2021-02-26"},{"lineNumber":281,"author":{"gitId":"CSmortal"},"content":"3. User requests to set the status of the Task ","lastModifiedDate":"2021-03-17"},{"lineNumber":282,"author":{"gitId":"CSmortal"},"content":"4. Taskify changes the status of the Task","lastModifiedDate":"2021-03-17"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":284,"author":{"gitId":"CSmortal"},"content":"   Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":286,"author":{"gitId":"CSmortal"},"content":"**Extensions**","lastModifiedDate":"2021-02-26"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":288,"author":{"gitId":"CSmortal"},"content":"* 3a. The current status of the Task is the same as status the User requests to set for the same Task","lastModifiedDate":"2021-03-17"},{"lineNumber":289,"author":{"gitId":"CSmortal"},"content":"    * 3a1. Taskify warns that the Task is already of the set status","lastModifiedDate":"2021-03-17"},{"lineNumber":290,"author":{"gitId":"CSmortal"},"content":"      ","lastModifiedDate":"2021-03-17"},{"lineNumber":291,"author":{"gitId":"CSmortal"},"content":"        Use case ends.","lastModifiedDate":"2021-03-17"},{"lineNumber":292,"author":{"gitId":"CSmortal"},"content":"  ","lastModifiedDate":"2021-03-17"},{"lineNumber":293,"author":{"gitId":"CSmortal"},"content":"* 3b. Taskify does not recognise the status that the User wants to set","lastModifiedDate":"2021-03-17"},{"lineNumber":294,"author":{"gitId":"CSmortal"},"content":"    * 3b1. Taskify warns that it does not understand the type of status entered","lastModifiedDate":"2021-03-17"},{"lineNumber":295,"author":{"gitId":"CSmortal"},"content":"    ","lastModifiedDate":"2021-03-17"},{"lineNumber":296,"author":{"gitId":"CSmortal"},"content":"        Use case ends.","lastModifiedDate":"2021-03-17"},{"lineNumber":297,"author":{"gitId":"CSmortal"},"content":"    ","lastModifiedDate":"2021-03-17"},{"lineNumber":298,"author":{"gitId":"CSmortal"},"content":"* 3c. The given index is invalid","lastModifiedDate":"2021-03-17"},{"lineNumber":299,"author":{"gitId":"CSmortal"},"content":"    * 3c1. Taskify warns that the index entered is invalid.","lastModifiedDate":"2021-03-17"},{"lineNumber":300,"author":{"gitId":"CSmortal"},"content":"    ","lastModifiedDate":"2021-03-17"},{"lineNumber":301,"author":{"gitId":"CSmortal"},"content":"        Use case ends.","lastModifiedDate":"2021-03-17"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":303,"author":{"gitId":"CSmortal"},"content":"---","lastModifiedDate":"2021-02-26"},{"lineNumber":304,"author":{"gitId":"CSmortal"},"content":"**Use case 4: List all Tasks**","lastModifiedDate":"2021-03-17"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":306,"author":{"gitId":"CSmortal"},"content":"**MSS**","lastModifiedDate":"2021-03-17"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":308,"author":{"gitId":"CSmortal"},"content":"1. User requests to list all Tasks","lastModifiedDate":"2021-03-17"},{"lineNumber":309,"author":{"gitId":"CSmortal"},"content":"2. Taskify lists all the Tasks","lastModifiedDate":"2021-03-17"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":311,"author":{"gitId":"CSmortal"},"content":"**Extensions**","lastModifiedDate":"2021-03-17"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":313,"author":{"gitId":"CSmortal"},"content":"* 1a. There are no tasks stored","lastModifiedDate":"2021-03-17"},{"lineNumber":314,"author":{"gitId":"CSmortal"},"content":"    * 1a1. Taskify informs the User there are no tasks tracked","lastModifiedDate":"2021-03-17"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":316,"author":{"gitId":"CSmortal"},"content":"        Use case ends.","lastModifiedDate":"2021-03-17"},{"lineNumber":317,"author":{"gitId":"CSmortal"},"content":"---","lastModifiedDate":"2021-02-26"},{"lineNumber":318,"author":{"gitId":"CSmortal"},"content":"**Use case 5: Search for Tasks using tags**","lastModifiedDate":"2021-03-17"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":320,"author":{"gitId":"CSmortal"},"content":"**MSS**","lastModifiedDate":"2021-03-17"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":322,"author":{"gitId":"CSmortal"},"content":"1. User requests to search for Task(s) by using its tag.","lastModifiedDate":"2021-03-17"},{"lineNumber":323,"author":{"gitId":"CSmortal"},"content":"2. Taskify shows the Task(s) with the same tag.","lastModifiedDate":"2021-03-17"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":325,"author":{"gitId":"CSmortal"},"content":"**Extensions**","lastModifiedDate":"2021-03-17"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":327,"author":{"gitId":"CSmortal"},"content":"* 1a. Taskify cannot find any Task with the tag","lastModifiedDate":"2021-03-17"},{"lineNumber":328,"author":{"gitId":"CSmortal"},"content":"    * 1a1. Taskify warns that no such Task has this tag.","lastModifiedDate":"2021-03-17"},{"lineNumber":329,"author":{"gitId":"CSmortal"},"content":"    ","lastModifiedDate":"2021-03-17"},{"lineNumber":330,"author":{"gitId":"CSmortal"},"content":"        Use case ends.","lastModifiedDate":"2021-03-17"},{"lineNumber":331,"author":{"gitId":"CSmortal"},"content":"    ","lastModifiedDate":"2021-03-17"},{"lineNumber":332,"author":{"gitId":"CSmortal"},"content":"* 1b. The User\u0027s input is unrecognisable to Taskify","lastModifiedDate":"2021-03-17"},{"lineNumber":333,"author":{"gitId":"CSmortal"},"content":"    * 1b1. Taskify informs the User on the format to do a tag-search.","lastModifiedDate":"2021-03-17"},{"lineNumber":334,"author":{"gitId":"CSmortal"},"content":"    ","lastModifiedDate":"2021-03-17"},{"lineNumber":335,"author":{"gitId":"CSmortal"},"content":"        Use case ends.","lastModifiedDate":"2021-03-17"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":337,"author":{"gitId":"CSmortal"},"content":"---","lastModifiedDate":"2021-02-26"},{"lineNumber":338,"author":{"gitId":"CSmortal"},"content":"**Use case 6: Sort all Tasks (in ascending order of their date \u0026 time)**","lastModifiedDate":"2021-03-17"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":340,"author":{"gitId":"CSmortal"},"content":"**MSS**","lastModifiedDate":"2021-03-17"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":342,"author":{"gitId":"CSmortal"},"content":"1. User requests to sort the Tasks.","lastModifiedDate":"2021-03-17"},{"lineNumber":343,"author":{"gitId":"CSmortal"},"content":"2. Taskify shows the Tasks in their sorted order.","lastModifiedDate":"2021-03-17"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":345,"author":{"gitId":"CSmortal"},"content":"**Extensions**","lastModifiedDate":"2021-03-17"},{"lineNumber":346,"author":{"gitId":"CSmortal"},"content":"* 1a. There are two or more Tasks that have the same date \u0026 time.","lastModifiedDate":"2021-03-17"},{"lineNumber":347,"author":{"gitId":"CSmortal"},"content":"    * 1a1. Taskify sorts these Tasks in lexicographical order.","lastModifiedDate":"2021-03-17"},{"lineNumber":348,"author":{"gitId":"CSmortal"},"content":"    ","lastModifiedDate":"2021-02-26"},{"lineNumber":349,"author":{"gitId":"CSmortal"},"content":"        Use case resumes from step 2","lastModifiedDate":"2021-03-17"},{"lineNumber":350,"author":{"gitId":"CSmortal"},"content":"---","lastModifiedDate":"2021-02-26"},{"lineNumber":351,"author":{"gitId":"CSmortal"},"content":"**Use case 7: Search for Tasks using keywords (excluding tags)**","lastModifiedDate":"2021-03-17"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":353,"author":{"gitId":"CSmortal"},"content":"**MSS**","lastModifiedDate":"2021-03-17"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":355,"author":{"gitId":"CSmortal"},"content":"1. User requests to find Task(s) with given keywords.","lastModifiedDate":"2021-03-17"},{"lineNumber":356,"author":{"gitId":"CSmortal"},"content":"2. Taskify shows the Tasks that have passed the search.","lastModifiedDate":"2021-03-17"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":358,"author":{"gitId":"CSmortal"},"content":"**Extensions**","lastModifiedDate":"2021-03-17"},{"lineNumber":359,"author":{"gitId":"CSmortal"},"content":"* 1a. Taskify cannot find any Task with the given keywords","lastModifiedDate":"2021-03-17"},{"lineNumber":360,"author":{"gitId":"CSmortal"},"content":"    * 1a1. Taskify informs the User that no Tasks are found, and that keyword(s) must match a whole word in the Task\u0027s name.","lastModifiedDate":"2021-03-17"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":362,"author":{"gitId":"CSmortal"},"content":"        Use case ends.","lastModifiedDate":"2021-03-17"},{"lineNumber":363,"author":{"gitId":"CSmortal"},"content":"---","lastModifiedDate":"2021-02-26"},{"lineNumber":364,"author":{"gitId":"CSmortal"},"content":"**Use case 8: Modifying an existing Task**","lastModifiedDate":"2021-03-17"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":366,"author":{"gitId":"CSmortal"},"content":"**MSS**","lastModifiedDate":"2021-03-17"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":368,"author":{"gitId":"CSmortal"},"content":"1. User requests to modify an existing Task","lastModifiedDate":"2021-03-17"},{"lineNumber":369,"author":{"gitId":"CSmortal"},"content":"2. Taskify shows the User the modified Task.","lastModifiedDate":"2021-03-17"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":371,"author":{"gitId":"CSmortal"},"content":"**Extensions**","lastModifiedDate":"2021-03-17"},{"lineNumber":372,"author":{"gitId":"CSmortal"},"content":"* 1a. The User\u0027s input is unrecognisable to Taskify","lastModifiedDate":"2021-03-17"},{"lineNumber":373,"author":{"gitId":"CSmortal"},"content":"    * 1a1. Taskify informs the User on the format to edit a Task.","lastModifiedDate":"2021-03-17"},{"lineNumber":374,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":375,"author":{"gitId":"CSmortal"},"content":"      Use case ends.","lastModifiedDate":"2021-03-17"},{"lineNumber":376,"author":{"gitId":"CSmortal"},"content":"    ","lastModifiedDate":"2021-03-17"},{"lineNumber":377,"author":{"gitId":"CSmortal"},"content":"* 1b. The User\u0027s input for specific fields is invalid","lastModifiedDate":"2021-03-17"},{"lineNumber":378,"author":{"gitId":"CSmortal"},"content":"    * 1b1. Taskify informs the User on the correct format of the field in the User\u0027s input that failed to pass validation checks.","lastModifiedDate":"2021-03-17"},{"lineNumber":379,"author":{"gitId":"CSmortal"},"content":"    ","lastModifiedDate":"2021-03-17"},{"lineNumber":380,"author":{"gitId":"CSmortal"},"content":"        Use case ends.","lastModifiedDate":"2021-03-17"},{"lineNumber":381,"author":{"gitId":"CSmortal"},"content":"    ","lastModifiedDate":"2021-03-17"},{"lineNumber":382,"author":{"gitId":"CSmortal"},"content":"* 1c. The User\u0027s input does not include any fields at all.","lastModifiedDate":"2021-03-17"},{"lineNumber":383,"author":{"gitId":"CSmortal"},"content":"    * 1c. Taskify warns that no modifying can take place if there are no updated fields filled in.","lastModifiedDate":"2021-03-17"},{"lineNumber":384,"author":{"gitId":"CSmortal"},"content":"    ","lastModifiedDate":"2021-03-17"},{"lineNumber":385,"author":{"gitId":"CSmortal"},"content":"        Use case ends.","lastModifiedDate":"2021-03-17"},{"lineNumber":386,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":387,"author":{"gitId":"hengyongming"},"content":"**Use case 9: Switch to Home tab**","lastModifiedDate":"2021-03-24"},{"lineNumber":388,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":389,"author":{"gitId":"hengyongming"},"content":"**MSS**","lastModifiedDate":"2021-03-24"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":391,"author":{"gitId":"hengyongming"},"content":"1. User requests to got to Home Tab.","lastModifiedDate":"2021-03-24"},{"lineNumber":392,"author":{"gitId":"hengyongming"},"content":"2. Taskify switches to Home Tab.","lastModifiedDate":"2021-03-24"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":394,"author":{"gitId":"hengyongming"},"content":"    Use Case ends ","lastModifiedDate":"2021-03-24"},{"lineNumber":395,"author":{"gitId":"hengyongming"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":396,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":397,"author":{"gitId":"hengyongming"},"content":"**Extensions**","lastModifiedDate":"2021-03-24"},{"lineNumber":398,"author":{"gitId":"hengyongming"},"content":"* 1a. The User\u0027s input is unrecognisable to Taskify","lastModifiedDate":"2021-03-24"},{"lineNumber":399,"author":{"gitId":"hengyongming"},"content":"    * 1a1. An error message is shown.","lastModifiedDate":"2021-03-24"},{"lineNumber":400,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":401,"author":{"gitId":"hengyongming"},"content":"      Use case ends.","lastModifiedDate":"2021-03-24"},{"lineNumber":402,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":403,"author":{"gitId":"hengyongming"},"content":"**Use case 10: Switch to Expired tab**","lastModifiedDate":"2021-03-24"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":405,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-03-24"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":407,"author":{"gitId":"hengyongming"},"content":"1. User requests to got to Expired Tab.","lastModifiedDate":"2021-03-24"},{"lineNumber":408,"author":{"gitId":"hengyongming"},"content":"2. Taskify switches to Expired Tab.","lastModifiedDate":"2021-03-24"},{"lineNumber":409,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":410,"author":{"gitId":"hengyongming"},"content":"   Use Case ends","lastModifiedDate":"2021-03-24"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":413,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-03-24"},{"lineNumber":414,"author":{"gitId":"hengyongming"},"content":"* 1a. The User\u0027s input is unrecognisable to Taskify","lastModifiedDate":"2021-03-24"},{"lineNumber":415,"author":{"gitId":"hengyongming"},"content":"    * 1a1. An error message is shown.","lastModifiedDate":"2021-03-24"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":417,"author":{"gitId":"hengyongming"},"content":"      Use case ends.","lastModifiedDate":"2021-03-24"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":419,"author":{"gitId":"hengyongming"},"content":"**Use case 11: Switch to Completed tab**","lastModifiedDate":"2021-03-24"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":421,"author":{"gitId":"hengyongming"},"content":"**MSS**","lastModifiedDate":"2021-03-24"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":423,"author":{"gitId":"hengyongming"},"content":"1. User requests to got to Completed Tab.","lastModifiedDate":"2021-03-24"},{"lineNumber":424,"author":{"gitId":"hengyongming"},"content":"2. Taskify switches to Completed Tab.","lastModifiedDate":"2021-03-24"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":426,"author":{"gitId":"hengyongming"},"content":"   Use Case ends","lastModifiedDate":"2021-03-24"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":429,"author":{"gitId":"hengyongming"},"content":"**Extensions**","lastModifiedDate":"2021-03-24"},{"lineNumber":430,"author":{"gitId":"hengyongming"},"content":"* 1a. The User\u0027s input is unrecognisable to Taskify","lastModifiedDate":"2021-03-24"},{"lineNumber":431,"author":{"gitId":"hengyongming"},"content":"    * 1a1. An error message is shown.","lastModifiedDate":"2021-03-24"},{"lineNumber":432,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":433,"author":{"gitId":"hengyongming"},"content":"      Use case ends.","lastModifiedDate":"2021-03-24"},{"lineNumber":434,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":436,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":437,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":438,"author":{"gitId":"khiaxeng"},"content":"**Use case 9: Viewing Tasks by date**","lastModifiedDate":"2021-03-24"},{"lineNumber":439,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":440,"author":{"gitId":"khiaxeng"},"content":"**MSS**","lastModifiedDate":"2021-03-24"},{"lineNumber":441,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":442,"author":{"gitId":"khiaxeng"},"content":"1. User requests to view all Tasks that are due on specified date.","lastModifiedDate":"2021-03-24"},{"lineNumber":443,"author":{"gitId":"khiaxeng"},"content":"2. Taskify shows the User Tasks with the same date.","lastModifiedDate":"2021-03-24"},{"lineNumber":444,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":445,"author":{"gitId":"khiaxeng"},"content":"**Extensions**","lastModifiedDate":"2021-03-24"},{"lineNumber":446,"author":{"gitId":"khiaxeng"},"content":"* 1a. There are no tasks stored","lastModifiedDate":"2021-03-24"},{"lineNumber":447,"author":{"gitId":"khiaxeng"},"content":"    * 1a1. Taskify informs the User there are no tasks tracked","lastModifiedDate":"2021-03-24"},{"lineNumber":448,"author":{"gitId":"khiaxeng"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":449,"author":{"gitId":"khiaxeng"},"content":"Use case ends.","lastModifiedDate":"2021-03-24"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":451,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"CSmortal"},"content":"---","lastModifiedDate":"2021-03-17"},{"lineNumber":454,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":455,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"hengyongming"},"content":"2. Should be able to hold up to 100 tasks without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-02-25"},{"lineNumber":459,"author":{"gitId":"hengyongming"},"content":"3. A user should be able to easily see why their commands are invalid","lastModifiedDate":"2021-02-25"},{"lineNumber":460,"author":{"gitId":"hengyongming"},"content":"4. The app should be able to save data locally","lastModifiedDate":"2021-02-25"},{"lineNumber":461,"author":{"gitId":"hengyongming"},"content":"5. The app should be able to run with or without internet connection","lastModifiedDate":"2021-02-25"},{"lineNumber":462,"author":{"gitId":"hengyongming"},"content":"6. The product should not take above 10 seconds to execute any commands.","lastModifiedDate":"2021-02-25"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":468,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"noelmathewisaac"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2021-03-01"},{"lineNumber":486,"author":{"gitId":"noelmathewisaac"},"content":"       optimum.","lastModifiedDate":"2021-03-01"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"noelmathewisaac"},"content":"### Deleting a task","lastModifiedDate":"2021-03-01"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"noelmathewisaac"},"content":"1. Deleting a task while all tasks are being shown","lastModifiedDate":"2021-03-01"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"noelmathewisaac"},"content":"    1. Prerequisites: List all tasks using the `list` command. Multiple tasks in the list.","lastModifiedDate":"2021-03-01"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"noelmathewisaac"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2021-03-01"},{"lineNumber":505,"author":{"gitId":"noelmathewisaac"},"content":"       Timestamp in the status bar is updated.","lastModifiedDate":"2021-03-01"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"noelmathewisaac"},"content":"       Expected: No task is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-03-01"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"hengyongming":40,"khiaxeng":12,"-":270,"CSmortal":145,"noelmathewisaac":54}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"   1. Run the `seedu.taskify.Main` and try a few commands.","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":54,"noelmathewisaac":1}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"   e.g. `seedu.taskify.commons.StringUtilTest`","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"   e.g. `seedu.taskify.storage.StorageManagerTest`","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"   e.g. `seedu.taskify.logic.LogicManagerTest`","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"-":33,"noelmathewisaac":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"#User Guide","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"Taskify is a **desktop app for students manage their tasks (academics/personal/CCA) in a systematic and efficient manner, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Taskify can get your task management done faster than traditional GUI apps.","lastModifiedDate":"2021-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"CSmortal"},"content":"  ","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"1. Download the latest `taskify.jar` from [here](https://github.com/AY2021S2-CS2103T-W14-4/tp/releases).","lastModifiedDate":"2021-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for Taskify.","lastModifiedDate":"2021-02-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"    * **`list`** : Lists all tasks.","lastModifiedDate":"2021-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"    * **`add`**`[TASK Description]` : Adds a task with the specified description to the task list","lastModifiedDate":"2021-02-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"    * **`delete`**`3` : Deletes the task with the specified task number.","lastModifiedDate":"2021-02-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"    * **`help`** : Show all the commands and formats.","lastModifiedDate":"2021-02-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"1. Refer to the [Features](#features) below for details of more commands and details.","lastModifiedDate":"2021-02-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"CSmortal"},"content":"### Adding a task : `add`","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"CSmortal"},"content":"Adds a task to Taskify.","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"CSmortal"},"content":"Format: `add n/NAME desc/DESCRIPTION a/ADDRESS date/DATE [t/TAG]…`","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"CSmortal"},"content":"* `add n/myTask1 desc/1st Task a/John street, block 123, #01-01 date/2020-04-13`","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"CSmortal"},"content":"* `add n/Visit Prisoner desc/another task a/Newgate Prison date/1999-12-12 t/criminal`","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"CSmortal"},"content":"### Deleting a task : `delete`","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"CSmortal"},"content":"Deletes the specified task from Taskify.","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"CSmortal"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"CSmortal"},"content":"* Deletes the task at the specified `INDEX`.","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"CSmortal"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"CSmortal"},"content":"* The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"CSmortal"},"content":"Examples:","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"CSmortal"},"content":"* `list` followed by `delete 2` deletes the 2nd task","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"CSmortal"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st task in the results of the `find` command.","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"CSmortal"},"content":"### Deleting multiple tasks : `delete`","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"CSmortal"},"content":"Delete multiple tasks at once by either:","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"CSmortal"},"content":"1. Listing the indexes of the tasks to delete exhaustively","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"CSmortal"},"content":"2. Stating the range of indexes to delete","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"CSmortal"},"content":"3. Indicating the desired `Status` of tasks to delete","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"CSmortal"},"content":"* Listing the indexes exhaustively","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"CSmortal"},"content":"    * Format: `delete INDEX INDEX ...`","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"CSmortal"},"content":"    * Examples: `delete 1 2 3` deletes the 1st, 2nd, 3rd task as displayed when `list` is used","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"CSmortal"},"content":"* Stating the range of indexes","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"CSmortal"},"content":"    * Format: `delete INDEX-INDEX`","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"CSmortal"},"content":"    * Examples: `delete 1-3` deletes the 1st, 2nd, 3rd task as displayed when `list` is used","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"CSmortal"},"content":"    * Notes:","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"CSmortal"},"content":"        * `delete 2-2` does not delete the 2nd task. Use `delete 2` instead","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"CSmortal"},"content":"* Indicating the `Status` to delete by","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"CSmortal"},"content":"    * Format: `delete STATUS -all`","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"CSmortal"},"content":"    * Examples: `delete in progress -all` deletes **all** tasks that are in progress as their `Status`.","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"CSmortal"},"content":"    * Notes:","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"CSmortal"},"content":"        * All tasks have one of the 3 `Status`: `in progress`, `completed`, `not done`","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"CSmortal"},"content":"        * Newly created tasks have `not done` as their `Status`","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"CSmortal"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"CSmortal"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"CSmortal"},"content":"### Editing a task : `edit`","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"CSmortal"},"content":"Edits an existing task in Taskify.","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"CSmortal"},"content":"Format: `edit INDEX [n/NAME] [desc/DESCRIPTION] [a/ADDRESS] [date/DATE] [t/TAG]…​`","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"CSmortal"},"content":"* Edits the task at the specified `INDEX`. The index refers to the index number shown in the displayed task list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"CSmortal"},"content":"* You can remove all the person’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"CSmortal"},"content":"*  `edit 1 desc/my typical description` Edits the description of the 1st task to be `my typical description`.","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"CSmortal"},"content":"*  `edit 2 n/Important Task t/` Edits the name of the 2nd task to be `Important Task` and clears all existing tags.","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"CSmortal"},"content":"### Locating a task by name : `find`","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"CSmortal"},"content":"Find tasks whose names contain any of the given keywords.","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"CSmortal"},"content":"* `find The Task` returns `The Next Task` and `Task for tomorrow`, but does not return `TheTask`","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"CSmortal"},"content":"### Listing all tasks : `list`","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"CSmortal"},"content":"Shows a list of all tasks in Taskify.","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"CSmortal"},"content":"Format: `list`","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"CSmortal"},"content":"### Clearing all tasks : `clear`","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"CSmortal"},"content":"Clears all tasks in Taskify.","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"CSmortal"},"content":"### Searching for a task using tags : `tag-search`","lastModifiedDate":"2021-03-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":187,"author":{"gitId":"CSmortal"},"content":"Searches for a task using tags (instead of name).","lastModifiedDate":"2021-03-17"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":189,"author":{"gitId":"CSmortal"},"content":"Format: `tag-search TAG [MORE_TAGS]`","lastModifiedDate":"2021-03-17"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":191,"author":{"gitId":"CSmortal"},"content":"### Setting a task\u0027s status : `edit`","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":193,"author":{"gitId":"CSmortal"},"content":"Sets a task\u0027s status.","lastModifiedDate":"2021-03-17"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":195,"author":{"gitId":"CSmortal"},"content":"Format: `edit INDEX s/STATUS`","lastModifiedDate":"2021-03-17"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":197,"author":{"gitId":"CSmortal"},"content":"* A task can have 3 types of status: `not done`, `in progress`, `completed`","lastModifiedDate":"2021-03-17"},{"lineNumber":198,"author":{"gitId":"CSmortal"},"content":"* A task\u0027s default status is `not done`","lastModifiedDate":"2021-03-17"},{"lineNumber":199,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":200,"author":{"gitId":"CSmortal"},"content":"Examples:","lastModifiedDate":"2021-03-17"},{"lineNumber":201,"author":{"gitId":"CSmortal"},"content":"* `edit 2 s/in progress` sets the status of the 2nd task in the list to `in progress`.","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":204,"author":{"gitId":"CSmortal"},"content":"### Sort tasks by date : `sort`","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"CSmortal"},"content":"Sort tasks in ascending order of their dates.","lastModifiedDate":"2021-03-17"},{"lineNumber":207,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"CSmortal"},"content":"Format: `sort`","lastModifiedDate":"2021-03-17"},{"lineNumber":209,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"CSmortal"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":212,"author":{"gitId":"CSmortal"},"content":"Exits the program.","lastModifiedDate":"2021-03-17"},{"lineNumber":213,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":214,"author":{"gitId":"CSmortal"},"content":"Format: `exit`","lastModifiedDate":"2021-03-17"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"noelmathewisaac"},"content":"**Q**: How do I do something?\u003cbr\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":223,"author":{"gitId":"noelmathewisaac"},"content":"**A**: Steps to do something\u003cbr\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":224,"author":{"gitId":"noelmathewisaac"},"content":"[Coming Soon]","lastModifiedDate":"2021-02-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"noelmathewisaac"},"content":"Command | Format | Examples","lastModifiedDate":"2021-02-26"},{"lineNumber":231,"author":{"gitId":"noelmathewisaac"},"content":"--------|--------|----------","lastModifiedDate":"2021-02-26"},{"lineNumber":232,"author":{"gitId":"CSmortal"},"content":"**Add** | `add n/NAME desc/DESCRIPTION a/ADDRESS date/DATE [t/TAG]…` | `add n/Visit Prisoner desc/another task a/Newgate Prison date/1999-12-12 t/criminal`","lastModifiedDate":"2021-03-17"},{"lineNumber":233,"author":{"gitId":"CSmortal"},"content":"**Clear** | `clear` |","lastModifiedDate":"2021-03-17"},{"lineNumber":234,"author":{"gitId":"CSmortal"},"content":"**Delete** | `delete INDEX` `delete INDEX INDEX ...` `delete INDEX-INDEX` `delete STATUS -all`| `delete 3` `delete 4 10 6` `delete 5-8` `delete completed -all`","lastModifiedDate":"2021-03-24"},{"lineNumber":235,"author":{"gitId":"CSmortal"},"content":"**Edit** | `edit INDEX [n/NAME] [desc/DESCRIPTION] [a/ADDRESS] [date/DATE] [t/TAG] [s/STATUS]…` | `edit 1 s/completed`","lastModifiedDate":"2021-03-17"},{"lineNumber":236,"author":{"gitId":"CSmortal"},"content":"**Exit** | `exit` | ","lastModifiedDate":"2021-03-17"},{"lineNumber":237,"author":{"gitId":"CSmortal"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]` | `find Module Code`","lastModifiedDate":"2021-03-17"},{"lineNumber":238,"author":{"gitId":"CSmortal"},"content":"**List** | `list` |","lastModifiedDate":"2021-03-17"},{"lineNumber":239,"author":{"gitId":"CSmortal"},"content":"**Help** | `help` |","lastModifiedDate":"2021-03-17"},{"lineNumber":240,"author":{"gitId":"CSmortal"},"content":"**Sort** | `sort` |","lastModifiedDate":"2021-03-17"},{"lineNumber":241,"author":{"gitId":"CSmortal"},"content":"**Tag-Search** | `tag-search TAG [MORE_TAGS]` | `tag-search CS2103T isFun`","lastModifiedDate":"2021-03-17"},{"lineNumber":242,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"-":128,"CSmortal":101,"noelmathewisaac":13}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(taskify)","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":37,"noelmathewisaac":1}},{"path":"docs/team/jovenpua.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CSmortal"},"content":"Hi! My name is Joven, Y2 CS student from Malaysia. Not very sure what I want to do for now, so I’m going the AI path for now. I play a lot of games when I am free (Thanks uni!)","lastModifiedDate":"2021-02-24"}],"authorContributionMap":{"CSmortal":1}},{"path":"docs/team/khiaxeng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CSmortal"},"content":"Hello! My name is Khia Xeng and I am a year 2 CS student from Malaysia. I enjoy hunting for good food and playing video games like Dota with my friends during my free time!","lastModifiedDate":"2021-02-24"}],"authorContributionMap":{"CSmortal":1}},{"path":"docs/team/noel.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CSmortal"},"content":"Hi! I am a Y2 CS student planning to specialize in AI and/or Cybersecurity. In my free time, I enjoy watching Netflix and playing chess (always down for a game!).","lastModifiedDate":"2021-02-24"}],"authorContributionMap":{"CSmortal":1}},{"path":"docs/team/yongming.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CSmortal"},"content":"Hello! I am a Y2 CS student. I have been playing badminton since primary school and do hit me up if you enjoy playing badminton too!","lastModifiedDate":"2021-02-24"}],"authorContributionMap":{"CSmortal":1}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"layout: page title: \"Tutorial: Adding a command\"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"edit it if required. The command should have the following format:","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command`","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"the `ResultDisplay`.","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"a `CommandResult` with an accompanying message.","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":" * Changes the remark of an existing task in the address book.","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"instance of `RemarkCommand`.","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"You can refer to the changes in","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47)","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":".","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do.","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"progress.","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the task identified \"","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"noelmathewisaac"},"content":"            + \"by the index number used in the last task listing. \"","lastModifiedDate":"2021-03-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"noelmathewisaac"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s","lastModifiedDate":"2021-03-01"},{"lineNumber":99,"author":{"gitId":"noelmathewisaac"},"content":"change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if","lastModifiedDate":"2021-03-01"},{"lineNumber":100,"author":{"gitId":"noelmathewisaac"},"content":"our code is functioning as intended.","lastModifiedDate":"2021-03-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"noelmathewisaac"},"content":"     * @param index of the task in the filtered task list to edit the remark","lastModifiedDate":"2021-03-01"},{"lineNumber":114,"author":{"gitId":"noelmathewisaac"},"content":"     * @param remark of the task to be updated to","lastModifiedDate":"2021-03-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"noelmathewisaac"},"content":"Your code should look something","lastModifiedDate":"2021-03-01"},{"lineNumber":148,"author":{"gitId":"noelmathewisaac"},"content":"like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47)","lastModifiedDate":"2021-03-01"},{"lineNumber":149,"author":{"gitId":"noelmathewisaac"},"content":"after you are done.","lastModifiedDate":"2021-03-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"noelmathewisaac"},"content":"Create a `RemarkCommandParser` class in the `seedu.taskify.logic.parser` package. The class must extend the `Parser`","lastModifiedDate":"2021-03-01"},{"lineNumber":156,"author":{"gitId":"noelmathewisaac"},"content":"interface.","lastModifiedDate":"2021-03-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"noelmathewisaac"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc","lastModifiedDate":"2021-03-01"},{"lineNumber":161,"author":{"gitId":"noelmathewisaac"},"content":"provided for the function to understand what it does.","lastModifiedDate":"2021-03-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"noelmathewisaac"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance","lastModifiedDate":"2021-03-01"},{"lineNumber":180,"author":{"gitId":"noelmathewisaac"},"content":"of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need.","lastModifiedDate":"2021-03-01"},{"lineNumber":181,"author":{"gitId":"noelmathewisaac"},"content":"Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2021-03-01"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"noelmathewisaac"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at","lastModifiedDate":"2021-03-01"},{"lineNumber":197,"author":{"gitId":"noelmathewisaac"},"content":"existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2021-03-01"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"noelmathewisaac"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and","lastModifiedDate":"2021-03-01"},{"lineNumber":209,"author":{"gitId":"noelmathewisaac"},"content":"create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2021-03-01"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"noelmathewisaac"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508)","lastModifiedDate":"2021-03-01"},{"lineNumber":241,"author":{"gitId":"noelmathewisaac"},"content":".","lastModifiedDate":"2021-03-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"noelmathewisaac"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the","lastModifiedDate":"2021-03-01"},{"lineNumber":246,"author":{"gitId":"noelmathewisaac"},"content":"in-memory storage of task data. We achieve that by working with the `Person` model. Each field in a Person is","lastModifiedDate":"2021-03-01"},{"lineNumber":247,"author":{"gitId":"noelmathewisaac"},"content":"implemented as a separate class (e.g. a `Name` object represents the task’s name). That means we should add a `Remark`","lastModifiedDate":"2021-03-01"},{"lineNumber":248,"author":{"gitId":"noelmathewisaac"},"content":"class so that we can use a `Remark` object to represent a remark given to a task.","lastModifiedDate":"2021-03-01"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"noelmathewisaac"},"content":"Create a new `Remark` in `seedu.taskify.model.task`. Since a `Remark` is a field that is similar to `Address`, we can","lastModifiedDate":"2021-03-01"},{"lineNumber":253,"author":{"gitId":"noelmathewisaac"},"content":"reuse a significant bit of code.","lastModifiedDate":"2021-03-01"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"noelmathewisaac"},"content":"A copy-paste and search-replace later, you should have something","lastModifiedDate":"2021-03-01"},{"lineNumber":256,"author":{"gitId":"noelmathewisaac"},"content":"like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25)","lastModifiedDate":"2021-03-01"},{"lineNumber":257,"author":{"gitId":"noelmathewisaac"},"content":". Note how `Remark` has no constrains and thus does not require input validation.","lastModifiedDate":"2021-03-01"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"noelmathewisaac"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These","lastModifiedDate":"2021-03-01"},{"lineNumber":262,"author":{"gitId":"noelmathewisaac"},"content":"should be relatively simple changes.","lastModifiedDate":"2021-03-01"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"noelmathewisaac"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each","lastModifiedDate":"2021-03-01"},{"lineNumber":267,"author":{"gitId":"noelmathewisaac"},"content":"task.","lastModifiedDate":"2021-03-01"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"noelmathewisaac"},"content":"Simply add the following","lastModifiedDate":"2021-03-01"},{"lineNumber":270,"author":{"gitId":"noelmathewisaac"},"content":"to [`seedu.taskify.ui.TaskCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe)","lastModifiedDate":"2021-03-01"},{"lineNumber":271,"author":{"gitId":"noelmathewisaac"},"content":".","lastModifiedDate":"2021-03-01"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"noelmathewisaac"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like","lastModifiedDate":"2021-03-01"},{"lineNumber":281,"author":{"gitId":"noelmathewisaac"},"content":"Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2021-03-01"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"noelmathewisaac"},"content":"Then insert the following","lastModifiedDate":"2021-03-01"},{"lineNumber":284,"author":{"gitId":"noelmathewisaac"},"content":"into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71)","lastModifiedDate":"2021-03-01"},{"lineNumber":285,"author":{"gitId":"noelmathewisaac"},"content":".","lastModifiedDate":"2021-03-01"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"noelmathewisaac"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors","lastModifiedDate":"2021-03-01"},{"lineNumber":304,"author":{"gitId":"noelmathewisaac"},"content":"accordingly to store our new addition.","lastModifiedDate":"2021-03-01"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"noelmathewisaac"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use","lastModifiedDate":"2021-03-01"},{"lineNumber":309,"author":{"gitId":"noelmathewisaac"},"content":"the updated `Person`!","lastModifiedDate":"2021-03-01"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"noelmathewisaac"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c)","lastModifiedDate":"2021-03-01"},{"lineNumber":318,"author":{"gitId":"noelmathewisaac"},"content":"and check that you have got everything in order!","lastModifiedDate":"2021-03-01"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"noelmathewisaac"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson.","lastModifiedDate":"2021-03-01"},{"lineNumber":323,"author":{"gitId":"noelmathewisaac"},"content":"Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2021-03-01"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"noelmathewisaac"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not","lastModifiedDate":"2021-03-01"},{"lineNumber":330,"author":{"gitId":"noelmathewisaac"},"content":"doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2021-03-01"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"noelmathewisaac"},"content":"Just","lastModifiedDate":"2021-03-01"},{"lineNumber":342,"author":{"gitId":"noelmathewisaac"},"content":"add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2021-03-01"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"noelmathewisaac"},"content":"public PersonCard(Person task, int displayedIndex) {","lastModifiedDate":"2021-03-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"noelmathewisaac"},"content":"    remark.setText(task.getRemark().value);","lastModifiedDate":"2021-03-01"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"noelmathewisaac"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all.","lastModifiedDate":"2021-03-01"},{"lineNumber":358,"author":{"gitId":"noelmathewisaac"},"content":"However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been","lastModifiedDate":"2021-03-01"},{"lineNumber":359,"author":{"gitId":"noelmathewisaac"},"content":"adding in the last few steps.","lastModifiedDate":"2021-03-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"noelmathewisaac"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in","lastModifiedDate":"2021-03-01"},{"lineNumber":364,"author":{"gitId":"noelmathewisaac"},"content":"a `Person` are immutable, we create a new instance of a `Person` with the values that we want and save it","lastModifiedDate":"2021-03-01"},{"lineNumber":365,"author":{"gitId":"noelmathewisaac"},"content":"with `Model#setPerson()`.","lastModifiedDate":"2021-03-01"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"noelmathewisaac"},"content":"        Person taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":383,"author":{"gitId":"noelmathewisaac"},"content":"        Person editedTask \u003d new Person(taskToEdit.getName(), taskToEdit.getPhone(), taskToEdit.getEmail(),","lastModifiedDate":"2021-03-01"},{"lineNumber":384,"author":{"gitId":"noelmathewisaac"},"content":"                taskToEdit.getAddress(), remark, taskToEdit.getTags());","lastModifiedDate":"2021-03-01"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"noelmathewisaac"},"content":"        model.setPerson(taskToEdit, editedTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"noelmathewisaac"},"content":"        return new CommandResult(generateSuccessMessage(editedTask));","lastModifiedDate":"2021-03-01"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"noelmathewisaac"},"content":"     * {@code taskToEdit}.","lastModifiedDate":"2021-03-01"},{"lineNumber":395,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"noelmathewisaac"},"content":"    private String generateSuccessMessage(Person taskToEdit) {","lastModifiedDate":"2021-03-01"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"noelmathewisaac"},"content":"        return String.format(message, taskToEdit);","lastModifiedDate":"2021-03-01"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":406,"author":{"gitId":"noelmathewisaac"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code","lastModifiedDate":"2021-03-01"},{"lineNumber":407,"author":{"gitId":"noelmathewisaac"},"content":"bases where a change might lead to unintended behavior.","lastModifiedDate":"2021-03-01"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":409,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":411,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":413,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":415,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":416,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":418,"author":{"gitId":"noelmathewisaac"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring","lastModifiedDate":"2021-03-01"},{"lineNumber":419,"author":{"gitId":"noelmathewisaac"},"content":"up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2021-03-01"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":421,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":423,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":425,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":427,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":429,"author":{"gitId":"noelmathewisaac"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the","lastModifiedDate":"2021-03-01"},{"lineNumber":430,"author":{"gitId":"noelmathewisaac"},"content":"expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the","lastModifiedDate":"2021-03-01"},{"lineNumber":431,"author":{"gitId":"noelmathewisaac"},"content":"best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2021-03-01"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":433,"author":{"gitId":"noelmathewisaac"},"content":"You should end up with a test that looks something","lastModifiedDate":"2021-03-01"},{"lineNumber":434,"author":{"gitId":"noelmathewisaac"},"content":"like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9)","lastModifiedDate":"2021-03-01"},{"lineNumber":435,"author":{"gitId":"noelmathewisaac"},"content":".","lastModifiedDate":"2021-03-01"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":437,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":439,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":334,"noelmathewisaac":105}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"layout: page title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e — Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"When working on AddressBook, you will most likely find that some features and fields that are no longer necessary. In","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"scenarios like this, you can consider refactoring the existing `Person` model to suit your use case.","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"In this tutorial, we’ll do exactly just that and remove the `address` field from `Person`.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"* Table of Contents {:toc}","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"Fortunately, IntelliJ IDEA provides a robust refactoring tool that can identify *most* usages. Let’s try to use it as","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"much as we can.","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"The `address` field in `Person` is actually an instance of the `seedu.taskify.model.task.Address` class. Since removing","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"locations in which the `Address` class is used.","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry. You will need to exercise discretion when","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"   the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":"refactoring.","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"noelmathewisaac"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of","lastModifiedDate":"2021-03-01"},{"lineNumber":94,"author":{"gitId":"noelmathewisaac"},"content":"your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2021-03-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"noelmathewisaac"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up","lastModifiedDate":"2021-03-01"},{"lineNumber":99,"author":{"gitId":"noelmathewisaac"},"content":"references to `Address` in test data and documentation.","lastModifiedDate":"2021-03-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"noelmathewisaac"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files","lastModifiedDate":"2021-03-01"},{"lineNumber":102,"author":{"gitId":"noelmathewisaac"},"content":"does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2021-03-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"noelmathewisaac"},"content":"  \"tasks\": [","lastModifiedDate":"2021-03-01"},{"lineNumber":109,"author":{"gitId":"noelmathewisaac"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"      \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":115,"author":{"gitId":"noelmathewisaac"},"content":"  ]","lastModifiedDate":"2021-03-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":85,"noelmathewisaac":34}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"layout: page title: \"Tutorial: Tracing code\"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e — Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"* Table of Contents {:toc}","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"![Architecture sequence diagram from the developer guide](../images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"Note how the diagram shows only how the execution flows *between* the main components. That is, it does not show","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"details of the execution path *inside* each component. By hiding those details, the diagram succeeds in informing the","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"reader about the overall execution path of a command without overwhelming the reader with too much details. In this","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"tutorial, you aim to find those omitted details so that you get a more in-depth understanding of the code base.","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Setting a break point","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution.","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"of the `main` method. In our case, we would want to begin the tracing at the very point where the App start processing","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms*","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the UI","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"transfers control to the Logic component. According to the sequence diagram, the UI component yields control to the","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"Logic component through a method named `execute`. Searching through the code base for `execute()` yields a promising","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"candidate in `seedu.taskify.ui.CommandBox.CommandExecutor`.","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Using the `Search for target by name` feature. `Navigate` \\\u003e `Symbol`.](../images/tracing/Execute.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"A quick look at the class confirms that this is indeed close to what we’re looking for. However, it is just","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"an `Interface`. Let’s delve further and find the implementation of the interface by using the `Find Usages` feature in","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"IntelliJ IDEA.","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"Recall from the User Guide that the `edit` command has the","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"hengyongming"},"content":"format: `edit INDEX [n/NAME] [p/DESCRIPTION] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application.","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"noelmathewisaac"},"content":"Try to jot down what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-03-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and look something like this:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. Use the `Show execution point` feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"noelmathewisaac"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s `Step in` into that method","lastModifiedDate":"2021-03-01"},{"lineNumber":89,"author":{"gitId":"noelmathewisaac"},"content":"   call:\u003cbr\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"   ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()`. Let’s take a look at the body of the method and annotate what we can deduce.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"noelmathewisaac"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look","lastModifiedDate":"2021-03-01"},{"lineNumber":123,"author":{"gitId":"noelmathewisaac"},"content":"   at each one.","lastModifiedDate":"2021-03-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"1. `Step over` the logging code since it is of no interest to us now. ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"1. `Step into` the line where user input in parsed from a String to a Command.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"   **`AddressBookParser\\#parseCommand()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"noelmathewisaac"},"content":"1. `Step over` until you reach the `switch` statement. The `Variables` window now shows the value of both `commandWord`","lastModifiedDate":"2021-03-01"},{"lineNumber":140,"author":{"gitId":"noelmathewisaac"},"content":"   and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"1. Stepping into the `switch`, we obviously stop at **`AddressBookParser\\#parseCommand()`.**","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"noelmathewisaac"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to","lastModifiedDate":"2021-03-01"},{"lineNumber":157,"author":{"gitId":"noelmathewisaac"},"content":"   obtain the arguments and index required.","lastModifiedDate":"2021-03-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** Sometimes you might end up stepping into functions that are not of interest. Simply `step out` of them\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"noelmathewisaac"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit`","lastModifiedDate":"2021-03-01"},{"lineNumber":163,"author":{"gitId":"noelmathewisaac"},"content":"   command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents","lastModifiedDate":"2021-03-01"},{"lineNumber":164,"author":{"gitId":"noelmathewisaac"},"content":"   of `editPersonDesciptor` through the `Variable` tool window.\u003cbr\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"noelmathewisaac"},"content":"   The sequence diagram below shows the details of the execution path through the Logic component. Does the execution","lastModifiedDate":"2021-03-01"},{"lineNumber":170,"author":{"gitId":"noelmathewisaac"},"content":"   path you traced in the code so far matches with the diagram?\u003cbr\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"   ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"1. Now let’s see what happens when we call `command#execute()`\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   **`EditCommand\\#execute()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"noelmathewisaac"},"content":"       Person taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":182,"author":{"gitId":"noelmathewisaac"},"content":"       Person editedTask \u003d createEditedPerson(taskToEdit, editPersonDescriptor);","lastModifiedDate":"2021-03-01"},{"lineNumber":183,"author":{"gitId":"noelmathewisaac"},"content":"       if (!taskToEdit.isSamePerson(editedTask) \u0026\u0026 model.hasPerson(editedTask)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"noelmathewisaac"},"content":"       model.setPerson(taskToEdit, editedTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":187,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"noelmathewisaac"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedTask));","lastModifiedDate":"2021-03-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to `model`.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"1. We can a closer look at how storage works by repeatedly stepping into the code until we arrive at","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"   `JsonAddressBook#saveAddressBook()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"noelmathewisaac"},"content":"1. Again, it appears that the heavy lifting is delegated. Let’s take a look at `JsonSerializableAddressBook`\u0027s","lastModifiedDate":"2021-03-01"},{"lineNumber":198,"author":{"gitId":"noelmathewisaac"},"content":"   constructor.","lastModifiedDate":"2021-03-01"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   **`JsonSerializableAddressBook\\#JsonSerializableAddressBook()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"   /**","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    *","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"noelmathewisaac"},"content":"       tasks.addAll(","lastModifiedDate":"2021-03-01"},{"lineNumber":211,"author":{"gitId":"-"},"content":"           source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                 .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                 .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                 .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"noelmathewisaac"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to","lastModifiedDate":"2021-03-01"},{"lineNumber":219,"author":{"gitId":"noelmathewisaac"},"content":"   the `JsonSerializableAddressBook`.","lastModifiedDate":"2021-03-01"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"1. We can continue to step through until we return to `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"   **`ResultDisplay\\#setFeedbackToUser()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"1. Finally, we step through until we reach the end of","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"   `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"noelmathewisaac"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From","lastModifiedDate":"2021-03-01"},{"lineNumber":240,"author":{"gitId":"noelmathewisaac"},"content":"this tutorial, you learned more about the inner workings of AddressBook and how the various components mesh together to","lastModifiedDate":"2021-03-01"},{"lineNumber":241,"author":{"gitId":"noelmathewisaac"},"content":"form one cohesive product.","lastModifiedDate":"2021-03-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"noelmathewisaac"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do","lastModifiedDate":"2021-03-01"},{"lineNumber":244,"author":{"gitId":"noelmathewisaac"},"content":"further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-03-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"noelmathewisaac"},"content":"1. In this tutorial, we traced the \"happy path\" (i.e., no errors). What do you think will happen if we traced the","lastModifiedDate":"2021-03-01"},{"lineNumber":247,"author":{"gitId":"noelmathewisaac"},"content":"   following commands instead? What exceptions do you think will be thrown(if any), where will the exceptions be thrown","lastModifiedDate":"2021-03-01"},{"lineNumber":248,"author":{"gitId":"noelmathewisaac"},"content":"   and where will they be handled?","lastModifiedDate":"2021-03-01"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    1. `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    2. `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    3. `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    4. `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    5. `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    6. `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"noelmathewisaac"},"content":"2. What components will you have to modify to perform the following enhancements to the application?","lastModifiedDate":"2021-03-01"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    1. Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    2. Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    3. Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    4. Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    5. Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    6. Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"hengyongming":1,"-":209,"noelmathewisaac":64}},{"path":"src/main/java/seedu/taskify/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.LogsCenter;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.util.FileUtil;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":61,"noelmathewisaac":3}},{"path":"src/main/java/seedu/taskify/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"-":24,"noelmathewisaac":1}},{"path":"src/main/java/seedu/taskify/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.Config;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.LogsCenter;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.Version;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.util.ConfigUtil;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.util.StringUtil;","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.Logic;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.LogicManager;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ModelManager;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ReadOnlyTaskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.UserPrefs;","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.storage.JsonTaskifyStorage;","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.storage.Storage;","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.storage.StorageManager;","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.storage.TaskifyStorage;","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.storage.UserPrefsStorage;","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.ui.Ui;","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.ui.UiManager;","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 6, 0, true);","lastModifiedDate":"2017-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing TaskifyParser ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"        TaskifyStorage taskifyStorage \u003d new JsonTaskifyStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"        storage \u003d new StorageManager(taskifyStorage, userPrefsStorage);","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"noelmathewisaac"},"content":"        Optional\u003cReadOnlyTaskify\u003e taskifyOptional;","lastModifiedDate":"2021-03-01"},{"lineNumber":78,"author":{"gitId":"noelmathewisaac"},"content":"        ReadOnlyTaskify initialData;","lastModifiedDate":"2021-03-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"noelmathewisaac"},"content":"            taskifyOptional \u003d storage.readAddressBook();","lastModifiedDate":"2021-03-01"},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"            if (!taskifyOptional.isPresent()) {","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"                logger.info(\"Data file not found. Will be starting with a sample TaskifyParser\");","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"noelmathewisaac"},"content":"            initialData \u003d taskifyOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2021-03-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"noelmathewisaac"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty TaskifyParser\");","lastModifiedDate":"2021-03-01"},{"lineNumber":87,"author":{"gitId":"noelmathewisaac"},"content":"            initialData \u003d new Taskify();","lastModifiedDate":"2021-03-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"noelmathewisaac"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TaskifyParser\");","lastModifiedDate":"2021-03-01"},{"lineNumber":90,"author":{"gitId":"noelmathewisaac"},"content":"            initialData \u003d new Taskify();","lastModifiedDate":"2021-03-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"noelmathewisaac"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TaskifyParser\");","lastModifiedDate":"2021-03-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"noelmathewisaac"},"content":"        logger.info(\"Starting TaskifyParser \" + MainApp.VERSION);","lastModifiedDate":"2021-03-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":144,"noelmathewisaac":39}},{"path":"src/main/java/seedu/taskify/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.core;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":62,"noelmathewisaac":1}},{"path":"src/main/java/seedu/taskify/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.core;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":78,"noelmathewisaac":1}},{"path":"src/main/java/seedu/taskify/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.core;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":111,"noelmathewisaac":1}},{"path":"src/main/java/seedu/taskify/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.core;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"%1$d tasks listed!\";","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":9,"noelmathewisaac":3}},{"path":"src/main/java/seedu/taskify/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.core;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":115,"noelmathewisaac":1}},{"path":"src/main/java/seedu/taskify/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.core.index;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":53,"noelmathewisaac":1}},{"path":"src/main/java/seedu/taskify/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.exceptions;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":10,"noelmathewisaac":1}},{"path":"src/main/java/seedu/taskify/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.exceptions;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"noelmathewisaac":1}},{"path":"src/main/java/seedu/taskify/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.util;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.MainApp;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":40,"noelmathewisaac":2}},{"path":"src/main/java/seedu/taskify/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.util;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":34,"noelmathewisaac":1}},{"path":"src/main/java/seedu/taskify/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.util;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.Config;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":20,"noelmathewisaac":3}},{"path":"src/main/java/seedu/taskify/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.util;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":82,"noelmathewisaac":1}},{"path":"src/main/java/seedu/taskify/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.util;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.LogsCenter;","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":140,"noelmathewisaac":3}},{"path":"src/main/java/seedu/taskify/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.util;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"CSmortal"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"CSmortal"},"content":"     * Trims the input String and reduces all additional whitespace between substrings to just one.","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"CSmortal"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"CSmortal"},"content":"    public static String reduceWhitespaces(String input) {","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"CSmortal"},"content":"        input \u003d input.trim();","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"CSmortal"},"content":"        input \u003d input.replaceAll(\"\\\\s{2,}\", \" \");","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"CSmortal"},"content":"        return input;","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":66,"CSmortal":10,"noelmathewisaac":2}},{"path":"src/main/java/seedu/taskify/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.GuiSettings;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.CommandResult;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ReadOnlyTaskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"     *","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns the TaskifyParser.","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"     * @see seedu.taskify.model.Model#getAddressBook()","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"    ReadOnlyTaskify getAddressBook();","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns an unmodifiable view of the filtered list of tasks","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"hengyongming"},"content":"    ObservableList\u003cTask\u003e getExpiredFilteredTaskList();","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"hengyongming"},"content":"    ObservableList\u003cTask\u003e getCompletedFilteredTaskList();","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"hengyongming":2,"-":40,"noelmathewisaac":15}},{"path":"src/main/java/seedu/taskify/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.GuiSettings;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.LogsCenter;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.Command;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.CommandResult;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.parser.TaskifyParser;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ReadOnlyTaskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.storage.Storage;","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"    private final TaskifyParser taskifyParser;","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"        taskifyParser \u003d new TaskifyParser();","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"        Command command \u003d taskifyParser.parseCommand(commandText);","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"    public ReadOnlyTaskify getAddressBook() {","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"hengyongming"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"hengyongming"},"content":"    public ObservableList\u003cTask\u003e getExpiredFilteredTaskList() {","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"hengyongming"},"content":"        return model.getExpiredFilteredTaskList();","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"hengyongming"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"hengyongming"},"content":"    public ObservableList\u003cTask\u003e getCompletedFilteredTaskList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"hengyongming"},"content":"        return model.getCompletedFilteredTaskList();","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"hengyongming":8,"-":65,"noelmathewisaac":18}},{"path":"src/main/java/seedu/taskify/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"hengyongming"},"content":" * Adds a task to the Taskify.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"hengyongming"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the Taskify. \"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"                                                       + \"Parameters: \"","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"                                                       + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"hengyongming"},"content":"                                                       + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"CSmortal"},"content":"                                                       + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"                                                       + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"                                                       + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"hengyongming"},"content":"                                                       + PREFIX_NAME + \"Finish 2103T Tutorial \"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"hengyongming"},"content":"                                                       + PREFIX_DESCRIPTION + \"Draw UML diagram \"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"CSmortal"},"content":"                                                       + PREFIX_DATE + \"2020-04-13 10:30 \"","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"hengyongming"},"content":"                                                       + PREFIX_TAG + \"CS2103T \";","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"hengyongming"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in Taskify\";","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"    private final Task toAdd;","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"     * Creates an AddCommand to add the specified {@code Task}","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"        toAdd \u003d task;","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"                       || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"                                   \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":8,"CSmortal":3,"noelmathewisaac":52}},{"path":"src/main/java/seedu/taskify/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"hengyongming"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Taskify has been cleared!\";","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"        model.setAddressBook(new Taskify());","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hengyongming":1,"-":18,"noelmathewisaac":5}},{"path":"src/main/java/seedu/taskify/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":17,"noelmathewisaac":3}},{"path":"src/main/java/seedu/taskify/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"hengyongming"},"content":"    private static boolean showHome \u003d false;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"hengyongming"},"content":"    private static boolean showExpired \u003d false;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"hengyongming"},"content":"    private static boolean showCompleted \u003d false;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"hengyongming"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"hengyongming"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"hengyongming"},"content":"     * Command Result for the user to switch to home tab","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"hengyongming"},"content":"     * @param feedbackToUser","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"hengyongming"},"content":"     * @return commandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"hengyongming"},"content":"    public static CommandResult switchToHome(String feedbackToUser) {","lastModifiedDate":"2021-03-21"},{"lineNumber":45,"author":{"gitId":"hengyongming"},"content":"        CommandResult newCommand \u003d new CommandResult(feedbackToUser);","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"hengyongming"},"content":"        CommandResult.showHome \u003d true;","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"hengyongming"},"content":"        CommandResult.showExpired \u003d false;","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"hengyongming"},"content":"        CommandResult.showCompleted \u003d false;","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"hengyongming"},"content":"        return newCommand;","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"hengyongming"},"content":"     * Command Result for the user to switch to expired task tab","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"hengyongming"},"content":"     * @param feedbackToUser","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"hengyongming"},"content":"     * @return commandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"hengyongming"},"content":"    public static CommandResult switchToExpired(String feedbackToUser) {","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"hengyongming"},"content":"        CommandResult newCommand \u003d new CommandResult(feedbackToUser);","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"hengyongming"},"content":"        CommandResult.showHome \u003d false;","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"hengyongming"},"content":"        CommandResult.showExpired \u003d true;","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"hengyongming"},"content":"        CommandResult.showCompleted \u003d false;","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"hengyongming"},"content":"        return newCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"hengyongming"},"content":"     * Command Result for the user to switch to completed task tab","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"hengyongming"},"content":"     * @param feedbackToUser","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"hengyongming"},"content":"     * @return commandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"hengyongming"},"content":"    public static CommandResult switchToCompleted(String feedbackToUser) {","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"hengyongming"},"content":"        CommandResult newCommand \u003d new CommandResult(feedbackToUser);","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"hengyongming"},"content":"        CommandResult.showHome \u003d false;","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"hengyongming"},"content":"        CommandResult.showExpired \u003d false;","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"hengyongming"},"content":"        CommandResult.showCompleted \u003d true;","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"hengyongming"},"content":"        return newCommand;","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"hengyongming"},"content":"    public static void setHomeTab() {","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"hengyongming"},"content":"        showHome \u003d true;","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"hengyongming"},"content":"    public static boolean isHomeTab() {","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"hengyongming"},"content":"        return CommandResult.showHome;","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":102,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":103,"author":{"gitId":"hengyongming"},"content":"    public static boolean isExpiredTab() {","lastModifiedDate":"2021-03-22"},{"lineNumber":104,"author":{"gitId":"hengyongming"},"content":"        return CommandResult.showExpired;","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":106,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":107,"author":{"gitId":"hengyongming"},"content":"    public static boolean isCompletedTab() {","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"hengyongming"},"content":"        return CommandResult.showCompleted;","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hengyongming":65,"-":67,"noelmathewisaac":1}},{"path":"src/main/java/seedu/taskify/logic/commands/CompletedCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hengyongming"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"hengyongming"},"content":"public class CompletedCommand extends Command {","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"hengyongming"},"content":"    public static final String COMMAND_WORD \u003d \"completed\";","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"hengyongming"},"content":"    public static final String MESSAGE_USAGE \u003d \"Switched to completed tab\";","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"hengyongming"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"hengyongming"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"hengyongming"},"content":"        return CommandResult.switchToCompleted(MESSAGE_USAGE);","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"hengyongming"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"hengyongming":15}},{"path":"src/main/java/seedu/taskify/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.List;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.Messages;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.index.Index;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"CSmortal"},"content":" * Deletes a task identified using it\u0027s displayed index from the app.","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"                   + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"                   + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"                   + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"                       || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"                                   \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"CSmortal":1,"noelmathewisaac":52}},{"path":"src/main/java/seedu/taskify/logic/commands/DeleteMultipleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CSmortal"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"CSmortal"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"CSmortal"},"content":"import java.util.List;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"CSmortal"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"CSmortal"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"CSmortal"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.commons.core.index.Index;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.task.Status;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"CSmortal"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"CSmortal"},"content":" * Deletes tasks (more than one) identified using it\u0027s displayed indexes from the app.","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"CSmortal"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"CSmortal"},"content":"public class DeleteMultipleCommand extends Command {","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"CSmortal"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"CSmortal"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"CSmortal"},"content":"            + \": Delete multiple tasks identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"CSmortal"},"content":"            + \"Parameters: FIRST_INDEX SECOND_INDEX ...(must be a positive integer)\\n\"","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"CSmortal"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + \" 3\" + \" 5\";","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"CSmortal"},"content":"    private final List\u003cIndex\u003e targetIndexes;","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"CSmortal"},"content":"    private final Optional\u003cStatus\u003e statusOfTasksToDelete;","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"CSmortal"},"content":"    private final boolean toDeleteByStatus;","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"CSmortal"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"CSmortal"},"content":"     * Creates a DeleteMultipleCommand that will delete tasks by their indexes","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"CSmortal"},"content":"     * @param targetIndexes the {@link Index}s of the tasks to delete","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"CSmortal"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"CSmortal"},"content":"    public DeleteMultipleCommand(List\u003cIndex\u003e targetIndexes) {","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"CSmortal"},"content":"        this.targetIndexes \u003d targetIndexes;","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"CSmortal"},"content":"        this.statusOfTasksToDelete \u003d Optional.empty();","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"CSmortal"},"content":"        this.toDeleteByStatus \u003d false;","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"CSmortal"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"CSmortal"},"content":"     * Creates a DeleteMultipleCommand that will delete tasks based on their {@link Status}","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"CSmortal"},"content":"     * @param statusOfTasksToDelete the {@code Status} of the tasks to be deleted","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"CSmortal"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"CSmortal"},"content":"    public DeleteMultipleCommand(Status statusOfTasksToDelete) {","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"CSmortal"},"content":"        this.targetIndexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"CSmortal"},"content":"        this.statusOfTasksToDelete \u003d Optional.of(statusOfTasksToDelete);","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"CSmortal"},"content":"        this.toDeleteByStatus \u003d true;","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":51,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":52,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":53,"author":{"gitId":"CSmortal"},"content":"    @Override","lastModifiedDate":"2021-03-20"},{"lineNumber":54,"author":{"gitId":"CSmortal"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-20"},{"lineNumber":55,"author":{"gitId":"CSmortal"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-20"},{"lineNumber":56,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"CSmortal"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-03-20"},{"lineNumber":58,"author":{"gitId":"CSmortal"},"content":"        List\u003cTask\u003e tasksToDelete;","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"CSmortal"},"content":"        if (toDeleteByStatus) {","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"CSmortal"},"content":"            tasksToDelete \u003d getTasksToDelete(statusOfTasksToDelete.get(), lastShownList);","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"CSmortal"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"CSmortal"},"content":"            tasksToDelete \u003d getTasksToDelete(lastShownList);","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"CSmortal"},"content":"        deleteTasks(model, tasksToDelete);","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":68,"author":{"gitId":"CSmortal"},"content":"        return new CommandResult(generateSuccessMessage(tasksToDelete));","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"CSmortal"},"content":"    private List\u003cTask\u003e getTasksToDelete(List\u003cTask\u003e tasksSource) throws CommandException {","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"CSmortal"},"content":"        List\u003cTask\u003e tasksToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-20"},{"lineNumber":74,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":75,"author":{"gitId":"CSmortal"},"content":"        for (int i \u003d 0; i \u003c targetIndexes.size(); i++) {","lastModifiedDate":"2021-03-20"},{"lineNumber":76,"author":{"gitId":"CSmortal"},"content":"            Index targetIndex \u003d targetIndexes.get(i);","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"CSmortal"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d tasksSource.size()) {","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"CSmortal"},"content":"                throw new CommandException(MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"CSmortal"},"content":"            }","lastModifiedDate":"2021-03-21"},{"lineNumber":80,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"CSmortal"},"content":"            Task taskToDelete \u003d tasksSource.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"CSmortal"},"content":"            tasksToDelete.add(taskToDelete);","lastModifiedDate":"2021-03-20"},{"lineNumber":83,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":84,"author":{"gitId":"CSmortal"},"content":"        return tasksToDelete;","lastModifiedDate":"2021-03-21"},{"lineNumber":85,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":86,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":87,"author":{"gitId":"CSmortal"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"CSmortal"},"content":"     * Returns all tasks with the specified {@code Status}, that are to be deleted","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"CSmortal"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"CSmortal"},"content":"    private List\u003cTask\u003e getTasksToDelete(Status status, List\u003cTask\u003e tasksSource) {","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"CSmortal"},"content":"        return tasksSource.stream().filter(task -\u003e task.getStatus().equals(status)).collect(Collectors.toList());","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"CSmortal"},"content":"    private void deleteTasks(Model model, List\u003cTask\u003e tasksToDelete) {","lastModifiedDate":"2021-03-21"},{"lineNumber":95,"author":{"gitId":"CSmortal"},"content":"        for (Task toDelete : tasksToDelete) {","lastModifiedDate":"2021-03-20"},{"lineNumber":96,"author":{"gitId":"CSmortal"},"content":"            model.deleteTask(toDelete);","lastModifiedDate":"2021-03-20"},{"lineNumber":97,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":98,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":99,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":100,"author":{"gitId":"CSmortal"},"content":"    private String generateSuccessMessage(List\u003cTask\u003e tasksToDelete) {","lastModifiedDate":"2021-03-20"},{"lineNumber":101,"author":{"gitId":"CSmortal"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-03-20"},{"lineNumber":102,"author":{"gitId":"CSmortal"},"content":"        sb.append(\"Deleted Tasks: \");","lastModifiedDate":"2021-03-20"},{"lineNumber":103,"author":{"gitId":"CSmortal"},"content":"        for (Task toDelete : tasksToDelete) {","lastModifiedDate":"2021-03-20"},{"lineNumber":104,"author":{"gitId":"CSmortal"},"content":"            sb.append(toDelete);","lastModifiedDate":"2021-03-20"},{"lineNumber":105,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":106,"author":{"gitId":"CSmortal"},"content":"        return sb.toString();","lastModifiedDate":"2021-03-20"},{"lineNumber":107,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":108,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":109,"author":{"gitId":"CSmortal"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":110,"author":{"gitId":"CSmortal"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-03-21"},{"lineNumber":111,"author":{"gitId":"CSmortal"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-03-21"},{"lineNumber":112,"author":{"gitId":"CSmortal"},"content":"            return true;","lastModifiedDate":"2021-03-21"},{"lineNumber":113,"author":{"gitId":"CSmortal"},"content":"        } else if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-03-21"},{"lineNumber":114,"author":{"gitId":"CSmortal"},"content":"            return false;","lastModifiedDate":"2021-03-21"},{"lineNumber":115,"author":{"gitId":"CSmortal"},"content":"        } else {","lastModifiedDate":"2021-03-21"},{"lineNumber":116,"author":{"gitId":"CSmortal"},"content":"            DeleteMultipleCommand cmd \u003d (DeleteMultipleCommand) o;","lastModifiedDate":"2021-03-21"},{"lineNumber":117,"author":{"gitId":"CSmortal"},"content":"            return targetIndexes.equals(cmd.targetIndexes);","lastModifiedDate":"2021-03-21"},{"lineNumber":118,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":119,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":120,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":121,"author":{"gitId":"CSmortal"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":122,"author":{"gitId":"CSmortal"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-21"},{"lineNumber":123,"author":{"gitId":"CSmortal"},"content":"        return Objects.hash(targetIndexes);","lastModifiedDate":"2021-03-21"},{"lineNumber":124,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":125,"author":{"gitId":"CSmortal"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"CSmortal":125}},{"path":"src/main/java/seedu/taskify/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.List;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.index.Index;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.tag.Tag;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.task.Date;","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.model.task.Description;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Name;","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.Status;","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":" * Edits the details of an existing task in the address book.","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the task identified \"","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"            + \"by the index number used in the displayed task list. \"","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"hengyongming"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS] \"","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"            + PREFIX_DESCRIPTION + \"91234567 \";","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"hengyongming"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in Taskify.\";","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"hengyongming"},"content":"    public static final String MESSAGE_SWITCH_TO_HOME \u003d \"Switch back to home page to edit!\";","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"    private final Index index;","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"    private final EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"     * @param index of the task in the filtered task list to edit","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"     * @param editTaskDescriptor details to edit the task with","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"    public EditCommand(Index index, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"        requireNonNull(editTaskDescriptor);","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"        this.editTaskDescriptor \u003d new EditTaskDescriptor(editTaskDescriptor);","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"hengyongming"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"noelmathewisaac"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"hengyongming"},"content":"        if (!CommandResult.isHomeTab()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"hengyongming"},"content":"            throw new CommandException(MESSAGE_SWITCH_TO_HOME);","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"hengyongming"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":"        if (!taskToEdit.isSameTask(editedTask) \u0026\u0026 model.hasTask(editedTask)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"noelmathewisaac"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-01"},{"lineNumber":78,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":79,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":80,"author":{"gitId":"noelmathewisaac"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"hengyongming"},"content":"        model.updateExpiredFilterTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"hengyongming"},"content":"        model.updateCompletedFilterTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"noelmathewisaac"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2021-03-01"},{"lineNumber":85,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":86,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":87,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":88,"author":{"gitId":"noelmathewisaac"},"content":"     * Creates and returns a {@code Task} with the details of {@code taskToEdit}","lastModifiedDate":"2021-03-01"},{"lineNumber":89,"author":{"gitId":"noelmathewisaac"},"content":"     * edited with {@code editTaskDescriptor}.","lastModifiedDate":"2021-03-01"},{"lineNumber":90,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":91,"author":{"gitId":"noelmathewisaac"},"content":"    private static Task createEditedTask(Task taskToEdit, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2021-03-01"},{"lineNumber":92,"author":{"gitId":"noelmathewisaac"},"content":"        assert taskToEdit !\u003d null;","lastModifiedDate":"2021-03-01"},{"lineNumber":93,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":94,"author":{"gitId":"noelmathewisaac"},"content":"        Name updatedName \u003d editTaskDescriptor.getName().orElse(taskToEdit.getName());","lastModifiedDate":"2021-03-01"},{"lineNumber":95,"author":{"gitId":"hengyongming"},"content":"        Description updatedDescription \u003d editTaskDescriptor.getDescription().orElse(taskToEdit.getDescription());","lastModifiedDate":"2021-03-01"},{"lineNumber":96,"author":{"gitId":"khiaxeng"},"content":"        Status updatedStatus \u003d editTaskDescriptor.getStatus().orElse(taskToEdit.getStatus());","lastModifiedDate":"2021-03-03"},{"lineNumber":97,"author":{"gitId":"CSmortal"},"content":"        Date updatedDate \u003d editTaskDescriptor.getDate().orElse(taskToEdit.getDate());","lastModifiedDate":"2021-03-03"},{"lineNumber":98,"author":{"gitId":"noelmathewisaac"},"content":"        Set\u003cTag\u003e updatedTags \u003d editTaskDescriptor.getTags().orElse(taskToEdit.getTags());","lastModifiedDate":"2021-03-01"},{"lineNumber":99,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":100,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":101,"author":{"gitId":"hengyongming"},"content":"        return new Task(updatedName, updatedDescription, updatedStatus, updatedDate, updatedTags);","lastModifiedDate":"2021-03-20"},{"lineNumber":102,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":103,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":104,"author":{"gitId":"noelmathewisaac"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":105,"author":{"gitId":"noelmathewisaac"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-01"},{"lineNumber":106,"author":{"gitId":"noelmathewisaac"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-01"},{"lineNumber":107,"author":{"gitId":"noelmathewisaac"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-01"},{"lineNumber":108,"author":{"gitId":"noelmathewisaac"},"content":"            return true;","lastModifiedDate":"2021-03-01"},{"lineNumber":109,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":110,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":111,"author":{"gitId":"noelmathewisaac"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-01"},{"lineNumber":112,"author":{"gitId":"noelmathewisaac"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":113,"author":{"gitId":"noelmathewisaac"},"content":"            return false;","lastModifiedDate":"2021-03-01"},{"lineNumber":114,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":115,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":116,"author":{"gitId":"noelmathewisaac"},"content":"        // state check","lastModifiedDate":"2021-03-01"},{"lineNumber":117,"author":{"gitId":"noelmathewisaac"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2021-03-01"},{"lineNumber":118,"author":{"gitId":"noelmathewisaac"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-03-01"},{"lineNumber":119,"author":{"gitId":"noelmathewisaac"},"content":"                \u0026\u0026 editTaskDescriptor.equals(e.editTaskDescriptor);","lastModifiedDate":"2021-03-01"},{"lineNumber":120,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":121,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":122,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":123,"author":{"gitId":"noelmathewisaac"},"content":"     * Stores the details to edit the task with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-01"},{"lineNumber":124,"author":{"gitId":"noelmathewisaac"},"content":"     * corresponding field value of the task.","lastModifiedDate":"2021-03-01"},{"lineNumber":125,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":126,"author":{"gitId":"noelmathewisaac"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2021-03-01"},{"lineNumber":127,"author":{"gitId":"noelmathewisaac"},"content":"        private Name name;","lastModifiedDate":"2021-03-01"},{"lineNumber":128,"author":{"gitId":"hengyongming"},"content":"        private Description description;","lastModifiedDate":"2021-03-01"},{"lineNumber":129,"author":{"gitId":"khiaxeng"},"content":"        private Status status;","lastModifiedDate":"2021-03-03"},{"lineNumber":130,"author":{"gitId":"CSmortal"},"content":"        private Date date;","lastModifiedDate":"2021-03-03"},{"lineNumber":131,"author":{"gitId":"noelmathewisaac"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-01"},{"lineNumber":132,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":133,"author":{"gitId":"noelmathewisaac"},"content":"        public EditTaskDescriptor() {","lastModifiedDate":"2021-03-01"},{"lineNumber":134,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":135,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":136,"author":{"gitId":"noelmathewisaac"},"content":"        /**","lastModifiedDate":"2021-03-01"},{"lineNumber":137,"author":{"gitId":"noelmathewisaac"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-01"},{"lineNumber":138,"author":{"gitId":"noelmathewisaac"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-01"},{"lineNumber":139,"author":{"gitId":"noelmathewisaac"},"content":"         */","lastModifiedDate":"2021-03-01"},{"lineNumber":140,"author":{"gitId":"noelmathewisaac"},"content":"        public EditTaskDescriptor(EditTaskDescriptor toCopy) {","lastModifiedDate":"2021-03-01"},{"lineNumber":141,"author":{"gitId":"noelmathewisaac"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-03-01"},{"lineNumber":142,"author":{"gitId":"hengyongming"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2021-03-01"},{"lineNumber":143,"author":{"gitId":"khiaxeng"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2021-03-03"},{"lineNumber":144,"author":{"gitId":"CSmortal"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2021-03-03"},{"lineNumber":145,"author":{"gitId":"noelmathewisaac"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2021-03-01"},{"lineNumber":146,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":147,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":148,"author":{"gitId":"noelmathewisaac"},"content":"        /**","lastModifiedDate":"2021-03-01"},{"lineNumber":149,"author":{"gitId":"noelmathewisaac"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-03-01"},{"lineNumber":150,"author":{"gitId":"noelmathewisaac"},"content":"         */","lastModifiedDate":"2021-03-01"},{"lineNumber":151,"author":{"gitId":"noelmathewisaac"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-03-01"},{"lineNumber":152,"author":{"gitId":"hengyongming"},"content":"            return CollectionUtil.isAnyNonNull(name, description, status, date, tags);","lastModifiedDate":"2021-03-20"},{"lineNumber":153,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":154,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":155,"author":{"gitId":"noelmathewisaac"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-03-01"},{"lineNumber":156,"author":{"gitId":"noelmathewisaac"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-03-01"},{"lineNumber":157,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":158,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":159,"author":{"gitId":"noelmathewisaac"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-03-01"},{"lineNumber":160,"author":{"gitId":"noelmathewisaac"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-03-01"},{"lineNumber":161,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":162,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":163,"author":{"gitId":"hengyongming"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2021-03-01"},{"lineNumber":164,"author":{"gitId":"hengyongming"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-03-01"},{"lineNumber":165,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":166,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":167,"author":{"gitId":"hengyongming"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2021-03-01"},{"lineNumber":168,"author":{"gitId":"hengyongming"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2021-03-01"},{"lineNumber":169,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":170,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":171,"author":{"gitId":"khiaxeng"},"content":"        public void setStatus(Status status) {","lastModifiedDate":"2021-03-03"},{"lineNumber":172,"author":{"gitId":"khiaxeng"},"content":"            this.status \u003d status;","lastModifiedDate":"2021-03-03"},{"lineNumber":173,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":174,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":175,"author":{"gitId":"khiaxeng"},"content":"        public Optional\u003cStatus\u003e getStatus() {","lastModifiedDate":"2021-03-03"},{"lineNumber":176,"author":{"gitId":"khiaxeng"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2021-03-03"},{"lineNumber":177,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":178,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":179,"author":{"gitId":"CSmortal"},"content":"        public void setDate(Date date) {","lastModifiedDate":"2021-03-03"},{"lineNumber":180,"author":{"gitId":"CSmortal"},"content":"            this.date \u003d date;","lastModifiedDate":"2021-03-03"},{"lineNumber":181,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":182,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":183,"author":{"gitId":"CSmortal"},"content":"        public Optional\u003cDate\u003e getDate() {","lastModifiedDate":"2021-03-03"},{"lineNumber":184,"author":{"gitId":"CSmortal"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2021-03-03"},{"lineNumber":185,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":186,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":187,"author":{"gitId":"noelmathewisaac"},"content":"        /**","lastModifiedDate":"2021-03-01"},{"lineNumber":188,"author":{"gitId":"noelmathewisaac"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-03-01"},{"lineNumber":189,"author":{"gitId":"noelmathewisaac"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-01"},{"lineNumber":190,"author":{"gitId":"noelmathewisaac"},"content":"         */","lastModifiedDate":"2021-03-01"},{"lineNumber":191,"author":{"gitId":"noelmathewisaac"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-01"},{"lineNumber":192,"author":{"gitId":"noelmathewisaac"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-03-01"},{"lineNumber":193,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":194,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":195,"author":{"gitId":"noelmathewisaac"},"content":"        /**","lastModifiedDate":"2021-03-01"},{"lineNumber":196,"author":{"gitId":"noelmathewisaac"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-01"},{"lineNumber":197,"author":{"gitId":"noelmathewisaac"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-03-01"},{"lineNumber":198,"author":{"gitId":"noelmathewisaac"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-03-01"},{"lineNumber":199,"author":{"gitId":"noelmathewisaac"},"content":"         */","lastModifiedDate":"2021-03-01"},{"lineNumber":200,"author":{"gitId":"noelmathewisaac"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-03-01"},{"lineNumber":201,"author":{"gitId":"noelmathewisaac"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-03-01"},{"lineNumber":202,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":203,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":204,"author":{"gitId":"noelmathewisaac"},"content":"        @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":205,"author":{"gitId":"noelmathewisaac"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-01"},{"lineNumber":206,"author":{"gitId":"noelmathewisaac"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-01"},{"lineNumber":207,"author":{"gitId":"noelmathewisaac"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-01"},{"lineNumber":208,"author":{"gitId":"noelmathewisaac"},"content":"                return true;","lastModifiedDate":"2021-03-01"},{"lineNumber":209,"author":{"gitId":"noelmathewisaac"},"content":"            }","lastModifiedDate":"2021-03-01"},{"lineNumber":210,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":211,"author":{"gitId":"noelmathewisaac"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-01"},{"lineNumber":212,"author":{"gitId":"noelmathewisaac"},"content":"            if (!(other instanceof EditTaskDescriptor)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":213,"author":{"gitId":"noelmathewisaac"},"content":"                return false;","lastModifiedDate":"2021-03-01"},{"lineNumber":214,"author":{"gitId":"noelmathewisaac"},"content":"            }","lastModifiedDate":"2021-03-01"},{"lineNumber":215,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":216,"author":{"gitId":"noelmathewisaac"},"content":"            // state check","lastModifiedDate":"2021-03-01"},{"lineNumber":217,"author":{"gitId":"noelmathewisaac"},"content":"            EditTaskDescriptor e \u003d (EditTaskDescriptor) other;","lastModifiedDate":"2021-03-01"},{"lineNumber":218,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":219,"author":{"gitId":"noelmathewisaac"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-03-01"},{"lineNumber":220,"author":{"gitId":"hengyongming"},"content":"                           \u0026\u0026 getDescription().equals(e.getDescription())","lastModifiedDate":"2021-03-01"},{"lineNumber":221,"author":{"gitId":"khiaxeng"},"content":"                           \u0026\u0026 getStatus().equals(e.getStatus())","lastModifiedDate":"2021-03-03"},{"lineNumber":222,"author":{"gitId":"CSmortal"},"content":"                           \u0026\u0026 getDate().equals(e.getDate())","lastModifiedDate":"2021-03-03"},{"lineNumber":223,"author":{"gitId":"noelmathewisaac"},"content":"                           \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2021-03-01"},{"lineNumber":224,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":225,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":226,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":22,"khiaxeng":13,"CSmortal":13,"noelmathewisaac":178}},{"path":"src/main/java/seedu/taskify/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"hengyongming"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Taskify as requested ...\";","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"hengyongming":1,"-":16,"noelmathewisaac":2}},{"path":"src/main/java/seedu/taskify/logic/commands/ExpiredCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hengyongming"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"hengyongming"},"content":"public class ExpiredCommand extends Command {","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"hengyongming"},"content":"    public static final String COMMAND_WORD \u003d \"expired\";","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"hengyongming"},"content":"    public static final String MESSAGE_USAGE \u003d \"Switched to expired task tab\";","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"hengyongming"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"hengyongming"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"hengyongming"},"content":"        return CommandResult.switchToExpired(MESSAGE_USAGE);","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"hengyongming"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"hengyongming":15}},{"path":"src/main/java/seedu/taskify/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.Messages;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":" * Finds and lists all tasks in address book whose name contains any of the argument keywords.","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all tasks whose names contain any of \"","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"                       + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"                       + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"hengyongming"},"content":"                       + \"Example: \" + COMMAND_WORD + \" cs2103T Tutorial\";","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"hengyongming"},"content":"        if (CommandResult.isExpiredTab()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"hengyongming"},"content":"            model.updateExpiredFilterTaskList(predicate);","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"hengyongming"},"content":"            return new CommandResult(","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"hengyongming"},"content":"                    String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getExpiredFilteredTaskList().size()));","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"hengyongming"},"content":"        } else if (CommandResult.isCompletedTab()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"hengyongming"},"content":"            model.updateCompletedFilterTaskList(predicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"hengyongming"},"content":"            return new CommandResult(","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"hengyongming"},"content":"                    String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getCompletedFilteredTaskList().size()));","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"hengyongming"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"            model.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"            return new CommandResult(","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"                    String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()));","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"hengyongming"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"                       || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"                                   \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":12,"khiaxeng":1,"noelmathewisaac":40}},{"path":"src/main/java/seedu/taskify/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":19,"noelmathewisaac":2}},{"path":"src/main/java/seedu/taskify/logic/commands/HomeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hengyongming"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"hengyongming"},"content":"public class HomeCommand extends Command {","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"hengyongming"},"content":"    public static final String COMMAND_WORD \u003d \"home\";","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"hengyongming"},"content":"    public static final String MESSAGE_USAGE \u003d \"Switched to home tab\";","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"hengyongming"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"hengyongming"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"hengyongming"},"content":"        return CommandResult.switchToHome(MESSAGE_USAGE);","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"hengyongming"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"hengyongming":15}},{"path":"src/main/java/seedu/taskify/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"hengyongming"},"content":" * Lists all tasks in the taskify to the user.","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks\";","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"hengyongming"},"content":"        model.updateExpiredFilterTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"hengyongming"},"content":"        model.updateCompletedFilterTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":3,"noelmathewisaac":23}},{"path":"src/main/java/seedu/taskify/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hengyongming"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"hengyongming"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"hengyongming"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"hengyongming"},"content":" * Sort all tasks by deadline starting from the earliest date that is not yet done.","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"hengyongming"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"hengyongming"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"hengyongming"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"hengyongming"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted tasks by deadlines\";","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"hengyongming"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"hengyongming"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"hengyongming"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"hengyongming"},"content":"        model.sortTask();","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"hengyongming"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"hengyongming"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"hengyongming"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"hengyongming":24}},{"path":"src/main/java/seedu/taskify/logic/commands/TagSearchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.predicates.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":" * TagSearchs and lists all tasks in address book whose tag contains any of the argument keywords.","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"public class TagSearchCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"    public static final String COMMAND_WORD \u003d \"tag-search\";","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Searches for tasks based on the tags \"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"                                                       + \"specified (case-insensitive) and displays them as a list \"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"                                                       + \"with index numbers.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"                                                       + \"Parameters: TAG [MORE_TAGS]...\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"                                                       + \"Example: \" + COMMAND_WORD + \"lab tutorial\";","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    private final TagContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"    public TagSearchCommand(TagContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"hengyongming"},"content":"        if (CommandResult.isExpiredTab()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"hengyongming"},"content":"            model.updateExpiredFilterTaskList(predicate);","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"hengyongming"},"content":"            return new CommandResult(","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"hengyongming"},"content":"                    String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getExpiredFilteredTaskList().size()));","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"hengyongming"},"content":"        } else if (CommandResult.isHomeTab()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"            model.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"            return new CommandResult(","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"                    String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()));","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"hengyongming"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"hengyongming"},"content":"            model.updateCompletedFilterTaskList(predicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"hengyongming"},"content":"            return new CommandResult(","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"hengyongming"},"content":"                    String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getCompletedFilteredTaskList().size()));","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"                       || (other instanceof TagSearchCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"                                   \u0026\u0026 predicate.equals(((TagSearchCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"hengyongming":11,"khiaxeng":1,"noelmathewisaac":42}},{"path":"src/main/java/seedu/taskify/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.commons.core.Messages;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.predicates.TaskHasSameDatePredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":" * Finds and lists all tasks in Taskify with the same specified LocalDateTime.","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all tasks with the same date as the \"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"            + \"specified date and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"            + \"Parameters: DATE[yyyy-mm-dd][today][tomorrow]\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2021-05-21\" + \" | \"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"            + COMMAND_WORD + \" today\" + \" | \" + COMMAND_WORD + \" tomorrow\";","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"    private final TaskHasSameDatePredicate predicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"    public ViewCommand(TaskHasSameDatePredicate predicate) {","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()));","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"                \u0026\u0026 predicate.equals(((ViewCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"khiaxeng":42}},{"path":"src/main/java/seedu/taskify/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands.exceptions;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":16,"noelmathewisaac":1}},{"path":"src/main/java/seedu/taskify/logic/commands/util/DeleteMultipleCommandUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CSmortal"},"content":"package seedu.taskify.logic.commands.util;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.commons.util.StringUtil.reduceWhitespaces;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.model.task.Status.INVALID_STATUS_STRING;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.model.task.Status.isValidStatus;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"CSmortal"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"CSmortal"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"CSmortal"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.commons.util.StringUtil;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"CSmortal"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"CSmortal"},"content":" * Utility class for deleting multiple tasks at once","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"CSmortal"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"CSmortal"},"content":"public class DeleteMultipleCommandUtil {","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"CSmortal"},"content":"    public static final String MESSAGE_PARSE_MULTIPLE_INDEX_ON_SINGLE_INDEX \u003d \"The string passed to ParserUtil\"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"CSmortal"},"content":"            + \".parseMultipleIndex() contains only one argument\";","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"CSmortal"},"content":"    public static final String MESSAGE_AT_LEAST_ONE_INVALID_INDEX \u003d \"At least one Index is not a non-zero unsigned \"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"CSmortal"},"content":"            + \"integer.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"CSmortal"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"CSmortal"},"content":"    public static final String MESSAGE_INVALID_INDEX_RANGE \u003d \"Invalid index range given. Second index should be \"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"CSmortal"},"content":"            + \"bigger than the first index.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"CSmortal"},"content":"    public static final String MESSAGE_DELETE_BY_STATUS_USAGE \u003d DeleteCommand.COMMAND_WORD + \": Delete all tasks of a\"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"CSmortal"},"content":"            + \" specified Status.\\n\" + \"Parameters: STATUS_STRING (in lower caps and with correct spacing)\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"CSmortal"},"content":"            + \"Note: \\\"-all\\\" must be added after the specified status\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"CSmortal"},"content":"            + \"Example: \" + DeleteCommand.COMMAND_WORD + \" completed -all\";","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"CSmortal"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"CSmortal"},"content":"     * Checks if {@code argumentInput} contains more than one valid index and if all are valid indexes.","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"CSmortal"},"content":"     * @param argumentInput user\u0027s input excluding the command word","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"CSmortal"},"content":"     * @return false if {@code argumentInput} contains only one index, that is valid. Note that the range \"x-x\" where","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"CSmortal"},"content":"     * x is a non zero unsigned integer will throw a ParseException instead","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"CSmortal"},"content":"     * @throws ParseException if {@code argumentInput} cannot be parsed properly later on (See {@code","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"CSmortal"},"content":"     * extractStringArgumentsIntoIndexes(String input)}).","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"CSmortal"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"CSmortal"},"content":"    public static boolean hasMultipleValidIndex(String argumentInput) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"CSmortal"},"content":"        String[] arguments \u003d extractStringArgumentsIntoIndexes(argumentInput);","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"CSmortal"},"content":"        boolean hasOnlyOneArgument \u003d arguments.length \u003d\u003d 1;","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"CSmortal"},"content":"        return !hasOnlyOneArgument;","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"CSmortal"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"CSmortal"},"content":"     * Checks if user is trying to delete all tasks of a specific {@code Status}, from the user\u0027s input","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"CSmortal"},"content":"     * @param argumentInput user\u0027s input other than the command word","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"CSmortal"},"content":"     * @throws ParseException if the user did not enter the status correctly.","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"CSmortal"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"CSmortal"},"content":"    public static boolean isDeletingTasksByStatus(String argumentInput) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"CSmortal"},"content":"        boolean isTrying \u003d argumentInput.contains(\" -all\");","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"CSmortal"},"content":"        if (argumentInput.contains(\" all\")) {","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"CSmortal"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_DELETE_BY_STATUS_USAGE));","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"CSmortal"},"content":"        if (!isTrying) {","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"CSmortal"},"content":"            return false;","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"CSmortal"},"content":"        argumentInput \u003d reduceWhitespaces(argumentInput);","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"CSmortal"},"content":"        int endIndex \u003d argumentInput.indexOf(\" -all\");","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"CSmortal"},"content":"        String statusArg \u003d argumentInput.substring(0, endIndex);","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"CSmortal"},"content":"        if (!isValidStatus(statusArg)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"CSmortal"},"content":"            throw new ParseException(INVALID_STATUS_STRING);","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"CSmortal"},"content":"        return true;","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"CSmortal"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"CSmortal"},"content":"     * Extracts a String array of indexes if the input follows the format for multiple indexes correctly.","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"CSmortal"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"CSmortal"},"content":"     * @param input String to extract from","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"CSmortal"},"content":"     * @return a String array containing the valid or invalid indexes","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"CSmortal"},"content":"     * @throws ParseException if an invalid index range was given i.e \"2-2\" or \"100-99\", or if an index has leading","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"CSmortal"},"content":"     * zeroes i.e \"0-1\" or \"01-09\", or if the arguments are incomprehensible.","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"CSmortal"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"CSmortal"},"content":"    public static String[] extractStringArgumentsIntoIndexes(String input) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"CSmortal"},"content":"        input \u003d reduceWhitespaces(input);","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"CSmortal"},"content":"        String regexForRangedArgs \u003d \"(?\u003cfirstNum\u003e[0-9]+)-(?\u003csecondNum\u003e[0-9]+)(?\u003cremaining\u003e.*)\";","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"CSmortal"},"content":"        String regexForRemaining \u003d \"\\\\D+\"; // if this is matched, then we should reject the input","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"CSmortal"},"content":"        Pattern patternRangedArgs \u003d Pattern.compile(regexForRangedArgs);","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"CSmortal"},"content":"        Pattern patternRemaining \u003d Pattern.compile(regexForRemaining);","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"CSmortal"},"content":"        Matcher matcherRangedArgs \u003d patternRangedArgs.matcher(input);","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"CSmortal"},"content":"        boolean hasFoundIndexRange \u003d matcherRangedArgs.find();","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"CSmortal"},"content":"        boolean hasNoRemainingInvalidChar;","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"CSmortal"},"content":"        if (!hasFoundIndexRange) {","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"CSmortal"},"content":"            String[] arguments \u003d input.split(\" \");","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"CSmortal"},"content":"            for (String argument : arguments) {","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"CSmortal"},"content":"                if (!StringUtil.isNonZeroUnsignedInteger(argument)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"CSmortal"},"content":"                    throw new ParseException(MESSAGE_AT_LEAST_ONE_INVALID_INDEX);","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"CSmortal"},"content":"                }","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"CSmortal"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"CSmortal"},"content":"            return arguments;","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"CSmortal"},"content":"        Matcher matcherRemaining \u003d patternRemaining.matcher(matcherRangedArgs.group(\"remaining\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"CSmortal"},"content":"        hasNoRemainingInvalidChar \u003d !matcherRemaining.find();","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"CSmortal"},"content":"        if (!hasNoRemainingInvalidChar) {","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"CSmortal"},"content":"            throw new ParseException(MESSAGE_AT_LEAST_ONE_INVALID_INDEX);","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"CSmortal"},"content":"        String first \u003d matcherRangedArgs.group(\"firstNum\");","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"CSmortal"},"content":"        String second \u003d matcherRangedArgs.group(\"secondNum\");","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"CSmortal"},"content":"        String leadingZeroesRegex \u003d \"0+[1-9]*\";","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"CSmortal"},"content":"        boolean isFirstIndexInvalid \u003d first.matches(leadingZeroesRegex);","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"CSmortal"},"content":"        boolean isSecondIndexInvalid \u003d second.matches(leadingZeroesRegex);","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"CSmortal"},"content":"        if (isFirstIndexInvalid || isSecondIndexInvalid) {","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"CSmortal"},"content":"            /* MESSAGE_INVALID_INDEX_RANGE is not as appropriate as an error message, since it is for indicating","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"CSmortal"},"content":"                when the second number is bigger than the first number. In situations such as \"0100-99\", while it","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"CSmortal"},"content":"                the first error caught should be that 0100 is an invalid index, rather than 100 \u003e 99. */","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"CSmortal"},"content":"            throw new ParseException(MESSAGE_AT_LEAST_ONE_INVALID_INDEX);","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"CSmortal"},"content":"        int firstNum \u003d Integer.parseInt(first);","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"CSmortal"},"content":"        int secondNum \u003d Integer.parseInt(second);","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"CSmortal"},"content":"        boolean isRangeInvalid \u003d firstNum \u003e\u003d secondNum;","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"CSmortal"},"content":"        if (isRangeInvalid) {","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"CSmortal"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX_RANGE);","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"CSmortal"},"content":"        return IntStream.rangeClosed(firstNum, secondNum).mapToObj(String::valueOf).toArray(String[]::new);","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"CSmortal"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"CSmortal":136}},{"path":"src/main/java/seedu/taskify/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.commons.core.LogsCenter;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.AddCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.tag.Tag;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.task.Date;","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.model.task.Description;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Name;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.Status;","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.StatusType;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(AddCommandParser.class);","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"     *","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"hengyongming"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DESCRIPTION, PREFIX_DATE, PREFIX_TAG);","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DESCRIPTION)","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                    || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"            logger.log(Level.WARNING, \"Parse error\");","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"hengyongming"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"khiaxeng"},"content":"        Status status \u003d new Status(StatusType.NOT_DONE); // New task default StatusType is NOT_DONE.","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"khiaxeng"},"content":"        Date date \u003d generateDate(argMultimap);","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"hengyongming"},"content":"        Task task \u003d new Task(name, description, status, date, tagList);","lastModifiedDate":"2021-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"        return new AddCommand(task);","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"khiaxeng"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"khiaxeng"},"content":"     * Returns a {@code Date} depending on whether a date is specified in the arguments. If a date is","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"khiaxeng"},"content":"     * specified in the arguments, return the corresponding Date. Else, returns a Date with today as the","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"khiaxeng"},"content":"     * date with time of 23:59.","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"khiaxeng"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"khiaxeng"},"content":"    private static Date generateDate(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"khiaxeng"},"content":"        Date date;","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"khiaxeng"},"content":"        if (arePrefixesPresent(argumentMultimap, PREFIX_DATE)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"khiaxeng"},"content":"            date \u003d ParserUtil.parseDate(argumentMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"khiaxeng"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"khiaxeng"},"content":"            date \u003d Date.endOfToday();","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"khiaxeng"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"khiaxeng"},"content":"        return date;","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"hengyongming":5,"khiaxeng":26,"-":38,"CSmortal":2,"noelmathewisaac":11}},{"path":"src/main/java/seedu/taskify/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"-":59,"noelmathewisaac":1}},{"path":"src/main/java/seedu/taskify/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":147,"noelmathewisaac":1}},{"path":"src/main/java/seedu/taskify/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"CSmortal"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"desc/\");","lastModifiedDate":"2021-03-04"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"CSmortal"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"date/\");","lastModifiedDate":"2021-03-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"khiaxeng":1,"-":11,"CSmortal":2,"noelmathewisaac":1}},{"path":"src/main/java/seedu/taskify/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.index.Index;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":23,"noelmathewisaac":5}},{"path":"src/main/java/seedu/taskify/logic/parser/DeleteMultipleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CSmortal"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.util.DeleteMultipleCommandUtil.hasMultipleValidIndex;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.util.DeleteMultipleCommandUtil.isDeletingTasksByStatus;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.parser.ParserUtil.parseInputToStatus;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.parser.ParserUtil.parseMultipleIndex;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"CSmortal"},"content":"import java.util.List;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.commons.core.index.Index;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.logic.commands.DeleteMultipleCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.task.Status;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"CSmortal"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"CSmortal"},"content":" * Parses input arguments and creates a new DeleteMultipleCommand object","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"CSmortal"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"CSmortal"},"content":"public class DeleteMultipleCommandParser implements Parser\u003cDeleteMultipleCommand\u003e {","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"CSmortal"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"CSmortal"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteMultipleCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"CSmortal"},"content":"     * and returns a DeleteMultipleCommand object for execution.","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"CSmortal"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"CSmortal"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"CSmortal"},"content":"    @Override","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"CSmortal"},"content":"    public DeleteMultipleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"CSmortal"},"content":"        if (isDeletingTasksByStatus(args)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"CSmortal"},"content":"            Status status \u003d parseInputToStatus(args);","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"CSmortal"},"content":"            return new DeleteMultipleCommand(status);","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"CSmortal"},"content":"        assert hasMultipleValidIndex(args);","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"CSmortal"},"content":"        List\u003cIndex\u003e indexes \u003d parseMultipleIndex(args);","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"CSmortal"},"content":"        return new DeleteMultipleCommand(indexes);","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"CSmortal"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"CSmortal":35}},{"path":"src/main/java/seedu/taskify/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.index.Index;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.EditCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.tag.Tag;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"hengyongming"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DESCRIPTION,","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"                        PREFIX_STATUS, PREFIX_DATE, PREFIX_TAG);","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"        EditTaskDescriptor editTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"            editTaskDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"hengyongming"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"hengyongming"},"content":"            editTaskDescriptor.setDescription(ParserUtil.parseDescription","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"hengyongming"},"content":"                    (argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"khiaxeng"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"khiaxeng"},"content":"            editTaskDescriptor.setStatus(ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get()));","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"CSmortal"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"CSmortal"},"content":"            editTaskDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editTaskDescriptor::setTags);","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"        return new EditCommand(index, editTaskDescriptor);","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"hengyongming":5,"khiaxeng":4,"-":58,"CSmortal":3,"noelmathewisaac":14}},{"path":"src/main/java/seedu/taskify/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.FindCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"     *","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"khiaxeng":1,"-":28,"noelmathewisaac":5}},{"path":"src/main/java/seedu/taskify/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.Command;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":13,"noelmathewisaac":3}},{"path":"src/main/java/seedu/taskify/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.commons.util.StringUtil.reduceWhitespaces;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.util.DeleteMultipleCommandUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.util.DeleteMultipleCommandUtil.MESSAGE_PARSE_MULTIPLE_INDEX_ON_SINGLE_INDEX;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.util.DeleteMultipleCommandUtil.extractStringArgumentsIntoIndexes;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.util.DeleteMultipleCommandUtil.hasMultipleValidIndex;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.util.DeleteMultipleCommandUtil.isDeletingTasksByStatus;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":11,"author":{"gitId":"CSmortal"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"CSmortal"},"content":"import java.util.List;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.index.Index;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.util.StringUtil;","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.tag.Tag;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.task.Date;","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.model.task.Description;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Name;","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.Status;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.StatusType;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"CSmortal"},"content":"    public static final String ASSERTION_ERROR_PARSE_MULTIPLE_INDEX_CALLED \u003d \"ParserUtil#parseMultipleIndex should \"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"CSmortal"},"content":"            + \"not be called on this string\";","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"     *","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"CSmortal"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":51,"author":{"gitId":"CSmortal"},"content":"     * Parses {@code oneBasedIndexes} into a list of {@code Index} and returns it.","lastModifiedDate":"2021-03-20"},{"lineNumber":52,"author":{"gitId":"CSmortal"},"content":"     * @param oneBasedIndexes user\u0027s input excluding the command word","lastModifiedDate":"2021-03-20"},{"lineNumber":53,"author":{"gitId":"CSmortal"},"content":"     * @return a list of {@code Index} representing all valid indexes in {@code oneBasedIndexes}","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"CSmortal"},"content":"     * @throws ParseException if {@code oneBasedIndexes} cannot be parsed properly","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"CSmortal"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":56,"author":{"gitId":"CSmortal"},"content":"    public static List\u003cIndex\u003e parseMultipleIndex(String oneBasedIndexes) throws ParseException {","lastModifiedDate":"2021-03-20"},{"lineNumber":57,"author":{"gitId":"CSmortal"},"content":"        assert hasMultipleValidIndex(oneBasedIndexes) : \"ParserUtil#parseMultipleIndex should not be called on this \"","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"CSmortal"},"content":"                + \"string\";","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"CSmortal"},"content":"        String[] arguments \u003d extractStringArgumentsIntoIndexes(oneBasedIndexes);","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"CSmortal"},"content":"        boolean hasOnlyOneArgument \u003d arguments.length \u003d\u003d 1;","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":62,"author":{"gitId":"CSmortal"},"content":"        if (hasOnlyOneArgument) {","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"CSmortal"},"content":"            // throw new AssertionError instead?","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"CSmortal"},"content":"            throw new ParseException(MESSAGE_PARSE_MULTIPLE_INDEX_ON_SINGLE_INDEX);","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":67,"author":{"gitId":"CSmortal"},"content":"        List\u003cIndex\u003e parsedIndexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"CSmortal"},"content":"        for (String argument : arguments) {","lastModifiedDate":"2021-03-20"},{"lineNumber":69,"author":{"gitId":"CSmortal"},"content":"            // throw new AssertionError instead?","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"CSmortal"},"content":"            parsedIndexes.add(Index.fromOneBased(Integer.parseInt(argument)));","lastModifiedDate":"2021-03-20"},{"lineNumber":71,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":72,"author":{"gitId":"CSmortal"},"content":"        return parsedIndexes;","lastModifiedDate":"2021-03-20"},{"lineNumber":73,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":74,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":75,"author":{"gitId":"CSmortal"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"CSmortal"},"content":"     * Returns a {@code Status} from the user\u0027s input, provided the user intends to delete all tasks of a specific","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"CSmortal"},"content":"     * {@code Status}","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"CSmortal"},"content":"     * @param input user\u0027s input excluding the command word","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"CSmortal"},"content":"     * @return a {@code Status} parsed from the input","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"CSmortal"},"content":"     * @throws ParseException if the user intends to delete all tasks of a specific status but did not follow the","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"CSmortal"},"content":"     * format.","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"CSmortal"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"CSmortal"},"content":"    public static Status parseInputToStatus(String input) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"CSmortal"},"content":"        assert isDeletingTasksByStatus(input);","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"CSmortal"},"content":"        input \u003d reduceWhitespaces(input);","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"CSmortal"},"content":"        int endIndex \u003d input.indexOf(\" -all\");","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"CSmortal"},"content":"        String statusArg \u003d input.substring(0, endIndex);","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"CSmortal"},"content":"        return parseStatus(statusArg);","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"hengyongming"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2021-03-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"hengyongming"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2021-03-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"hengyongming"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2021-03-01"},{"lineNumber":114,"author":{"gitId":"hengyongming"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-01"},{"lineNumber":115,"author":{"gitId":"hengyongming"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2021-03-01"},{"lineNumber":116,"author":{"gitId":"hengyongming"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":117,"author":{"gitId":"hengyongming"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"hengyongming"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2021-03-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"khiaxeng"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"khiaxeng"},"content":"     * Parses a {@code String status} into a {@code Status}.","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"khiaxeng"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"khiaxeng"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"khiaxeng"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"khiaxeng"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"khiaxeng"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"khiaxeng"},"content":"        requireNonNull(status);","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"khiaxeng"},"content":"        String trimmedStatusString \u003d status.trim().toLowerCase();","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"khiaxeng"},"content":"        if (!Status.isValidStatus(trimmedStatusString)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"khiaxeng"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"khiaxeng"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"khiaxeng"},"content":"        StatusType statusType \u003d Status.getStatusType(trimmedStatusString);","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"khiaxeng"},"content":"        return new Status(statusType);","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"CSmortal"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":140,"author":{"gitId":"CSmortal"},"content":"     * Parses a {@code String date} into an {@code Date}.","lastModifiedDate":"2021-03-03"},{"lineNumber":141,"author":{"gitId":"CSmortal"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-03"},{"lineNumber":142,"author":{"gitId":"CSmortal"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":143,"author":{"gitId":"CSmortal"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2021-03-03"},{"lineNumber":144,"author":{"gitId":"CSmortal"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":145,"author":{"gitId":"CSmortal"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2021-03-03"},{"lineNumber":146,"author":{"gitId":"CSmortal"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-03"},{"lineNumber":147,"author":{"gitId":"CSmortal"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-03-03"},{"lineNumber":148,"author":{"gitId":"CSmortal"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":149,"author":{"gitId":"CSmortal"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":150,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":151,"author":{"gitId":"CSmortal"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2021-03-03"},{"lineNumber":152,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":153,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"hengyongming":9,"khiaxeng":18,"-":77,"CSmortal":69,"noelmathewisaac":7}},{"path":"src/main/java/seedu/taskify/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":38,"noelmathewisaac":1}},{"path":"src/main/java/seedu/taskify/logic/parser/TagSearchCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.TagSearchCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.predicates.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":" * Parses input arguments and creates a new TagSearchCommand object","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"public class TagSearchCommandParser implements Parser\u003cTagSearchCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"     * Parses the given {@code String} of arguments in the context of the TagSearchCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"     * and returns a TagSearchCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"    public TagSearchCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagSearchCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"        String[] tagKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"        return new TagSearchCommand(new TagContainsKeywordsPredicate(Arrays.asList(tagKeywords)));","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"khiaxeng":1,"noelmathewisaac":33}},{"path":"src/main/java/seedu/taskify/logic/parser/TaskifyParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.util.DeleteMultipleCommandUtil.hasMultipleValidIndex;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.util.DeleteMultipleCommandUtil.isDeletingTasksByStatus;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.logic.commands.AddCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.logic.commands.Command;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.logic.commands.CompletedCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.logic.commands.EditCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.logic.commands.ExpiredCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.logic.commands.FindCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.logic.commands.HomeCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.logic.commands.ListCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.logic.commands.SortCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.logic.commands.TagSearchCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.logic.commands.ViewCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"public class TaskifyParser {","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"CSmortal"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"hengyongming"},"content":"        assert userInput !\u003d null : \"userInput should not be empty\";","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"CSmortal"},"content":"            if (isDeletingTasksByStatus(arguments) || hasMultipleValidIndex(arguments)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"CSmortal"},"content":"                return new DeleteMultipleCommandParser().parse(arguments);","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"CSmortal"},"content":"            } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"CSmortal"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"noelmathewisaac"},"content":"        case TagSearchCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"noelmathewisaac"},"content":"            return new TagSearchCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":86,"author":{"gitId":"hengyongming"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"hengyongming"},"content":"            return new SortCommand();","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"hengyongming"},"content":"        case HomeCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-21"},{"lineNumber":90,"author":{"gitId":"hengyongming"},"content":"            return new HomeCommand();","lastModifiedDate":"2021-03-21"},{"lineNumber":91,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":92,"author":{"gitId":"hengyongming"},"content":"        case ExpiredCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"hengyongming"},"content":"            return new ExpiredCommand();","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"hengyongming"},"content":"        case CompletedCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"hengyongming"},"content":"            return new CompletedCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"khiaxeng"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"khiaxeng"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hengyongming":28,"khiaxeng":4,"-":60,"CSmortal":7,"noelmathewisaac":8}},{"path":"src/main/java/seedu/taskify/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.logic.commands.ViewCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.predicates.TaskHasSameDatePredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    private static final String TODAY \u003d \"today\";","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    private static final String TOMORROW \u003d \"tomorrow\";","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"        assert args !\u003d null : \"String should not be null\";","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"        if (trimmedArgs.equalsIgnoreCase(TODAY)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"            LocalDate inputDate \u003d LocalDate.now();","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"            return new ViewCommand(new TaskHasSameDatePredicate(inputDate));","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"        } else if (trimmedArgs.equalsIgnoreCase(TOMORROW)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"            LocalDate inputDate \u003d LocalDate.now().plus(1, ChronoUnit.DAYS);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"            return new ViewCommand(new TaskHasSameDatePredicate(inputDate));","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"            try {","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"                LocalDate inputDate \u003d LocalDate.parse(trimmedArgs, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"                return new ViewCommand(new TaskHasSameDatePredicate(inputDate));","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"khiaxeng"},"content":"                throw new ParseException(","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"khiaxeng"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"khiaxeng"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"khiaxeng"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"khiaxeng"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"khiaxeng":50}},{"path":"src/main/java/seedu/taskify/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.parser.exceptions;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":" * Represents a parse error during parsing.","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":14,"CSmortal":1,"noelmathewisaac":2}},{"path":"src/main/java/seedu/taskify/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.model;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.GuiSettings;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"    void setAddressBookFilePath(Path taskifyFilePath);","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"     * Replaces address book data with the data in {@code taskify}.","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"    void setAddressBook(ReadOnlyTaskify taskify);","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns the TaskifyParser","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"    ReadOnlyTaskify getAddressBook();","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":"     * Deletes the given task.","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"     * The task must exist in the address book.","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":"     * Adds the given task.","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"hengyongming"},"content":"     * {@code task} must not already exist in Taskify.","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"noelmathewisaac"},"content":"    void addTask(Task task);","lastModifiedDate":"2021-03-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"hengyongming"},"content":"     * Sort tasks in Taskify by deadline.","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"hengyongming"},"content":"    void sortTask();","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"noelmathewisaac"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the address book.","lastModifiedDate":"2021-03-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"noelmathewisaac"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":89,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns an unmodifiable view of the filtered task list","lastModifiedDate":"2021-03-01"},{"lineNumber":90,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":91,"author":{"gitId":"noelmathewisaac"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2021-03-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"hengyongming"},"content":"    ObservableList\u003cTask\u003e getExpiredFilteredTaskList();","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"hengyongming"},"content":"    ObservableList\u003cTask\u003e getCompletedFilteredTaskList();","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"noelmathewisaac"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-01"},{"lineNumber":99,"author":{"gitId":"noelmathewisaac"},"content":"     *","lastModifiedDate":"2021-03-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"noelmathewisaac"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2021-03-01"},{"lineNumber":103,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":104,"author":{"gitId":"hengyongming"},"content":"    void updateExpiredFilterTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"hengyongming"},"content":"    void updateCompletedFilterTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"hengyongming":14,"-":62,"noelmathewisaac":31}},{"path":"src/main/java/seedu/taskify/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.model;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.GuiSettings;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.LogsCenter;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"    private final Taskify taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"hengyongming"},"content":"    private final FilteredList\u003cTask\u003e expiredFilteredTasks;","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"hengyongming"},"content":"    private final FilteredList\u003cTask\u003e completedFilteredTasks;","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"     * Initializes a ModelManager with the given taskify and userPrefs.","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"    public ModelManager(ReadOnlyTaskify taskify, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"        requireAllNonNull(taskify, userPrefs);","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"        logger.fine(\"Initializing with address book: \" + taskify + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"        this.taskify \u003d new Taskify(taskify);","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.taskify.getTaskList());","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"hengyongming"},"content":"        expiredFilteredTasks \u003d new FilteredList\u003c\u003e(this.taskify.getExpiredTaskList());","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"hengyongming"},"content":"        completedFilteredTasks \u003d new FilteredList\u003c\u003e(this.taskify.getCompletedTaskList());","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"        this(new Taskify(), new UserPrefs());","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"noelmathewisaac"},"content":"    public void setAddressBookFilePath(Path taskifyFilePath) {","lastModifiedDate":"2021-03-01"},{"lineNumber":79,"author":{"gitId":"noelmathewisaac"},"content":"        requireNonNull(taskifyFilePath);","lastModifiedDate":"2021-03-01"},{"lineNumber":80,"author":{"gitId":"noelmathewisaac"},"content":"        userPrefs.setAddressBookFilePath(taskifyFilePath);","lastModifiedDate":"2021-03-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"noelmathewisaac"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskifyParser \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"noelmathewisaac"},"content":"    public void setAddressBook(ReadOnlyTaskify taskify) {","lastModifiedDate":"2021-03-01"},{"lineNumber":87,"author":{"gitId":"noelmathewisaac"},"content":"        this.taskify.resetData(taskify);","lastModifiedDate":"2021-03-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"noelmathewisaac"},"content":"    public ReadOnlyTaskify getAddressBook() {","lastModifiedDate":"2021-03-01"},{"lineNumber":92,"author":{"gitId":"noelmathewisaac"},"content":"        return taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"noelmathewisaac"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2021-03-01"},{"lineNumber":97,"author":{"gitId":"noelmathewisaac"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-03-01"},{"lineNumber":98,"author":{"gitId":"noelmathewisaac"},"content":"        return taskify.hasTask(task);","lastModifiedDate":"2021-03-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"noelmathewisaac"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2021-03-01"},{"lineNumber":103,"author":{"gitId":"noelmathewisaac"},"content":"        taskify.removeTask(target);","lastModifiedDate":"2021-03-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"hengyongming"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"hengyongming"},"content":"    public void sortTask() {","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"hengyongming"},"content":"        taskify.sortTask();","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"hengyongming"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"noelmathewisaac"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-03-01"},{"lineNumber":114,"author":{"gitId":"noelmathewisaac"},"content":"        taskify.addTask(task);","lastModifiedDate":"2021-03-01"},{"lineNumber":115,"author":{"gitId":"noelmathewisaac"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"noelmathewisaac"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-03-01"},{"lineNumber":120,"author":{"gitId":"noelmathewisaac"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"noelmathewisaac"},"content":"        taskify.setTask(target, editedTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"noelmathewisaac"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":128,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2021-03-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"noelmathewisaac"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-03-01"},{"lineNumber":133,"author":{"gitId":"noelmathewisaac"},"content":"        return filteredTasks;","lastModifiedDate":"2021-03-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"hengyongming"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":137,"author":{"gitId":"hengyongming"},"content":"    public ObservableList\u003cTask\u003e getExpiredFilteredTaskList() {","lastModifiedDate":"2021-03-22"},{"lineNumber":138,"author":{"gitId":"hengyongming"},"content":"        return expiredFilteredTasks;","lastModifiedDate":"2021-03-22"},{"lineNumber":139,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":140,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":141,"author":{"gitId":"hengyongming"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"hengyongming"},"content":"    public ObservableList\u003cTask\u003e getCompletedFilteredTaskList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"hengyongming"},"content":"        return completedFilteredTasks;","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"hengyongming"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":147,"author":{"gitId":"hengyongming"},"content":"    public void updateExpiredFilterTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-03-22"},{"lineNumber":148,"author":{"gitId":"hengyongming"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-22"},{"lineNumber":149,"author":{"gitId":"hengyongming"},"content":"        expiredFilteredTasks.setPredicate(predicate);","lastModifiedDate":"2021-03-22"},{"lineNumber":150,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":151,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":153,"author":{"gitId":"noelmathewisaac"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-03-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":155,"author":{"gitId":"noelmathewisaac"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2021-03-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":158,"author":{"gitId":"hengyongming"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"hengyongming"},"content":"    public void updateCompletedFilterTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"hengyongming"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"hengyongming"},"content":"        completedFilteredTasks.setPredicate(predicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"noelmathewisaac"},"content":"        return taskify.equals(other.taskify)","lastModifiedDate":"2021-03-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                       \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":180,"author":{"gitId":"noelmathewisaac"},"content":"                       \u0026\u0026 filteredTasks.equals(other.filteredTasks);","lastModifiedDate":"2021-03-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hengyongming":32,"-":110,"noelmathewisaac":41}},{"path":"src/main/java/seedu/taskify/model/ReadOnlyTaskify.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.model;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"public interface ReadOnlyTaskify {","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns an unmodifiable view of the tasks list.","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":1,"noelmathewisaac":17}},{"path":"src/main/java/seedu/taskify/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.model;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.GuiSettings;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":14,"noelmathewisaac":2}},{"path":"src/main/java/seedu/taskify/model/Taskify.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.model;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.List;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.UniqueTaskList;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":" * Duplicates are not allowed (by .isSameTask comparison)","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"public class Taskify implements ReadOnlyTaskify {","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"    /*","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"     *","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"     *   among constructors.","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"    public Taskify() {","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"     * Creates an TaskifyParser using the Tasks in the {@code toBeCopied}","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"    public Taskify(ReadOnlyTaskify toBeCopied) {","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"        this();","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"     * Resets the existing data of this {@code TaskifyParser} with {@code newData}.","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"    public void resetData(ReadOnlyTaskify newData) {","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"    //// task-level operations","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"        return tasks.contains(task);","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":70,"author":{"gitId":"hengyongming"},"content":"     * Sort task in Taskify starting from the earliest.","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"hengyongming"},"content":"    public void sortTask() {","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"hengyongming"},"content":"        tasks.sortTask();","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"hengyongming"},"content":"     * Adds a task to the Taskify.","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"hengyongming"},"content":"     * The task must not already exist in Taskify.","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"    public void addTask(Task p) {","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"        tasks.add(p);","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":84,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":85,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":86,"author":{"gitId":"noelmathewisaac"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2021-03-01"},{"lineNumber":87,"author":{"gitId":"noelmathewisaac"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-03-01"},{"lineNumber":88,"author":{"gitId":"noelmathewisaac"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the address book.","lastModifiedDate":"2021-03-01"},{"lineNumber":89,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":90,"author":{"gitId":"noelmathewisaac"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-03-01"},{"lineNumber":91,"author":{"gitId":"noelmathewisaac"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":92,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":93,"author":{"gitId":"noelmathewisaac"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":94,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":95,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":96,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":98,"author":{"gitId":"noelmathewisaac"},"content":"     * Removes {@code key} from this {@code TaskifyParser}.","lastModifiedDate":"2021-03-01"},{"lineNumber":99,"author":{"gitId":"noelmathewisaac"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-03-01"},{"lineNumber":100,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":101,"author":{"gitId":"noelmathewisaac"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2021-03-01"},{"lineNumber":102,"author":{"gitId":"noelmathewisaac"},"content":"        tasks.remove(key);","lastModifiedDate":"2021-03-01"},{"lineNumber":103,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":104,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":105,"author":{"gitId":"noelmathewisaac"},"content":"    //// util methods","lastModifiedDate":"2021-03-01"},{"lineNumber":106,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":107,"author":{"gitId":"noelmathewisaac"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":108,"author":{"gitId":"noelmathewisaac"},"content":"    public String toString() {","lastModifiedDate":"2021-03-01"},{"lineNumber":109,"author":{"gitId":"noelmathewisaac"},"content":"        return tasks.asUnmodifiableObservableList().size() + \" tasks\";","lastModifiedDate":"2021-03-01"},{"lineNumber":110,"author":{"gitId":"noelmathewisaac"},"content":"        // TODO: refine later","lastModifiedDate":"2021-03-01"},{"lineNumber":111,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":112,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":113,"author":{"gitId":"noelmathewisaac"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":114,"author":{"gitId":"noelmathewisaac"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-03-01"},{"lineNumber":115,"author":{"gitId":"noelmathewisaac"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-01"},{"lineNumber":116,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":117,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":118,"author":{"gitId":"hengyongming"},"content":"    public ObservableList\u003cTask\u003e getExpiredTaskList() {","lastModifiedDate":"2021-03-22"},{"lineNumber":119,"author":{"gitId":"hengyongming"},"content":"        return tasks.asUnmodifiableObservableList().filtered(t -\u003e t.isTaskExpired());","lastModifiedDate":"2021-03-22"},{"lineNumber":120,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":121,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":122,"author":{"gitId":"hengyongming"},"content":"    public ObservableList\u003cTask\u003e getCompletedTaskList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"hengyongming"},"content":"        return tasks.asUnmodifiableObservableList().filtered(t -\u003e t.isTaskCompleted());","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"noelmathewisaac"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":127,"author":{"gitId":"noelmathewisaac"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-01"},{"lineNumber":128,"author":{"gitId":"noelmathewisaac"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-01"},{"lineNumber":129,"author":{"gitId":"noelmathewisaac"},"content":"                       || (other instanceof Taskify // instanceof handles nulls","lastModifiedDate":"2021-03-01"},{"lineNumber":130,"author":{"gitId":"noelmathewisaac"},"content":"                                   \u0026\u0026 tasks.equals(((Taskify) other).tasks));","lastModifiedDate":"2021-03-01"},{"lineNumber":131,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":132,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":133,"author":{"gitId":"noelmathewisaac"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":134,"author":{"gitId":"noelmathewisaac"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-01"},{"lineNumber":135,"author":{"gitId":"noelmathewisaac"},"content":"        return tasks.hashCode();","lastModifiedDate":"2021-03-01"},{"lineNumber":136,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":137,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":19,"noelmathewisaac":118}},{"path":"src/main/java/seedu/taskify/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.model;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.GuiSettings;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    private Path taskifyFilePath \u003d Paths.get(\"data\" , \"taskify.json\");","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"        return taskifyFilePath;","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"    public void setAddressBookFilePath(Path taskifyFilePath) {","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"        requireNonNull(taskifyFilePath);","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"        this.taskifyFilePath \u003d taskifyFilePath;","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":"                \u0026\u0026 taskifyFilePath.equals(o.taskifyFilePath);","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":"        return Objects.hash(guiSettings, taskifyFilePath);","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"noelmathewisaac"},"content":"        sb.append(\"\\nLocal data file location : \" + taskifyFilePath);","lastModifiedDate":"2021-03-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":77,"noelmathewisaac":10}},{"path":"src/main/java/seedu/taskify/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.model.tag;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"CSmortal"},"content":" * Represents a Tag in Taskify.","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":51,"CSmortal":1,"noelmathewisaac":2}},{"path":"src/main/java/seedu/taskify/model/task/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CSmortal"},"content":"package seedu.taskify.model.task;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"CSmortal"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"CSmortal"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"CSmortal"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"CSmortal"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"CSmortal"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"CSmortal"},"content":" * Represents a Task\u0027s date (and time) in the address book.","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"CSmortal"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"CSmortal"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"CSmortal"},"content":"public class Date {","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"CSmortal"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date should be of the format \\\"yyyy-mm-dd hh:mm\\\"\";","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"    private static final String END_OF_DAY_TIME \u003d \"23:59\";","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"CSmortal"},"content":"    public final String value;","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"CSmortal"},"content":"    private final LocalDateTime localDateTime;","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"CSmortal"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"CSmortal"},"content":"     * Constructs a {@code Date}","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"CSmortal"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"CSmortal"},"content":"     * @param localDateTime a valid string containing the date and time of the Task","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"CSmortal"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"CSmortal"},"content":"    public Date(String localDateTime) {","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"CSmortal"},"content":"        requireNonNull(localDateTime);","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"CSmortal"},"content":"        checkArgument(isValidDate(localDateTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"CSmortal"},"content":"        this.localDateTime \u003d LocalDateTime.parse(localDateTime, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"CSmortal"},"content":"        this.value \u003d localDateTime;","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"hengyongming"},"content":"    public LocalDateTime getLocateDateTime() {","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"hengyongming"},"content":"        return this.localDateTime;","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"CSmortal"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"CSmortal"},"content":"     * Returns if a given string is a valid date.","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"CSmortal"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"CSmortal"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"CSmortal"},"content":"        if (test \u003d\u003d null || !test.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}\")) {","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"CSmortal"},"content":"            return false;","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"CSmortal"},"content":"        SimpleDateFormat df \u003d new SimpleDateFormat(\"y-M-d H:m\");","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"CSmortal"},"content":"        df.setLenient(false);","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"CSmortal"},"content":"        try {","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"CSmortal"},"content":"            df.parse(test);","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"CSmortal"},"content":"            return true;","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"CSmortal"},"content":"        } catch (ParseException ex) {","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"CSmortal"},"content":"            return false;","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"khiaxeng"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"khiaxeng"},"content":"     * Returns a Date object with today\u0027s date and time of 23:59.","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"khiaxeng"},"content":"     * @return Date object with today\u0027s date and time of 23:59.","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"khiaxeng"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"khiaxeng"},"content":"    public static Date endOfToday() {","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"khiaxeng"},"content":"        String todayDateString \u003d LocalDate.now().toString();","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"khiaxeng"},"content":"        String todayDateTimeString \u003d todayDateString + \" \" + END_OF_DAY_TIME;","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"khiaxeng"},"content":"        return new Date(todayDateTimeString);","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"CSmortal"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"CSmortal"},"content":"    public String toString() {","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"CSmortal"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"y-M-d H:m\");","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"CSmortal"},"content":"        return localDateTime.format(formatter);","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"CSmortal"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"CSmortal"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"CSmortal"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"CSmortal"},"content":"            return true;","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"CSmortal"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"CSmortal"},"content":"            return false;","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"CSmortal"},"content":"        Date date \u003d (Date) o;","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"CSmortal"},"content":"        return localDateTime.equals(date.localDateTime);","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"CSmortal"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"CSmortal"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"CSmortal"},"content":"        return localDateTime.hashCode();","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"hengyongming"},"content":"    public int compareTo(Date date) {","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"hengyongming"},"content":"        return this.localDateTime.compareTo(date.localDateTime);","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"khiaxeng"},"content":"    public LocalDateTime getLocalDateTime() {","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"khiaxeng"},"content":"        return localDateTime;","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"CSmortal"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"hengyongming":8,"khiaxeng":16,"CSmortal":71}},{"path":"src/main/java/seedu/taskify/model/task/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hengyongming"},"content":"package seedu.taskify.model.task;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"hengyongming"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"hengyongming"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"hengyongming"},"content":" * Represents a Task\u0027s description in the address book.","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"hengyongming"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"hengyongming"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"hengyongming"},"content":"public class Description {","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"hengyongming"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"hengyongming"},"content":"            \"Description can take any values, and it should not be blank\";","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"hengyongming"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"hengyongming"},"content":"    public final String value;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"hengyongming"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"hengyongming"},"content":"     *","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"hengyongming"},"content":"     * @param description A valid description number.","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"hengyongming"},"content":"    public Description(String description) {","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"hengyongming"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"hengyongming"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"hengyongming"},"content":"        value \u003d description;","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"hengyongming"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"hengyongming"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"hengyongming"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"hengyongming"},"content":"    public String toString() {","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"hengyongming"},"content":"        return value;","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"hengyongming"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"hengyongming"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"hengyongming"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"hengyongming"},"content":"                       || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"hengyongming"},"content":"                                   \u0026\u0026 value.equals(((Description) other).value)); // state check","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"hengyongming"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"hengyongming"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"hengyongming"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"hengyongming"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":52,"khiaxeng":1}},{"path":"src/main/java/seedu/taskify/model/task/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.model.task;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":" * Represents a Task\u0027s name in the address book.","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                       || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                                   \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":56,"noelmathewisaac":3}},{"path":"src/main/java/seedu/taskify/model/task/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package seedu.taskify.model.task;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":" * Represents a Task\u0027s status in the address book.","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":" * Guarantees: immutable; can only be one of 3 status as defined in StatusType.","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"public class Status {","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Status should be \u0027not done\u0027, \u0027in progress\u0027 or \u0027completed\u0027\";","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"CSmortal"},"content":"    public static final String INVALID_STATUS_STRING \u003d \"Invalid status!\";","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    private static final String NOT_DONE_STRING \u003d \"Not done\";","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    private static final String IN_PROGRESS_STRING \u003d \"In progress\";","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"    private static final String COMPLETED_STRING \u003d \"Completed\";","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"    private static final String NOT_DONE_VALID_INPUT \u003d \"not done\";","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"    private static final String IN_PROGRESS_VALID_INPUT \u003d \"in progress\";","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"    private static final String COMPLETED_VALID_INPUT \u003d \"completed\";","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"    private static final String NULL_STATUS_TYPE \u003d \"Error, status does not have a status type!\";","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"    public final StatusType status;","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"     * Constructs a {@code Status}.","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"     * @param status A valid status.","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"    public Status(StatusType status) {","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"        requireNonNull(status);","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"     * Constructs a {@code Status} with default StatusType.NOT_DONE.","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"    public Status() {","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"        status \u003d StatusType.NOT_DONE;","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"khiaxeng"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"khiaxeng"},"content":"    public String toString() {","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"khiaxeng"},"content":"        switch (this.status) {","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"khiaxeng"},"content":"        case NOT_DONE:","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"khiaxeng"},"content":"            return NOT_DONE_STRING;","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"khiaxeng"},"content":"        case IN_PROGRESS:","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"khiaxeng"},"content":"            return IN_PROGRESS_STRING;","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"khiaxeng"},"content":"        case COMPLETED:","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"khiaxeng"},"content":"            return COMPLETED_STRING;","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"khiaxeng"},"content":"        default:","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"khiaxeng"},"content":"            return NULL_STATUS_TYPE; // Will not happen.","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"khiaxeng"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"khiaxeng"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"khiaxeng"},"content":"     * Returns true if a given String is a valid status.","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"khiaxeng"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"khiaxeng"},"content":"    public static boolean isValidStatus(String statusString) {","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"khiaxeng"},"content":"        return (statusString.equals(NOT_DONE_VALID_INPUT)) || (statusString.equals(IN_PROGRESS_VALID_INPUT))","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"khiaxeng"},"content":"                || (statusString.equals(COMPLETED_VALID_INPUT));","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"khiaxeng"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"khiaxeng"},"content":"     * Parses input String and returns one of the corresponding StatusType.","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"khiaxeng"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"khiaxeng"},"content":"    public static StatusType getStatusType(String statusString) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"CSmortal"},"content":"        statusString \u003d statusString.toLowerCase();","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"khiaxeng"},"content":"        switch (statusString) {","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"khiaxeng"},"content":"        case NOT_DONE_VALID_INPUT:","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"khiaxeng"},"content":"            return StatusType.NOT_DONE;","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"khiaxeng"},"content":"        case IN_PROGRESS_VALID_INPUT:","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"khiaxeng"},"content":"            return StatusType.IN_PROGRESS;","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"khiaxeng"},"content":"        case COMPLETED_VALID_INPUT:","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"khiaxeng"},"content":"            return StatusType.COMPLETED;","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"khiaxeng"},"content":"        default:","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"khiaxeng"},"content":"            throw new ParseException(INVALID_STATUS_STRING);","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"khiaxeng"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"khiaxeng"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"khiaxeng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"khiaxeng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"khiaxeng"},"content":"                       || (other instanceof Status // instanceof handles nulls","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"khiaxeng"},"content":"                                   \u0026\u0026 status.equals(((Status) other).status)); // state check","lastModifiedDate":"2021-03-03"},{"lineNumber":91,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":93,"author":{"gitId":"khiaxeng"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":94,"author":{"gitId":"khiaxeng"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-03"},{"lineNumber":95,"author":{"gitId":"khiaxeng"},"content":"        return status.hashCode();","lastModifiedDate":"2021-03-03"},{"lineNumber":96,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":97,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":98,"author":{"gitId":"khiaxeng"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"khiaxeng":95,"CSmortal":3}},{"path":"src/main/java/seedu/taskify/model/task/StatusType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package seedu.taskify.model.task;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"public enum StatusType {","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"    NOT_DONE,","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"    IN_PROGRESS,","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"    COMPLETED","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"khiaxeng":7}},{"path":"src/main/java/seedu/taskify/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.model.task;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"hengyongming"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.tag.Tag;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":" * Represents a Task in the address book.","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"public class Task {","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"hengyongming"},"content":"    private final Description description;","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"    private final Status status;","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"CSmortal"},"content":"    private final Date date;","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"hengyongming"},"content":"    public Task(Name name, Description description, Status status, Date date, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"hengyongming"},"content":"        requireAllNonNull(name, description, status, date, tags);","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"hengyongming"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"CSmortal"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"hengyongming"},"content":"    public Description getDescription() {","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"hengyongming"},"content":"        return description;","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"khiaxeng"},"content":"    public Status getStatus() {","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"khiaxeng"},"content":"        return status;","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"CSmortal"},"content":"    public Date getDate() {","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"CSmortal"},"content":"        return date;","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"hengyongming"},"content":"     * Check to see if the task has expired","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"hengyongming"},"content":"    public boolean isTaskExpired() {","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"hengyongming"},"content":"        LocalDateTime timeNow \u003d LocalDateTime.now();","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"hengyongming"},"content":"        return this.date.getLocateDateTime().isBefore(timeNow);","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"hengyongming"},"content":"    public boolean isTaskCompleted() {","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"hengyongming"},"content":"        return this.getStatus().toString().equals(\"Completed\");","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns true if both tasks have the same name.","lastModifiedDate":"2021-03-01"},{"lineNumber":79,"author":{"gitId":"noelmathewisaac"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2021-03-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"noelmathewisaac"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2021-03-01"},{"lineNumber":87,"author":{"gitId":"noelmathewisaac"},"content":"                       \u0026\u0026 otherTask.getName().equals(getName());","lastModifiedDate":"2021-03-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns true if both tasks have the same identity and data fields.","lastModifiedDate":"2021-03-01"},{"lineNumber":92,"author":{"gitId":"noelmathewisaac"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2021-03-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"noelmathewisaac"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"noelmathewisaac"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2021-03-01"},{"lineNumber":105,"author":{"gitId":"noelmathewisaac"},"content":"        return otherTask.getName().equals(getName())","lastModifiedDate":"2021-03-01"},{"lineNumber":106,"author":{"gitId":"hengyongming"},"content":"                       \u0026\u0026 otherTask.getDescription().equals(getDescription())","lastModifiedDate":"2021-03-01"},{"lineNumber":107,"author":{"gitId":"khiaxeng"},"content":"                       \u0026\u0026 otherTask.getStatus().equals(getStatus())","lastModifiedDate":"2021-03-03"},{"lineNumber":108,"author":{"gitId":"CSmortal"},"content":"                       \u0026\u0026 otherTask.getDate().equals(getDate())","lastModifiedDate":"2021-03-03"},{"lineNumber":109,"author":{"gitId":"noelmathewisaac"},"content":"                       \u0026\u0026 otherTask.getTags().equals(getTags());","lastModifiedDate":"2021-03-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"hengyongming"},"content":"        return Objects.hash(name, description, status, date, tags);","lastModifiedDate":"2021-03-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"hengyongming"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"hengyongming"},"content":"                .append(getDescription())","lastModifiedDate":"2021-03-01"},{"lineNumber":124,"author":{"gitId":"khiaxeng"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2021-03-03"},{"lineNumber":125,"author":{"gitId":"khiaxeng"},"content":"                .append(getStatus())","lastModifiedDate":"2021-03-03"},{"lineNumber":126,"author":{"gitId":"CSmortal"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2021-03-03"},{"lineNumber":127,"author":{"gitId":"CSmortal"},"content":"                .append(getDate());","lastModifiedDate":"2021-03-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hengyongming":24,"khiaxeng":7,"-":80,"CSmortal":9,"noelmathewisaac":17}},{"path":"src/main/java/seedu/taskify/model/task/UniqueCompletedTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hengyongming"},"content":"package seedu.taskify.model.task;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"hengyongming"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"hengyongming"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"hengyongming"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"hengyongming"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"hengyongming"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"hengyongming"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"hengyongming"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"hengyongming"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"hengyongming"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"hengyongming"},"content":" * tasks uses Task#isSameTask(Task) for equality so as to ensure that the task being added or updated is","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"hengyongming"},"content":" * unique in terms of identity in the UniqueTaskList. However, the removal of a task uses Task#equals(Object) so","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"hengyongming"},"content":" * as to ensure that the task with exactly the same fields will be removed.","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"hengyongming"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"hengyongming"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"hengyongming"},"content":" *","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"hengyongming"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"hengyongming"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"hengyongming"},"content":"public class UniqueCompletedTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"hengyongming"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"hengyongming"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"hengyongming"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"hengyongming"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"hengyongming"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"hengyongming"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"hengyongming"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"hengyongming"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"hengyongming"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"hengyongming"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"hengyongming"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"hengyongming"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"hengyongming"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"hengyongming"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"hengyongming"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"hengyongming"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"hengyongming"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"hengyongming"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"hengyongming"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"hengyongming"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"hengyongming"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"hengyongming"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"hengyongming"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"hengyongming"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"hengyongming"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"hengyongming"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"hengyongming"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"hengyongming"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"hengyongming"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"hengyongming"},"content":"     * The task must exist in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"hengyongming"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"hengyongming"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"hengyongming"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"hengyongming"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"hengyongming"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"hengyongming"},"content":"    public void sortTask() {","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"hengyongming"},"content":"        Collections.sort(internalList, (t1, t2) -\u003e t1.getDate().compareTo(t2.getDate()));","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"hengyongming"},"content":"    public void setTasks(UniqueCompletedTaskList replacement) {","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"hengyongming"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"hengyongming"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"hengyongming"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"hengyongming"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"hengyongming"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"hengyongming"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"hengyongming"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"hengyongming"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"hengyongming"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"hengyongming"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"hengyongming"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"hengyongming"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"hengyongming"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"hengyongming"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"hengyongming"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"hengyongming"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"hengyongming"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"hengyongming"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"hengyongming"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"hengyongming"},"content":"                || (other instanceof UniqueCompletedTaskList // instanceof handles nulls","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"hengyongming"},"content":"                \u0026\u0026 internalList.equals(((UniqueCompletedTaskList ) other).internalList));","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"hengyongming"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"hengyongming"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"hengyongming"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"hengyongming"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"hengyongming"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"hengyongming"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"hengyongming"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"hengyongming"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"hengyongming"},"content":"                    return false;","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"hengyongming"},"content":"                }","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"hengyongming"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"hengyongming"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"hengyongming"},"content":"        return true;","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"hengyongming"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"hengyongming":143}},{"path":"src/main/java/seedu/taskify/model/task/UniqueExpiredTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hengyongming"},"content":"package seedu.taskify.model.task;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"hengyongming"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"hengyongming"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"hengyongming"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"hengyongming"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"hengyongming"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"hengyongming"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"hengyongming"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"hengyongming"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"hengyongming"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"hengyongming"},"content":" * tasks uses Task#isSameTask(Task) for equality so as to ensure that the task being added or updated is","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"hengyongming"},"content":" * unique in terms of identity in the UniqueTaskList. However, the removal of a task uses Task#equals(Object) so","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"hengyongming"},"content":" * as to ensure that the task with exactly the same fields will be removed.","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"hengyongming"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"hengyongming"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"hengyongming"},"content":" *","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"hengyongming"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"hengyongming"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"hengyongming"},"content":"public class UniqueExpiredTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"hengyongming"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"hengyongming"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"hengyongming"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"hengyongming"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"hengyongming"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"hengyongming"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"hengyongming"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"hengyongming"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"hengyongming"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"hengyongming"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"hengyongming"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"hengyongming"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"hengyongming"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"hengyongming"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"hengyongming"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"hengyongming"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"hengyongming"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"hengyongming"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"hengyongming"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"hengyongming"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"hengyongming"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"hengyongming"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"hengyongming"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"hengyongming"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"hengyongming"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"hengyongming"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"hengyongming"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"hengyongming"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"hengyongming"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"hengyongming"},"content":"     * The task must exist in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"hengyongming"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"hengyongming"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"hengyongming"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"hengyongming"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"hengyongming"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"hengyongming"},"content":"    public void sortTask() {","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"hengyongming"},"content":"        Collections.sort(internalList, (t1, t2) -\u003e t1.getDate().compareTo(t2.getDate()));","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"hengyongming"},"content":"    public void setTasks(UniqueExpiredTaskList replacement) {","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"hengyongming"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"hengyongming"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"hengyongming"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"hengyongming"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"hengyongming"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"hengyongming"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"hengyongming"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"hengyongming"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"hengyongming"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"hengyongming"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"hengyongming"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"hengyongming"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"hengyongming"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"hengyongming"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"hengyongming"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"hengyongming"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"hengyongming"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"hengyongming"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"hengyongming"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"hengyongming"},"content":"                || (other instanceof UniqueExpiredTaskList // instanceof handles nulls","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"hengyongming"},"content":"                \u0026\u0026 internalList.equals(((UniqueExpiredTaskList) other).internalList));","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"hengyongming"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"hengyongming"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"hengyongming"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"hengyongming"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"hengyongming"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"hengyongming"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"hengyongming"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"hengyongming"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"hengyongming"},"content":"                    return false;","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"hengyongming"},"content":"                }","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"hengyongming"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"hengyongming"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"hengyongming"},"content":"        return true;","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"hengyongming"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"hengyongming":143}},{"path":"src/main/java/seedu/taskify/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.model.task;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"hengyongming"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.List;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":" * tasks uses Task#isSameTask(Task) for equality so as to ensure that the task being added or updated is","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":" * unique in terms of identity in the UniqueTaskList. However, the removal of a task uses Task#equals(Object) so","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":" * as to ensure that the task with exactly the same fields will be removed.","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":" *","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":70,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"noelmathewisaac"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2021-03-01"},{"lineNumber":74,"author":{"gitId":"noelmathewisaac"},"content":"     * The task must exist in the list.","lastModifiedDate":"2021-03-01"},{"lineNumber":75,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"noelmathewisaac"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-01"},{"lineNumber":78,"author":{"gitId":"noelmathewisaac"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":79,"author":{"gitId":"noelmathewisaac"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-03-01"},{"lineNumber":80,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"hengyongming"},"content":"    public void sortTask() {","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"hengyongming"},"content":"        Collections.sort(internalList, (t1, t2) -\u003e t1.getDate().compareTo(t2.getDate()));","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"noelmathewisaac"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2021-03-01"},{"lineNumber":88,"author":{"gitId":"noelmathewisaac"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-01"},{"lineNumber":89,"author":{"gitId":"noelmathewisaac"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-01"},{"lineNumber":90,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":91,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":92,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":94,"author":{"gitId":"noelmathewisaac"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2021-03-01"},{"lineNumber":95,"author":{"gitId":"noelmathewisaac"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2021-03-01"},{"lineNumber":96,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":97,"author":{"gitId":"noelmathewisaac"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-01"},{"lineNumber":98,"author":{"gitId":"noelmathewisaac"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2021-03-01"},{"lineNumber":99,"author":{"gitId":"noelmathewisaac"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":100,"author":{"gitId":"noelmathewisaac"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-03-01"},{"lineNumber":101,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":102,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":103,"author":{"gitId":"noelmathewisaac"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2021-03-01"},{"lineNumber":104,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":105,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":106,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":107,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-01"},{"lineNumber":108,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":109,"author":{"gitId":"noelmathewisaac"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-01"},{"lineNumber":110,"author":{"gitId":"noelmathewisaac"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-01"},{"lineNumber":111,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":112,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":113,"author":{"gitId":"noelmathewisaac"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":114,"author":{"gitId":"noelmathewisaac"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-03-01"},{"lineNumber":115,"author":{"gitId":"noelmathewisaac"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-01"},{"lineNumber":116,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":117,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":118,"author":{"gitId":"noelmathewisaac"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":119,"author":{"gitId":"noelmathewisaac"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-01"},{"lineNumber":120,"author":{"gitId":"noelmathewisaac"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-01"},{"lineNumber":121,"author":{"gitId":"noelmathewisaac"},"content":"                       || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2021-03-01"},{"lineNumber":122,"author":{"gitId":"noelmathewisaac"},"content":"                                   \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2021-03-01"},{"lineNumber":123,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":124,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":125,"author":{"gitId":"noelmathewisaac"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":126,"author":{"gitId":"noelmathewisaac"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-01"},{"lineNumber":127,"author":{"gitId":"noelmathewisaac"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-01"},{"lineNumber":128,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":129,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":130,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":131,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2021-03-01"},{"lineNumber":132,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":133,"author":{"gitId":"noelmathewisaac"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-01"},{"lineNumber":134,"author":{"gitId":"noelmathewisaac"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2021-03-01"},{"lineNumber":135,"author":{"gitId":"noelmathewisaac"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2021-03-01"},{"lineNumber":136,"author":{"gitId":"noelmathewisaac"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2021-03-01"},{"lineNumber":137,"author":{"gitId":"noelmathewisaac"},"content":"                    return false;","lastModifiedDate":"2021-03-01"},{"lineNumber":138,"author":{"gitId":"noelmathewisaac"},"content":"                }","lastModifiedDate":"2021-03-01"},{"lineNumber":139,"author":{"gitId":"noelmathewisaac"},"content":"            }","lastModifiedDate":"2021-03-01"},{"lineNumber":140,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":141,"author":{"gitId":"noelmathewisaac"},"content":"        return true;","lastModifiedDate":"2021-03-01"},{"lineNumber":142,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":143,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":6,"noelmathewisaac":137}},{"path":"src/main/java/seedu/taskify/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.model.task.exceptions;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":" * Signals that the operation will result in duplicate Tasks (Tasks are considered duplicates if they have the same","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":" * identity).","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"noelmathewisaac":11}},{"path":"src/main/java/seedu/taskify/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.model.task.exceptions;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"public class TaskNotFoundException extends RuntimeException {","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"noelmathewisaac":7}},{"path":"src/main/java/seedu/taskify/model/task/predicates/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package seedu.taskify.model.task.predicates;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.List;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.util.StringUtil;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":" * Tests that a {@code Task}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"                       .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(task.getName().fullName, keyword));","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"                       || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"                                   \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"khiaxeng":2,"noelmathewisaac":30}},{"path":"src/main/java/seedu/taskify/model/task/predicates/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package seedu.taskify.model.task.predicates;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.util.StringUtil;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.tag.Tag;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":" * Tests that a {@code Task}\u0027s {@code Tag} matches any of the keywords given.","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"        Set\u003cTag\u003e tags \u003d task.getTags();","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"        String tagsString \u003d tags.stream()","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"                                .map(tag -\u003e tag.toString() + \" \")","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"                                .map(tag -\u003e tag.replaceAll(\"[\\\\[\\\\]]*\", \"\"))","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"                                .reduce(\"\", String::concat);","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"                       .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(tagsString,","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"                               keyword));","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"                       || (other instanceof TagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"                                   \u0026\u0026 keywords.equals(((TagContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"khiaxeng":2,"noelmathewisaac":41}},{"path":"src/main/java/seedu/taskify/model/task/predicates/TaskHasSameDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package seedu.taskify.model.task.predicates;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":" * Tests that a {@code Task}\u0027s {@code Date} matches the specified date.","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"public class TaskHasSameDatePredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"    private final LocalDate inputDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    public TaskHasSameDatePredicate(LocalDate date) {","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"        inputDate \u003d date;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"        return task.getDate().getLocalDateTime().toLocalDate().isEqual(this.inputDate);","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"                || (other instanceof TaskHasSameDatePredicate // instanceof handles nulls","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"                \u0026\u0026 inputDate.equals(((TaskHasSameDatePredicate) other).inputDate)); // state check","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"khiaxeng":29}},{"path":"src/main/java/seedu/taskify/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.model.util;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ReadOnlyTaskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.tag.Tag;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.task.Date;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.model.task.Description;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Name;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.Status;","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":" * Contains utility methods for populating {@code TaskifyParser} with sample data.","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"public class SampleDataUtil {","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"        return new Task[]{","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"hengyongming"},"content":"            new Task(new Name(\"CS2106 lab\"), new Description(\"on synchronization\"), new Status(),","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"hengyongming"},"content":"                    new Date(\"2020-04-13 09:30\"),","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"                    getTagSet(\"friends\")),","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"            new Task(new Name(\"Bernice Yu\"), new Description(\"2106 lab on threads\"), new Status(),","lastModifiedDate":"2021-03-04"},{"lineNumber":26,"author":{"gitId":"hengyongming"},"content":"                    new Date(\"2020-04-13 09:30\"),","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"                    getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"CSmortal"},"content":"            new Task(new Name(\"Charlotte Oliveiro\"), new Description(\"2106 lab on threads\"),","lastModifiedDate":"2021-03-04"},{"lineNumber":29,"author":{"gitId":"hengyongming"},"content":"                    new Status(), new Date(\"2020-04-13 09:30\"), getTagSet(\"neighbours\")),","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"            new Task(new Name(\"David Li\"), new Description(\"2106 lab on threads\"), new Status(),","lastModifiedDate":"2021-03-04"},{"lineNumber":31,"author":{"gitId":"hengyongming"},"content":"                    new Date(\"2020-04-13 09:30\"),","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"                    getTagSet(\"family\")),","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"            new Task(new Name(\"Irfan Ibrahim\"), new Description(\"2106 lab on threads\"), new Status(),","lastModifiedDate":"2021-03-04"},{"lineNumber":34,"author":{"gitId":"hengyongming"},"content":"                    new Date(\"2020-04-13 09:30\"),","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"                    getTagSet(\"classmates\")),","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"CSmortal"},"content":"            new Task(new Name(\"Roy Balakrishnan\"), new Description(\"2106 lab on threads\"),","lastModifiedDate":"2021-03-04"},{"lineNumber":37,"author":{"gitId":"hengyongming"},"content":"                    new Status(), new Date(\"2020-04-13 09:30\"), getTagSet(\"colleagues\"))","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"        };","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"    public static ReadOnlyTaskify getSampleAddressBook() {","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"        Taskify sampleAb \u003d new Taskify();","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"        for (Task sampleTask : getSampleTasks()) {","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"            sampleAb.addTask(sampleTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"        return sampleAb;","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"                       .map(Tag::new)","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"                       .collect(Collectors.toSet());","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":8,"khiaxeng":4,"CSmortal":3,"noelmathewisaac":43}},{"path":"src/main/java/seedu/taskify/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.storage;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.tag.Tag;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":45,"noelmathewisaac":3}},{"path":"src/main/java/seedu/taskify/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.storage;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.tag.Tag;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.task.Date;","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.model.task.Description;","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Name;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.Status;","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.StatusType;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"class JsonAdaptedTask {","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"hengyongming"},"content":"    private final String description;","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"    private final String status;","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"CSmortal"},"content":"    private final String date;","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"hengyongming"},"content":"    public JsonAdaptedTask(@JsonProperty(\"name\") String name, @JsonProperty(\"description\") String description,","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"hengyongming"},"content":"                           @JsonProperty(\"status\") String status,","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"CSmortal"},"content":"                           @JsonProperty(\"date\") String date, @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"hengyongming"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"CSmortal"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"hengyongming"},"content":"        description \u003d source.getDescription().value;","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"khiaxeng"},"content":"        status \u003d source.getStatus().toString();","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"CSmortal"},"content":"        date \u003d source.getDate().value;","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                              .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                              .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":"        final List\u003cTag\u003e taskTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":"            taskTags.add(tag.toModelType());","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"hengyongming"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"hengyongming"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2021-03-01"},{"lineNumber":84,"author":{"gitId":"hengyongming"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName()));","lastModifiedDate":"2021-03-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"hengyongming"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":87,"author":{"gitId":"hengyongming"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"hengyongming"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2021-03-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"khiaxeng"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"khiaxeng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2021-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"khiaxeng"},"content":"        StatusType s \u003d Status.getStatusType(status);","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"khiaxeng"},"content":"        final Status modelStatus \u003d new Status(s);","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"CSmortal"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2021-03-03"},{"lineNumber":98,"author":{"gitId":"CSmortal"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2021-03-03"},{"lineNumber":99,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":100,"author":{"gitId":"CSmortal"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":101,"author":{"gitId":"CSmortal"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":102,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":103,"author":{"gitId":"CSmortal"},"content":"        final Date modelDate \u003d new Date(date);","lastModifiedDate":"2021-03-03"},{"lineNumber":104,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":105,"author":{"gitId":"noelmathewisaac"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(taskTags);","lastModifiedDate":"2021-03-01"},{"lineNumber":106,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":107,"author":{"gitId":"hengyongming"},"content":"        return new Task(modelName, modelDescription, modelStatus, modelDate, modelTags);","lastModifiedDate":"2021-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"hengyongming":13,"khiaxeng":10,"-":57,"CSmortal":13,"noelmathewisaac":17}},{"path":"src/main/java/seedu/taskify/storage/JsonSerializableTaskify.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.storage;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ReadOnlyTaskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":" * An Immutable TaskifyParser that is serializable to JSON format.","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"class JsonSerializableTaskify {","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Tasks list contains duplicate task(s).\";","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"     * Constructs a {@code JsonSerializableTaskify} with the given tasks.","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"    public JsonSerializableTaskify(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"     * Converts a given {@code ReadOnlyTaskify} into this class for Jackson use.","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableTaskify}.","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"    public JsonSerializableTaskify(ReadOnlyTaskify source) {","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"     * Converts this address book into the model\u0027s {@code TaskifyParser} object.","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"    public Taskify toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"        Taskify taskify \u003d new Taskify();","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"            if (taskify.hasTask(task)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"            taskify.addTask(task);","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"        return taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":35,"noelmathewisaac":25}},{"path":"src/main/java/seedu/taskify/storage/JsonTaskifyStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.storage;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.LogsCenter;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.util.FileUtil;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.util.JsonUtil;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ReadOnlyTaskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":" * A class to access TaskifyParser data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"public class JsonTaskifyStorage implements TaskifyStorage {","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTaskifyStorage.class);","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"    public JsonTaskifyStorage(Path filePath) {","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"    public Optional\u003cReadOnlyTaskify\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"    public Optional\u003cReadOnlyTaskify\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"        Optional\u003cJsonSerializableTaskify\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"                filePath, JsonSerializableTaskify.class);","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"    public void saveAddressBook(ReadOnlyTaskify taskify) throws IOException {","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"        saveAddressBook(taskify, filePath);","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyTaskify)}.","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":"    public void saveAddressBook(ReadOnlyTaskify taskify, Path filePath) throws IOException {","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"noelmathewisaac"},"content":"        requireNonNull(taskify);","lastModifiedDate":"2021-03-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"noelmathewisaac"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaskify(taskify), filePath);","lastModifiedDate":"2021-03-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":59,"noelmathewisaac":21}},{"path":"src/main/java/seedu/taskify/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.storage;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.util.JsonUtil;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.UserPrefs;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":42,"noelmathewisaac":5}},{"path":"src/main/java/seedu/taskify/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.storage;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ReadOnlyTaskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.UserPrefs;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"public interface Storage extends TaskifyStorage, UserPrefsStorage {","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"    Optional\u003cReadOnlyTaskify\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"    void saveAddressBook(ReadOnlyTaskify taskify) throws IOException;","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":24,"noelmathewisaac":8}},{"path":"src/main/java/seedu/taskify/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.storage;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.LogsCenter;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ReadOnlyTaskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.UserPrefs;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":" * Manages storage of TaskifyParser data in local storage.","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"    private TaskifyStorage taskifyStorage;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"     * Creates a {@code StorageManager} with the given {@code TaskifyStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"    public StorageManager(TaskifyStorage taskifyStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"        this.taskifyStorage \u003d taskifyStorage;","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskifyParser methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"        return taskifyStorage.getAddressBookFilePath();","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"    public Optional\u003cReadOnlyTaskify\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"        return readAddressBook(taskifyStorage.getAddressBookFilePath());","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"    public Optional\u003cReadOnlyTaskify\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":"        return taskifyStorage.readAddressBook(filePath);","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":"    public void saveAddressBook(ReadOnlyTaskify taskify) throws IOException {","lastModifiedDate":"2021-03-01"},{"lineNumber":70,"author":{"gitId":"noelmathewisaac"},"content":"        saveAddressBook(taskify, taskifyStorage.getAddressBookFilePath());","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"noelmathewisaac"},"content":"    public void saveAddressBook(ReadOnlyTaskify taskify, Path filePath) throws IOException {","lastModifiedDate":"2021-03-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":"        taskifyStorage.saveAddressBook(taskify, filePath);","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":58,"noelmathewisaac":21}},{"path":"src/main/java/seedu/taskify/storage/TaskifyStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.storage;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ReadOnlyTaskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":" * Represents a storage for {@link Taskify}.","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"public interface TaskifyStorage {","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns TaskifyParser data as a {@link ReadOnlyTaskify}.","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"    Optional\u003cReadOnlyTaskify\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"    Optional\u003cReadOnlyTaskify\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"     * Saves the given {@link ReadOnlyTaskify} to the storage.","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"     * @param taskify cannot be null.","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"    void saveAddressBook(ReadOnlyTaskify taskify) throws IOException;","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"     * @see #saveAddressBook(ReadOnlyTaskify)","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"    void saveAddressBook(ReadOnlyTaskify taskify, Path filePath) throws IOException;","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"noelmathewisaac":46}},{"path":"src/main/java/seedu/taskify/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.storage;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.UserPrefs;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":" * Represents a storage for {@link seedu.taskify.model.UserPrefs}.","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"     * Saves the given {@link seedu.taskify.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":30,"noelmathewisaac":6}},{"path":"src/main/java/seedu/taskify/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.ui;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.CommandResult;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"noelmathewisaac"},"content":"         * @see seedu.taskify.logic.Logic#execute(String)","lastModifiedDate":"2021-03-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":80,"noelmathewisaac":5}},{"path":"src/main/java/seedu/taskify/ui/CompletedTaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hengyongming"},"content":"package seedu.taskify.ui;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"hengyongming"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"hengyongming"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"hengyongming"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"hengyongming"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"hengyongming"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"hengyongming"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.commons.core.LogsCenter;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"hengyongming"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"hengyongming"},"content":" * Panel containing the list of expired tasks.","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"hengyongming"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"hengyongming"},"content":"public class CompletedTaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"hengyongming"},"content":"    private static final String FXML \u003d \"CompletedTaskListPanel.fxml\";","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"hengyongming"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"hengyongming"},"content":"    @FXML","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"hengyongming"},"content":"    private ListView\u003cTask\u003e completedTaskListView;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"hengyongming"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"hengyongming"},"content":"    public CompletedTaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"hengyongming"},"content":"        super(FXML);","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"hengyongming"},"content":"        completedTaskListView.setItems(taskList);","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"hengyongming"},"content":"        completedTaskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"hengyongming"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"hengyongming"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"hengyongming"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"hengyongming"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"hengyongming"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"hengyongming"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"hengyongming"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"hengyongming"},"content":"                setText(null);","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"hengyongming"},"content":"            } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"hengyongming"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"hengyongming"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"hengyongming"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"hengyongming"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"hengyongming":49}},{"path":"src/main/java/seedu/taskify/ui/ExpiredTaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hengyongming"},"content":"package seedu.taskify.ui;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"hengyongming"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"hengyongming"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"hengyongming"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"hengyongming"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"hengyongming"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"hengyongming"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.commons.core.LogsCenter;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"hengyongming"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"hengyongming"},"content":" * Panel containing the list of expired tasks.","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"hengyongming"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"hengyongming"},"content":"public class ExpiredTaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"hengyongming"},"content":"    private static final String FXML \u003d \"ExpiredTaskListPanel.fxml\";","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"hengyongming"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"hengyongming"},"content":"    @FXML","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"hengyongming"},"content":"    private ListView\u003cTask\u003e expiredTaskListView;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"hengyongming"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"hengyongming"},"content":"    public ExpiredTaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"hengyongming"},"content":"        super(FXML);","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"hengyongming"},"content":"        expiredTaskListView.setItems(taskList);","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"hengyongming"},"content":"        expiredTaskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"hengyongming"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"hengyongming"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"hengyongming"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"hengyongming"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"hengyongming"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"hengyongming"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"hengyongming"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"hengyongming"},"content":"                setText(null);","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"hengyongming"},"content":"            } else {","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"hengyongming"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"hengyongming"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"hengyongming"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"hengyongming"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"hengyongming":49}},{"path":"src/main/java/seedu/taskify/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.ui;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.LogsCenter;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"hengyongming"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103t-w14-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hengyongming":1,"-":99,"noelmathewisaac":2}},{"path":"src/main/java/seedu/taskify/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.ui;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"hengyongming"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.GuiSettings;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.LogsCenter;","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.Logic;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.CommandResult;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"hengyongming"},"content":"    private static final int HOME \u003d 0;","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"hengyongming"},"content":"    private static final int EXPIRED \u003d 1;","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"hengyongming"},"content":"    private static final int COMPLETED \u003d 2;","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"hengyongming"},"content":"    private ExpiredTaskListPanel expiredTaskListPanel;","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"hengyongming"},"content":"    private CompletedTaskListPanel completedTaskListPanel;","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"hengyongming"},"content":"    private TaskListPanel upcomingTaskListPanel;","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"hengyongming"},"content":"    @FXML","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"hengyongming"},"content":"    private StackPane upcomingTaskListPanelPlaceholder;","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"hengyongming"},"content":"    @FXML","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"hengyongming"},"content":"    private StackPane expiredTaskListPanelPlaceholder;","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"hengyongming"},"content":"    @FXML","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"hengyongming"},"content":"    private StackPane completedTaskListPanelPlaceholder;","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"hengyongming"},"content":"    @FXML","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"hengyongming"},"content":"    private TabPane tabsPane;","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"noelmathewisaac"},"content":"     *","lastModifiedDate":"2021-03-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"noelmathewisaac"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2021-03-01"},{"lineNumber":136,"author":{"gitId":"noelmathewisaac"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2021-03-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"hengyongming"},"content":"        expiredTaskListPanel \u003d new ExpiredTaskListPanel(logic.getExpiredFilteredTaskList());","lastModifiedDate":"2021-03-22"},{"lineNumber":145,"author":{"gitId":"hengyongming"},"content":"        expiredTaskListPanelPlaceholder.getChildren().add(expiredTaskListPanel.getRoot());","lastModifiedDate":"2021-03-22"},{"lineNumber":146,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":147,"author":{"gitId":"hengyongming"},"content":"        completedTaskListPanel \u003d new CompletedTaskListPanel(logic.getCompletedFilteredTaskList());","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"hengyongming"},"content":"        completedTaskListPanelPlaceholder.getChildren().add(completedTaskListPanel.getRoot());","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"hengyongming"},"content":"        // Need to change the implementation for incoming task (Khia Xeng)","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"hengyongming"},"content":"        upcomingTaskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2021-03-23"},{"lineNumber":152,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"hengyongming"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":186,"author":{"gitId":"hengyongming"},"content":"     * There is two tab for now.","lastModifiedDate":"2021-03-21"},{"lineNumber":187,"author":{"gitId":"hengyongming"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":188,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":189,"author":{"gitId":"hengyongming"},"content":"    @FXML","lastModifiedDate":"2021-03-21"},{"lineNumber":190,"author":{"gitId":"hengyongming"},"content":"    private void handleHomeTab() {","lastModifiedDate":"2021-03-21"},{"lineNumber":191,"author":{"gitId":"hengyongming"},"content":"        tabsPane.getSelectionModel().select(HOME);","lastModifiedDate":"2021-03-21"},{"lineNumber":192,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":193,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":194,"author":{"gitId":"hengyongming"},"content":"    @FXML","lastModifiedDate":"2021-03-21"},{"lineNumber":195,"author":{"gitId":"hengyongming"},"content":"    private void handleExpiredTab() {","lastModifiedDate":"2021-03-21"},{"lineNumber":196,"author":{"gitId":"hengyongming"},"content":"        tabsPane.getSelectionModel().select(EXPIRED);","lastModifiedDate":"2021-03-21"},{"lineNumber":197,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":198,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":199,"author":{"gitId":"hengyongming"},"content":"    @FXML","lastModifiedDate":"2021-03-24"},{"lineNumber":200,"author":{"gitId":"hengyongming"},"content":"    private void handleCompletedTab() {","lastModifiedDate":"2021-03-24"},{"lineNumber":201,"author":{"gitId":"hengyongming"},"content":"        tabsPane.getSelectionModel().select(COMPLETED);","lastModifiedDate":"2021-03-24"},{"lineNumber":202,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":203,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":204,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":205,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":218,"author":{"gitId":"noelmathewisaac"},"content":"    public TaskListPanel getTaskListPanel() {","lastModifiedDate":"2021-03-01"},{"lineNumber":219,"author":{"gitId":"noelmathewisaac"},"content":"        return taskListPanel;","lastModifiedDate":"2021-03-01"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"noelmathewisaac"},"content":"     * @see seedu.taskify.logic.Logic#execute(String)","lastModifiedDate":"2021-03-01"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"hengyongming"},"content":"            if (commandResult.isHomeTab()) {","lastModifiedDate":"2021-03-21"},{"lineNumber":242,"author":{"gitId":"hengyongming"},"content":"                handleHomeTab();","lastModifiedDate":"2021-03-21"},{"lineNumber":243,"author":{"gitId":"hengyongming"},"content":"            }","lastModifiedDate":"2021-03-21"},{"lineNumber":244,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":245,"author":{"gitId":"hengyongming"},"content":"            if (commandResult.isExpiredTab()) {","lastModifiedDate":"2021-03-21"},{"lineNumber":246,"author":{"gitId":"hengyongming"},"content":"                handleExpiredTab();","lastModifiedDate":"2021-03-21"},{"lineNumber":247,"author":{"gitId":"hengyongming"},"content":"            }","lastModifiedDate":"2021-03-21"},{"lineNumber":248,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":249,"author":{"gitId":"hengyongming"},"content":"            if (commandResult.isCompletedTab()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":250,"author":{"gitId":"hengyongming"},"content":"                handleCompletedTab();","lastModifiedDate":"2021-03-24"},{"lineNumber":251,"author":{"gitId":"hengyongming"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":252,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hengyongming":63,"-":182,"noelmathewisaac":15}},{"path":"src/main/java/seedu/taskify/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.ui;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":27,"noelmathewisaac":1}},{"path":"src/main/java/seedu/taskify/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.ui;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":27,"noelmathewisaac":1}},{"path":"src/main/java/seedu/taskify/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.ui;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on TaskifyParser level 4\u003c/a\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"    public final Task task;","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"hengyongming"},"content":"    private Label description;","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"    private Label status;","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"CSmortal"},"content":"    private Label date;","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"     * Creates a {@code TaskCode} with the given {@code Task} and index to display.","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"        name.setText(task.getName().fullName);","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"hengyongming"},"content":"        description.setText(task.getDescription().value);","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"khiaxeng"},"content":"        status.setText(task.getStatus().toString());","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"CSmortal"},"content":"        date.setText(task.getDate().value);","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"        task.getTags().stream()","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"noelmathewisaac"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"noelmathewisaac"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2021-03-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"noelmathewisaac"},"content":"                       \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2021-03-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"hengyongming":2,"khiaxeng":2,"-":58,"CSmortal":2,"noelmathewisaac":15}},{"path":"src/main/java/seedu/taskify/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.ui;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.LogsCenter;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"    @FXML","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"        super(FXML);","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"        @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"                setText(null);","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"            } else {","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"            }","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"noelmathewisaac":49}},{"path":"src/main/java/seedu/taskify/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.ui;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":12,"noelmathewisaac":1}},{"path":"src/main/java/seedu/taskify/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.ui;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.MainApp;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.LogsCenter;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.util.StringUtil;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.Logic;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/taskify_32.png\";","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":83,"noelmathewisaac":6}},{"path":"src/main/java/seedu/taskify/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.ui;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.MainApp;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":86,"noelmathewisaac":2}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"\u003cStackPane style\u003d\"-fx-background-radius: 20;\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":7,"noelmathewisaac":2}},{"path":"src/main/resources/view/CompletedTaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hengyongming"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"hengyongming"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"hengyongming"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"hengyongming"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"hengyongming"},"content":"    \u003cListView fx:id\u003d\"completedTaskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"hengyongming"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"hengyongming":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: derive(#29323C, 20%);","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"    background-color: #29323C; /* Used in the default.html file */","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":".tab-pane","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"{","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-tab-min-width: 3em;","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-tab-min-height: 3em;","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":".tab{","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-insets: 0.0;","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-radius: 15 15 0 0;","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: #29323C;","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-padding: 0 30 0 30;","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":".tab-pane .tab","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"{","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: #e8eff2;","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":".tab-pane .tab:selected","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"{","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: #011842;","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":".tab-pane .tab:focused","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"{","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-focus-color: transparent;","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":".tab .tab-label {","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-alignment: CENTER;","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":".tab:selected .tab-label {","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-alignment: CENTER;","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"noelmathewisaac"},"content":".tab-pane *.tab-header-background {","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: #e8eff2;","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"noelmathewisaac"},"content":".tab-pane:top *.tab-header-area {","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-insets: 0, 0 0 1 0;","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-padding: 0.416667em 0.166667em 0.0em 0.0em;","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":".tab:selected .focus-indicator {","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-focus-color: transparent;","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: derive(#e8eff2, 20%);","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-border-color: transparent transparent transparent #000000;","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":95,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: derive(#e8eff2, 20%);","lastModifiedDate":"2021-03-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":101,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: derive(#e8eff2, 20%);","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2021-03-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: #e8eff2;","lastModifiedDate":"2021-03-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: #e8eff2;","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: #b7cdd6;","lastModifiedDate":"2021-03-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-border-color: #b7cdd6;","lastModifiedDate":"2021-03-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2017-03-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":145,"author":{"gitId":"noelmathewisaac"},"content":"     -fx-background-color: derive(#e8eff2, 20%);","lastModifiedDate":"2021-03-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: derive(#536dfe, 30%);","lastModifiedDate":"2021-03-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2021-03-22"},{"lineNumber":156,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2021-03-22"},{"lineNumber":157,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: derive(#e8eff2, 30%);","lastModifiedDate":"2021-03-22"},{"lineNumber":173,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-border-color: derive(#e8eff2, 25%);","lastModifiedDate":"2021-03-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: derive(#e8eff2, 30%);","lastModifiedDate":"2021-03-22"},{"lineNumber":183,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-border-color: derive(#e8eff2, 30%);","lastModifiedDate":"2021-03-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":188,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: derive(#e8eff2, 30%);","lastModifiedDate":"2021-03-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: derive(#536dfe, 50%);","lastModifiedDate":"2021-03-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: derive(#536dfe, 20%);","lastModifiedDate":"2021-03-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: #e8eff2;","lastModifiedDate":"2021-03-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"noelmathewisaac"},"content":"  -fx-background-color: black;","lastModifiedDate":"2021-03-22"},{"lineNumber":237,"author":{"gitId":"noelmathewisaac"},"content":"  -fx-text-fill: #e8eff2;","lastModifiedDate":"2021-03-22"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-border-color: black, black;","lastModifiedDate":"2021-03-22"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: #e8eff2;","lastModifiedDate":"2021-03-22"},{"lineNumber":251,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-22"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: #e8eff2;","lastModifiedDate":"2021-03-22"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: #e8eff2;","lastModifiedDate":"2021-03-22"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-22"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: derive(#e8eff2, 25%);","lastModifiedDate":"2021-03-22"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-fill: black;","lastModifiedDate":"2021-03-22"},{"lineNumber":285,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-22"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":289,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: derive(#e8eff2, 20%);","lastModifiedDate":"2021-03-22"},{"lineNumber":290,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2021-03-22"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: derive(#011842, 50%);","lastModifiedDate":"2021-03-22"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2021-03-22"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2021-03-22"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-padding: 2 0 2 0;","lastModifiedDate":"2021-03-22"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2021-03-22"},{"lineNumber":325,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":326,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":327,"author":{"gitId":"noelmathewisaac"},"content":"#commandTextPanel {","lastModifiedDate":"2021-03-22"},{"lineNumber":328,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: #485563;","lastModifiedDate":"2021-03-22"},{"lineNumber":329,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2021-03-22"},{"lineNumber":330,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-padding: 5 5 5 5;","lastModifiedDate":"2021-03-22"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: transparent #e8eff2 #ffffff transparent;","lastModifiedDate":"2021-03-22"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-22"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"noelmathewisaac"},"content":"#filterField, #taskWebpage{","lastModifiedDate":"2021-03-22"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"noelmathewisaac"},"content":"#welcomePanel, #upcomingTaskListPanel{","lastModifiedDate":"2021-03-22"},{"lineNumber":346,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: #e8eff2;","lastModifiedDate":"2021-03-22"},{"lineNumber":347,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-22"},{"lineNumber":348,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-22"},{"lineNumber":349,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":350,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":351,"author":{"gitId":"noelmathewisaac"},"content":"#featuresPanelPlaceholder{","lastModifiedDate":"2021-03-22"},{"lineNumber":352,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: #e8eff2;","lastModifiedDate":"2021-03-22"},{"lineNumber":353,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2021-03-22"},{"lineNumber":354,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":355,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":356,"author":{"gitId":"noelmathewisaac"},"content":"#gridPane{","lastModifiedDate":"2021-03-22"},{"lineNumber":357,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: #b7cdd6;","lastModifiedDate":"2021-03-22"},{"lineNumber":358,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":359,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":360,"author":{"gitId":"noelmathewisaac"},"content":"#imageView{","lastModifiedDate":"2021-03-22"},{"lineNumber":361,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: #e8eff2;","lastModifiedDate":"2021-03-22"},{"lineNumber":362,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-alignment: CENTER;","lastModifiedDate":"2021-03-22"},{"lineNumber":363,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":364,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":365,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: transparent, #e8eff2, transparent, #e8eff2;","lastModifiedDate":"2021-03-22"},{"lineNumber":367,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2021-03-22"},{"lineNumber":368,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":377,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-color: #536dfe;","lastModifiedDate":"2021-03-22"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":379,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-border-radius: 15;","lastModifiedDate":"2021-03-22"},{"lineNumber":380,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2021-03-22"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":382,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"-":262,"noelmathewisaac":120}},{"path":"src/main/resources/view/ExpiredTaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"hengyongming"},"content":"    \u003cListView fx:id\u003d\"expiredTaskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"hengyongming":1,"-":7}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-text-fill: #FF0000 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-background: #e8eff2;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":17,"noelmathewisaac":3}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"hengyongming"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"hengyongming"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"hengyongming"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"hengyongming"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"hengyongming"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"hengyongming"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"hengyongming"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"hengyongming"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"hengyongming"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"\u003cfx:root minHeight\u003d\"600.0\" minWidth\u003d\"700.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Taskify\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"hengyongming"},"content":"            \u003cVBox fx:id\u003d\"root\"\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"                \u003cGridPane fx:id\u003d\"gridPane\" hgap\u003d\"0\" prefWidth\u003d\"701.0\" vgap\u003d\"0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"               \u003cHBox style\u003d\"-fx-background-radius: 20; -fx-border-radius: 20;\" GridPane.columnIndex\u003d\"1\" GridPane.rowSpan\u003d\"2\" GridPane.vgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"hengyongming"},"content":"                          \u003cTabPane fx:id\u003d\"tabsPane\" prefHeight\u003d\"321.0\" prefWidth\u003d\"423.0\" style\u003d\"-fx-background-radius: 20; -fx-border-radius: 20;\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"hengyongming"},"content":"                              \u003cTab fx:id\u003d\"tabHome\" closable\u003d\"false\" text\u003d\"Tasks\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"                                  \u003cVBox fx:id\u003d\"taskListPanel\" layoutX\u003d\"10.0\" layoutY\u003d\"157.0\" maxHeight\u003d\"Infinity\" minWidth\u003d\"200\" prefWidth\u003d\"200\" style\u003d\"-fx-border-radius: 20;\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"hengyongming"},"content":"                                      \u003cpadding\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"                                          \u003cInsets bottom\u003d\"5\" left\u003d\"5\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"hengyongming"},"content":"                                      \u003c/padding\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"hengyongming"},"content":"                                      \u003cchildren\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"                                          \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" prefHeight\u003d\"278.0\" prefWidth\u003d\"406.0\" style\u003d\"-fx-border-radius: 20;\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"hengyongming"},"content":"                                      \u003c/children\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"hengyongming"},"content":"                                  \u003c/VBox\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"hengyongming"},"content":"                              \u003c/Tab\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"hengyongming"},"content":"                              \u003cTab fx:id\u003d\"tabExpired\" closable\u003d\"false\" text\u003d\"Expired\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"hengyongming"},"content":"                                  \u003cVBox fx:id\u003d\"expiredTaskList\" maxHeight\u003d\"Infinity\" minWidth\u003d\"200.0\" prefWidth\u003d\"200\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                                      \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":57,"author":{"gitId":"hengyongming"},"content":"                                          \u003cInsets bottom\u003d\"5\" left\u003d\"5\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                                      \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":59,"author":{"gitId":"hengyongming"},"content":"                                      \u003cStackPane fx:id\u003d\"expiredTaskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"hengyongming"},"content":"                                          \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"hengyongming"},"content":"                                              \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"hengyongming"},"content":"                                          \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                                      \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"hengyongming"},"content":"                                  \u003c/VBox\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"hengyongming"},"content":"                              \u003c/Tab\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"hengyongming"},"content":"                              \u003cTab fx:id\u003d\"tabCompleted\" closable\u003d\"false\" text\u003d\"Completed\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"hengyongming"},"content":"                                  \u003cVBox fx:id\u003d\"completedTaskListPanel\" maxHeight\u003d\"Infinity\" minWidth\u003d\"200.0\" prefWidth\u003d\"200\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"hengyongming"},"content":"                                      \u003cpadding\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"hengyongming"},"content":"                                          \u003cInsets bottom\u003d\"5\" left\u003d\"5\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"hengyongming"},"content":"                                      \u003c/padding\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"hengyongming"},"content":"                                      \u003cStackPane fx:id\u003d\"completedTaskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"hengyongming"},"content":"                                          \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"hengyongming"},"content":"                                              \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"hengyongming"},"content":"                                          \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"hengyongming"},"content":"                                      \u003c/StackPane\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"hengyongming"},"content":"                                  \u003c/VBox\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"hengyongming"},"content":"                              \u003c/Tab\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"hengyongming"},"content":"                          \u003c/TabPane\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"noelmathewisaac"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"noelmathewisaac"},"content":"                  \u003cGridPane.margin\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"                     \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"                  \u003c/GridPane.margin\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"noelmathewisaac"},"content":"               \u003c/HBox\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"noelmathewisaac"},"content":"                    \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" style\u003d\"-fx-background-radius: 20;\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"3\" GridPane.vgrow\u003d\"NEVER\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"noelmathewisaac"},"content":"                            \u003cInsets bottom\u003d\"5\" left\u003d\"5\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"noelmathewisaac"},"content":"                        \u003cGridPane.margin\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"noelmathewisaac"},"content":"                            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"noelmathewisaac"},"content":"                        \u003c/GridPane.margin\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"hengyongming"},"content":"                    \u003c/StackPane\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":92,"author":{"gitId":"noelmathewisaac"},"content":"                   \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" prefHeight\u003d\"25.0\" prefWidth\u003d\"419.0\" style\u003d\"-fx-background-radius: 20;\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"2\" GridPane.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"noelmathewisaac"},"content":"                       \u003cpadding\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"noelmathewisaac"},"content":"                           \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                       \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":96,"author":{"gitId":"noelmathewisaac"},"content":"                      \u003cGridPane.margin\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"noelmathewisaac"},"content":"                         \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"noelmathewisaac"},"content":"                      \u003c/GridPane.margin\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"hengyongming"},"content":"                   \u003c/StackPane\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":100,"author":{"gitId":"noelmathewisaac"},"content":"                    \u003cHBox fx:id\u003d\"welcomePanel\" alignment\u003d\"CENTER\" prefHeight\u003d\"252.0\" prefWidth\u003d\"399.0\" style\u003d\"-fx-background-radius: 20;\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.rowIndex\u003d\"0\" GridPane.rowSpan\u003d\"1\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"hengyongming"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":102,"author":{"gitId":"noelmathewisaac"},"content":"                     \u003cVBox\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"hengyongming"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":104,"author":{"gitId":"noelmathewisaac"},"content":"                                    \u003cText strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Welcome to Taskify!\" wrappingWidth\u003d\"253.34442138671875\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"hengyongming"},"content":"                                        \u003cfont\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":106,"author":{"gitId":"noelmathewisaac"},"content":"                                            \u003cFont size\u003d\"28.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":107,"author":{"gitId":"hengyongming"},"content":"                                        \u003c/font\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":108,"author":{"gitId":"hengyongming"},"content":"                                    \u003c/Text\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":109,"author":{"gitId":"noelmathewisaac"},"content":"                           \u003cHBox\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":110,"author":{"gitId":"noelmathewisaac"},"content":"                              \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":111,"author":{"gitId":"noelmathewisaac"},"content":"                                 \u003cInsets /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":112,"author":{"gitId":"noelmathewisaac"},"content":"                              \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":113,"author":{"gitId":"noelmathewisaac"},"content":"                              \u003cchildren\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":114,"author":{"gitId":"noelmathewisaac"},"content":"                                 \u003cImageView fx:id\u003d\"imageView1\" fitHeight\u003d\"172.0\" fitWidth\u003d\"238.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"noelmathewisaac"},"content":"                                    \u003cimage\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":116,"author":{"gitId":"noelmathewisaac"},"content":"                                       \u003cImage url\u003d\"@/images/taskify.png\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"noelmathewisaac"},"content":"                                    \u003c/image\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":118,"author":{"gitId":"noelmathewisaac"},"content":"                                    \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":119,"author":{"gitId":"noelmathewisaac"},"content":"                                       \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":120,"author":{"gitId":"noelmathewisaac"},"content":"                                    \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":121,"author":{"gitId":"hengyongming"},"content":"                                    \u003cHBox.margin\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":122,"author":{"gitId":"noelmathewisaac"},"content":"                                       \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":123,"author":{"gitId":"hengyongming"},"content":"                                    \u003c/HBox.margin\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":124,"author":{"gitId":"hengyongming"},"content":"                                 \u003c/ImageView\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":125,"author":{"gitId":"hengyongming"},"content":"                              \u003c/children\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":126,"author":{"gitId":"noelmathewisaac"},"content":"                           \u003c/HBox\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":127,"author":{"gitId":"noelmathewisaac"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":128,"author":{"gitId":"noelmathewisaac"},"content":"                     \u003c/VBox\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":129,"author":{"gitId":"noelmathewisaac"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":130,"author":{"gitId":"hengyongming"},"content":"                        \u003cGridPane.margin\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":131,"author":{"gitId":"noelmathewisaac"},"content":"                            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":132,"author":{"gitId":"hengyongming"},"content":"                        \u003c/GridPane.margin\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":133,"author":{"gitId":"hengyongming"},"content":"                    \u003c/HBox\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":134,"author":{"gitId":"noelmathewisaac"},"content":"                    \u003cVBox fx:id\u003d\"upcomingTaskListPanel\" style\u003d\"-fx-background-radius: 20;\" GridPane.rowIndex\u003d\"1\" GridPane.rowSpan\u003d\"3\" GridPane.valignment\u003d\"TOP\" GridPane.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":135,"author":{"gitId":"hengyongming"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":136,"author":{"gitId":"hengyongming"},"content":"                            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":137,"author":{"gitId":"hengyongming"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":138,"author":{"gitId":"hengyongming"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":139,"author":{"gitId":"hengyongming"},"content":"                            \u003cText fill\u003d\"Black\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Upcoming Tasks\"\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":140,"author":{"gitId":"hengyongming"},"content":"                                \u003cfont\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":141,"author":{"gitId":"hengyongming"},"content":"                                    \u003cFont name\u003d\"Segoe UI Semibold\" size\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":142,"author":{"gitId":"hengyongming"},"content":"                                \u003c/font\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":143,"author":{"gitId":"hengyongming"},"content":"                            \u003c/Text\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":144,"author":{"gitId":"hengyongming"},"content":"                            \u003cStackPane fx:id\u003d\"upcomingTasksPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":145,"author":{"gitId":"hengyongming"},"content":"                                \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":146,"author":{"gitId":"noelmathewisaac"},"content":"                                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":147,"author":{"gitId":"noelmathewisaac"},"content":"                                \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":148,"author":{"gitId":"noelmathewisaac"},"content":"                                \u003copaqueInsets\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":149,"author":{"gitId":"noelmathewisaac"},"content":"                                   \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":150,"author":{"gitId":"noelmathewisaac"},"content":"                                \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":151,"author":{"gitId":"noelmathewisaac"},"content":"                            \u003c/StackPane\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":152,"author":{"gitId":"hengyongming"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":153,"author":{"gitId":"hengyongming"},"content":"                        \u003cGridPane.margin\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":154,"author":{"gitId":"noelmathewisaac"},"content":"                            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":155,"author":{"gitId":"hengyongming"},"content":"                        \u003c/GridPane.margin\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":156,"author":{"gitId":"noelmathewisaac"},"content":"                  \u003copaqueInsets\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":157,"author":{"gitId":"noelmathewisaac"},"content":"                     \u003cInsets /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":158,"author":{"gitId":"noelmathewisaac"},"content":"                  \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":159,"author":{"gitId":"hengyongming"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":160,"author":{"gitId":"hengyongming"},"content":"                    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":161,"author":{"gitId":"noelmathewisaac"},"content":"                        \u003cColumnConstraints maxWidth\u003d\"1004.7999877929688\" minWidth\u003d\"0.0\" prefWidth\u003d\"271.33335367838544\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":162,"author":{"gitId":"noelmathewisaac"},"content":"                        \u003cColumnConstraints maxWidth\u003d\"979.1999755859376\" minWidth\u003d\"0.0\" prefWidth\u003d\"429.3333129882813\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":163,"author":{"gitId":"hengyongming"},"content":"                    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":164,"author":{"gitId":"hengyongming"},"content":"                    \u003crowConstraints\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":165,"author":{"gitId":"noelmathewisaac"},"content":"                        \u003cRowConstraints maxHeight\u003d\"300.0\" minHeight\u003d\"250.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":166,"author":{"gitId":"hengyongming"},"content":"                        \u003cRowConstraints minHeight\u003d\"0.0\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":167,"author":{"gitId":"hengyongming"},"content":"                        \u003cRowConstraints minHeight\u003d\"30.0\" vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":168,"author":{"gitId":"hengyongming"},"content":"                        \u003cRowConstraints maxHeight\u003d\"150.0\" minHeight\u003d\"150.0\" prefHeight\u003d\"150.0\" vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":169,"author":{"gitId":"hengyongming"},"content":"                    \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":170,"author":{"gitId":"hengyongming"},"content":"                \u003c/GridPane\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":171,"author":{"gitId":"noelmathewisaac"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" alignment\u003d\"BASELINE_CENTER\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"hengyongming":77,"-":37,"noelmathewisaac":61}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" style\u003d\"-fx-background-radius: 20;\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" style\u003d\"-fx-background-position: 20;\" styleClass\u003d\"result-display\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"      \u003cfont\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"         \u003cFont size\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"      \u003c/font\u003e\u003c/TextArea\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":6,"noelmathewisaac":6}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" style\u003d\"-fx-background-radius: 20; -fx-border-radius: 20;\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":" \u003cVBox alignment\u003d\"CENTER_LEFT\" fillWidth\u003d\"false\" prefHeight\u003d\"80.0\" prefWidth\u003d\"292.0\" style\u003d\"-fx-background-radius: 20; -fx-border-radius: 20;\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"     \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"   \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"       \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"         \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"         \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"       \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"     \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":25,"author":{"gitId":"hengyongming"},"content":"   \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"   \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"CSmortal"},"content":"   \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2021-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":" \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hengyongming":1,"khiaxeng":1,"-":21,"CSmortal":1,"noelmathewisaac":5}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"\u003cVBox style\u003d\"-fx-background-radius: 20; -fx-border-radius: 20;\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"  \u003cListView fx:id\u003d\"taskListView\" style\u003d\"-fx-background-radius: 20; -fx-border-radius: 20;\"\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"         \u003cInsets /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"      \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"         \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"      \u003c/padding\u003e\u003c/ListView\u003e","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":6,"noelmathewisaac":9}},{"path":"src/test/data/JsonSerializableTaskifyParserTest/duplicateTaskTaskify.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"{","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"  \"tasks\": [","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"      \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"hengyongming"},"content":"      \"description\": \"2107 ctf\",","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"      \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"      \"status\" : \"Not done\",","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"CSmortal"},"content":"      \"date\": \"2014-09-13 01:30\",","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"      \"tagged\": [","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"        \"friends\"","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"      ]","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"    },","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"      \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"hengyongming"},"content":"      \"description\": \"2107 ctf\",","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"CSmortal"},"content":"      \"address\": \"4th street\",","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"      \"status\" : \"Not done\",","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"CSmortal"},"content":"      \"date\": \"2014-09-13 01:30\"","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"  ]","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":2,"khiaxeng":2,"CSmortal":3,"noelmathewisaac":14}},{"path":"src/test/data/JsonSerializableTaskifyParserTest/invalidTaskTaskify.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"{","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"  \"tasks\": [","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"      \"name\": \"Hans Muster\",","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"hengyongming"},"content":"      \"description\": \"\",","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"      \"address\": \"4th street\",","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"      \"status\" : \"\"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"  ]","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":1,"khiaxeng":2,"noelmathewisaac":7}},{"path":"src/test/data/JsonSerializableTaskifyParserTest/typicalTasksTaskify.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"{","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"  \"_comment\": \"AddressBook save file which contains the same Task values as in TypicalTasks#getTypicalAddressBook()\",","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"  \"tasks\": [","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"      \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"hengyongming"},"content":"      \"description\": \"94351253\",","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"CSmortal"},"content":"      \"status\" : \"Not done\",","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"CSmortal"},"content":"      \"date\": \"2014-09-13 01:30\",","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"      \"tagged\": [","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"        \"friends\"","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"      ]","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"    },","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"      \"name\": \"Benson Meier\",","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"hengyongming"},"content":"      \"description\": \"98765432\",","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"CSmortal"},"content":"      \"status\" : \"Not done\",","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"CSmortal"},"content":"      \"date\": \"2015-01-23 23:30\",","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"      \"tagged\": [","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"        \"owesMoney\",","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"        \"friends\"","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"      ]","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"    },","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"      \"name\": \"Carl Kurz\",","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"hengyongming"},"content":"      \"description\": \"95352563\",","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"CSmortal"},"content":"      \"status\" : \"Completed\",","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"CSmortal"},"content":"      \"date\": \"1980-12-23 00:12\",","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"      \"tagged\": []","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"    },","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"      \"name\": \"Daniel Meier\",","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"hengyongming"},"content":"      \"description\": \"87652533\",","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"CSmortal"},"content":"      \"status\" : \"In progress\",","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"CSmortal"},"content":"      \"date\": \"1995-11-09 15:46\",","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"      \"tagged\": [","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"        \"friends\"","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"      ]","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"    },","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"      \"name\": \"Elle Meyer\",","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"hengyongming"},"content":"      \"description\": \"9482224\",","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"CSmortal"},"content":"      \"status\" : \"Completed\",","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"CSmortal"},"content":"      \"date\": \"1998-07-30 22:13\",","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"      \"tagged\": []","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"    },","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"      \"name\": \"Fiona Kunz\",","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"hengyongming"},"content":"      \"description\": \"9482427\",","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"CSmortal"},"content":"      \"status\" : \"Not done\",","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"CSmortal"},"content":"      \"date\": \"1998-07-30 22:13\",","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"      \"tagged\": []","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"    },","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"      \"name\": \"George Best\",","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"hengyongming"},"content":"      \"description\": \"9482442\",","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"CSmortal"},"content":"      \"status\" : \"In progress\",","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"CSmortal"},"content":"      \"date\": \"1998-07-30 22:13\",","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"      \"tagged\": []","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"  ]","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":7,"CSmortal":14,"noelmathewisaac":40}},{"path":"src/test/data/JsonTaskifyParserStorageTest/invalidAndValidTaskTaskify.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"{","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"  \"tasks\": [","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"      \"name\": \"Valid Task\",","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"      \"description\": \"someDesc\",","lastModifiedDate":"2021-03-04"},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":"      \"address\": \"4th street\",","lastModifiedDate":"2021-03-04"},{"lineNumber":7,"author":{"gitId":"CSmortal"},"content":"      \"date\": \"2020-04-13 22:30\"","lastModifiedDate":"2021-03-04"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"    },","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"CSmortal"},"content":"      \"name\": \"Task With Invalid Description Field\",","lastModifiedDate":"2021-03-04"},{"lineNumber":11,"author":{"gitId":"CSmortal"},"content":"      \"description\": \" invalidDesc\",","lastModifiedDate":"2021-03-04"},{"lineNumber":12,"author":{"gitId":"CSmortal"},"content":"      \"address\": \"4th street\",","lastModifiedDate":"2021-03-04"},{"lineNumber":13,"author":{"gitId":"CSmortal"},"content":"      \"date\": \"2020-04-13 22:30\"","lastModifiedDate":"2021-03-04"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"  ]","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"CSmortal":7,"noelmathewisaac":9}},{"path":"src/test/data/JsonTaskifyParserStorageTest/invalidTaskTaskify.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"{","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"  \"tasks\": [","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"    {","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"      \"name\": \"Task with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"hengyongming"},"content":"      \"description\": \"9482424\",","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":"      \"address\": \"4th street\",","lastModifiedDate":"2021-03-04"},{"lineNumber":7,"author":{"gitId":"CSmortal"},"content":"      \"date\": \"2020-04-13 22:30\"","lastModifiedDate":"2021-03-04"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"  ]","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":1,"CSmortal":2,"noelmathewisaac":7}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\": {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\": 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\": 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\": \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\": {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\": 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\": 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\": 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"  \"taskifyFilePath\": \"addressbook.json\"","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":12,"noelmathewisaac":1}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\": {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\": 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\": 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\": {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\": 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\": 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"  \"taskifyFilePath\": \"addressbook.json\"","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":10,"noelmathewisaac":1}},{"path":"src/test/java/seedu/taskify/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":57,"noelmathewisaac":1}},{"path":"src/test/java/seedu/taskify/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.core;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                                               + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":26,"noelmathewisaac":1}},{"path":"src/test/java/seedu/taskify/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.core;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                                              int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":133,"noelmathewisaac":2}},{"path":"src/test/java/seedu/taskify/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.core.index;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"        final Index fifthTaskIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(fifthTaskIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(fifthTaskIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(fifthTaskIndex.equals(fifthTaskIndex));","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(fifthTaskIndex.equals(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(fifthTaskIndex.equals(5.0f));","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(fifthTaskIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":51,"noelmathewisaac":9}},{"path":"src/test/java/seedu/taskify/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.util;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"        assertNotNull(AppUtil.getImage(\"/images/taskify_32.png\"));","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":33,"noelmathewisaac":3}},{"path":"src/test/java/seedu/taskify/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.util;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"-":105,"noelmathewisaac":3}},{"path":"src/test/java/seedu/taskify/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.util;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.Config;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                       ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                       : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":112,"noelmathewisaac":4}},{"path":"src/test/java/seedu/taskify/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.util;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":21,"noelmathewisaac":2}},{"path":"src/test/java/seedu/taskify/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.util;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.testutil.SerializableTestClass;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.testutil.TestUtil;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"              .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":42,"noelmathewisaac":3}},{"path":"src/test/java/seedu/taskify/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.commons.util;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", (","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":"                ) -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", (","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":"                ) -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                           .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":137,"CSmortal":1,"noelmathewisaac":6}},{"path":"src/test/java/seedu/taskify/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.DESCRIPTION_DESC_AMY;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.AMY;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.AddCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.CommandResult;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.ListCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ModelManager;","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ReadOnlyTaskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.UserPrefs;","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.storage.JsonTaskifyStorage;","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.storage.StorageManager;","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.testutil.TaskBuilder;","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"        JsonTaskifyStorage taskifyStorage \u003d","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"                new JsonTaskifyStorage(temporaryFolder.resolve(\"taskify.json\"));","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"        StorageManager storage \u003d new StorageManager(taskifyStorage, userPrefsStorage);","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":"        // Setup LogicManager with JsonTaskifyIoExceptionThrowingStub","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"noelmathewisaac"},"content":"        JsonTaskifyStorage taskifyStorage \u003d","lastModifiedDate":"2021-03-01"},{"lineNumber":74,"author":{"gitId":"noelmathewisaac"},"content":"                new JsonTaskifyIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2021-03-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"noelmathewisaac"},"content":"        StorageManager storage \u003d new StorageManager(taskifyStorage, userPrefsStorage);","lastModifiedDate":"2021-03-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"khiaxeng"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + DESCRIPTION_DESC_AMY","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"hengyongming"},"content":"                                    + DATE_DESC_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":83,"author":{"gitId":"noelmathewisaac"},"content":"        Task expectedTask \u003d new TaskBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"noelmathewisaac"},"content":"        expectedModel.addTask(expectedTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"noelmathewisaac"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":92,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredTaskList().remove(0));","lastModifiedDate":"2021-03-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"noelmathewisaac"},"content":"     *","lastModifiedDate":"2021-03-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"noelmathewisaac"},"content":"     *","lastModifiedDate":"2021-03-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"noelmathewisaac"},"content":"     *","lastModifiedDate":"2021-03-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"noelmathewisaac"},"content":"     *","lastModifiedDate":"2021-03-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"noelmathewisaac"},"content":"     *","lastModifiedDate":"2021-03-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"noelmathewisaac"},"content":"    private static class JsonTaskifyIoExceptionThrowingStub extends JsonTaskifyStorage {","lastModifiedDate":"2021-03-01"},{"lineNumber":157,"author":{"gitId":"noelmathewisaac"},"content":"        private JsonTaskifyIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-03-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"noelmathewisaac"},"content":"        public void saveAddressBook(ReadOnlyTaskify taskify, Path filePath) throws IOException {","lastModifiedDate":"2021-03-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"hengyongming":2,"khiaxeng":1,"-":122,"CSmortal":1,"noelmathewisaac":40}},{"path":"src/test/java/seedu/taskify/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.getTypicalAddressBook;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ModelManager;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.UserPrefs;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.testutil.TaskBuilder;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"    private Model model;","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"    public void execute_newTask_success() {","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"        expectedModel.addTask(validTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"        assertCommandSuccess(new AddCommand(validTask), model,","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validTask), expectedModel);","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"        Task taskInList \u003d model.getAddressBook().getTaskList().get(0);","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"        assertCommandFailure(new AddCommand(taskInList), model, AddCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"noelmathewisaac":45}},{"path":"src/test/java/seedu/taskify/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.GuiSettings;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ReadOnlyTaskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.testutil.TaskBuilder;","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded();","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"        CommandResult commandResult \u003d new AddCommand(validTask).execute(modelStub);","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validTask), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(Arrays.asList(validTask), modelStub.tasksAdded);","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"        AddCommand addCommand \u003d new AddCommand(validTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"        ModelStub modelStub \u003d new ModelStubWithTask(validTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_TASK, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"        Task alice \u003d new TaskBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"        Task bob \u003d new TaskBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"noelmathewisaac"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"noelmathewisaac"},"content":"        public void setAddressBookFilePath(Path taskifyFilePath) {","lastModifiedDate":"2021-03-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"noelmathewisaac"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-03-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"noelmathewisaac"},"content":"        public void setAddressBook(ReadOnlyTaskify newData) {","lastModifiedDate":"2021-03-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"noelmathewisaac"},"content":"        public ReadOnlyTaskify getAddressBook() {","lastModifiedDate":"2021-03-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"noelmathewisaac"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-03-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"hengyongming"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"hengyongming"},"content":"        public void sortTask() {","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"hengyongming"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"hengyongming"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"noelmathewisaac"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2021-03-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"noelmathewisaac"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-03-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"noelmathewisaac"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-03-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"hengyongming"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":154,"author":{"gitId":"hengyongming"},"content":"        public ObservableList\u003cTask\u003e getExpiredFilteredTaskList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":155,"author":{"gitId":"hengyongming"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"hengyongming"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":158,"author":{"gitId":"hengyongming"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"hengyongming"},"content":"        public ObservableList\u003cTask\u003e getCompletedFilteredTaskList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"hengyongming"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"hengyongming"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"noelmathewisaac"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-03-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":168,"author":{"gitId":"hengyongming"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":169,"author":{"gitId":"hengyongming"},"content":"        public void updateExpiredFilterTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-03-23"},{"lineNumber":170,"author":{"gitId":"hengyongming"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-23"},{"lineNumber":171,"author":{"gitId":"hengyongming"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":172,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":173,"author":{"gitId":"hengyongming"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"hengyongming"},"content":"        public void updateCompletedFilterTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-03-24"},{"lineNumber":175,"author":{"gitId":"hengyongming"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"hengyongming"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"noelmathewisaac"},"content":"     * A Model stub that contains a single task.","lastModifiedDate":"2021-03-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"noelmathewisaac"},"content":"    private class ModelStubWithTask extends ModelStub {","lastModifiedDate":"2021-03-01"},{"lineNumber":183,"author":{"gitId":"noelmathewisaac"},"content":"        private final Task task;","lastModifiedDate":"2021-03-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"noelmathewisaac"},"content":"        ModelStubWithTask(Task task) {","lastModifiedDate":"2021-03-01"},{"lineNumber":186,"author":{"gitId":"noelmathewisaac"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-03-01"},{"lineNumber":187,"author":{"gitId":"noelmathewisaac"},"content":"            this.task \u003d task;","lastModifiedDate":"2021-03-01"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"noelmathewisaac"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-03-01"},{"lineNumber":192,"author":{"gitId":"noelmathewisaac"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-03-01"},{"lineNumber":193,"author":{"gitId":"noelmathewisaac"},"content":"            return this.task.isSameTask(task);","lastModifiedDate":"2021-03-01"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"noelmathewisaac"},"content":"     * A Model stub that always accept the task being added.","lastModifiedDate":"2021-03-01"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"noelmathewisaac"},"content":"    private class ModelStubAcceptingTaskAdded extends ModelStub {","lastModifiedDate":"2021-03-01"},{"lineNumber":201,"author":{"gitId":"noelmathewisaac"},"content":"        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-01"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"noelmathewisaac"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-03-01"},{"lineNumber":205,"author":{"gitId":"noelmathewisaac"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-03-01"},{"lineNumber":206,"author":{"gitId":"noelmathewisaac"},"content":"            return tasksAdded.stream().anyMatch(task::isSameTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"noelmathewisaac"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-03-01"},{"lineNumber":211,"author":{"gitId":"noelmathewisaac"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-03-01"},{"lineNumber":212,"author":{"gitId":"noelmathewisaac"},"content":"            tasksAdded.add(task);","lastModifiedDate":"2021-03-01"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"noelmathewisaac"},"content":"        public ReadOnlyTaskify getAddressBook() {","lastModifiedDate":"2021-03-01"},{"lineNumber":217,"author":{"gitId":"noelmathewisaac"},"content":"            return new Taskify();","lastModifiedDate":"2021-03-01"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"hengyongming":25,"-":140,"noelmathewisaac":56}},{"path":"src/test/java/seedu/taskify/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.getTypicalAddressBook;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ModelManager;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.UserPrefs;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"        expectedModel.setAddressBook(new Taskify());","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":24,"noelmathewisaac":8}},{"path":"src/test/java/seedu/taskify/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"-":53,"noelmathewisaac":1}},{"path":"src/test/java/seedu/taskify/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.index.Index;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.StatusType;","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"hengyongming"},"content":"    public static final String VALID_DESCRIPTION_AMY \u003d \"11111111\";","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"hengyongming"},"content":"    public static final String VALID_DESCRIPTION_BOB \u003d \"22222222\";","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"    public static final String VALID_STATUS_NOT_DONE \u003d \"not done\";","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"    public static final String VALID_STATUS_IN_PROGRESS \u003d \"in progress\";","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"    public static final String VALID_STATUS_COMPLETED \u003d \"completed\";","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"CSmortal"},"content":"    public static final String VALID_DATE_AMY \u003d \"2020-12-25 22:30\";","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"CSmortal"},"content":"    public static final String VALID_DATE_BOB \u003d \"2019-12-25 22:30\";","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"hengyongming"},"content":"    public static final String DESCRIPTION_DESC_AMY \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_AMY;","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"hengyongming"},"content":"    public static final String DESCRIPTION_DESC_BOB \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"CSmortal"},"content":"    public static final String DATE_DESC_AMY \u003d \" \" + PREFIX_DATE + VALID_DATE_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"CSmortal"},"content":"    public static final String DATE_DESC_BOB \u003d \" \" + PREFIX_DATE + VALID_DATE_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"hengyongming"},"content":"    public static final String INVALID_DESCRIPTION_DESC \u003d \" \" + PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"khiaxeng"},"content":"    public static final String INVALID_STATUS_DESC \u003d \" \" + PREFIX_STATUS; // empty string not allowed for status","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"CSmortal"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \" + PREFIX_DATE; // empty string not allowed for dates","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"    public static final EditCommand.EditTaskDescriptor DESC_AMY;","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"    public static final EditCommand.EditTaskDescriptor DESC_BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"        DESC_AMY \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"hengyongming"},"content":"                .withDescription(VALID_DESCRIPTION_AMY).withStatus(StatusType.NOT_DONE)","lastModifiedDate":"2021-03-20"},{"lineNumber":66,"author":{"gitId":"CSmortal"},"content":"                .withDate(VALID_DATE_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"        DESC_BOB \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"hengyongming"},"content":"                .withDescription(VALID_DESCRIPTION_BOB).withStatus(StatusType.NOT_DONE)","lastModifiedDate":"2021-03-20"},{"lineNumber":69,"author":{"gitId":"CSmortal"},"content":"                .withDate(VALID_DATE_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"noelmathewisaac"},"content":"     * - the address book, filtered task list and selected task in {@code actualModel} remain unchanged","lastModifiedDate":"2021-03-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"noelmathewisaac"},"content":"        Taskify expectedTaskify \u003d new Taskify(actualModel.getAddressBook());","lastModifiedDate":"2021-03-01"},{"lineNumber":108,"author":{"gitId":"noelmathewisaac"},"content":"        List\u003cTask\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredTaskList());","lastModifiedDate":"2021-03-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":111,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(expectedTaskify, actualModel.getAddressBook());","lastModifiedDate":"2021-03-01"},{"lineNumber":112,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredTaskList());","lastModifiedDate":"2021-03-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":116,"author":{"gitId":"noelmathewisaac"},"content":"     * Updates {@code model}\u0027s filtered list to show only the task at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"noelmathewisaac"},"content":"    public static void showTaskAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-01"},{"lineNumber":120,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTaskList().size());","lastModifiedDate":"2021-03-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"noelmathewisaac"},"content":"        Task task \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":123,"author":{"gitId":"noelmathewisaac"},"content":"        final String[] splitName \u003d task.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-01"},{"lineNumber":124,"author":{"gitId":"noelmathewisaac"},"content":"        model.updateFilteredTaskList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-03-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(1, model.getFilteredTaskList().size());","lastModifiedDate":"2021-03-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"CSmortal"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":130,"author":{"gitId":"CSmortal"},"content":"     * Updates {@code model}\u0027s filtered list to show only the tasks at the given {@code targetIndexes} in the","lastModifiedDate":"2021-03-21"},{"lineNumber":131,"author":{"gitId":"CSmortal"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-03-21"},{"lineNumber":132,"author":{"gitId":"CSmortal"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":133,"author":{"gitId":"CSmortal"},"content":"    public static void showTasksAtIndexes(Model model, List\u003cIndex\u003e targetIndexes) {","lastModifiedDate":"2021-03-21"},{"lineNumber":134,"author":{"gitId":"CSmortal"},"content":"        List\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-21"},{"lineNumber":135,"author":{"gitId":"CSmortal"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2021-03-21"},{"lineNumber":136,"author":{"gitId":"CSmortal"},"content":"            assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTaskList().size());","lastModifiedDate":"2021-03-21"},{"lineNumber":137,"author":{"gitId":"CSmortal"},"content":"            Task task \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-21"},{"lineNumber":138,"author":{"gitId":"CSmortal"},"content":"            String[] splitName \u003d task.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-21"},{"lineNumber":139,"author":{"gitId":"CSmortal"},"content":"            keywords.add(splitName[0]);","lastModifiedDate":"2021-03-21"},{"lineNumber":140,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":141,"author":{"gitId":"CSmortal"},"content":"        model.updateFilteredTaskList(new NameContainsKeywordsPredicate(keywords));","lastModifiedDate":"2021-03-21"},{"lineNumber":142,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":143,"author":{"gitId":"CSmortal"},"content":"        assertEquals(targetIndexes.size(), model.getFilteredTaskList().size());","lastModifiedDate":"2021-03-21"},{"lineNumber":144,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":145,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"hengyongming":8,"khiaxeng":7,"-":79,"CSmortal":25,"noelmathewisaac":27}},{"path":"src/test/java/seedu/taskify/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.getTypicalAddressBook;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.Messages;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.index.Index;","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ModelManager;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.UserPrefs;","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"        showNoTask(expectedModel);","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"noelmathewisaac"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTaskList().size());","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"noelmathewisaac"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"noelmathewisaac"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"noelmathewisaac"},"content":"    private void showNoTask(Model model) {","lastModifiedDate":"2021-03-01"},{"lineNumber":105,"author":{"gitId":"noelmathewisaac"},"content":"        model.updateFilteredTaskList(p -\u003e false);","lastModifiedDate":"2021-03-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(model.getFilteredTaskList().isEmpty());","lastModifiedDate":"2021-03-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":73,"noelmathewisaac":36}},{"path":"src/test/java/seedu/taskify/logic/commands/DeleteMultipleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CSmortal"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"CSmortal"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.showTasksAtIndexes;","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.testutil.TypicalIndexes.INDEXES_FIRST_TO_THIRD_TASK;","lastModifiedDate":"2021-03-21"},{"lineNumber":9,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.testutil.TypicalIndexes.INDEX_THIRD_TASK;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.testutil.TypicalTasks.BENSON;","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.testutil.TypicalTasks.CARL;","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.testutil.TypicalTasks.ELLE;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.testutil.TypicalTasks.getTypicalAddressBook;","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"CSmortal"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"CSmortal"},"content":"import java.util.List;","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"CSmortal"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.commons.core.Messages;","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.commons.core.index.Index;","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.ModelManager;","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.UserPrefs;","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.task.Status;","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.task.StatusType;","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"CSmortal"},"content":"/**","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"CSmortal"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"CSmortal"},"content":" * {@code DeleteMultipleCommand}.","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"CSmortal"},"content":" */","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"CSmortal"},"content":"public class DeleteMultipleCommandTest {","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"CSmortal"},"content":"    private static final String MESSAGE_DELETE_FIRST_TO_THIRD_TASK_SUCCESS \u003d","lastModifiedDate":"2021-03-21"},{"lineNumber":39,"author":{"gitId":"CSmortal"},"content":"            \"Deleted Tasks: \" + ALICE.toString() + BENSON.toString() + CARL.toString();","lastModifiedDate":"2021-03-21"},{"lineNumber":40,"author":{"gitId":"CSmortal"},"content":"    private static final String MESSAGE_DELETE_COMPLETED_TASKS_SUCCESS \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"CSmortal"},"content":"            \"Deleted Tasks: \" + CARL.toString() + ELLE.toString();","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":43,"author":{"gitId":"CSmortal"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"CSmortal"},"content":"    private List\u003cTask\u003e getTasksByIndexes(List\u003cIndex\u003e indexes) {","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"CSmortal"},"content":"        List\u003cTask\u003e requestedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"CSmortal"},"content":"        for (int i \u003d 0; i \u003c indexes.size(); i++) {","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"CSmortal"},"content":"            requestedTasks.add(model.getFilteredTaskList().get(i));","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"CSmortal"},"content":"        return requestedTasks;","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"CSmortal"},"content":"    private void deleteTasksFromModel(Model model, List\u003cTask\u003e tasksToDelete) {","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"CSmortal"},"content":"        for (Task toDelete : tasksToDelete) {","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"CSmortal"},"content":"            model.deleteTask(toDelete);","lastModifiedDate":"2021-03-21"},{"lineNumber":57,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":58,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":59,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":61,"author":{"gitId":"CSmortal"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":62,"author":{"gitId":"CSmortal"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"CSmortal"},"content":"        List\u003cTask\u003e tasksToDelete \u003d getTasksByIndexes(INDEXES_FIRST_TO_THIRD_TASK);","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"CSmortal"},"content":"        DeleteMultipleCommand deleteMulCommand \u003d new DeleteMultipleCommand(INDEXES_FIRST_TO_THIRD_TASK);","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"CSmortal"},"content":"        String expectedMessage \u003d MESSAGE_DELETE_FIRST_TO_THIRD_TASK_SUCCESS;","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"CSmortal"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"CSmortal"},"content":"        deleteTasksFromModel(expectedModel, tasksToDelete);","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"CSmortal"},"content":"        assertCommandSuccess(deleteMulCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"CSmortal"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"CSmortal"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"CSmortal"},"content":"        List\u003cIndex\u003e targetIndexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"CSmortal"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"CSmortal"},"content":"        targetIndexes.add(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"CSmortal"},"content":"        targetIndexes.add(INDEX_SECOND_TASK);","lastModifiedDate":"2021-03-21"},{"lineNumber":80,"author":{"gitId":"CSmortal"},"content":"        targetIndexes.add(outOfBoundIndex);","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"CSmortal"},"content":"        DeleteMultipleCommand deleteMulCommand \u003d new DeleteMultipleCommand(targetIndexes);","lastModifiedDate":"2021-03-21"},{"lineNumber":83,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"CSmortal"},"content":"        assertCommandFailure(deleteMulCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-21"},{"lineNumber":85,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":86,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"CSmortal"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":88,"author":{"gitId":"CSmortal"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-03-21"},{"lineNumber":89,"author":{"gitId":"CSmortal"},"content":"        showTasksAtIndexes(model, INDEXES_FIRST_TO_THIRD_TASK);","lastModifiedDate":"2021-03-21"},{"lineNumber":90,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":91,"author":{"gitId":"CSmortal"},"content":"        List\u003cTask\u003e tasksToDelete \u003d getTasksByIndexes(INDEXES_FIRST_TO_THIRD_TASK);","lastModifiedDate":"2021-03-21"},{"lineNumber":92,"author":{"gitId":"CSmortal"},"content":"        DeleteMultipleCommand deleteMulCommand \u003d new DeleteMultipleCommand(INDEXES_FIRST_TO_THIRD_TASK);","lastModifiedDate":"2021-03-21"},{"lineNumber":93,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":94,"author":{"gitId":"CSmortal"},"content":"        String expectedMessage \u003d MESSAGE_DELETE_FIRST_TO_THIRD_TASK_SUCCESS;","lastModifiedDate":"2021-03-21"},{"lineNumber":95,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":96,"author":{"gitId":"CSmortal"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-21"},{"lineNumber":97,"author":{"gitId":"CSmortal"},"content":"        deleteTasksFromModel(expectedModel, tasksToDelete);","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"CSmortal"},"content":"        showNoTask(expectedModel);","lastModifiedDate":"2021-03-21"},{"lineNumber":99,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":100,"author":{"gitId":"CSmortal"},"content":"        assertCommandSuccess(deleteMulCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-21"},{"lineNumber":101,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":102,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":103,"author":{"gitId":"CSmortal"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":104,"author":{"gitId":"CSmortal"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-21"},{"lineNumber":105,"author":{"gitId":"CSmortal"},"content":"        showTasksAtIndexes(model, INDEXES_FIRST_TO_THIRD_TASK);","lastModifiedDate":"2021-03-21"},{"lineNumber":106,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":107,"author":{"gitId":"CSmortal"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(4);","lastModifiedDate":"2021-03-21"},{"lineNumber":108,"author":{"gitId":"CSmortal"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-03-21"},{"lineNumber":109,"author":{"gitId":"CSmortal"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTaskList().size());","lastModifiedDate":"2021-03-21"},{"lineNumber":110,"author":{"gitId":"CSmortal"},"content":"        List\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e(INDEXES_FIRST_TO_THIRD_TASK);","lastModifiedDate":"2021-03-21"},{"lineNumber":111,"author":{"gitId":"CSmortal"},"content":"        indexes.add(outOfBoundIndex);","lastModifiedDate":"2021-03-21"},{"lineNumber":112,"author":{"gitId":"CSmortal"},"content":"        DeleteMultipleCommand deleteMulCommand \u003d new DeleteMultipleCommand(indexes);","lastModifiedDate":"2021-03-21"},{"lineNumber":113,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":114,"author":{"gitId":"CSmortal"},"content":"        assertCommandFailure(deleteMulCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-21"},{"lineNumber":115,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":116,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":117,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"CSmortal"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"CSmortal"},"content":"    public void execute_deleteByStatus_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"CSmortal"},"content":"        List\u003cTask\u003e tasksToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"CSmortal"},"content":"        tasksToDelete.add(CARL);","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"CSmortal"},"content":"        tasksToDelete.add(ELLE);","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"CSmortal"},"content":"        DeleteMultipleCommand deleteMulCommand \u003d new DeleteMultipleCommand(new Status(StatusType.COMPLETED));","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"CSmortal"},"content":"        String expectedMessage \u003d MESSAGE_DELETE_COMPLETED_TASKS_SUCCESS;","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"CSmortal"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"CSmortal"},"content":"        deleteTasksFromModel(expectedModel, tasksToDelete);","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"CSmortal"},"content":"        assertCommandSuccess(deleteMulCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"CSmortal"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":137,"author":{"gitId":"CSmortal"},"content":"    public void equals() {","lastModifiedDate":"2021-03-21"},{"lineNumber":138,"author":{"gitId":"CSmortal"},"content":"        List\u003cIndex\u003e firstList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-21"},{"lineNumber":139,"author":{"gitId":"CSmortal"},"content":"        List\u003cIndex\u003e secondList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-21"},{"lineNumber":140,"author":{"gitId":"CSmortal"},"content":"        firstList.add(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-21"},{"lineNumber":141,"author":{"gitId":"CSmortal"},"content":"        firstList.add(INDEX_SECOND_TASK);","lastModifiedDate":"2021-03-21"},{"lineNumber":142,"author":{"gitId":"CSmortal"},"content":"        secondList.add(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-21"},{"lineNumber":143,"author":{"gitId":"CSmortal"},"content":"        secondList.add(INDEX_THIRD_TASK);","lastModifiedDate":"2021-03-21"},{"lineNumber":144,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":145,"author":{"gitId":"CSmortal"},"content":"        DeleteMultipleCommand firstCommand \u003d new DeleteMultipleCommand(firstList);","lastModifiedDate":"2021-03-21"},{"lineNumber":146,"author":{"gitId":"CSmortal"},"content":"        DeleteMultipleCommand secondCommand \u003d new DeleteMultipleCommand(secondList);","lastModifiedDate":"2021-03-21"},{"lineNumber":147,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":148,"author":{"gitId":"CSmortal"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-21"},{"lineNumber":149,"author":{"gitId":"CSmortal"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2021-03-21"},{"lineNumber":150,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":151,"author":{"gitId":"CSmortal"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-21"},{"lineNumber":152,"author":{"gitId":"CSmortal"},"content":"        DeleteMultipleCommand secondCommandCopy \u003d new DeleteMultipleCommand(secondList);","lastModifiedDate":"2021-03-21"},{"lineNumber":153,"author":{"gitId":"CSmortal"},"content":"        assertTrue(secondCommand.equals(secondCommandCopy));","lastModifiedDate":"2021-03-21"},{"lineNumber":154,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":155,"author":{"gitId":"CSmortal"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-21"},{"lineNumber":156,"author":{"gitId":"CSmortal"},"content":"        assertFalse(firstCommand.equals(1));","lastModifiedDate":"2021-03-21"},{"lineNumber":157,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":158,"author":{"gitId":"CSmortal"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-21"},{"lineNumber":159,"author":{"gitId":"CSmortal"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2021-03-21"},{"lineNumber":160,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":161,"author":{"gitId":"CSmortal"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-21"},{"lineNumber":162,"author":{"gitId":"CSmortal"},"content":"        assertFalse(firstCommand.equals(secondCommand));","lastModifiedDate":"2021-03-21"},{"lineNumber":163,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":164,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":165,"author":{"gitId":"CSmortal"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":166,"author":{"gitId":"CSmortal"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-03-21"},{"lineNumber":167,"author":{"gitId":"CSmortal"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":168,"author":{"gitId":"CSmortal"},"content":"    private void showNoTask(Model model) {","lastModifiedDate":"2021-03-21"},{"lineNumber":169,"author":{"gitId":"CSmortal"},"content":"        model.updateFilteredTaskList(p -\u003e false);","lastModifiedDate":"2021-03-21"},{"lineNumber":170,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":171,"author":{"gitId":"CSmortal"},"content":"        assertTrue(model.getFilteredTaskList().isEmpty());","lastModifiedDate":"2021-03-21"},{"lineNumber":172,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":173,"author":{"gitId":"CSmortal"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"CSmortal":173}},{"path":"src/test/java/seedu/taskify/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.getTypicalAddressBook;","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.index.Index;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ModelManager;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.UserPrefs;","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.testutil.TaskBuilder;","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"public class EditCommandTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"hengyongming"},"content":"        CommandResult.setHomeTab();","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"        Task editedTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(editedTask).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TASK, descriptor);","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"        Model expectedModel \u003d new ModelManager(new Taskify(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"hengyongming"},"content":"        CommandResult.setHomeTab();","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"        Index indexLastTask \u003d Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"        Task lastTask \u003d model.getFilteredTaskList().get(indexLastTask.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"        TaskBuilder taskInList \u003d new TaskBuilder(lastTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"hengyongming"},"content":"        Task editedTask \u003d taskInList.withName(VALID_NAME_BOB).withDescription(VALID_DESCRIPTION_BOB)","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"                                  .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"hengyongming"},"content":"                                                .withDescription(VALID_DESCRIPTION_BOB)","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"hengyongming"},"content":"                                                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastTask, descriptor);","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":"        Model expectedModel \u003d new ModelManager(new Taskify(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-01"},{"lineNumber":70,"author":{"gitId":"noelmathewisaac"},"content":"        expectedModel.setTask(lastTask, editedTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":74,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":75,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"hengyongming"},"content":"        CommandResult.setHomeTab();","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"noelmathewisaac"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TASK, new EditTaskDescriptor());","lastModifiedDate":"2021-03-01"},{"lineNumber":79,"author":{"gitId":"noelmathewisaac"},"content":"        Task editedTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":80,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"noelmathewisaac"},"content":"        Model expectedModel \u003d new ModelManager(new Taskify(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-01"},{"lineNumber":84,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":85,"author":{"gitId":"noelmathewisaac"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-01"},{"lineNumber":86,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":87,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":88,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":89,"author":{"gitId":"noelmathewisaac"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-03-01"},{"lineNumber":90,"author":{"gitId":"hengyongming"},"content":"        CommandResult.setHomeTab();","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"noelmathewisaac"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-01"},{"lineNumber":92,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":93,"author":{"gitId":"noelmathewisaac"},"content":"        Task taskInFilteredList \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":94,"author":{"gitId":"noelmathewisaac"},"content":"        Task editedTask \u003d new TaskBuilder(taskInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":95,"author":{"gitId":"noelmathewisaac"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2021-03-01"},{"lineNumber":96,"author":{"gitId":"noelmathewisaac"},"content":"                new EditTaskDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-01"},{"lineNumber":97,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":98,"author":{"gitId":"noelmathewisaac"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":99,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":100,"author":{"gitId":"noelmathewisaac"},"content":"        Model expectedModel \u003d new ModelManager(new Taskify(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-01"},{"lineNumber":101,"author":{"gitId":"noelmathewisaac"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2021-03-01"},{"lineNumber":102,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":103,"author":{"gitId":"noelmathewisaac"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-01"},{"lineNumber":104,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":105,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":106,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":107,"author":{"gitId":"noelmathewisaac"},"content":"    public void execute_duplicateTaskUnfilteredList_failure() {","lastModifiedDate":"2021-03-01"},{"lineNumber":108,"author":{"gitId":"hengyongming"},"content":"        CommandResult.setHomeTab();","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"noelmathewisaac"},"content":"        Task firstTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":110,"author":{"gitId":"noelmathewisaac"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(firstTask).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":111,"author":{"gitId":"noelmathewisaac"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_TASK, descriptor);","lastModifiedDate":"2021-03-01"},{"lineNumber":112,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":113,"author":{"gitId":"noelmathewisaac"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-01"},{"lineNumber":114,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":115,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":116,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":117,"author":{"gitId":"noelmathewisaac"},"content":"    public void execute_duplicateTaskFilteredList_failure() {","lastModifiedDate":"2021-03-01"},{"lineNumber":118,"author":{"gitId":"hengyongming"},"content":"        CommandResult.setHomeTab();","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"noelmathewisaac"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-01"},{"lineNumber":120,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":121,"author":{"gitId":"khiaxeng"},"content":"        // edit task in filtered list into a duplicate in Taskify","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"noelmathewisaac"},"content":"        Task taskInList \u003d model.getAddressBook().getTaskList().get(INDEX_SECOND_TASK.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":123,"author":{"gitId":"noelmathewisaac"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2021-03-01"},{"lineNumber":124,"author":{"gitId":"noelmathewisaac"},"content":"                new EditTaskDescriptorBuilder(taskInList).build());","lastModifiedDate":"2021-03-01"},{"lineNumber":125,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":126,"author":{"gitId":"noelmathewisaac"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-01"},{"lineNumber":127,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":128,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":129,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":130,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":131,"author":{"gitId":"noelmathewisaac"},"content":"    public void equals() {","lastModifiedDate":"2021-03-01"},{"lineNumber":132,"author":{"gitId":"hengyongming"},"content":"        CommandResult.setHomeTab();","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"noelmathewisaac"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_TASK, DESC_AMY);","lastModifiedDate":"2021-03-01"},{"lineNumber":134,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":135,"author":{"gitId":"noelmathewisaac"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-01"},{"lineNumber":136,"author":{"gitId":"noelmathewisaac"},"content":"        EditTaskDescriptor copyDescriptor \u003d new EditTaskDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-01"},{"lineNumber":137,"author":{"gitId":"noelmathewisaac"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_TASK, copyDescriptor);","lastModifiedDate":"2021-03-01"},{"lineNumber":138,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-03-01"},{"lineNumber":139,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":140,"author":{"gitId":"noelmathewisaac"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-01"},{"lineNumber":141,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-03-01"},{"lineNumber":142,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":143,"author":{"gitId":"noelmathewisaac"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":144,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":145,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":146,"author":{"gitId":"noelmathewisaac"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":147,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-03-01"},{"lineNumber":148,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":149,"author":{"gitId":"noelmathewisaac"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":150,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_TASK, DESC_AMY)));","lastModifiedDate":"2021-03-01"},{"lineNumber":151,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":152,"author":{"gitId":"noelmathewisaac"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":153,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_TASK, DESC_BOB)));","lastModifiedDate":"2021-03-01"},{"lineNumber":154,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":155,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":156,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":13,"khiaxeng":1,"noelmathewisaac":142}},{"path":"src/test/java/seedu/taskify/logic/commands/EditTaskDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.StatusType;","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"public class EditTaskDescriptorTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"    public void equals() {","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"        EditTaskDescriptor descriptorWithSameValues \u003d new EditTaskDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"        EditTaskDescriptor editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"hengyongming"},"content":"        editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY).withDescription(VALID_DESCRIPTION_BOB).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"khiaxeng"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"khiaxeng"},"content":"        editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY).withStatus(StatusType.COMPLETED).build();","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"        editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":2,"khiaxeng":3,"noelmathewisaac":48}},{"path":"src/test/java/seedu/taskify/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ModelManager;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":15,"noelmathewisaac":5}},{"path":"src/test/java/seedu/taskify/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_TASKS_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.CARL;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.ELLE;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.FIONA;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.getTypicalAddressBook;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ModelManager;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.UserPrefs;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"    public void execute_zeroKeywords_noTaskFound() {","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredTaskList());","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"    public void execute_multipleKeywords_multipleTasksFound() {","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-03-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredTaskList());","lastModifiedDate":"2021-03-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"khiaxeng":1,"-":63,"noelmathewisaac":19}},{"path":"src/test/java/seedu/taskify/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ModelManager;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":15,"noelmathewisaac":5}},{"path":"src/test/java/seedu/taskify/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.getTypicalAddressBook;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ModelManager;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.UserPrefs;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":30,"noelmathewisaac":9}},{"path":"src/test/java/seedu/taskify/logic/commands/TagSearchCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_TASKS_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.BENSON;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.DANIEL;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.getTypicalAddressBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ModelManager;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.UserPrefs;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.predicates.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":" * Contains integration tests (interaction with the Model) for {@code TagSearchCommand}.","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"public class TagSearchCommandTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"    public void equals() {","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"        TagSearchCommand tagSearchFirstCommand \u003d new TagSearchCommand(firstPredicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"        TagSearchCommand tagSearchSecondCommand \u003d new TagSearchCommand(secondPredicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(tagSearchFirstCommand.equals(tagSearchFirstCommand));","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"        TagSearchCommand tagSearchFirstCommandCopy \u003d new TagSearchCommand(firstPredicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(tagSearchFirstCommand.equals(tagSearchFirstCommandCopy));","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(tagSearchFirstCommand.equals(1));","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(tagSearchFirstCommand.equals(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"        // different commands -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(tagSearchFirstCommand.equals(tagSearchSecondCommand));","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"    public void execute_zeroKeywords_noTaskFound() {","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"hengyongming"},"content":"        CommandResult.setHomeTab();","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"        TagContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"        TagSearchCommand command \u003d new TagSearchCommand(predicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredTaskList());","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":"    public void execute_multipleKeywords_multipleTasksFound() {","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"hengyongming"},"content":"        CommandResult.setHomeTab();","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":"        TagContainsKeywordsPredicate predicate \u003d preparePredicate(\"friends owesMoney\");","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"noelmathewisaac"},"content":"        TagSearchCommand command \u003d new TagSearchCommand(predicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"noelmathewisaac"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"noelmathewisaac"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredTaskList());","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"noelmathewisaac"},"content":"     * Parses {@code userInput} into a {@code TagContainsKeywordsPredicate}.","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"    private TagContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"noelmathewisaac"},"content":"        return new TagContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"hengyongming":2,"khiaxeng":1,"noelmathewisaac":82}},{"path":"src/test/java/seedu/taskify/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package seedu.taskify.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_TASKS_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"import static seedu.taskify.testutil.TypicalTasks.BENSON;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"import static seedu.taskify.testutil.TypicalTasks.getTypicalAddressBook;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.ModelManager;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.UserPrefs;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.predicates.TaskHasSameDatePredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"class ViewCommandTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"    public void equals() {","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"        TaskHasSameDatePredicate firstPredicate \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"                new TaskHasSameDatePredicate(LocalDate.parse(\"2021-03-24\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"        TaskHasSameDatePredicate secondPredicate \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"                new TaskHasSameDatePredicate(LocalDate.parse(\"2020-12-25\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"        ViewCommand viewFirstCommand \u003d new ViewCommand(firstPredicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"        ViewCommand viewSecondCommand \u003d new ViewCommand(secondPredicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommand));","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"        ViewCommand viewFirstCommandCopy \u003d new ViewCommand(firstPredicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommandCopy));","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"khiaxeng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"khiaxeng"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"khiaxeng"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"khiaxeng"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"khiaxeng"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"khiaxeng"},"content":"    public void execute_noTaskWithDate_noTaskFound() {","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"khiaxeng"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"khiaxeng"},"content":"        TaskHasSameDatePredicate predicate \u003d new TaskHasSameDatePredicate(LocalDate.parse(\"2021-03-25\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"khiaxeng"},"content":"        ViewCommand command \u003d new ViewCommand(predicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"khiaxeng"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"khiaxeng"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"khiaxeng"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredTaskList());","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"khiaxeng"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"khiaxeng"},"content":"    public void execute_taskWithDateExists_taskFound() {","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"khiaxeng"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"khiaxeng"},"content":"        TaskHasSameDatePredicate predicate \u003d new TaskHasSameDatePredicate(LocalDate.parse(\"2015-01-23\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"khiaxeng"},"content":"        ViewCommand command \u003d new ViewCommand(predicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"khiaxeng"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"khiaxeng"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"khiaxeng"},"content":"        assertEquals(Arrays.asList(BENSON), model.getFilteredTaskList());","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"khiaxeng"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"khiaxeng":72}},{"path":"src/test/java/seedu/taskify/logic/commands/util/DeleteMultipleCommandUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CSmortal"},"content":"package seedu.taskify.logic.commands.util;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"CSmortal"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.util.DeleteMultipleCommandUtil.MESSAGE_AT_LEAST_ONE_INVALID_INDEX;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.util.DeleteMultipleCommandUtil.MESSAGE_DELETE_BY_STATUS_USAGE;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.util.DeleteMultipleCommandUtil.MESSAGE_INVALID_INDEX_RANGE;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.util.DeleteMultipleCommandUtil.extractStringArgumentsIntoIndexes;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.util.DeleteMultipleCommandUtil.hasMultipleValidIndex;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.util.DeleteMultipleCommandUtil.isDeletingTasksByStatus;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.model.task.Status.INVALID_STATUS_STRING;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"CSmortal"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"CSmortal"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"CSmortal"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"CSmortal"},"content":"public class DeleteMultipleCommandUtilTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"CSmortal"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"CSmortal"},"content":"    @ValueSource(strings \u003d {\"1 2\", \"   4  10 12   20\", \"5-8\"})","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"CSmortal"},"content":"    public void hasMultipleValidIndex_validArgs_returnsTrue(String input) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"CSmortal"},"content":"        assertTrue(hasMultipleValidIndex(input));","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"CSmortal"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"CSmortal"},"content":"    @ValueSource(strings \u003d {\" 3 kappa\", \" 1.0 2 3.0\", \" 1, 2, 3\", \"3-4.0\"})","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"CSmortal"},"content":"    public void hasMultipleValidIndex_invalidArgs_throwsParseException(String input) {","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"CSmortal"},"content":"        assertThrows(ParseException.class, MESSAGE_AT_LEAST_ONE_INVALID_INDEX, () -\u003e hasMultipleValidIndex(input));","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"CSmortal"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"CSmortal"},"content":"    public void hasMultipleValidIndex_oneIndexAndValid_returnsFalse() throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"CSmortal"},"content":"        assertFalse(hasMultipleValidIndex(\" 2\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"CSmortal"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"CSmortal"},"content":"    public void hasMultipleValidIndex_rangeWithSameEnds_throwsParseException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"CSmortal"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX_RANGE, () -\u003e hasMultipleValidIndex(\"3-3\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"CSmortal"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"CSmortal"},"content":"    @ValueSource(strings \u003d {\"not done -all\", \"completed -all \", \" in progress -all \"})","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"CSmortal"},"content":"    public void isDeletingTasksByStatus_validArgs_returnsTrue(String input) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"CSmortal"},"content":"        assertTrue(isDeletingTasksByStatus(input));","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"CSmortal"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"CSmortal"},"content":"    @ValueSource(strings \u003d {\" 1 2 3\", \" 1-3 \"})","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"CSmortal"},"content":"    public void isDeletingTasksByStatus_notDeletingByStatus_returnsFalse(String input) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"CSmortal"},"content":"        assertFalse(isDeletingTasksByStatus(input));","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"CSmortal"},"content":"    // v1.4 improve on this","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"CSmortal"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"CSmortal"},"content":"    @ValueSource(strings \u003d {\"not done all\", \"not Done -all \", \"notDone -all\"})","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"CSmortal"},"content":"    public void isDeletingTasksByStatus_triesToDeleteByStatusButInvalidArgs_throwsParseException(String input) {","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"CSmortal"},"content":"        switch (input) {","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"CSmortal"},"content":"        case \"not done all\":","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"CSmortal"},"content":"            assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"CSmortal"},"content":"                    MESSAGE_DELETE_BY_STATUS_USAGE), () -\u003e isDeletingTasksByStatus(input));","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"CSmortal"},"content":"            break;","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"CSmortal"},"content":"        default:","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"CSmortal"},"content":"            assertThrows(ParseException.class, INVALID_STATUS_STRING, () -\u003e isDeletingTasksByStatus(input));","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"CSmortal"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"CSmortal"},"content":"    public void extractStringArguments_validIndexRange_returnsStringArray() throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"CSmortal"},"content":"        assertArrayEquals(new String[]{\"1\", \"2\"}, extractStringArgumentsIntoIndexes(\" 1-2\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"CSmortal"},"content":"        assertArrayEquals(new String[]{\"100\", \"101\", \"102\", \"103\", \"104\", \"105\"},","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"CSmortal"},"content":"                extractStringArgumentsIntoIndexes(\"100-105\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"CSmortal"},"content":"        assertArrayEquals(new String[]{\"9\", \"10\", \"11\", \"12\"}, extractStringArgumentsIntoIndexes(\"  9-12   \"));","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"CSmortal"},"content":"        assertArrayEquals(new String[]{\"4\", \"10\", \"6\"}, extractStringArgumentsIntoIndexes(\" 4 10 6\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"CSmortal"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"CSmortal"},"content":"    @ValueSource(strings \u003d {\"10-10\", \"  40-39  \"})","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"CSmortal"},"content":"    public void extractStringArguments_invalidIndexRange_throwsParseException(String input) {","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"CSmortal"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX_RANGE, () -\u003e extractStringArgumentsIntoIndexes(input));","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"CSmortal"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"CSmortal"},"content":"    @ValueSource(strings \u003d {\"  1-\", \"10-wtf \", \"9to10\", \"000100-   000101\"})","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"CSmortal"},"content":"    public void extractStringArguments_argsIsInvalidFormatForIndexRange_throwsParseException(String input) {","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"CSmortal"},"content":"        assertThrows(ParseException.class, MESSAGE_AT_LEAST_ONE_INVALID_INDEX, (","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"CSmortal"},"content":"                ) -\u003e extractStringArgumentsIntoIndexes(input));","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"CSmortal"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"CSmortal"},"content":"    @ValueSource(strings \u003d {\"0-1\", \"  01-09  \", \"-1 0\"})","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"CSmortal"},"content":"    public void extractStringArguments_invalidIndexes_throwsParseException(String input) {","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"CSmortal"},"content":"        assertThrows(ParseException.class, MESSAGE_AT_LEAST_ONE_INVALID_INDEX, (","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"CSmortal"},"content":"                ) -\u003e extractStringArgumentsIntoIndexes(input));","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"CSmortal"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"CSmortal":103}},{"path":"src/test/java/seedu/taskify/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.DATE_DESC_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.DESCRIPTION_DESC_AMY;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.DESCRIPTION_DESC_BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.INVALID_DESCRIPTION_DESC;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.AMY;","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.AddCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.tag.Tag;","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.task.Date;","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.model.task.Description;","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Name;","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.testutil.TaskBuilder;","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"        Task expectedTask \u003d new TaskBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"khiaxeng"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"hengyongming"},"content":"                        + DATE_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedTask));","lastModifiedDate":"2021-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"khiaxeng"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"hengyongming"},"content":"                         + DATE_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedTask));","lastModifiedDate":"2021-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"hengyongming"},"content":"        // multiple description - last description accepted","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"khiaxeng"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + DESCRIPTION_DESC_AMY + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"hengyongming"},"content":"                         + DATE_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedTask));","lastModifiedDate":"2021-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"CSmortal"},"content":"        Task expectedTaskMultipleTags \u003d new TaskBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"hengyongming"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-03-20"},{"lineNumber":61,"author":{"gitId":"CSmortal"},"content":"                        + DATE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"CSmortal"},"content":"                                new AddCommand(expectedTaskMultipleTags));","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"        Task expectedTask \u003d new TaskBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"hengyongming"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + DESCRIPTION_DESC_AMY","lastModifiedDate":"2021-03-20"},{"lineNumber":70,"author":{"gitId":"CSmortal"},"content":"                        + DATE_DESC_AMY, new AddCommand(expectedTask));","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"hengyongming"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-03-20"},{"lineNumber":79,"author":{"gitId":"CSmortal"},"content":"                        + DATE_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"hengyongming"},"content":"        // missing description prefix","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"hengyongming"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_DESCRIPTION_BOB","lastModifiedDate":"2021-03-20"},{"lineNumber":83,"author":{"gitId":"CSmortal"},"content":"                        + DATE_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"hengyongming"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_DESCRIPTION_BOB","lastModifiedDate":"2021-03-20"},{"lineNumber":87,"author":{"gitId":"CSmortal"},"content":"                        + VALID_NAME_BOB, expectedMessage);","lastModifiedDate":"2021-03-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"hengyongming"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-03-20"},{"lineNumber":94,"author":{"gitId":"CSmortal"},"content":"                        + DATE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"hengyongming"},"content":"        // invalid description","lastModifiedDate":"2021-03-21"},{"lineNumber":97,"author":{"gitId":"hengyongming"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_DESCRIPTION_DESC","lastModifiedDate":"2021-03-20"},{"lineNumber":98,"author":{"gitId":"CSmortal"},"content":"                        + DATE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":101,"author":{"gitId":"CSmortal"},"content":"        // invalid date","lastModifiedDate":"2021-03-03"},{"lineNumber":102,"author":{"gitId":"hengyongming"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-03-20"},{"lineNumber":103,"author":{"gitId":"CSmortal"},"content":"                        + INVALID_DATE_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"hengyongming"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-03-20"},{"lineNumber":107,"author":{"gitId":"CSmortal"},"content":"                        + DATE_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"hengyongming"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_DESCRIPTION_DESC","lastModifiedDate":"2021-03-21"},{"lineNumber":111,"author":{"gitId":"CSmortal"},"content":"                        + DATE_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"khiaxeng"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-03-03"},{"lineNumber":115,"author":{"gitId":"hengyongming"},"content":"                         + DATE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"khiaxeng"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"khiaxeng"},"content":"    // If no date prefix is specified, a Task with today\u0027s date with time set to 23:59 should be initialized.","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"khiaxeng"},"content":"    public void parse_noDatePrefix_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"khiaxeng"},"content":"        String args \u003d \" n/TestName desc/TestDesc\";","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"khiaxeng"},"content":"        String expectedDateString \u003d LocalDate.now().toString() + \" 23:59\";","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"khiaxeng"},"content":"        Task expectedTask \u003d new TaskBuilder().withName(\"TestName\").withDescription(\"TestDesc\")","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"khiaxeng"},"content":"                .withDate(expectedDateString).build();","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"khiaxeng"},"content":"        assertParseSuccess(parser, args, new AddCommand(expectedTask));","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"hengyongming":22,"khiaxeng":16,"CSmortal":18,"-":47,"noelmathewisaac":25}},{"path":"src/test/java/seedu/taskify/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":149,"noelmathewisaac":1}},{"path":"src/test/java/seedu/taskify/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.Command;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":35,"noelmathewisaac":3}},{"path":"src/test/java/seedu/taskify/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_TASK));","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"-":25,"noelmathewisaac":7}},{"path":"src/test/java/seedu/taskify/logic/parser/DeleteMultipleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CSmortal"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-21"},{"lineNumber":2,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":3,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.util.DeleteMultipleCommandUtil.MESSAGE_AT_LEAST_ONE_INVALID_INDEX;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.util.DeleteMultipleCommandUtil.MESSAGE_DELETE_BY_STATUS_USAGE;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.model.task.Status.INVALID_STATUS_STRING;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.testutil.TypicalIndexes.INDEXES_FIRST_TO_THIRD_TASK;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"CSmortal"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"CSmortal"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2021-03-21"},{"lineNumber":14,"author":{"gitId":"CSmortal"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.logic.commands.DeleteMultipleCommand;","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.task.Status;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.task.StatusType;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"CSmortal"},"content":"public class DeleteMultipleCommandParserTest {","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"CSmortal"},"content":"    private DeleteMultipleCommandParser parser \u003d new DeleteMultipleCommandParser();","lastModifiedDate":"2021-03-21"},{"lineNumber":23,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"CSmortal"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"CSmortal"},"content":"    @ValueSource(strings \u003d {\" 1 2 3\", \"  1    2  3   \", \" 1-3 \"})","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"CSmortal"},"content":"    public void parse_validArgs_returnsDeleteMultipleCommand(String input) {","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"CSmortal"},"content":"        assertParseSuccess(parser, input, new DeleteMultipleCommand(INDEXES_FIRST_TO_THIRD_TASK));","lastModifiedDate":"2021-03-21"},{"lineNumber":28,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"CSmortal"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"CSmortal"},"content":"    @ValueSource(strings \u003d {\" 1.0 2 3\", \" 1.0 kappa 3.0\", \"pogchamp 2 3.0\", \"0-1\", \"100to 101\"})","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"CSmortal"},"content":"    public void parse_atLeastOneInvalidIndex_throwsParseException(String input) {","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"CSmortal"},"content":"        assertParseFailure(parser, input, MESSAGE_AT_LEAST_ONE_INVALID_INDEX);","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":35,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"CSmortal"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":38,"author":{"gitId":"CSmortal"},"content":"    public void parse_onlyOneIndexAndValid_throwsAssertionError() {","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"CSmortal"},"content":"        assertThrows(AssertionError.class, () -\u003e parser.parse(\"  1 \"));","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"CSmortal"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"CSmortal"},"content":"    @ValueSource(strings \u003d {\" in progress  -all\", \" completed   -all\", \"not done -all    \"})","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"CSmortal"},"content":"    public void parse_deleteByStatusAndArgsValid_returnsDeleteMultipleCommand(String input) {","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"CSmortal"},"content":"        assertParseSuccess(parser, input, new DeleteMultipleCommand(new Status(StatusType.IN_PROGRESS)));","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"CSmortal"},"content":"    // need to extend testing for this for more rogue inputs like \"... ---all\", in v1.4","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"CSmortal"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"CSmortal"},"content":"    @ValueSource(strings \u003d {\" in progress all\", \"Not done all\", \"Completed -all\"})","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"CSmortal"},"content":"    public void parse_deleteByStatusAndArgsInvalid_throwsParseException(String input) {","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"CSmortal"},"content":"        switch (input) {","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"CSmortal"},"content":"        case \"Completed -all\":","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"CSmortal"},"content":"            assertParseFailure(parser, input, INVALID_STATUS_STRING);","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"CSmortal"},"content":"            break;","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"CSmortal"},"content":"        default:","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"CSmortal"},"content":"            assertParseFailure(parser, input, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"CSmortal"},"content":"                    MESSAGE_DELETE_BY_STATUS_USAGE));","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"CSmortal"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"CSmortal"},"content":"}","lastModifiedDate":"2021-03-21"}],"authorContributionMap":{"CSmortal":62}},{"path":"src/test/java/seedu/taskify/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.DATE_DESC_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.DESCRIPTION_DESC_AMY;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.DESCRIPTION_DESC_BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.INVALID_DESCRIPTION_DESC;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.INVALID_STATUS_DESC;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_DATE_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_DESCRIPTION_AMY;","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalIndexes.INDEX_THIRD_TASK;","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.index.Index;","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.EditCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.tag.Tag;","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.task.Date;","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.model.task.Description;","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Name;","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.Status;","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"hengyongming"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DESCRIPTION_DESC,","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"hengyongming"},"content":"                Description.MESSAGE_CONSTRAINTS); // invalid description","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"khiaxeng"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STATUS_DESC, Status.MESSAGE_CONSTRAINTS); // invalid status","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"CSmortal"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DATE_DESC, Date.MESSAGE_CONSTRAINTS); // invalid date","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"hengyongming"},"content":"        // valid description followed by invalid description.","lastModifiedDate":"2021-03-01"},{"lineNumber":89,"author":{"gitId":"hengyongming"},"content":"        // The test case for invalid description followed by valid description","lastModifiedDate":"2021-03-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"hengyongming"},"content":"        assertParseFailure(parser, \"1\" + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-03-01"},{"lineNumber":92,"author":{"gitId":"hengyongming"},"content":"                + INVALID_DESCRIPTION_DESC, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"noelmathewisaac"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Task} being edited,","lastModifiedDate":"2021-03-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"hengyongming"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC","lastModifiedDate":"2021-03-20"},{"lineNumber":102,"author":{"gitId":"hengyongming"},"content":"                + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"noelmathewisaac"},"content":"        Index targetIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-01"},{"lineNumber":108,"author":{"gitId":"hengyongming"},"content":"        String userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-03-01"},{"lineNumber":109,"author":{"gitId":"hengyongming"},"content":"                + DATE_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"noelmathewisaac"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-01"},{"lineNumber":112,"author":{"gitId":"hengyongming"},"content":"                    .withDescription(VALID_DESCRIPTION_BOB)","lastModifiedDate":"2021-03-20"},{"lineNumber":113,"author":{"gitId":"CSmortal"},"content":"                    .withDate(VALID_DATE_AMY).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"noelmathewisaac"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-01"},{"lineNumber":122,"author":{"gitId":"khiaxeng"},"content":"        String userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"hengyongming"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withDescription(VALID_DESCRIPTION_BOB)","lastModifiedDate":"2021-03-01"},{"lineNumber":125,"author":{"gitId":"khiaxeng"},"content":"                .build();","lastModifiedDate":"2021-03-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"noelmathewisaac"},"content":"        Index targetIndex \u003d INDEX_THIRD_TASK;","lastModifiedDate":"2021-03-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"noelmathewisaac"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"CSmortal"},"content":"        // phone","lastModifiedDate":"2021-03-04"},{"lineNumber":141,"author":{"gitId":"hengyongming"},"content":"        userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_AMY;","lastModifiedDate":"2021-03-01"},{"lineNumber":142,"author":{"gitId":"hengyongming"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withDescription(VALID_DESCRIPTION_AMY).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"CSmortal"},"content":"        // date","lastModifiedDate":"2021-03-03"},{"lineNumber":147,"author":{"gitId":"CSmortal"},"content":"        userInput \u003d targetIndex.getOneBased() + DATE_DESC_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":148,"author":{"gitId":"CSmortal"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withDate(VALID_DATE_AMY).build();","lastModifiedDate":"2021-03-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":154,"author":{"gitId":"noelmathewisaac"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":161,"author":{"gitId":"noelmathewisaac"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-01"},{"lineNumber":162,"author":{"gitId":"hengyongming"},"content":"        String userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_AMY","lastModifiedDate":"2021-03-20"},{"lineNumber":163,"author":{"gitId":"hengyongming"},"content":"               + TAG_DESC_FRIEND + DESCRIPTION_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-03-20"},{"lineNumber":164,"author":{"gitId":"hengyongming"},"content":"                + DESCRIPTION_DESC_BOB + DATE_DESC_AMY + DATE_DESC_BOB","lastModifiedDate":"2021-03-20"},{"lineNumber":165,"author":{"gitId":"khiaxeng"},"content":"                + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"hengyongming"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withDescription(VALID_DESCRIPTION_BOB)","lastModifiedDate":"2021-03-01"},{"lineNumber":168,"author":{"gitId":"hengyongming"},"content":"                .withDate(VALID_DATE_BOB)","lastModifiedDate":"2021-03-20"},{"lineNumber":169,"author":{"gitId":"khiaxeng"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"noelmathewisaac"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-01"},{"lineNumber":179,"author":{"gitId":"hengyongming"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_DESCRIPTION_DESC + DESCRIPTION_DESC_BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":180,"author":{"gitId":"hengyongming"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withDescription(VALID_DESCRIPTION_BOB).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"hengyongming"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_DESCRIPTION_DESC","lastModifiedDate":"2021-03-20"},{"lineNumber":186,"author":{"gitId":"hengyongming"},"content":"                + DESCRIPTION_DESC_BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":187,"author":{"gitId":"hengyongming"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withDescription(VALID_DESCRIPTION_BOB).build();","lastModifiedDate":"2021-03-20"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":194,"author":{"gitId":"noelmathewisaac"},"content":"        Index targetIndex \u003d INDEX_THIRD_TASK;","lastModifiedDate":"2021-03-01"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"noelmathewisaac"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-03-01"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"hengyongming":30,"khiaxeng":7,"CSmortal":12,"-":119,"noelmathewisaac":34}},{"path":"src/test/java/seedu/taskify/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.FindCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"khiaxeng":1,"-":28,"noelmathewisaac":5}},{"path":"src/test/java/seedu/taskify/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.util.DeleteMultipleCommandUtil.MESSAGE_AT_LEAST_ONE_INVALID_INDEX;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.util.DeleteMultipleCommandUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.parser.ParserUtil.ASSERTION_ERROR_PARSE_MULTIPLE_INDEX_CALLED;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.parser.ParserUtil.parseInputToStatus;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.parser.ParserUtil.parseMultipleIndex;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.testutil.TypicalIndexes.INDEXES_FIRST_TO_THIRD_TASK;","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"CSmortal"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"CSmortal"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.tag.Tag;","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.model.task.Description;","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Name;","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.task.Status;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.task.StatusType;","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"hengyongming"},"content":"    private static final String INVALID_DESCRIPTION \u003d \"\";","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"hengyongming"},"content":"    private static final String VALID_DESCRIPTION \u003d \"123456\";","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"CSmortal"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, (","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"CSmortal"},"content":"                ) -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(INDEX_FIRST_TASK, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(INDEX_FIRST_TASK, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"CSmortal"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"CSmortal"},"content":"    @ValueSource(strings \u003d {\" 1 2 3\", \"      1   2   3   \", \" 1-3\"})","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"CSmortal"},"content":"    public void parseMultipleIndex_validArgs_success(String input) throws ParseException {","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"CSmortal"},"content":"        assertEquals(INDEXES_FIRST_TO_THIRD_TASK, parseMultipleIndex(input));","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"CSmortal"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-03-21"},{"lineNumber":69,"author":{"gitId":"CSmortal"},"content":"    @ValueSource(strings \u003d {\"1 2 haha\", \"1.0 2 3\", \"1to3\", \"1-3.0\", \"2-four\"})","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"CSmortal"},"content":"    public void parseMultipleIndex_invalidArgs_throwsParseException(String input) {","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"CSmortal"},"content":"        assertThrows(ParseException.class, MESSAGE_AT_LEAST_ONE_INVALID_INDEX, (","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"CSmortal"},"content":"                ) -\u003e parseMultipleIndex(input));","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"CSmortal"},"content":"    public void parseMultipleIndex_onlyOneIndexAndValid_throwsAssertionError() {","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"CSmortal"},"content":"        String onlyOneIndexAndValid \u003d \" 1 \";","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"CSmortal"},"content":"        assertThrows(AssertionError.class, ASSERTION_ERROR_PARSE_MULTIPLE_INDEX_CALLED, (","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"CSmortal"},"content":"                ) -\u003e parseMultipleIndex(onlyOneIndexAndValid));","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"CSmortal"},"content":"    public void parseInputToStatus_validArgs_returnsCorrectStatus() throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"CSmortal"},"content":"        assertEquals(new Status(StatusType.NOT_DONE), parseInputToStatus(\" not done -all\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"CSmortal"},"content":"        assertEquals(new Status(StatusType.COMPLETED), parseInputToStatus(\" completed -all\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"CSmortal"},"content":"        assertEquals(new Status(StatusType.IN_PROGRESS), parseInputToStatus(\" in progress  -all\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"CSmortal"},"content":"    // test for more rogue inputs in v1.4 like \"... --all\"","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"CSmortal"},"content":"    public void parseInputToStatus_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"CSmortal"},"content":"        assertThrows(ParseException.class, () -\u003e parseInputToStatus(\"in progress all\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"hengyongming"},"content":"    public void parseDescription_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":121,"author":{"gitId":"hengyongming"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescription((String) null));","lastModifiedDate":"2021-03-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"hengyongming"},"content":"    public void parseDescription_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":126,"author":{"gitId":"hengyongming"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDescription(INVALID_DESCRIPTION));","lastModifiedDate":"2021-03-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"hengyongming"},"content":"    public void parseDescription_validValueWithoutWhitespace_returnsDescription() throws Exception {","lastModifiedDate":"2021-03-01"},{"lineNumber":131,"author":{"gitId":"hengyongming"},"content":"        Description expectedDescription \u003d new Description(VALID_DESCRIPTION);","lastModifiedDate":"2021-03-01"},{"lineNumber":132,"author":{"gitId":"hengyongming"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(VALID_DESCRIPTION));","lastModifiedDate":"2021-03-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"hengyongming"},"content":"    public void parseDescription_validValueWithWhitespace_returnsTrimmedDescription() throws Exception {","lastModifiedDate":"2021-03-01"},{"lineNumber":137,"author":{"gitId":"hengyongming"},"content":"        String descriptionWithWhitespace \u003d WHITESPACE + VALID_DESCRIPTION + WHITESPACE;","lastModifiedDate":"2021-03-01"},{"lineNumber":138,"author":{"gitId":"hengyongming"},"content":"        Description expectedDescription \u003d new Description(VALID_DESCRIPTION);","lastModifiedDate":"2021-03-01"},{"lineNumber":139,"author":{"gitId":"hengyongming"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(descriptionWithWhitespace));","lastModifiedDate":"2021-03-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"hengyongming":14,"-":134,"CSmortal":32,"noelmathewisaac":8}},{"path":"src/test/java/seedu/taskify/logic/parser/TagSearchCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.TagSearchCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.predicates.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"public class TagSearchCommandParserTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"    private TagSearchCommandParser parser \u003d new TagSearchCommandParser();","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"                           TagSearchCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"    public void parse_validArgs_returnsTagSearchCommand() {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"        TagSearchCommand expectedTagSearchCommand \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"                new TagSearchCommand(new TagContainsKeywordsPredicate(Arrays.asList(\"Module\", \"Tutorial\")));","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"        assertParseSuccess(parser, \"Module Tutorial\", expectedTagSearchCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"        assertParseSuccess(parser, \" \\n Module \\n \\t Tutorial  \\t\", expectedTagSearchCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"khiaxeng":1,"noelmathewisaac":34}},{"path":"src/test/java/seedu/taskify/logic/parser/TaskifyParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.testutil.TypicalIndexes.INDEXES_FIRST_TO_THIRD_TASK;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.testutil.TypicalIndexes.INDEX_THIRD_TASK;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.testutil.TypicalInputs.DELETE_ALL_COMPLETED_INPUT;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.AddCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.logic.commands.DeleteMultipleCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.EditCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.FindCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.ListCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.task.Status;","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.task.StatusType;","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.testutil.TaskBuilder;","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.testutil.TaskUtil;","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"CSmortal"},"content":"public class TaskifyParserTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"    private final TaskifyParser parser \u003d new TaskifyParser();","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(TaskUtil.getAddCommand(task));","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(new AddCommand(task), command);","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_TASK), command);","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"CSmortal"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"CSmortal"},"content":"    public void parseCommand_deleteMultipleIndex() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"CSmortal"},"content":"        DeleteMultipleCommand command \u003d (DeleteMultipleCommand) parser.parseCommand(","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"CSmortal"},"content":"                DeleteMultipleCommand.COMMAND_WORD + \" \" + INDEX_FIRST_TASK.getOneBased() + \" \"","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"CSmortal"},"content":"                        + INDEX_SECOND_TASK.getOneBased() + \" \" + INDEX_THIRD_TASK.getOneBased());","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"CSmortal"},"content":"        assertEquals(new DeleteMultipleCommand(INDEXES_FIRST_TO_THIRD_TASK), command);","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"CSmortal"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"CSmortal"},"content":"    public void parseCommand_deleteMultipleUsingIndexRange() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"CSmortal"},"content":"        DeleteMultipleCommand command \u003d (DeleteMultipleCommand) parser.parseCommand(","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"CSmortal"},"content":"                DeleteMultipleCommand.COMMAND_WORD + \" \" + \"1-3\");","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"CSmortal"},"content":"        assertEquals(new DeleteMultipleCommand(INDEXES_FIRST_TO_THIRD_TASK), command);","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"CSmortal"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"CSmortal"},"content":"    public void parseCommand_deleteTasksByStatus() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"CSmortal"},"content":"        DeleteMultipleCommand command \u003d (DeleteMultipleCommand) parser.parseCommand(DELETE_ALL_COMPLETED_INPUT);","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"CSmortal"},"content":"        assertEquals(new DeleteMultipleCommand(new Status(StatusType.COMPLETED)), command);","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"noelmathewisaac"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-01"},{"lineNumber":87,"author":{"gitId":"noelmathewisaac"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(task).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"noelmathewisaac"},"content":"                            + INDEX_FIRST_TASK.getOneBased() + \" \" + TaskUtil.getEditTaskDescriptorDetails(descriptor));","lastModifiedDate":"2021-03-01"},{"lineNumber":90,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_TASK, descriptor), command);","lastModifiedDate":"2021-03-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":121,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), (","lastModifiedDate":"2021-03-01"},{"lineNumber":122,"author":{"gitId":"noelmathewisaac"},"content":"                        ) -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2021-03-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"khiaxeng":1,"-":68,"CSmortal":29,"noelmathewisaac":31}},{"path":"src/test/java/seedu/taskify/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package seedu.taskify.logic.parser;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import static seedu.taskify.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import static seedu.taskify.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import static seedu.taskify.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.logic.commands.ViewCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.predicates.TaskHasSameDatePredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"class ViewCommandParserTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"    public void parse_validArg_returnsViewCommand() {","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"        LocalDate inputDate \u003d LocalDate.parse(\"2021-03-24\");","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"        ViewCommand expectedViewCommand \u003d new ViewCommand(new TaskHasSameDatePredicate(inputDate));","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"        assertParseSuccess(parser, \"2021-03-24\", expectedViewCommand);","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"        // using \u0027view today\u0027","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"        LocalDate todayDate \u003d LocalDate.now();","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"        ViewCommand expectedTodayViewCommand \u003d new ViewCommand(new TaskHasSameDatePredicate(todayDate));","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"        assertParseSuccess(parser, \"today\", expectedTodayViewCommand);","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"        // using \u0027view tomorrow\u0027","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"        LocalDate tomorrowDate \u003d LocalDate.now().plus(1, ChronoUnit.DAYS);","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"        ViewCommand expectedTomorrowViewCommand \u003d new ViewCommand(new TaskHasSameDatePredicate(tomorrowDate));","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"        assertParseSuccess(parser, \"tomorrow\", expectedTomorrowViewCommand);","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"    public void parse_invalidArg_throwsParseException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"        // using \u0027view Buy grocery\u0027 (not a valid date)","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"        assertParseFailure(parser, \"Buy grocery\",","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"khiaxeng"},"content":"        // using \u0027view 2\u0027 (not a valid date)","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"khiaxeng"},"content":"        assertParseFailure(parser, \"2\",","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"khiaxeng"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"khiaxeng"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"khiaxeng":50}},{"path":"src/test/java/seedu/taskify/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.model;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.BENSON;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.GuiSettings;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.testutil.TaskifyBuilder;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(new Taskify(), new Taskify(modelManager.getAddressBook()));","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTask(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"    public void hasTask_taskNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(modelManager.hasTask(ALICE));","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"noelmathewisaac"},"content":"    public void hasTask_taskInAddressBook_returnsTrue() {","lastModifiedDate":"2021-03-01"},{"lineNumber":87,"author":{"gitId":"noelmathewisaac"},"content":"        modelManager.addTask(ALICE);","lastModifiedDate":"2021-03-01"},{"lineNumber":88,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(modelManager.hasTask(ALICE));","lastModifiedDate":"2021-03-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"noelmathewisaac"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":93,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTaskList().remove(0));","lastModifiedDate":"2021-03-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"noelmathewisaac"},"content":"        Taskify taskify \u003d new TaskifyBuilder().withTask(ALICE).withTask(BENSON).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":99,"author":{"gitId":"noelmathewisaac"},"content":"        Taskify differentTaskify \u003d new Taskify();","lastModifiedDate":"2021-03-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"noelmathewisaac"},"content":"        modelManager \u003d new ModelManager(taskify, userPrefs);","lastModifiedDate":"2021-03-01"},{"lineNumber":104,"author":{"gitId":"noelmathewisaac"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(taskify, userPrefs);","lastModifiedDate":"2021-03-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"noelmathewisaac"},"content":"        // different taskify -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":117,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentTaskify, userPrefs)));","lastModifiedDate":"2021-03-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"noelmathewisaac"},"content":"        modelManager.updateFilteredTaskList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-03-01"},{"lineNumber":122,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(modelManager.equals(new ModelManager(taskify, userPrefs)));","lastModifiedDate":"2021-03-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"noelmathewisaac"},"content":"        modelManager.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(modelManager.equals(new ModelManager(taskify, differentUserPrefs)));","lastModifiedDate":"2021-03-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"khiaxeng":1,"-":104,"noelmathewisaac":27}},{"path":"src/test/java/seedu/taskify/model/TaskifyParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.model;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.getTypicalAddressBook;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.List;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.testutil.TaskBuilder;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"public class TaskifyParserTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"    private final Taskify taskify \u003d new Taskify();","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"    public void constructor() {","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(Collections.emptyList(), taskify.getTaskList());","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskify.resetData(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"        Taskify newData \u003d getTypicalAddressBook();","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"        taskify.resetData(newData);","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(newData, taskify);","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"    public void resetData_withDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"        // Two tasks with the same identity fields","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"hengyongming"},"content":"        Task editedAlice \u003d new TaskBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-20"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"                                   .build();","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"        List\u003cTask\u003e newTasks \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"        TaskifyStub newData \u003d new TaskifyStub(newTasks);","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e taskify.resetData(newData));","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskify.hasTask(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"    public void hasTask_taskNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(taskify.hasTask(ALICE));","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"    public void hasTask_taskInAddressBook_returnsTrue() {","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":"        taskify.addTask(ALICE);","lastModifiedDate":"2021-03-01"},{"lineNumber":70,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(taskify.hasTask(ALICE));","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":74,"author":{"gitId":"noelmathewisaac"},"content":"    public void hasTask_taskWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-03-01"},{"lineNumber":75,"author":{"gitId":"noelmathewisaac"},"content":"        taskify.addTask(ALICE);","lastModifiedDate":"2021-03-01"},{"lineNumber":76,"author":{"gitId":"hengyongming"},"content":"        Task editedAlice \u003d new TaskBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-20"},{"lineNumber":77,"author":{"gitId":"noelmathewisaac"},"content":"                                   .build();","lastModifiedDate":"2021-03-01"},{"lineNumber":78,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(taskify.hasTask(editedAlice));","lastModifiedDate":"2021-03-01"},{"lineNumber":79,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":80,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"    public void getTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e taskify.getTaskList().remove(0));","lastModifiedDate":"2021-03-01"},{"lineNumber":84,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":85,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":86,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":87,"author":{"gitId":"noelmathewisaac"},"content":"     * A stub ReadOnlyTaskify whose tasks list can violate interface constraints.","lastModifiedDate":"2021-03-01"},{"lineNumber":88,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":89,"author":{"gitId":"noelmathewisaac"},"content":"    private static class TaskifyStub implements ReadOnlyTaskify {","lastModifiedDate":"2021-03-01"},{"lineNumber":90,"author":{"gitId":"noelmathewisaac"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-01"},{"lineNumber":91,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":92,"author":{"gitId":"noelmathewisaac"},"content":"        TaskifyStub(Collection\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-01"},{"lineNumber":93,"author":{"gitId":"noelmathewisaac"},"content":"            this.tasks.setAll(tasks);","lastModifiedDate":"2021-03-01"},{"lineNumber":94,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":95,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":96,"author":{"gitId":"noelmathewisaac"},"content":"        @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":97,"author":{"gitId":"noelmathewisaac"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-03-01"},{"lineNumber":98,"author":{"gitId":"noelmathewisaac"},"content":"            return tasks;","lastModifiedDate":"2021-03-01"},{"lineNumber":99,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":100,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":101,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":102,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":2,"noelmathewisaac":100}},{"path":"src/test/java/seedu/taskify/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.model;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":19,"noelmathewisaac":2}},{"path":"src/test/java/seedu/taskify/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.model.tag;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"-":24,"noelmathewisaac":2}},{"path":"src/test/java/seedu/taskify/model/task/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CSmortal"},"content":"package seedu.taskify.model.task;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"CSmortal"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"CSmortal"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"CSmortal"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"CSmortal"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"CSmortal"},"content":"class DateTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"CSmortal"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"CSmortal"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"CSmortal"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(null));","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"CSmortal"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"CSmortal"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"CSmortal"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"CSmortal"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"CSmortal"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"CSmortal"},"content":"    @ValueSource(strings \u003d {\"20-04-13 10:30\", \"2020-4-13 10:30\", \"2020-04-32 10:30\", \"2020-04-13 25:30\",","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"CSmortal"},"content":"            \"2020-04-13 9:30\", \"2020-04-13 9.30\", \"2020-04-13 22:30:30\", \"2020-04-13 09:70\", \"2020-02-31 10:30\"})","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"CSmortal"},"content":"    void isValidDate_invalidDate_failure(String input) {","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"CSmortal"},"content":"        assertFalse(Date.isValidDate(input));","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"CSmortal"},"content":"    @ParameterizedTest","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"CSmortal"},"content":"    @ValueSource(strings \u003d {\"2020-04-13 00:30\", \"1999-10-31 23:59\", \"1950-12-05 00:00\"})","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"CSmortal"},"content":"    void isValidDate_validDate_success(String input) {","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"CSmortal"},"content":"        assertTrue(Date.isValidDate(input));","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"CSmortal"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"CSmortal"},"content":"    void testEquals() {","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"CSmortal"},"content":"        assertEquals(new Date(\"1999-04-13 23:59\"), new Date(\"1999-04-13 23:59\"));","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"CSmortal"},"content":"        assertEquals(new Date(\"2021-01-09 09:30\"), new Date(\"2021-01-09 09:30\"));","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"CSmortal"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"CSmortal":45}},{"path":"src/test/java/seedu/taskify/model/task/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hengyongming"},"content":"package seedu.taskify.model.task;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"hengyongming"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"hengyongming"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"hengyongming"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"hengyongming"},"content":"public class DescriptionTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"hengyongming"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"hengyongming"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"hengyongming"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"hengyongming"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"hengyongming"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"hengyongming"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"hengyongming"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidDescription));","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"hengyongming"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"hengyongming"},"content":"    public void isValidDescription() {","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"hengyongming"},"content":"        // null Description number","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"hengyongming"},"content":"        assertThrows(NullPointerException.class, () -\u003e Description.isValidDescription(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"hengyongming"},"content":"        // invalid Description","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"hengyongming"},"content":"        assertFalse(Description.isValidDescription(\"\")); // empty string","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"hengyongming"},"content":"        assertFalse(Description.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"hengyongming"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"hengyongming"},"content":"        // valid Description","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"hengyongming"},"content":"        assertTrue(Description.isValidDescription(\"lab on threads\")); // exactly 3 numbers","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"hengyongming"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"hengyongming"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":34}},{"path":"src/test/java/seedu/taskify/model/task/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.model.task;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.testutil.TaskBuilder;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(predicate.test(new TaskBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(predicate.test(new TaskBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(predicate.test(new TaskBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"khiaxeng"},"content":"        // Keywords match description and address, but does not match name","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"khiaxeng"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"Main\", \"Street\"));","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"hengyongming"},"content":"        assertFalse(predicate.test(new TaskBuilder().withName(\"Alice\").withDescription(\"12345\")","lastModifiedDate":"2021-03-01"},{"lineNumber":74,"author":{"gitId":"hengyongming"},"content":"                                           .withStatus(StatusType.NOT_DONE).build()));","lastModifiedDate":"2021-03-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"hengyongming":2,"khiaxeng":3,"-":62,"noelmathewisaac":9}},{"path":"src/test/java/seedu/taskify/model/task/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.model.task;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":38,"noelmathewisaac":2}},{"path":"src/test/java/seedu/taskify/model/task/TagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.model.task;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.predicates.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.testutil.TaskBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"public class TagContainsKeywordsPredicateTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"    public void equals() {","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d new TagContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"        TagContainsKeywordsPredicate firstPredicateCopy \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"        // different predicates -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"    public void test_tagContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"        // One keyword","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Collections.singletonList(\"Module\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(predicate.test(new TaskBuilder().withTags(\"Module\", \"Tutorial\").build()));","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Module\", \"Tutorial\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(predicate.test(new TaskBuilder().withTags(\"Module\", \"Tutorial\").build()));","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Lab\", \"Tutorial\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(predicate.test(new TaskBuilder().withTags(\"Module\", \"Tutorial\").build()));","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"MoDuLe\", \"tuTorIAL\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(predicate.test(new TaskBuilder().withTags(\"Module\", \"Tutorial\").build()));","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"    public void test_tagDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"        // Zero keywords","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(predicate.test(new TaskBuilder().withTags(\"Module\").build()));","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Assignment\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(predicate.test(new TaskBuilder().withTags(\"Module\", \"Tutorial\").build()));","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Module\", \"Tutorial\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(predicate.test(new TaskBuilder().withTags(\"ModuleTutorial\").build()));","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"khiaxeng":1,"noelmathewisaac":75}},{"path":"src/test/java/seedu/taskify/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.model.task;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.testutil.TaskBuilder;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"public class TaskTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e task.getTags().remove(0));","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"    public void isSameTask() {","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(ALICE.isSameTask(ALICE));","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(ALICE.isSameTask(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"        Task editedAlice \u003d new TaskBuilder(ALICE).withDescription(VALID_DESCRIPTION_BOB).withStatus(StatusType.NOT_DONE)","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"hengyongming"},"content":"                                   .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(ALICE.isSameTask(editedAlice));","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"        editedAlice \u003d new TaskBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(ALICE.isSameTask(editedAlice));","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"        Task editedBob \u003d new TaskBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(BOB.isSameTask(editedBob));","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"        editedBob \u003d new TaskBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(BOB.isSameTask(editedBob));","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"    public void equals() {","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"        Task aliceCopy \u003d new TaskBuilder(ALICE).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":70,"author":{"gitId":"noelmathewisaac"},"content":"        Task editedAlice \u003d new TaskBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"hengyongming"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":74,"author":{"gitId":"hengyongming"},"content":"        editedAlice \u003d new TaskBuilder(ALICE).withDescription(VALID_DESCRIPTION_BOB).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":75,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-01"},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"khiaxeng"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"khiaxeng"},"content":"        editedAlice \u003d new TaskBuilder(ALICE).withStatus(StatusType.COMPLETED).build();","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-01"},{"lineNumber":80,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"        editedAlice \u003d new TaskBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-01"},{"lineNumber":84,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":85,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":4,"khiaxeng":3,"noelmathewisaac":78}},{"path":"src/test/java/seedu/taskify/model/task/UniqueTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.model.task;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.List;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.testutil.TaskBuilder;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"public class UniqueTaskListTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.contains(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"        assertFalse(uniqueTaskList.contains(ALICE));","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(uniqueTaskList.contains(ALICE));","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"    public void contains_taskWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"hengyongming"},"content":"        Task editedAlice \u003d new TaskBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"                                   .build();","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"        assertTrue(uniqueTaskList.contains(editedAlice));","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.add(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"    public void add_duplicateTask_throwsDuplicateTaskException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.add(ALICE));","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"    public void setTask_nullTargetTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(null, ALICE));","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"    public void setTask_nullEditedTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(ALICE, null));","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":70,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":"    public void setTask_targetTaskNotInList_throwsTaskNotFoundException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.setTask(ALICE, ALICE));","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":74,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":75,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":"    public void setTask_editedTaskIsSameTask_success() {","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"noelmathewisaac"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2021-03-01"},{"lineNumber":78,"author":{"gitId":"noelmathewisaac"},"content":"        uniqueTaskList.setTask(ALICE, ALICE);","lastModifiedDate":"2021-03-01"},{"lineNumber":79,"author":{"gitId":"noelmathewisaac"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-01"},{"lineNumber":80,"author":{"gitId":"noelmathewisaac"},"content":"        expectedUniqueTaskList.add(ALICE);","lastModifiedDate":"2021-03-01"},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":84,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":85,"author":{"gitId":"noelmathewisaac"},"content":"    public void setTask_editedTaskHasSameIdentity_success() {","lastModifiedDate":"2021-03-01"},{"lineNumber":86,"author":{"gitId":"noelmathewisaac"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2021-03-01"},{"lineNumber":87,"author":{"gitId":"hengyongming"},"content":"        Task editedAlice \u003d new TaskBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-20"},{"lineNumber":88,"author":{"gitId":"noelmathewisaac"},"content":"                                   .build();","lastModifiedDate":"2021-03-01"},{"lineNumber":89,"author":{"gitId":"noelmathewisaac"},"content":"        uniqueTaskList.setTask(ALICE, editedAlice);","lastModifiedDate":"2021-03-01"},{"lineNumber":90,"author":{"gitId":"noelmathewisaac"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-01"},{"lineNumber":91,"author":{"gitId":"noelmathewisaac"},"content":"        expectedUniqueTaskList.add(editedAlice);","lastModifiedDate":"2021-03-01"},{"lineNumber":92,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-01"},{"lineNumber":93,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":94,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":95,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":96,"author":{"gitId":"noelmathewisaac"},"content":"    public void setTask_editedTaskHasDifferentIdentity_success() {","lastModifiedDate":"2021-03-01"},{"lineNumber":97,"author":{"gitId":"noelmathewisaac"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2021-03-01"},{"lineNumber":98,"author":{"gitId":"noelmathewisaac"},"content":"        uniqueTaskList.setTask(ALICE, BOB);","lastModifiedDate":"2021-03-01"},{"lineNumber":99,"author":{"gitId":"noelmathewisaac"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-01"},{"lineNumber":100,"author":{"gitId":"noelmathewisaac"},"content":"        expectedUniqueTaskList.add(BOB);","lastModifiedDate":"2021-03-01"},{"lineNumber":101,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-01"},{"lineNumber":102,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":103,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":104,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":105,"author":{"gitId":"noelmathewisaac"},"content":"    public void setTask_editedTaskHasNonUniqueIdentity_throwsDuplicateTaskException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":106,"author":{"gitId":"noelmathewisaac"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2021-03-01"},{"lineNumber":107,"author":{"gitId":"noelmathewisaac"},"content":"        uniqueTaskList.add(BOB);","lastModifiedDate":"2021-03-01"},{"lineNumber":108,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTask(ALICE, BOB));","lastModifiedDate":"2021-03-01"},{"lineNumber":109,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":110,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":111,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":112,"author":{"gitId":"noelmathewisaac"},"content":"    public void remove_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":113,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.remove(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":114,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":115,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":116,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":117,"author":{"gitId":"noelmathewisaac"},"content":"    public void remove_taskDoesNotExist_throwsTaskNotFoundException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":118,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.remove(ALICE));","lastModifiedDate":"2021-03-01"},{"lineNumber":119,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":120,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":121,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":122,"author":{"gitId":"noelmathewisaac"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2021-03-01"},{"lineNumber":123,"author":{"gitId":"noelmathewisaac"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2021-03-01"},{"lineNumber":124,"author":{"gitId":"noelmathewisaac"},"content":"        uniqueTaskList.remove(ALICE);","lastModifiedDate":"2021-03-01"},{"lineNumber":125,"author":{"gitId":"noelmathewisaac"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-01"},{"lineNumber":126,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-01"},{"lineNumber":127,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":128,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":129,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":130,"author":{"gitId":"noelmathewisaac"},"content":"    public void setTasks_nullUniqueTaskList_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":131,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((UniqueTaskList) null));","lastModifiedDate":"2021-03-01"},{"lineNumber":132,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":133,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":134,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":135,"author":{"gitId":"noelmathewisaac"},"content":"    public void setTasks_uniqueTaskList_replacesOwnListWithProvidedUniqueTaskList() {","lastModifiedDate":"2021-03-01"},{"lineNumber":136,"author":{"gitId":"noelmathewisaac"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2021-03-01"},{"lineNumber":137,"author":{"gitId":"noelmathewisaac"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-01"},{"lineNumber":138,"author":{"gitId":"noelmathewisaac"},"content":"        expectedUniqueTaskList.add(BOB);","lastModifiedDate":"2021-03-01"},{"lineNumber":139,"author":{"gitId":"noelmathewisaac"},"content":"        uniqueTaskList.setTasks(expectedUniqueTaskList);","lastModifiedDate":"2021-03-01"},{"lineNumber":140,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-01"},{"lineNumber":141,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":142,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":143,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":144,"author":{"gitId":"noelmathewisaac"},"content":"    public void setTasks_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":145,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((List\u003cTask\u003e) null));","lastModifiedDate":"2021-03-01"},{"lineNumber":146,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":147,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":148,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":149,"author":{"gitId":"noelmathewisaac"},"content":"    public void setTasks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-01"},{"lineNumber":150,"author":{"gitId":"noelmathewisaac"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2021-03-01"},{"lineNumber":151,"author":{"gitId":"noelmathewisaac"},"content":"        List\u003cTask\u003e taskList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-03-01"},{"lineNumber":152,"author":{"gitId":"noelmathewisaac"},"content":"        uniqueTaskList.setTasks(taskList);","lastModifiedDate":"2021-03-01"},{"lineNumber":153,"author":{"gitId":"noelmathewisaac"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-01"},{"lineNumber":154,"author":{"gitId":"noelmathewisaac"},"content":"        expectedUniqueTaskList.add(BOB);","lastModifiedDate":"2021-03-01"},{"lineNumber":155,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-01"},{"lineNumber":156,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":157,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":158,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":159,"author":{"gitId":"noelmathewisaac"},"content":"    public void setTasks_listWithDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":160,"author":{"gitId":"noelmathewisaac"},"content":"        List\u003cTask\u003e listWithDuplicateTasks \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-03-01"},{"lineNumber":161,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTasks(listWithDuplicateTasks));","lastModifiedDate":"2021-03-01"},{"lineNumber":162,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":163,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":164,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":165,"author":{"gitId":"noelmathewisaac"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":166,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(UnsupportedOperationException.class, (","lastModifiedDate":"2021-03-01"},{"lineNumber":167,"author":{"gitId":"noelmathewisaac"},"content":"                ) -\u003e uniqueTaskList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-03-01"},{"lineNumber":168,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":169,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":2,"noelmathewisaac":167}},{"path":"src/test/java/seedu/taskify/model/task/predicates/TaskHasSameDatePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package seedu.taskify.model.task.predicates;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.testutil.TaskBuilder;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"class TaskHasSameDatePredicateTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"    public void equals() {","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"        // Compares between LocalDate and LocalDateTime to see if date is the same.","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"        LocalDate firstPredicateDate \u003d LocalDate.parse(\"2021-03-24\");","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"        assertTrue(firstPredicateDate.equals(firstPredicateDate));","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"        assertFalse(firstPredicateDate.equals(1));","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"        assertFalse(firstPredicateDate.equals(null));","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"    public void test_sameDate_returnsTrue() {","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"        // Same dates (testing between LocalDate and LocalDateTime)","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"        LocalDate date \u003d LocalDate.parse(\"2020-04-13\");","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"        TaskHasSameDatePredicate predicate \u003d new TaskHasSameDatePredicate(date);","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDate(\"2020-04-13 18:00\").build()));","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"    public void test_differentDate_returnsFalse() {","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"        // Different dates","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"        LocalDate date \u003d LocalDate.parse(\"2021-03-24\");","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"        TaskHasSameDatePredicate predicate \u003d new TaskHasSameDatePredicate(date);","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"        assertFalse(predicate.test(new TaskBuilder().withDate(\"2020-04-13 18:00\").build()));","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"khiaxeng":44}},{"path":"src/test/java/seedu/taskify/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.storage;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.storage.JsonAdaptedTask.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.BENSON;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.task.Date;","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.model.task.Description;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Name;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"public class JsonAdaptedTaskTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"hengyongming"},"content":"    private static final String INVALID_DESCRIPTION \u003d \"\";","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"CSmortal"},"content":"    private static final String INVALID_DATE \u003d \"2020:04:13 10.30\";","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"hengyongming"},"content":"    private static final String VALID_DESCRIPTION \u003d BENSON.getDescription().toString();","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"    private static final String VALID_STATUS \u003d BENSON.getStatus().toString();","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"CSmortal"},"content":"    private static final String VALID_DATE \u003d BENSON.getDate().toString();","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                                                                   .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                                                                   .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"    public void toModelType_validTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(BENSON);","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(BENSON, task.toModelType());","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"hengyongming"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(INVALID_NAME, VALID_DESCRIPTION, VALID_STATUS, VALID_DATE,","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"hengyongming"},"content":"                VALID_TAGS);","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"hengyongming"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(null, VALID_DESCRIPTION, VALID_STATUS,","lastModifiedDate":"2021-03-20"},{"lineNumber":50,"author":{"gitId":"khiaxeng"},"content":"                VALID_DATE, VALID_TAGS);","lastModifiedDate":"2021-03-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"hengyongming"},"content":"    public void toModelType_invalidDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"hengyongming"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, INVALID_DESCRIPTION, VALID_STATUS,","lastModifiedDate":"2021-03-20"},{"lineNumber":58,"author":{"gitId":"CSmortal"},"content":"                VALID_DATE, VALID_TAGS);","lastModifiedDate":"2021-03-04"},{"lineNumber":59,"author":{"gitId":"hengyongming"},"content":"        String expectedMessage \u003d Description.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"hengyongming"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"hengyongming"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, null, VALID_STATUS,","lastModifiedDate":"2021-03-20"},{"lineNumber":66,"author":{"gitId":"CSmortal"},"content":"                VALID_DATE, VALID_TAGS);","lastModifiedDate":"2021-03-04"},{"lineNumber":67,"author":{"gitId":"hengyongming"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName());","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"CSmortal"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"CSmortal"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"hengyongming"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, VALID_STATUS,","lastModifiedDate":"2021-03-20"},{"lineNumber":75,"author":{"gitId":"CSmortal"},"content":"                INVALID_DATE, VALID_TAGS);","lastModifiedDate":"2021-03-04"},{"lineNumber":76,"author":{"gitId":"CSmortal"},"content":"        String expectedMessage \u003d Date.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"CSmortal"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"CSmortal"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"CSmortal"},"content":"    public void toModelType_nullDate_throwsIllegalValueException() {","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"hengyongming"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, VALID_STATUS, null,","lastModifiedDate":"2021-03-20"},{"lineNumber":83,"author":{"gitId":"CSmortal"},"content":"                VALID_TAGS);","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"CSmortal"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName());","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"CSmortal"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"khiaxeng"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, VALID_DESCRIPTION, VALID_STATUS,","lastModifiedDate":"2021-03-04"},{"lineNumber":93,"author":{"gitId":"hengyongming"},"content":"                 VALID_DATE, invalidTags);","lastModifiedDate":"2021-03-20"},{"lineNumber":94,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(IllegalValueException.class, task::toModelType);","lastModifiedDate":"2021-03-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"hengyongming":15,"khiaxeng":3,"-":44,"CSmortal":19,"noelmathewisaac":15}},{"path":"src/test/java/seedu/taskify/storage/JsonSerializableTaskifyParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.storage;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.util.JsonUtil;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.testutil.TypicalTasks;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"public class JsonSerializableTaskifyParserTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableTaskifyParserTest\");","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    private static final Path TYPICAL_TASKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTasksTaskify.json\");","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"    private static final Path INVALID_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTaskTaskify.json\");","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"    private static final Path DUPLICATE_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTaskTaskify.json\");","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"    public void toModelType_typicalTasksFile_success() throws Exception {","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"        JsonSerializableTaskify dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TASKS_FILE,","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"                JsonSerializableTaskify.class).get();","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"        Taskify taskifyFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"        Taskify typicalTasksTaskify \u003d TypicalTasks.getTypicalAddressBook();","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(taskifyFromFile, typicalTasksTaskify);","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"    public void toModelType_invalidTaskFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"        JsonSerializableTaskify dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TASK_FILE,","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"                JsonSerializableTaskify.class).get();","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"    public void toModelType_duplicateTasks_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"        JsonSerializableTaskify dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TASK_FILE,","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"                JsonSerializableTaskify.class).get();","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableTaskify.MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"noelmathewisaac":47}},{"path":"src/test/java/seedu/taskify/storage/JsonTaskifyParserStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.storage;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.HOON;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.IDA;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.getTypicalAddressBook;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ReadOnlyTaskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"public class JsonTaskifyParserStorageTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonTaskifyParserStorageTest\");","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"    private java.util.Optional\u003cReadOnlyTaskify\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"        return new JsonTaskifyStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                       ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                       : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatTaskify.json\"));","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"    public void readAddressBook_invalidTaskAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidTaskTaskify.json\"));","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"    public void readAddressBook_invalidAndValidTaskAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidTaskTaskify.json\"));","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"        Taskify original \u003d getTypicalAddressBook();","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"        JsonTaskifyStorage jsonTaskifyStorage \u003d new JsonTaskifyStorage(filePath);","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"noelmathewisaac"},"content":"        jsonTaskifyStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":"        ReadOnlyTaskify readBack \u003d jsonTaskifyStorage.readAddressBook(filePath).get();","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(original, new Taskify(readBack));","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"noelmathewisaac"},"content":"        original.addTask(HOON);","lastModifiedDate":"2021-03-01"},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":"        original.removeTask(ALICE);","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"noelmathewisaac"},"content":"        jsonTaskifyStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2021-03-01"},{"lineNumber":78,"author":{"gitId":"noelmathewisaac"},"content":"        readBack \u003d jsonTaskifyStorage.readAddressBook(filePath).get();","lastModifiedDate":"2021-03-01"},{"lineNumber":79,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(original, new Taskify(readBack));","lastModifiedDate":"2021-03-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"        original.addTask(IDA);","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"noelmathewisaac"},"content":"        jsonTaskifyStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2021-03-01"},{"lineNumber":84,"author":{"gitId":"noelmathewisaac"},"content":"        readBack \u003d jsonTaskifyStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2021-03-01"},{"lineNumber":85,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(original, new Taskify(readBack));","lastModifiedDate":"2021-03-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"noelmathewisaac"},"content":"     * Saves {@code taskify} at the specified {@code filePath}.","lastModifiedDate":"2021-03-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"noelmathewisaac"},"content":"    private void saveAddressBook(ReadOnlyTaskify taskify, String filePath) {","lastModifiedDate":"2021-03-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"noelmathewisaac"},"content":"            new JsonTaskifyStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-01"},{"lineNumber":100,"author":{"gitId":"noelmathewisaac"},"content":"                    .saveAddressBook(taskify, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"noelmathewisaac"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new Taskify(), null));","lastModifiedDate":"2021-03-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":73,"noelmathewisaac":37}},{"path":"src/test/java/seedu/taskify/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.storage;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.GuiSettings;","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.UserPrefs;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                       ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                       : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":118,"noelmathewisaac":5}},{"path":"src/test/java/seedu/taskify/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.storage;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.TypicalTasks.getTypicalAddressBook;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.GuiSettings;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.ReadOnlyTaskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.UserPrefs;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"        JsonTaskifyStorage taskifyStorage \u003d new JsonTaskifyStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"        storageManager \u003d new StorageManager(taskifyStorage, userPrefsStorage);","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"    public void taskifyReadSave() throws Exception {","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"         * {@link JsonTaskifyStorage} class.","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonTaskifyParserStorageTest} class.","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"        Taskify original \u003d getTypicalAddressBook();","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"        ReadOnlyTaskify retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"        assertEquals(original, new Taskify(retrieved));","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":54,"noelmathewisaac":14}},{"path":"src/test/java/seedu/taskify/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.testutil;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                                    Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"-":33,"noelmathewisaac":1}},{"path":"src/test/java/seedu/taskify/testutil/EditTaskDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.testutil;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.tag.Tag;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.task.Date;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.model.task.Description;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Name;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.Status;","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.StatusType;","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":" * A utility class to help with building EditTaskDescriptor objects.","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"public class EditTaskDescriptorBuilder {","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"    private EditTaskDescriptor descriptor;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"    public EditTaskDescriptorBuilder() {","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"    public EditTaskDescriptorBuilder(EditTaskDescriptor descriptor) {","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"        this.descriptor \u003d new EditTaskDescriptor(descriptor);","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns an {@code EditTaskDescriptor} with fields containing {@code task}\u0027s details","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"noelmathewisaac"},"content":"    public EditTaskDescriptorBuilder(Task task) {","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"        descriptor.setName(task.getName());","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"hengyongming"},"content":"        descriptor.setDescription(task.getDescription());","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"        descriptor.setStatus(task.getStatus());","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"CSmortal"},"content":"        descriptor.setDate(task.getDate());","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"        descriptor.setTags(task.getTags());","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"     * Sets the {@code Name} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"    public EditTaskDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"noelmathewisaac"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"        return this;","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"hengyongming"},"content":"     * Sets the {@code Description} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"hengyongming"},"content":"    public EditTaskDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"hengyongming"},"content":"        descriptor.setDescription(new Description(description));","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"        return this;","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"khiaxeng"},"content":"     * Sets the {@code Status} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"khiaxeng"},"content":"     * @param status","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"khiaxeng"},"content":"    public EditTaskDescriptorBuilder withStatus(StatusType status) {","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"khiaxeng"},"content":"        descriptor.setStatus(new Status(status));","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"        return this;","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":70,"author":{"gitId":"CSmortal"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"CSmortal"},"content":"     * Sets the {@code Date} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"CSmortal"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"CSmortal"},"content":"    public EditTaskDescriptorBuilder withDate(String date) {","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"CSmortal"},"content":"        descriptor.setDate(new Date(date));","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"CSmortal"},"content":"        return this;","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":79,"author":{"gitId":"noelmathewisaac"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditTaskDescriptor}","lastModifiedDate":"2021-03-01"},{"lineNumber":80,"author":{"gitId":"noelmathewisaac"},"content":"     * that we are building.","lastModifiedDate":"2021-03-01"},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"    public EditTaskDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"noelmathewisaac"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-03-01"},{"lineNumber":84,"author":{"gitId":"noelmathewisaac"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-03-01"},{"lineNumber":85,"author":{"gitId":"noelmathewisaac"},"content":"        return this;","lastModifiedDate":"2021-03-01"},{"lineNumber":86,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":87,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":88,"author":{"gitId":"noelmathewisaac"},"content":"    public EditTaskDescriptor build() {","lastModifiedDate":"2021-03-01"},{"lineNumber":89,"author":{"gitId":"noelmathewisaac"},"content":"        return descriptor;","lastModifiedDate":"2021-03-01"},{"lineNumber":90,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":91,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":5,"khiaxeng":7,"CSmortal":10,"noelmathewisaac":69}},{"path":"src/test/java/seedu/taskify/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.testutil;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"              + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"              + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"              + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"              + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"              + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"              + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"              + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"              + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"              + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"              + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":71,"noelmathewisaac":1}},{"path":"src/test/java/seedu/taskify/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.testutil;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.tag.Tag;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.model.task.Date;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"hengyongming"},"content":"import seedu.taskify.model.task.Description;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Name;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.Status;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.StatusType;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"public class TaskBuilder {","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"hengyongming"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"2103t tutorial\";","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"CSmortal"},"content":"    public static final String DEFAULT_DATE \u003d \"2020-04-13 09:30\";","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"    private Name name;","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"hengyongming"},"content":"    private Description description;","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"    private Status status;","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"CSmortal"},"content":"    private Date date;","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"    public TaskBuilder() {","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"hengyongming"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"        status \u003d new Status();","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"CSmortal"},"content":"        date \u003d new Date(DEFAULT_DATE);","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"        name \u003d taskToCopy.getName();","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"hengyongming"},"content":"        description \u003d taskToCopy.getDescription();","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"khiaxeng"},"content":"        status \u003d taskToCopy.getStatus();","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"CSmortal"},"content":"        date \u003d taskToCopy.getDate();","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"        tags \u003d new HashSet\u003c\u003e(taskToCopy.getTags());","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"     * Sets the {@code Name} of the {@code Task} that we are building.","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"    public TaskBuilder withName(String name) {","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"        return this;","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Task} that we are building.","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"    public TaskBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":"        return this;","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"CSmortal"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"CSmortal"},"content":"     * Sets the {@code date} of the {@code Task} that we are building.","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"CSmortal"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"CSmortal"},"content":"    public TaskBuilder withDate(String date) {","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"CSmortal"},"content":"        this.date \u003d new Date(date);","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"CSmortal"},"content":"        return this;","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"hengyongming"},"content":"     * Sets the {@code Description} of the {@code Task} that we are building.","lastModifiedDate":"2021-03-01"},{"lineNumber":78,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":79,"author":{"gitId":"hengyongming"},"content":"    public TaskBuilder withDescription(String description) {","lastModifiedDate":"2021-03-01"},{"lineNumber":80,"author":{"gitId":"hengyongming"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2021-03-01"},{"lineNumber":81,"author":{"gitId":"noelmathewisaac"},"content":"        return this;","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":84,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":85,"author":{"gitId":"khiaxeng"},"content":"     * Sets the {@code Status} of the {@code Task} that we are building.","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"khiaxeng"},"content":"     * @param status","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":88,"author":{"gitId":"khiaxeng"},"content":"    public TaskBuilder withStatus(StatusType status) {","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"khiaxeng"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"noelmathewisaac"},"content":"        return this;","lastModifiedDate":"2021-03-01"},{"lineNumber":91,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":92,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":93,"author":{"gitId":"noelmathewisaac"},"content":"    public Task build() {","lastModifiedDate":"2021-03-01"},{"lineNumber":94,"author":{"gitId":"hengyongming"},"content":"        return new Task(name, description, status, date, tags);","lastModifiedDate":"2021-03-20"},{"lineNumber":95,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":96,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":97,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":9,"khiaxeng":9,"CSmortal":13,"noelmathewisaac":66}},{"path":"src/test/java/seedu/taskify/testutil/TaskUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.testutil;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.AddCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.tag.Tag;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":" * A utility class for Task.","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"public class TaskUtil {","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns an add command string for adding the {@code task}.","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"    public static String getAddCommand(Task task) {","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getTaskDetails(task);","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns the part of command string for the given {@code task}\u0027s details.","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"    public static String getTaskDetails(Task task) {","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"        sb.append(PREFIX_NAME + task.getName().fullName + \" \");","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"hengyongming"},"content":"        sb.append(PREFIX_DESCRIPTION + task.getDescription().value + \" \");","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"CSmortal"},"content":"        sb.append(PREFIX_DATE + task.getDate().value + \" \");","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"        task.getTags().stream().forEach(","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"noelmathewisaac"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"noelmathewisaac"},"content":"        );","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"        return sb.toString();","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns the part of command string for the given {@code EditTaskDescriptor}\u0027s details.","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"noelmathewisaac"},"content":"    public static String getEditTaskDescriptorDetails(EditTaskDescriptor descriptor) {","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"noelmathewisaac"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"hengyongming"},"content":"        descriptor.getDescription().ifPresent(description -\u003e sb.append(PREFIX_DESCRIPTION)","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"hengyongming"},"content":"                .append(description.value).append(\" \"));","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"khiaxeng"},"content":"        descriptor.getStatus().ifPresent(status -\u003e sb.append(PREFIX_STATUS).append(status.toString()).append(\" \"));","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"CSmortal"},"content":"        descriptor.getDate().ifPresent(date -\u003e sb.append(PREFIX_DATE).append(date.value).append(\" \"));","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"noelmathewisaac"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"noelmathewisaac"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"noelmathewisaac"},"content":"            } else {","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"            }","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"        return sb.toString();","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":4,"khiaxeng":2,"CSmortal":3,"noelmathewisaac":53}},{"path":"src/test/java/seedu/taskify/testutil/TaskifyBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.testutil;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":" * {@code TaskifyParser ab \u003d new TaskifyBuilder().withTask(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"public class TaskifyBuilder {","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"    private Taskify taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"    public TaskifyBuilder() {","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"        taskify \u003d new Taskify();","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"    public TaskifyBuilder(Taskify taskify) {","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"        this.taskify \u003d taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"     * Adds a new {@code Task} to the {@code TaskifyParser} that we are building.","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"noelmathewisaac"},"content":"    public TaskifyBuilder withTask(Task task) {","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"noelmathewisaac"},"content":"        taskify.addTask(task);","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"        return this;","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"    public Taskify build() {","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"noelmathewisaac"},"content":"        return taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"noelmathewisaac":34}},{"path":"src/test/java/seedu/taskify/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.testutil;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.index.Index;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns the middle index of the task in the {@code model}\u0027s task list.","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"noelmathewisaac"},"content":"        return Index.fromOneBased(model.getFilteredTaskList().size() / 2);","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns the last index of the task in the {@code model}\u0027s task list.","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"noelmathewisaac"},"content":"        return Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns the task in the {@code model}\u0027s task list at {@code index}.","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"noelmathewisaac"},"content":"    public static Task getTask(Model model, Index index) {","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"noelmathewisaac"},"content":"        return model.getFilteredTaskList().get(index.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":44,"noelmathewisaac":11}},{"path":"src/test/java/seedu/taskify/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.testutil;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"CSmortal"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-21"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"import java.util.List;","lastModifiedDate":"2021-03-21"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.commons.core.index.Index;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"public class TypicalIndexes {","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"    public static final Index INDEX_THIRD_TASK \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"CSmortal"},"content":"    public static final List\u003cIndex\u003e INDEXES_FIRST_TO_THIRD_TASK;","lastModifiedDate":"2021-03-21"},{"lineNumber":16,"author":{"gitId":"CSmortal"},"content":"    static {","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"CSmortal"},"content":"        INDEXES_FIRST_TO_THIRD_TASK \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"CSmortal"},"content":"        INDEXES_FIRST_TO_THIRD_TASK.add(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"CSmortal"},"content":"        INDEXES_FIRST_TO_THIRD_TASK.add(INDEX_SECOND_TASK);","lastModifiedDate":"2021-03-21"},{"lineNumber":20,"author":{"gitId":"CSmortal"},"content":"        INDEXES_FIRST_TO_THIRD_TASK.add(INDEX_THIRD_TASK);","lastModifiedDate":"2021-03-21"},{"lineNumber":21,"author":{"gitId":"CSmortal"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"CSmortal":10,"noelmathewisaac":12}},{"path":"src/test/java/seedu/taskify/testutil/TypicalInputs.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CSmortal"},"content":"package seedu.taskify.testutil;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"CSmortal"},"content":"import seedu.taskify.logic.commands.DeleteMultipleCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"CSmortal"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"CSmortal"},"content":" * A utility class containing a list of {@code String} objects to be used in tests.","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"CSmortal"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"CSmortal"},"content":"public class TypicalInputs {","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"CSmortal"},"content":"    public static final String DELETE_ALL_COMPLETED_INPUT \u003d DeleteMultipleCommand.COMMAND_WORD + \" \" + \"completed -all\";","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"CSmortal"},"content":"    public static final String DELETE_ALL_IN_PROGRESS_INPUT \u003d DeleteMultipleCommand.COMMAND_WORD + \" \" + \"in progress\"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"CSmortal"},"content":"            + \" -all\";","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"CSmortal"},"content":"    public static final String DELETE_ALL_NOT_DONE_INPUT \u003d DeleteMultipleCommand.COMMAND_WORD + \" \" + \"not done -all\";","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"CSmortal"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"CSmortal":13}},{"path":"src/test/java/seedu/taskify/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.testutil;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_DATE_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"CSmortal"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_DESCRIPTION_AMY;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"hengyongming"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import java.util.List;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.Taskify;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"import seedu.taskify.model.task.StatusType;","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.model.task.Task;","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"noelmathewisaac"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"noelmathewisaac"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"noelmathewisaac"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"noelmathewisaac"},"content":"public class TypicalTasks {","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"noelmathewisaac"},"content":"    public static final Task ALICE \u003d new TaskBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"hengyongming"},"content":"                 .withStatus(StatusType.NOT_DONE)","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"CSmortal"},"content":"                 .withDescription(\"94351253\").withDate(\"2014-09-13 01:30\")","lastModifiedDate":"2021-03-04"},{"lineNumber":28,"author":{"gitId":"noelmathewisaac"},"content":"                 .withTags(\"friends\").build();","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"noelmathewisaac"},"content":"    public static final Task BENSON \u003d new TaskBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"            .withStatus(StatusType.NOT_DONE).withDescription(\"98765432\").withDate(\"2015-01-23 23:30\")","lastModifiedDate":"2021-03-04"},{"lineNumber":31,"author":{"gitId":"noelmathewisaac"},"content":"                  .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"hengyongming"},"content":"    public static final Task CARL \u003d new TaskBuilder().withName(\"Carl Kurz\").withDescription(\"95352563\")","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"CSmortal"},"content":"            .withStatus(StatusType.COMPLETED).withDate(\"1980-12-23 00:12\").build();","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"hengyongming"},"content":"    public static final Task DANIEL \u003d new TaskBuilder().withName(\"Daniel Meier\").withDescription(\"87652533\")","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"CSmortal"},"content":"            .withStatus(StatusType.IN_PROGRESS).withDate(\"1995-11-09 15:46\").withTags(","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"CSmortal"},"content":"                          \"friends\").build();","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"hengyongming"},"content":"    public static final Task ELLE \u003d new TaskBuilder().withName(\"Elle Meyer\").withDescription(\"9482224\")","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"CSmortal"},"content":"            .withStatus(StatusType.COMPLETED).withDate(\"1998-07-30 22:13\").build();","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"hengyongming"},"content":"    public static final Task FIONA \u003d new TaskBuilder().withName(\"Fiona Kunz\").withDescription(\"9482427\")","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"hengyongming"},"content":"            .withStatus(StatusType.NOT_DONE).withDate(\"1998-07-30 22:13\").build();","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"hengyongming"},"content":"    public static final Task GEORGE \u003d new TaskBuilder().withName(\"George Best\").withDescription(\"9482442\")","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"CSmortal"},"content":"            .withStatus(StatusType.IN_PROGRESS).withDate(\"1998-07-30 22:13\").build();","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"noelmathewisaac"},"content":"    // Manually added","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"hengyongming"},"content":"    public static final Task HOON \u003d new TaskBuilder().withName(\"Hoon Meier\").withDescription(\"8482424\")","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"hengyongming"},"content":"            .withStatus(StatusType.NOT_DONE).withDate(\"1998-07-30 22:13\").build();","lastModifiedDate":"2021-03-20"},{"lineNumber":47,"author":{"gitId":"hengyongming"},"content":"    public static final Task IDA \u003d new TaskBuilder().withName(\"Ida Mueller\").withDescription(\"8482131\")","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"hengyongming"},"content":"            .withStatus(StatusType.NOT_DONE).withDate(\"1998-07-30 22:13\").build();","lastModifiedDate":"2021-03-20"},{"lineNumber":49,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"noelmathewisaac"},"content":"    // Manually added - Task\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"hengyongming"},"content":"    public static final Task AMY \u003d new TaskBuilder().withName(VALID_NAME_AMY).withDescription(VALID_DESCRIPTION_AMY)","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"hengyongming"},"content":"            .withStatus(StatusType.NOT_DONE).withDate(VALID_DATE_AMY)","lastModifiedDate":"2021-03-20"},{"lineNumber":53,"author":{"gitId":"CSmortal"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"hengyongming"},"content":"    public static final Task BOB \u003d new TaskBuilder().withName(VALID_NAME_BOB).withDescription(VALID_DESCRIPTION_BOB)","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"hengyongming"},"content":"            .withStatus(StatusType.NOT_DONE).withDate(VALID_DATE_BOB)","lastModifiedDate":"2021-03-20"},{"lineNumber":56,"author":{"gitId":"khiaxeng"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"noelmathewisaac"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"noelmathewisaac"},"content":"    private TypicalTasks() {","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"noelmathewisaac"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"noelmathewisaac"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"noelmathewisaac"},"content":"     * Returns an {@code TaskifyParser} with all the typical tasks.","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"noelmathewisaac"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"noelmathewisaac"},"content":"    public static Taskify getTypicalAddressBook() {","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"noelmathewisaac"},"content":"        Taskify ab \u003d new Taskify();","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"noelmathewisaac"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"noelmathewisaac"},"content":"            ab.addTask(task);","lastModifiedDate":"2021-03-01"},{"lineNumber":70,"author":{"gitId":"noelmathewisaac"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"noelmathewisaac"},"content":"        return ab;","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"noelmathewisaac"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":74,"author":{"gitId":"noelmathewisaac"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2021-03-01"},{"lineNumber":75,"author":{"gitId":"noelmathewisaac"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2021-03-01"},{"lineNumber":76,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"noelmathewisaac"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"hengyongming":17,"khiaxeng":3,"CSmortal":9,"noelmathewisaac":48}},{"path":"src/test/java/seedu/taskify/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.ui;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"    public TestFxmlObject() {","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"noelmathewisaac"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                       || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                                   \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":33,"noelmathewisaac":3}},{"path":"src/test/java/seedu/taskify/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"noelmathewisaac"},"content":"package seedu.taskify.ui;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"noelmathewisaac"},"content":"import static seedu.taskify.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"noelmathewisaac"},"content":"import seedu.taskify.MainApp;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":111,"noelmathewisaac":3}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"\u003c?import seedu.taskify.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":3,"noelmathewisaac":1}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"noelmathewisaac"},"content":"\u003c?import seedu.taskify.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"noelmathewisaac"},"content":"\u003cfx:root type\u003d\"seedu.taskify.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":5,"noelmathewisaac":2}}]
