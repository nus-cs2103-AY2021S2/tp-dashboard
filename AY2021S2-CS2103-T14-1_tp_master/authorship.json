[{"path":".vscode/settings.json","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    \"files.eol\": \"\\n\","},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"files.insertFinalNewline\": true,"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"files.trimTrailingWhitespace\": true,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"java.checkstyle.version\": \"8.29\","},{"lineNumber":6,"author":{"gitId":"stein414"},"content":"    \"java.checkstyle.configuration\": \"${workspaceFolder}/config/checkstyle/checkstyle.xml\","},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"java.checkstyle.properties\": {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        \"config_loc\": \"${workspaceFolder}/config/checkstyle\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"java.codeGeneration.hashCodeEquals.useInstanceof\": true,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"java.completion.importOrder\": ["},{"lineNumber":12,"author":{"gitId":"-"},"content":"        \"java\","},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \"javax\","},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \"com\","},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \"org\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ],"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"java.configuration.updateBuildConfiguration\": \"automatic\","},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"java.format.settings.url\": \"eclipse-formatter.xml\","},{"lineNumber":19,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"stein414":1,"-":18}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"benedictkhoomw"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103-T14-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103-T14-1/tp/actions)"},{"lineNumber":2,"author":{"gitId":"benedictkhoomw"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103-T14-1/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103-T14-1/tp)"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"benedictkhoomw"},"content":"**SunRez** is a desktop app designed for college residential staff to efficiently manage student housing services. It is optimized for use via a Command Line Interface (CLI)."},{"lineNumber":7,"author":{"gitId":"benedictkhoomw"},"content":""},{"lineNumber":8,"author":{"gitId":"benedictkhoomw"},"content":"**SunRez** has the following features:"},{"lineNumber":9,"author":{"gitId":"benedictkhoomw"},"content":"* Keeps track of maintenance issues"},{"lineNumber":10,"author":{"gitId":"benedictkhoomw"},"content":"* Keeps track of student records"},{"lineNumber":11,"author":{"gitId":"benedictkhoomw"},"content":"* Keeps track of room records"},{"lineNumber":12,"author":{"gitId":"benedictkhoomw"},"content":""},{"lineNumber":13,"author":{"gitId":"benedictkhoomw"},"content":"If this is your first time using/contributing to **SunRez**, check out our guides in the [Site Map](#site-map) section below."},{"lineNumber":14,"author":{"gitId":"benedictkhoomw"},"content":""},{"lineNumber":15,"author":{"gitId":"benedictkhoomw"},"content":"## Site Map"},{"lineNumber":16,"author":{"gitId":"benedictkhoomw"},"content":""},{"lineNumber":17,"author":{"gitId":"benedictkhoomw"},"content":"* [User Guide](docs/UserGuide.md)"},{"lineNumber":18,"author":{"gitId":"benedictkhoomw"},"content":"* [Developer Guide](docs/DeveloperGuide.md)"},{"lineNumber":19,"author":{"gitId":"benedictkhoomw"},"content":"* [About Us](docs/AboutUs.md)"},{"lineNumber":20,"author":{"gitId":"benedictkhoomw"},"content":"* [Github](https://github.com/AY2021S2-CS2103-T14-1/tp)"},{"lineNumber":21,"author":{"gitId":"benedictkhoomw"},"content":""},{"lineNumber":22,"author":{"gitId":"benedictkhoomw"},"content":"## Acknowledgements"},{"lineNumber":23,"author":{"gitId":"benedictkhoomw"},"content":""},{"lineNumber":24,"author":{"gitId":"benedictkhoomw"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)."},{"lineNumber":25,"author":{"gitId":"benedictkhoomw"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)"},{"lineNumber":26,"author":{"gitId":"benedictkhoomw"},"content":"* Favicon designed by [FreeLogoDesign](https://www.freelogodesign.org/)."},{"lineNumber":27,"author":{"gitId":"benedictkhoomw"},"content":""},{"lineNumber":28,"author":{"gitId":"benedictkhoomw"},"content":"## License: [MIT](LICENSE)"}],"authorContributionMap":{"benedictkhoomw":25,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg)."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"cnlinh"},"content":"You can reach us at the email `e0205114[at]comp.nus.edu.sg`"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"### Azeem Vasanwala"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"DrWala"},"content":"\u003cimg src\u003d\"images/drwala.png\" width\u003d\"200px\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[github](https://github.com/DrWala)]"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[portfolio](team/azeem.md)]"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"DrWala"},"content":"* Role: Developer"},{"lineNumber":20,"author":{"gitId":"DrWala"},"content":"* Responsibilities: Testing, Rooms feature"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"### Benedict Khoo"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"benedictkhoomw"},"content":"\u003cimg src\u003d\"images/benedictkhoomw.png\" width\u003d\"200px\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"[[github](https://github.com/benedictkhoomw)]"},{"lineNumber":27,"author":{"gitId":"-"},"content":"[[portfolio](team/benedict.md)]"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"benedictkhoomw"},"content":"* Role: Developer"},{"lineNumber":30,"author":{"gitId":"benedictkhoomw"},"content":"* Responsibilities: Documentation, Storage Integration"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Colin Tan"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"colintkn"},"content":"\u003cimg src\u003d\"images/colintkn.png\" width\u003d\"200px\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"[[github](https://github.com/colintkn)]"},{"lineNumber":37,"author":{"gitId":"-"},"content":"[[portfolio](team/colin.md)]"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"colintkn"},"content":"* Role: Developer"},{"lineNumber":40,"author":{"gitId":"colintkn"},"content":"* Responsibilities: Integration, Resident Feature"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"### Ian Soo"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/stein414.png\" width\u003d\"200px\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"[[github](https://github.com/stein414)]"},{"lineNumber":47,"author":{"gitId":"-"},"content":"[[portfolio](team/ian.md)]"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer, VS Code Expert"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Responsibilities: Code Quality, Issue Feature"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"### Linh"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"cnlinh"},"content":"\u003cimg src\u003d\"images/cnlinh.png\" width\u003d\"200px\"\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"[[github](https://github.com/cnlinh)]"},{"lineNumber":57,"author":{"gitId":"-"},"content":"[[portfolio](team/linh.md)]"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"cnlinh"},"content":"* Role: Team Lead"},{"lineNumber":60,"author":{"gitId":"cnlinh"},"content":"* Responsibilities: UI"}],"authorContributionMap":{"cnlinh":4,"benedictkhoomw":3,"colintkn":3,"-":47,"DrWala":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md)."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component."},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams."},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other."},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary."},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components."},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components."},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App."},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor."},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory."},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk."},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component."},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point."},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface."},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`."},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component."},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component."},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data."},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :"},{"lineNumber":81,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command."},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`."},{"lineNumber":85,"author":{"gitId":"-"},"content":"1. The command execution can affect the `Model` (e.g. adding a person)."},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user."},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Model component"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `Model`,"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences."},{"lineNumber":105,"author":{"gitId":"-"},"content":"* stores the address book data."},{"lineNumber":106,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."},{"lineNumber":107,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components."},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Storage component"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Storage` component,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back."},{"lineNumber":124,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back."},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"### Common classes"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package."},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"## **Implementation**"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented."},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"#### Proposed Implementation"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history."},{"lineNumber":143,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history."},{"lineNumber":144,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history."},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively."},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state."},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state."},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`."},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`."},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state."},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather"},{"lineNumber":171,"author":{"gitId":"-"},"content":"than attempting to perform the undo."},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state."},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged."},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow."},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"#### Design consideration:"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book."},{"lineNumber":206,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement."},{"lineNumber":207,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage."},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  itself."},{"lineNumber":211,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted)."},{"lineNumber":212,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct."},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)"},{"lineNumber":229,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Product scope"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"**Target user profile**:"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"stein414"},"content":"Nina works as a housing service management officer for a Residential College* (in NUS). She is the sole manager of the office. She:"},{"lineNumber":240,"author":{"gitId":"stein414"},"content":"* has to manage a large number of residents and rooms (\u003e 600)"},{"lineNumber":241,"author":{"gitId":"stein414"},"content":"* needs to efficiently assign rooms to residents"},{"lineNumber":242,"author":{"gitId":"stein414"},"content":"* handles room allocation exercise every semester"},{"lineNumber":243,"author":{"gitId":"stein414"},"content":"* needs to track room issues reported by students during the semester"},{"lineNumber":244,"author":{"gitId":"stein414"},"content":"* needs to update the issue lifecycle (reported \u003d\u003e maintenance ongoing \u003d\u003e fixed/closed)"},{"lineNumber":245,"author":{"gitId":"stein414"},"content":"* prefers typing over interacting via GUI"},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"stein414"},"content":"**Value proposition**: manage residents, rooms, and allocations faster than a typical GUI app."},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"### User stories"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"stein414"},"content":"| Priority | As a … | I want to … | So that I can…|"},{"lineNumber":255,"author":{"gitId":"stein414"},"content":"| - | - | - | - |"},{"lineNumber":256,"author":{"gitId":"stein414"},"content":"| `* * *` | new user | see usage instructions | refer to instructions if I forget how to use the app |"},{"lineNumber":257,"author":{"gitId":"stein414"},"content":"| `* * *` | confused user | have a help command | learn how to use the application |"},{"lineNumber":258,"author":{"gitId":"-"},"content":"| `* * *` | user | add a new person | |"},{"lineNumber":259,"author":{"gitId":"stein414"},"content":"| `* * *` | user | add issues | |"},{"lineNumber":260,"author":{"gitId":"stein414"},"content":"| `* * *` | user | see a list of pending tasks sorted by deadline | prioritise which to do |"},{"lineNumber":261,"author":{"gitId":"stein414"},"content":"| `* * *` | user | search for tasks | |"},{"lineNumber":262,"author":{"gitId":"stein414"},"content":"| `* * *` | user | close issues | focus on open issues |"},{"lineNumber":263,"author":{"gitId":"stein414"},"content":"| `* * *` | user | update issues | |"},{"lineNumber":264,"author":{"gitId":"stein414"},"content":"| `* * *` | user | remove issues | |"},{"lineNumber":265,"author":{"gitId":"stein414"},"content":"| `* * *` | user | add residents | |"},{"lineNumber":266,"author":{"gitId":"stein414"},"content":"| `* * *` | user | search for residents | |"},{"lineNumber":267,"author":{"gitId":"stein414"},"content":"| `* * *` | user | update resident details | ensure their information is up to date |"},{"lineNumber":268,"author":{"gitId":"stein414"},"content":"| `* * *` | user | remove residents | |"},{"lineNumber":269,"author":{"gitId":"stein414"},"content":"| `* * *` | user | add new rooms | |"},{"lineNumber":270,"author":{"gitId":"stein414"},"content":"| `* * *` | user | see a list of rooms with their statuses | know which rooms are available |"},{"lineNumber":271,"author":{"gitId":"stein414"},"content":"| `* * *` | user | search for rooms | |"},{"lineNumber":272,"author":{"gitId":"stein414"},"content":"| `* * *` | user | update room details | |"},{"lineNumber":273,"author":{"gitId":"stein414"},"content":"| `* * *` | user | remove rooms | |"},{"lineNumber":274,"author":{"gitId":"stein414"},"content":"| `* *` | user | see both available rooms and unassigned residents side by side | easily match residents to rooms |"},{"lineNumber":275,"author":{"gitId":"stein414"},"content":"| `* *` | careless user | undo previous commands | easily fix any errors I might make |"},{"lineNumber":276,"author":{"gitId":"stein414"},"content":"| `* *` | careless user | redo previous commands | easily fix an erroneous undo |"},{"lineNumber":277,"author":{"gitId":"stein414"},"content":"| `* * *` | user | allocate a resident to a room | |"},{"lineNumber":278,"author":{"gitId":"stein414"},"content":"| `* * *` | user | deallocate a resident from a room | |"},{"lineNumber":279,"author":{"gitId":"stein414"},"content":""},{"lineNumber":280,"author":{"gitId":"stein414"},"content":"## Use cases"},{"lineNumber":281,"author":{"gitId":"stein414"},"content":""},{"lineNumber":282,"author":{"gitId":"stein414"},"content":"(For all use cases below, the **System** is the `SunRez` and the **Actor** is the `user`, unless specified otherwise. All Use Cases are prefixed with `UC` followed by a 3 digit code)"},{"lineNumber":283,"author":{"gitId":"stein414"},"content":""},{"lineNumber":284,"author":{"gitId":"stein414"},"content":""},{"lineNumber":285,"author":{"gitId":"stein414"},"content":"### UC-001 Add a resident"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"stein414"},"content":"**MSS**"},{"lineNumber":288,"author":{"gitId":"stein414"},"content":""},{"lineNumber":289,"author":{"gitId":"stein414"},"content":"1. User requests to add a specific resident to the list."},{"lineNumber":290,"author":{"gitId":"stein414"},"content":"2. SunRez adds the resident and saves the changes."},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"stein414"},"content":"Use case ends."},{"lineNumber":293,"author":{"gitId":"-"},"content":""},{"lineNumber":294,"author":{"gitId":"stein414"},"content":"**Extensions**"},{"lineNumber":295,"author":{"gitId":"stein414"},"content":""},{"lineNumber":296,"author":{"gitId":"stein414"},"content":"* 1a. The resident\u0027s details are incorrectly formatted (e.g phone number/email/year format does not conform, OR room number is invalid)."},{"lineNumber":297,"author":{"gitId":"stein414"},"content":"    * 1a1. SunRez displays an error stating which field is incorrectly formatted and requests the user to try again after fixing the stated error."},{"lineNumber":298,"author":{"gitId":"stein414"},"content":"    Use case ends."},{"lineNumber":299,"author":{"gitId":"stein414"},"content":"* 1b. The resident\u0027s phone number or email are in use by an existing resident."},{"lineNumber":300,"author":{"gitId":"stein414"},"content":"    * 1b1. SunRez displays an error stating which field is already in use and requests the user to try again after fixing the stated error."},{"lineNumber":301,"author":{"gitId":"stein414"},"content":"    Use case ends."},{"lineNumber":302,"author":{"gitId":"stein414"},"content":"* 2a. Sunrez encounters an error while saving the content."},{"lineNumber":303,"author":{"gitId":"stein414"},"content":"    * 2a1. SunRez shows an error message and requests the user to try their command again."},{"lineNumber":304,"author":{"gitId":"stein414"},"content":"    Use case ends."},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"stein414"},"content":"### UC-002 List all residents"},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"-"},"content":"**MSS**"},{"lineNumber":310,"author":{"gitId":"-"},"content":""},{"lineNumber":311,"author":{"gitId":"stein414"},"content":"1. User requests to list residents."},{"lineNumber":312,"author":{"gitId":"stein414"},"content":"2. SunRez shows a list of residents."},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"Use case ends."},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"**Extensions**"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"-"},"content":"* 2a. The list is empty."},{"lineNumber":319,"author":{"gitId":"stein414"},"content":"    Use case ends."},{"lineNumber":320,"author":{"gitId":"stein414"},"content":""},{"lineNumber":321,"author":{"gitId":"stein414"},"content":""},{"lineNumber":322,"author":{"gitId":"stein414"},"content":"### UC-003 Find residents"},{"lineNumber":323,"author":{"gitId":"stein414"},"content":""},{"lineNumber":324,"author":{"gitId":"stein414"},"content":"**MSS**"},{"lineNumber":325,"author":{"gitId":"stein414"},"content":""},{"lineNumber":326,"author":{"gitId":"stein414"},"content":"1. User searches for a resident by keywords."},{"lineNumber":327,"author":{"gitId":"stein414"},"content":"2. SunRez shows a list of residents whose name contain any of the keywords."},{"lineNumber":328,"author":{"gitId":"stein414"},"content":""},{"lineNumber":329,"author":{"gitId":"stein414"},"content":"Use case ends."},{"lineNumber":330,"author":{"gitId":"stein414"},"content":""},{"lineNumber":331,"author":{"gitId":"stein414"},"content":"**Extensions**"},{"lineNumber":332,"author":{"gitId":"stein414"},"content":""},{"lineNumber":333,"author":{"gitId":"stein414"},"content":"* 2a. There are no residents matching the keywords."},{"lineNumber":334,"author":{"gitId":"stein414"},"content":"    * 2a1. An empty list is displayed."},{"lineNumber":335,"author":{"gitId":"stein414"},"content":"    Use case ends."},{"lineNumber":336,"author":{"gitId":"stein414"},"content":""},{"lineNumber":337,"author":{"gitId":"stein414"},"content":"### UC-004 Edit a resident record"},{"lineNumber":338,"author":{"gitId":"stein414"},"content":""},{"lineNumber":339,"author":{"gitId":"stein414"},"content":"**MSS**"},{"lineNumber":340,"author":{"gitId":"stein414"},"content":""},{"lineNumber":341,"author":{"gitId":"stein414"},"content":"1. User requests to list residents."},{"lineNumber":342,"author":{"gitId":"stein414"},"content":"2. SunRez shows a list of residents."},{"lineNumber":343,"author":{"gitId":"stein414"},"content":"3. User requests to edit a specific resident based on the index from the list displayed in step 2."},{"lineNumber":344,"author":{"gitId":"stein414"},"content":"4. SunRez edits the residents and saves the changes."},{"lineNumber":345,"author":{"gitId":"stein414"},"content":""},{"lineNumber":346,"author":{"gitId":"stein414"},"content":"Use case ends."},{"lineNumber":347,"author":{"gitId":"stein414"},"content":""},{"lineNumber":348,"author":{"gitId":"stein414"},"content":"**Extensions**"},{"lineNumber":349,"author":{"gitId":"stein414"},"content":""},{"lineNumber":350,"author":{"gitId":"stein414"},"content":"* 2a. The list of residents is empty."},{"lineNumber":351,"author":{"gitId":"stein414"},"content":"    Use case ends."},{"lineNumber":352,"author":{"gitId":"stein414"},"content":"* 3a. The resident\u0027s details are invalid (e.g phone number/email/dob format does not conform, OR room number is invalid)."},{"lineNumber":353,"author":{"gitId":"stein414"},"content":"    * 3a1. SunRez shows an error message stating which field is incorrectly formatted and requests the user to try again."},{"lineNumber":354,"author":{"gitId":"stein414"},"content":"    Use case resumes at step 2."},{"lineNumber":355,"author":{"gitId":"stein414"},"content":""},{"lineNumber":356,"author":{"gitId":"stein414"},"content":""},{"lineNumber":357,"author":{"gitId":"stein414"},"content":"### UC-005 Delete a resident"},{"lineNumber":358,"author":{"gitId":"stein414"},"content":""},{"lineNumber":359,"author":{"gitId":"stein414"},"content":"**MSS**"},{"lineNumber":360,"author":{"gitId":"stein414"},"content":""},{"lineNumber":361,"author":{"gitId":"stein414"},"content":"1. User requests to list residents."},{"lineNumber":362,"author":{"gitId":"stein414"},"content":"2. SunRez shows a list of residents."},{"lineNumber":363,"author":{"gitId":"stein414"},"content":"3. User requests to delete a specific resident based on the index from the list displayed in step 2."},{"lineNumber":364,"author":{"gitId":"stein414"},"content":"4. SunRez deletes the specified resident and saves the changes."},{"lineNumber":365,"author":{"gitId":"stein414"},"content":""},{"lineNumber":366,"author":{"gitId":"stein414"},"content":"Use case ends."},{"lineNumber":367,"author":{"gitId":"-"},"content":""},{"lineNumber":368,"author":{"gitId":"stein414"},"content":"**Extensions**"},{"lineNumber":369,"author":{"gitId":"stein414"},"content":""},{"lineNumber":370,"author":{"gitId":"stein414"},"content":"* 2a. The list of residents is empty."},{"lineNumber":371,"author":{"gitId":"stein414"},"content":"    Use case ends."},{"lineNumber":372,"author":{"gitId":"stein414"},"content":"* 3a. The specified resident does not exist."},{"lineNumber":373,"author":{"gitId":"stein414"},"content":"    * SunRez shows an error message."},{"lineNumber":374,"author":{"gitId":"stein414"},"content":"    Use case resumes at step 2."},{"lineNumber":375,"author":{"gitId":"stein414"},"content":""},{"lineNumber":376,"author":{"gitId":"stein414"},"content":""},{"lineNumber":377,"author":{"gitId":"stein414"},"content":"### UC-006 Add a room"},{"lineNumber":378,"author":{"gitId":"stein414"},"content":""},{"lineNumber":379,"author":{"gitId":"stein414"},"content":"**MSS**"},{"lineNumber":380,"author":{"gitId":"stein414"},"content":""},{"lineNumber":381,"author":{"gitId":"stein414"},"content":"1. User requests to add a specific room to the list."},{"lineNumber":382,"author":{"gitId":"stein414"},"content":"2. SunRez adds the room and saves the changes."},{"lineNumber":383,"author":{"gitId":"stein414"},"content":""},{"lineNumber":384,"author":{"gitId":"stein414"},"content":"Use case ends."},{"lineNumber":385,"author":{"gitId":"stein414"},"content":""},{"lineNumber":386,"author":{"gitId":"stein414"},"content":"**Extensions**"},{"lineNumber":387,"author":{"gitId":"stein414"},"content":"* 1a. The room\u0027s details are invalid (e.g room number format is not valid)."},{"lineNumber":388,"author":{"gitId":"stein414"},"content":"    * 1a1. SunRez shows an error stating which field is incorrectly formatted and requests the user to try again after fixing the stated error."},{"lineNumber":389,"author":{"gitId":"stein414"},"content":"  Use case ends."},{"lineNumber":390,"author":{"gitId":"stein414"},"content":""},{"lineNumber":391,"author":{"gitId":"stein414"},"content":""},{"lineNumber":392,"author":{"gitId":"stein414"},"content":"### UC-007 List all rooms"},{"lineNumber":393,"author":{"gitId":"stein414"},"content":""},{"lineNumber":394,"author":{"gitId":"stein414"},"content":"Similar to *UC-002 List all residents*, just replace residents with rooms."},{"lineNumber":395,"author":{"gitId":"stein414"},"content":""},{"lineNumber":396,"author":{"gitId":"stein414"},"content":""},{"lineNumber":397,"author":{"gitId":"stein414"},"content":"### UC-008 Find rooms"},{"lineNumber":398,"author":{"gitId":"stein414"},"content":""},{"lineNumber":399,"author":{"gitId":"stein414"},"content":"Similar to *UC-003 Find residents*, just replace resident with room."},{"lineNumber":400,"author":{"gitId":"stein414"},"content":""},{"lineNumber":401,"author":{"gitId":"stein414"},"content":""},{"lineNumber":402,"author":{"gitId":"stein414"},"content":"### UC-009 Edit a room record"},{"lineNumber":403,"author":{"gitId":"stein414"},"content":""},{"lineNumber":404,"author":{"gitId":"stein414"},"content":"**MSS**"},{"lineNumber":405,"author":{"gitId":"stein414"},"content":""},{"lineNumber":406,"author":{"gitId":"stein414"},"content":"1. User requests to list rooms."},{"lineNumber":407,"author":{"gitId":"stein414"},"content":"2. SunRez shows a list of rooms."},{"lineNumber":408,"author":{"gitId":"stein414"},"content":"3. User requests to edit a specific room based on the index from the list displayed in step 2."},{"lineNumber":409,"author":{"gitId":"stein414"},"content":"4. SunRez edits the room and saves the changes."},{"lineNumber":410,"author":{"gitId":"stein414"},"content":""},{"lineNumber":411,"author":{"gitId":"stein414"},"content":"Use case ends."},{"lineNumber":412,"author":{"gitId":"stein414"},"content":""},{"lineNumber":413,"author":{"gitId":"stein414"},"content":"**Extensions**"},{"lineNumber":414,"author":{"gitId":"stein414"},"content":""},{"lineNumber":415,"author":{"gitId":"stein414"},"content":"* 2a. The list of rooms is empty."},{"lineNumber":416,"author":{"gitId":"-"},"content":"    Use case ends."},{"lineNumber":417,"author":{"gitId":"stein414"},"content":"* 3a. The room\u0027s details are invalid (e.g room number format is not valid)."},{"lineNumber":418,"author":{"gitId":"stein414"},"content":"    * 3a1. SunRez shows an error message stating which field is incorrectly formatted and requests the user to try again."},{"lineNumber":419,"author":{"gitId":"stein414"},"content":"    Use case resumes at step 2."},{"lineNumber":420,"author":{"gitId":"stein414"},"content":""},{"lineNumber":421,"author":{"gitId":"stein414"},"content":""},{"lineNumber":422,"author":{"gitId":"stein414"},"content":"### UC-010 Delete a room"},{"lineNumber":423,"author":{"gitId":"stein414"},"content":""},{"lineNumber":424,"author":{"gitId":"stein414"},"content":"Similar to *UC-005 Delete a resident*, just replace resident with room."},{"lineNumber":425,"author":{"gitId":"stein414"},"content":""},{"lineNumber":426,"author":{"gitId":"-"},"content":""},{"lineNumber":427,"author":{"gitId":"stein414"},"content":"### UC-011 Add an open issue"},{"lineNumber":428,"author":{"gitId":"stein414"},"content":""},{"lineNumber":429,"author":{"gitId":"stein414"},"content":"**MSS**"},{"lineNumber":430,"author":{"gitId":"-"},"content":""},{"lineNumber":431,"author":{"gitId":"stein414"},"content":"1. User requests to add a specific open issue to the list."},{"lineNumber":432,"author":{"gitId":"stein414"},"content":"2. SunRez adds the issue and saves the changes."},{"lineNumber":433,"author":{"gitId":"stein414"},"content":""},{"lineNumber":434,"author":{"gitId":"stein414"},"content":"Use case ends."},{"lineNumber":435,"author":{"gitId":"stein414"},"content":""},{"lineNumber":436,"author":{"gitId":"stein414"},"content":"**Extensions**"},{"lineNumber":437,"author":{"gitId":"stein414"},"content":"* 1a. The issue\u0027s details are invalid (e.g invalid room number)."},{"lineNumber":438,"author":{"gitId":"stein414"},"content":"    * 1a1. SunRez shows an error stating which field is incorrectly formatted and requests the user to try again after fixing the stated error."},{"lineNumber":439,"author":{"gitId":"-"},"content":"  Use case ends."},{"lineNumber":440,"author":{"gitId":"-"},"content":""},{"lineNumber":441,"author":{"gitId":"stein414"},"content":""},{"lineNumber":442,"author":{"gitId":"stein414"},"content":"### UC-012 List all issues"},{"lineNumber":443,"author":{"gitId":"stein414"},"content":""},{"lineNumber":444,"author":{"gitId":"stein414"},"content":"Similar to *UC-002 List all residents*, just replace residents with issues."},{"lineNumber":445,"author":{"gitId":"stein414"},"content":""},{"lineNumber":446,"author":{"gitId":"stein414"},"content":"### UC-013 Find issues"},{"lineNumber":447,"author":{"gitId":"stein414"},"content":""},{"lineNumber":448,"author":{"gitId":"stein414"},"content":"Similar to *UC-003 Find residents*, just replace residents with issues."},{"lineNumber":449,"author":{"gitId":"stein414"},"content":""},{"lineNumber":450,"author":{"gitId":"stein414"},"content":"### UC-014 Edit an issue record"},{"lineNumber":451,"author":{"gitId":"stein414"},"content":""},{"lineNumber":452,"author":{"gitId":"stein414"},"content":"**MSS**"},{"lineNumber":453,"author":{"gitId":"stein414"},"content":""},{"lineNumber":454,"author":{"gitId":"stein414"},"content":"1. User requests to list issues."},{"lineNumber":455,"author":{"gitId":"stein414"},"content":"2. SunRez shows a list of issues."},{"lineNumber":456,"author":{"gitId":"stein414"},"content":"3. User requests to edit a specific issue based on the index from the list displayed in step 2."},{"lineNumber":457,"author":{"gitId":"stein414"},"content":"4. SunRez edits the issue and saves the changes."},{"lineNumber":458,"author":{"gitId":"stein414"},"content":""},{"lineNumber":459,"author":{"gitId":"stein414"},"content":"Use case ends."},{"lineNumber":460,"author":{"gitId":"stein414"},"content":""},{"lineNumber":461,"author":{"gitId":"stein414"},"content":"**Extensions**"},{"lineNumber":462,"author":{"gitId":"stein414"},"content":""},{"lineNumber":463,"author":{"gitId":"stein414"},"content":"* 2a. The list of issue is empty."},{"lineNumber":464,"author":{"gitId":"stein414"},"content":"    Use case ends."},{"lineNumber":465,"author":{"gitId":"stein414"},"content":"* 3a. The issue\u0027s details are invalid (e.g invalid room number)."},{"lineNumber":466,"author":{"gitId":"stein414"},"content":"    * 3a1. SunRez shows an error message stating which field is incorrectly formatted and requests the user to try again."},{"lineNumber":467,"author":{"gitId":"stein414"},"content":"    Use case resumes at step 2."},{"lineNumber":468,"author":{"gitId":"stein414"},"content":""},{"lineNumber":469,"author":{"gitId":"stein414"},"content":""},{"lineNumber":470,"author":{"gitId":"stein414"},"content":"### UC-015 Close an issue"},{"lineNumber":471,"author":{"gitId":"stein414"},"content":""},{"lineNumber":472,"author":{"gitId":"stein414"},"content":"**MSS**"},{"lineNumber":473,"author":{"gitId":"stein414"},"content":""},{"lineNumber":474,"author":{"gitId":"stein414"},"content":"1. User requests to list issues."},{"lineNumber":475,"author":{"gitId":"stein414"},"content":"2. SunRez shows a list of issues."},{"lineNumber":476,"author":{"gitId":"stein414"},"content":"3. User requests to mark a specific issue as closed based on the index from the list displayed in step 2."},{"lineNumber":477,"author":{"gitId":"stein414"},"content":"4. SunRez marks the issue as closed and saves the changes."},{"lineNumber":478,"author":{"gitId":"stein414"},"content":""},{"lineNumber":479,"author":{"gitId":"stein414"},"content":"Use case ends."},{"lineNumber":480,"author":{"gitId":"stein414"},"content":""},{"lineNumber":481,"author":{"gitId":"stein414"},"content":"**Extensions**"},{"lineNumber":482,"author":{"gitId":"stein414"},"content":""},{"lineNumber":483,"author":{"gitId":"stein414"},"content":"* 2a. The list is empty."},{"lineNumber":484,"author":{"gitId":"stein414"},"content":"Use case ends."},{"lineNumber":485,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid."},{"lineNumber":486,"author":{"gitId":"stein414"},"content":"    * 3a1. SunRez shows an error message."},{"lineNumber":487,"author":{"gitId":"stein414"},"content":"      Use case resumes at step 2."},{"lineNumber":488,"author":{"gitId":"stein414"},"content":""},{"lineNumber":489,"author":{"gitId":"stein414"},"content":"### UC-016 Delete an issue"},{"lineNumber":490,"author":{"gitId":"stein414"},"content":""},{"lineNumber":491,"author":{"gitId":"stein414"},"content":"Similar to *UC-005 Delete a resident*, just replace resident with issue."},{"lineNumber":492,"author":{"gitId":"stein414"},"content":""},{"lineNumber":493,"author":{"gitId":"stein414"},"content":"### UC-017 Undo Previous Command"},{"lineNumber":494,"author":{"gitId":"-"},"content":""},{"lineNumber":495,"author":{"gitId":"stein414"},"content":"**MSS**"},{"lineNumber":496,"author":{"gitId":"stein414"},"content":""},{"lineNumber":497,"author":{"gitId":"stein414"},"content":"1.  User requests to undo previous command."},{"lineNumber":498,"author":{"gitId":"stein414"},"content":"2.  Previous command is undone and SunRez\u0027s state is reverted to before that command."},{"lineNumber":499,"author":{"gitId":"-"},"content":""},{"lineNumber":500,"author":{"gitId":"stein414"},"content":"Use case ends."},{"lineNumber":501,"author":{"gitId":"stein414"},"content":""},{"lineNumber":502,"author":{"gitId":"stein414"},"content":"**Extensions**"},{"lineNumber":503,"author":{"gitId":"stein414"},"content":""},{"lineNumber":504,"author":{"gitId":"stein414"},"content":"* 1a. There are no previous commands that change state."},{"lineNumber":505,"author":{"gitId":"stein414"},"content":"    * 1a1 SunRez shows an error message."},{"lineNumber":506,"author":{"gitId":"stein414"},"content":"    Use case ends."},{"lineNumber":507,"author":{"gitId":"stein414"},"content":""},{"lineNumber":508,"author":{"gitId":"stein414"},"content":"### UC-018 Redo Previous Command"},{"lineNumber":509,"author":{"gitId":"stein414"},"content":""},{"lineNumber":510,"author":{"gitId":"stein414"},"content":"**MSS**"},{"lineNumber":511,"author":{"gitId":"stein414"},"content":""},{"lineNumber":512,"author":{"gitId":"stein414"},"content":"1.  User requests to redo previously undone command."},{"lineNumber":513,"author":{"gitId":"stein414"},"content":"2.  Previous undone command is redone and SunRez\u0027s state is updated accordingly."},{"lineNumber":514,"author":{"gitId":"stein414"},"content":""},{"lineNumber":515,"author":{"gitId":"stein414"},"content":"Use case ends."},{"lineNumber":516,"author":{"gitId":"stein414"},"content":""},{"lineNumber":517,"author":{"gitId":"stein414"},"content":"**Extensions**"},{"lineNumber":518,"author":{"gitId":"stein414"},"content":""},{"lineNumber":519,"author":{"gitId":"stein414"},"content":"* 1a. There are no previously undone commands."},{"lineNumber":520,"author":{"gitId":"stein414"},"content":"    * 1a1 SunRez shows an error message."},{"lineNumber":521,"author":{"gitId":"stein414"},"content":"    Use case ends."},{"lineNumber":522,"author":{"gitId":"stein414"},"content":""},{"lineNumber":523,"author":{"gitId":"stein414"},"content":"### UC-019 Allocate a Room"},{"lineNumber":524,"author":{"gitId":"stein414"},"content":""},{"lineNumber":525,"author":{"gitId":"stein414"},"content":"**MSS**"},{"lineNumber":526,"author":{"gitId":"stein414"},"content":""},{"lineNumber":527,"author":{"gitId":"stein414"},"content":"1. User requests to list unassigned residents and unallocated rooms."},{"lineNumber":528,"author":{"gitId":"stein414"},"content":"2. SunRez displays unassigned residents and unallocated rooms side-by-side."},{"lineNumber":529,"author":{"gitId":"stein414"},"content":"3. User requests to allocate a room to a resident."},{"lineNumber":530,"author":{"gitId":"stein414"},"content":"4. SunRez allocates the room and saves the changes."},{"lineNumber":531,"author":{"gitId":"stein414"},"content":""},{"lineNumber":532,"author":{"gitId":"stein414"},"content":"**Extensions**"},{"lineNumber":533,"author":{"gitId":"stein414"},"content":""},{"lineNumber":534,"author":{"gitId":"stein414"},"content":"* 2a. There are no unassigned residents or unassigned."},{"lineNumber":535,"author":{"gitId":"stein414"},"content":"    Use case ends."},{"lineNumber":536,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid."},{"lineNumber":537,"author":{"gitId":"stein414"},"content":"    * 3a1. SunRez shows an error message."},{"lineNumber":538,"author":{"gitId":"-"},"content":"      Use case resumes at step 2."},{"lineNumber":539,"author":{"gitId":"-"},"content":""},{"lineNumber":540,"author":{"gitId":"-"},"content":""},{"lineNumber":541,"author":{"gitId":"stein414"},"content":"### UC-020 Deallocate a Room"},{"lineNumber":542,"author":{"gitId":"-"},"content":""},{"lineNumber":543,"author":{"gitId":"stein414"},"content":"**MSS**"},{"lineNumber":544,"author":{"gitId":"stein414"},"content":""},{"lineNumber":545,"author":{"gitId":"stein414"},"content":"1. User requests to list room allocations."},{"lineNumber":546,"author":{"gitId":"stein414"},"content":"2. SunRez displays rooms, each with its corresponding allocated resident."},{"lineNumber":547,"author":{"gitId":"stein414"},"content":"3. User requests to deallocate a room based on the index from the list displayed in step 2."},{"lineNumber":548,"author":{"gitId":"stein414"},"content":"4. SunRez deallocates the room and saves the changes."},{"lineNumber":549,"author":{"gitId":"stein414"},"content":""},{"lineNumber":550,"author":{"gitId":"stein414"},"content":"**Extensions**"},{"lineNumber":551,"author":{"gitId":"-"},"content":""},{"lineNumber":552,"author":{"gitId":"stein414"},"content":"* 2a. There are no unassigned residents or unassigned."},{"lineNumber":553,"author":{"gitId":"stein414"},"content":"    Use case ends."},{"lineNumber":554,"author":{"gitId":"stein414"},"content":"* 3a. The given index is invalid."},{"lineNumber":555,"author":{"gitId":"stein414"},"content":"    * 3a1. SunRez shows an error message."},{"lineNumber":556,"author":{"gitId":"-"},"content":"      Use case resumes at step 2."},{"lineNumber":557,"author":{"gitId":"-"},"content":""},{"lineNumber":558,"author":{"gitId":"-"},"content":""},{"lineNumber":559,"author":{"gitId":"stein414"},"content":"## Non-Functional Requirements"},{"lineNumber":560,"author":{"gitId":"-"},"content":""},{"lineNumber":561,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed."},{"lineNumber":562,"author":{"gitId":"stein414"},"content":"2. Should be able to hold up to 1000 records (residents, rooms and issues) without a noticeable sluggishness in performance for typical usage."},{"lineNumber":563,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."},{"lineNumber":564,"author":{"gitId":"stein414"},"content":"4. A user should be able to learn the basic commands within half an hour of initial usage."},{"lineNumber":565,"author":{"gitId":"stein414"},"content":"5. Should work without the internet."},{"lineNumber":566,"author":{"gitId":"stein414"},"content":"6. Should be a highly portable to enable transfer between different computers with different OS."},{"lineNumber":567,"author":{"gitId":"stein414"},"content":"7. Executable program should occupy less than 20MB on the computer."},{"lineNumber":568,"author":{"gitId":"stein414"},"content":"8. Should not require an installer."},{"lineNumber":569,"author":{"gitId":"stein414"},"content":"9. The data should not be stored in a Database Management System (DBMS)."},{"lineNumber":570,"author":{"gitId":"stein414"},"content":"10. Should not depend on any remote server."},{"lineNumber":571,"author":{"gitId":"-"},"content":""},{"lineNumber":572,"author":{"gitId":"-"},"content":"*{More to be added}*"},{"lineNumber":573,"author":{"gitId":"-"},"content":""},{"lineNumber":574,"author":{"gitId":"-"},"content":"### Glossary"},{"lineNumber":575,"author":{"gitId":"-"},"content":""},{"lineNumber":576,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X"},{"lineNumber":577,"author":{"gitId":"stein414"},"content":"* **Residential College (RC)**: A university residence for students that offers a 2-year program at NUS"},{"lineNumber":578,"author":{"gitId":"stein414"},"content":"* **NUS**: The National University of Singapore"},{"lineNumber":579,"author":{"gitId":"stein414"},"content":"* **Resident**: A university student staying in the Residential College"},{"lineNumber":580,"author":{"gitId":"stein414"},"content":"* **Issue**: A maintenance problem that concerns the condition of a room"},{"lineNumber":581,"author":{"gitId":"-"},"content":""},{"lineNumber":582,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":583,"author":{"gitId":"-"},"content":""},{"lineNumber":584,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**"},{"lineNumber":585,"author":{"gitId":"-"},"content":""},{"lineNumber":586,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually."},{"lineNumber":587,"author":{"gitId":"-"},"content":""},{"lineNumber":588,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;"},{"lineNumber":589,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing."},{"lineNumber":590,"author":{"gitId":"-"},"content":""},{"lineNumber":591,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":592,"author":{"gitId":"-"},"content":""},{"lineNumber":593,"author":{"gitId":"-"},"content":"### Launch and shutdown"},{"lineNumber":594,"author":{"gitId":"-"},"content":""},{"lineNumber":595,"author":{"gitId":"-"},"content":"1. Initial launch"},{"lineNumber":596,"author":{"gitId":"-"},"content":""},{"lineNumber":597,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder"},{"lineNumber":598,"author":{"gitId":"-"},"content":""},{"lineNumber":599,"author":{"gitId":"stein414"},"content":"   2. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."},{"lineNumber":600,"author":{"gitId":"-"},"content":""},{"lineNumber":601,"author":{"gitId":"stein414"},"content":"2. Saving window preferences"},{"lineNumber":602,"author":{"gitId":"-"},"content":""},{"lineNumber":603,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window."},{"lineNumber":604,"author":{"gitId":"-"},"content":""},{"lineNumber":605,"author":{"gitId":"stein414"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e"},{"lineNumber":606,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained."},{"lineNumber":607,"author":{"gitId":"-"},"content":""},{"lineNumber":608,"author":{"gitId":"stein414"},"content":"3. _{ more test cases … }_"},{"lineNumber":609,"author":{"gitId":"-"},"content":""},{"lineNumber":610,"author":{"gitId":"-"},"content":""},{"lineNumber":611,"author":{"gitId":"-"},"content":"### Saving data"},{"lineNumber":612,"author":{"gitId":"-"},"content":""},{"lineNumber":613,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files"},{"lineNumber":614,"author":{"gitId":"-"},"content":""},{"lineNumber":615,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_"},{"lineNumber":616,"author":{"gitId":"-"},"content":""},{"lineNumber":617,"author":{"gitId":"stein414"},"content":"2. _{ more test cases … }_"}],"authorContributionMap":{"stein414":298,"-":319}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"benedictkhoomw"},"content":"## Introduction"},{"lineNumber":12,"author":{"gitId":"benedictkhoomw"},"content":"**SunRez** is a desktop app designed for college residential staff to efficiently manage student housing services. It is optimized for use via a Command Line Interface (CLI)."},{"lineNumber":13,"author":{"gitId":"benedictkhoomw"},"content":""},{"lineNumber":14,"author":{"gitId":"benedictkhoomw"},"content":"**SunRez** has the following features:"},{"lineNumber":15,"author":{"gitId":"benedictkhoomw"},"content":"* Keeps track of maintenance issues"},{"lineNumber":16,"author":{"gitId":"benedictkhoomw"},"content":"* Keeps track of student records"},{"lineNumber":17,"author":{"gitId":"benedictkhoomw"},"content":"* Keeps track of room records"},{"lineNumber":18,"author":{"gitId":"benedictkhoomw"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Quick start"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer."},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"cnlinh"},"content":"2. Download the latest `sunrez.jar` from [here](https://github.com/AY2021S2-CS2103-T14-1/tp/releases)."},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"cnlinh"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your SunRez."},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"benedictkhoomw"},"content":"4. Double-click the file to start the app. A GUI like the one pictured below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"cnlinh"},"content":"5. Type a command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   Some example commands you can try:"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"cnlinh"},"content":"    * **`rlist`** : Lists all residents."},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"colintkn"},"content":"    * **`radd`**`n/Joseph Tan p/84666774 e/e0103994@u.nus.edu y/2 r/01-234` : Adds a resident named `Joseph Tan` with phone number `84666774`, email `e0103994@u.nus.edu`, a 2nd year student, allocated to room `01-234`."},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"cnlinh"},"content":"    * **`rdel`**`3` : Deletes the 3rd resident shown in the current resident list."},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app."},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"cnlinh"},"content":"6. Refer to the [Features](#features) below for details of each command."},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`."},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e"},{"lineNumber":55,"author":{"gitId":"cnlinh"},"content":"  e.g. `d/DESCRIPTION [t/TIMESTAMP]` can be used as `d/Broken chair t/2020-03-23` or as `d/Broken chair`."},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable."},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"cnlinh"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e"},{"lineNumber":61,"author":{"gitId":"cnlinh"},"content":"  e.g. if you specify `n/John Doe n/Jane Doe`, only `n/Jane Doe` will be taken."},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`."},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"colintkn"},"content":"### Show help : `help`"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"colintkn"},"content":"Shows a message explaining how to access the help page."},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"Format: `help`"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"colintkn"},"content":"### Add a resident : `radd`"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"colintkn"},"content":"Adds a resident to the housing management system."},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"colintkn"},"content":"Format: `radd n/NAME p/PHONE_NUMBER e/EMAIL y/YEAR [r/ROOM]`"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":82,"author":{"gitId":"colintkn"},"content":"* `radd n/Joseph Tan p/84666774 e/e0103994@u.nus.edu y/2 r/01-234` Adds a resident named `Joseph Tan` with phone number `84666774`, email `e0103994@u.nus.edu`, and as a 2nd year student, allocated to room `01-234`."},{"lineNumber":83,"author":{"gitId":"colintkn"},"content":"* `radd n/John Doe p/91234567 e/e0123456@u.nus.edu y/3` Adds a resident named `John Doe` with phone number `91234567`, email `e0123456@u.nus.edu`, and as a 3rd year student, without any room allocated."},{"lineNumber":84,"author":{"gitId":"colintkn"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"colintkn"},"content":"### List all residents : `rlist`"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"colintkn"},"content":"Shows a list of all residents in the system sorted by alphabetical order."},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"colintkn"},"content":"Format: `rlist`"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"colintkn"},"content":"### Find residents : `rfind`"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"colintkn"},"content":"Finds residents whose names contain any of the given keywords."},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"colintkn"},"content":"Format: `rfind KEYWORD [MORE_KEYWORDS]`"},{"lineNumber":98,"author":{"gitId":"benedictkhoomw"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`."},{"lineNumber":99,"author":{"gitId":"benedictkhoomw"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`."},{"lineNumber":100,"author":{"gitId":"-"},"content":"* Only the name is searched."},{"lineNumber":101,"author":{"gitId":"benedictkhoomw"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`."},{"lineNumber":102,"author":{"gitId":"benedictkhoomw"},"content":"* Residents matching at least one keyword will be returned (i.e. OR search). e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`."},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":105,"author":{"gitId":"colintkn"},"content":"* `rfind john` returns `john` and `John Doe`."},{"lineNumber":106,"author":{"gitId":"colintkn"},"content":"* `rfind alex david` returns `Alex Yeoh`, `Alexander Graham`, and `David Li`."},{"lineNumber":107,"author":{"gitId":"colintkn"},"content":""},{"lineNumber":108,"author":{"gitId":"colintkn"},"content":""},{"lineNumber":109,"author":{"gitId":"colintkn"},"content":"### Edit a resident record : `redit`"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"benedictkhoomw"},"content":"Edits the existing resident record at a specified index."},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"colintkn"},"content":"Format: `redit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [r/ROOM]`"},{"lineNumber":114,"author":{"gitId":"benedictkhoomw"},"content":"* `INDEX` refers to the index number shown in the displayed resident list. `INDEX` **must be a positive integer: 1, 2, 3, …**."},{"lineNumber":115,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided."},{"lineNumber":116,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values."},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"colintkn"},"content":"Example:"},{"lineNumber":119,"author":{"gitId":"colintkn"},"content":"* `redit 1 p/91234567 e/e0123456@u.nus.edu` Edits the phone number and email address of the 1st resident to be `91234567` and `e0123456@u.nus.edu` respectively."},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"colintkn"},"content":"### Delete a resident : `rdel`"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"benedictkhoomw"},"content":"Deletes the resident record at a specified index."},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"colintkn"},"content":"Format: `rdel INDEX`"},{"lineNumber":127,"author":{"gitId":"benedictkhoomw"},"content":"* `INDEX` refers to the index number shown in the displayed resident list. `INDEX` **must be a positive integer 1,2,3, ...**."},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"colintkn"},"content":"Example:"},{"lineNumber":130,"author":{"gitId":"colintkn"},"content":"* `rdel 1` deletes the 1st resident in the resident list."},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"DrWala"},"content":"### Add a room : `oadd`"},{"lineNumber":134,"author":{"gitId":"DrWala"},"content":""},{"lineNumber":135,"author":{"gitId":"DrWala"},"content":"Adds a room to the housing management system."},{"lineNumber":136,"author":{"gitId":"DrWala"},"content":""},{"lineNumber":137,"author":{"gitId":"DrWala"},"content":"Format: `oadd n/ROOM_NO t/TYPE o/OCCUPY_STATUS [g/TAG]`"},{"lineNumber":138,"author":{"gitId":"DrWala"},"content":""},{"lineNumber":139,"author":{"gitId":"DrWala"},"content":"Example:"},{"lineNumber":140,"author":{"gitId":"DrWala"},"content":"* `oadd n/10-112 t/single_no_ac o/Occupied g/SHN` Adds a room numbered `10-112` of type `single_no_ac` with the tag `SHN` and occupy status `Occupied`."},{"lineNumber":141,"author":{"gitId":"DrWala"},"content":""},{"lineNumber":142,"author":{"gitId":"DrWala"},"content":""},{"lineNumber":143,"author":{"gitId":"DrWala"},"content":"### List all rooms : `olist`"},{"lineNumber":144,"author":{"gitId":"DrWala"},"content":""},{"lineNumber":145,"author":{"gitId":"DrWala"},"content":"Shows a list of all rooms in the system sorted by room number."},{"lineNumber":146,"author":{"gitId":"DrWala"},"content":""},{"lineNumber":147,"author":{"gitId":"DrWala"},"content":"Format: `olist`"},{"lineNumber":148,"author":{"gitId":"DrWala"},"content":""},{"lineNumber":149,"author":{"gitId":"DrWala"},"content":""},{"lineNumber":150,"author":{"gitId":"DrWala"},"content":"### Find rooms : `ofind`"},{"lineNumber":151,"author":{"gitId":"DrWala"},"content":""},{"lineNumber":152,"author":{"gitId":"benedictkhoomw"},"content":"Finds all rooms that contain any of the given keywords."},{"lineNumber":153,"author":{"gitId":"DrWala"},"content":""},{"lineNumber":154,"author":{"gitId":"DrWala"},"content":"Format: `ofind KEYWORD [MORE_KEYWORDS]`"},{"lineNumber":155,"author":{"gitId":"benedictkhoomw"},"content":"* The search matches any part of the room number. e.g. `10` will match `10-111` and `14-101`."},{"lineNumber":156,"author":{"gitId":"DrWala"},"content":"* The order of the keywords does not matter. e.g. `11- 10-` will match `10-100`, `10-101`, `11-100`, and `11-101`."},{"lineNumber":157,"author":{"gitId":"DrWala"},"content":"* Only the room number is searched."},{"lineNumber":158,"author":{"gitId":"benedictkhoomw"},"content":"* Rooms matching at least one keyword will be returned (i.e. OR search). e.g. `10 20` will return `10-100`, `11-120`."},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":161,"author":{"gitId":"DrWala"},"content":"* `ofind 10-` returns `10-100`, `10-101`, and `10-102`."},{"lineNumber":162,"author":{"gitId":"DrWala"},"content":"* `ofind 10- 15-` returns `10-100`, `10-101`, `15-100`, and`15-101`."},{"lineNumber":163,"author":{"gitId":"DrWala"},"content":"* `ofind 10` returns `09-100`, `09-110`, `10-100`, and `10-101`."},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"DrWala"},"content":"### Edit a room record : `oedit`"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"benedictkhoomw"},"content":"Edits the existing room record at a specified index."},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"DrWala"},"content":"Format: `oedit INDEX [n/ROOM_NO] [t/TYPE] [o/OCCUPY_STATUS] [g/TAG]`"},{"lineNumber":171,"author":{"gitId":"benedictkhoomw"},"content":"* `INDEX` refers to the index number shown in the displayed room list. `INDEX` **must be a positive integer 1, 2, 3, …**."},{"lineNumber":172,"author":{"gitId":"DrWala"},"content":"* At least one of the optional fields must be provided."},{"lineNumber":173,"author":{"gitId":"DrWala"},"content":"* Existing values will be updated to the input values."},{"lineNumber":174,"author":{"gitId":"DrWala"},"content":""},{"lineNumber":175,"author":{"gitId":"DrWala"},"content":"Example:"},{"lineNumber":176,"author":{"gitId":"DrWala"},"content":"* `oedit 1 o/Occupied g/SHN` Edits the status of the 1st room and tag to be `Occupied` and `SHN` respectively."},{"lineNumber":177,"author":{"gitId":"DrWala"},"content":""},{"lineNumber":178,"author":{"gitId":"DrWala"},"content":""},{"lineNumber":179,"author":{"gitId":"DrWala"},"content":"### Delete a room : `odel`"},{"lineNumber":180,"author":{"gitId":"DrWala"},"content":""},{"lineNumber":181,"author":{"gitId":"benedictkhoomw"},"content":"Deletes the room at a specified index."},{"lineNumber":182,"author":{"gitId":"DrWala"},"content":""},{"lineNumber":183,"author":{"gitId":"DrWala"},"content":"Format: `odel INDEX`"},{"lineNumber":184,"author":{"gitId":"benedictkhoomw"},"content":"* `INDEX` refers to the index number shown in the displayed resident list. `INDEX` **must be a positive integer 1,2,3, ...**."},{"lineNumber":185,"author":{"gitId":"DrWala"},"content":""},{"lineNumber":186,"author":{"gitId":"benedictkhoomw"},"content":"Example:"},{"lineNumber":187,"author":{"gitId":"DrWala"},"content":"* `odel 1` Deletes the 1st room in the room list."},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"### Add an open issue : `iadd`"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"Adds an issue to the housing management system."},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"Format: `iadd r/ROOM_NO d/DESCRIPTION [t/TIMESTAMP] [s/STATUS] [c/CATEGORY]`"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"Example:"},{"lineNumber":197,"author":{"gitId":"-"},"content":"* `iadd r/10-100 d/Broken light c/Furniture` Creates an issue for room number `10-100` with description `Broken light` under the category `Furniture`."},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"### List all issues : `ilist`"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"benedictkhoomw"},"content":"Shows a list of all issues in the system sorted by their timestamp."},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"Format: `ilist`"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"### Find issues : `ifind`"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"benedictkhoomw"},"content":"Finds all issues that contain any of the given keywords."},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"Format: `ifind KEYWORD [MORE_KEYWORDS]`"},{"lineNumber":212,"author":{"gitId":"benedictkhoomw"},"content":"* The search is case-insensitive. e.g. `broken` will match `Broken`."},{"lineNumber":213,"author":{"gitId":"benedictkhoomw"},"content":"* The order of the keywords does not matter. e.g. `Broken light` will match `light broken`."},{"lineNumber":214,"author":{"gitId":"-"},"content":"* Only the description is searched."},{"lineNumber":215,"author":{"gitId":"-"},"content":"* Issues matching at least one keyword will be returned (i.e. OR search). e.g. `Broken window` will return `Broken light`, `Dirty window`, and `Broken window`."},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":218,"author":{"gitId":"-"},"content":"* `ifind chair` returns `Broken chair` and `Chair missing wheel`."},{"lineNumber":219,"author":{"gitId":"-"},"content":"* `ifind wardrobe table` returns `Wardrobe door broke`, `Table unstable`, and `Table stuck in wardrobe`."},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"### Edit an issue record : `iedit`"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"benedictkhoomw"},"content":"Edits the existing issue record at a specified index. "},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"Format: `iedit INDEX [r/ROOM] [d/DESCRIPTION] [t/TIMESTAMP] [s/STATUS] [c/CATEGORY]`"},{"lineNumber":226,"author":{"gitId":"benedictkhoomw"},"content":"* `INDEX` refers to the index number shown in the displayed issue list. `INDEX` **must be a positive integer 1, 2, 3, …**."},{"lineNumber":227,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided."},{"lineNumber":228,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values."},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"Example:"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* `iedit 1 r/20-109 s/Closed` Edits the room number and status of the 1st issue to be `20-109` and `Closed` respectively."},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":""},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Close an issue : `iclose`"},{"lineNumber":235,"author":{"gitId":"-"},"content":""},{"lineNumber":236,"author":{"gitId":"benedictkhoomw"},"content":"Marks as closed the issue at a specified index."},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"Format: `iclose INDEX`"},{"lineNumber":239,"author":{"gitId":"benedictkhoomw"},"content":"* `INDEX` refers to the index number shown in the displayed issue list. `INDEX` **must be a positive integer 1, 2, 3, …**."},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"Example:"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* `iclose 1` Closes the 1st issue."},{"lineNumber":243,"author":{"gitId":"-"},"content":""},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"### Delete an issue : `idel`"},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"benedictkhoomw"},"content":"Deletes the issue at a specified index."},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"Format: `idel INDEX`"},{"lineNumber":250,"author":{"gitId":"benedictkhoomw"},"content":"* `INDEX` refers to the index number shown in the displayed resident list. `INDEX` **must be a positive integer 1,2,3, ...**."},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"Example:"},{"lineNumber":253,"author":{"gitId":"-"},"content":"* `idel 1` Deletes the 1st issue."},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"benedictkhoomw"},"content":"### Exit the program : `exit`"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"Exits the program."},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"-"},"content":"Format: `exit`"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"benedictkhoomw"},"content":"### Save the data"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"benedictkhoomw"},"content":"SunRez data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually."},{"lineNumber":266,"author":{"gitId":"-"},"content":""},{"lineNumber":267,"author":{"gitId":"benedictkhoomw"},"content":"### Edit the data file"},{"lineNumber":268,"author":{"gitId":"-"},"content":""},{"lineNumber":269,"author":{"gitId":"benedictkhoomw"},"content":"SunRez data is saved as a JSON file `[JAR file location]/data/sunrez.json`. Advanced users are welcome to update data directly by editing that data file."},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"benedictkhoomw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e "},{"lineNumber":272,"author":{"gitId":"benedictkhoomw"},"content":"**Caution**: \u003cbr\u003e"},{"lineNumber":273,"author":{"gitId":"benedictkhoomw"},"content":"If your changes to the data file makes its format invalid, SunRez will discard all data and start with an empty data file at the next run."},{"lineNumber":274,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"## FAQ"},{"lineNumber":279,"author":{"gitId":"-"},"content":""},{"lineNumber":280,"author":{"gitId":"benedictkhoomw"},"content":"**Q**: How do I transfer my data to another computer?\u003cbr\u003e"},{"lineNumber":281,"author":{"gitId":"benedictkhoomw"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous **SunRez** home folder."},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":284,"author":{"gitId":"-"},"content":""},{"lineNumber":285,"author":{"gitId":"-"},"content":"## Command summary"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"Action | Format, Examples"},{"lineNumber":288,"author":{"gitId":"-"},"content":"--------|------------------"},{"lineNumber":289,"author":{"gitId":"colintkn"},"content":"**Show help** | `help`"},{"lineNumber":290,"author":{"gitId":"colintkn"},"content":"**Add a resident** | `radd n/NAME p/PHONE_NUMBER e/EMAIL y/YEAR` \u003cbr\u003e e.g. `radd n/Joseph Tan p/84666774 e/e0103994@u.nus.edu y/2 r/01-234`"},{"lineNumber":291,"author":{"gitId":"colintkn"},"content":"**List all residents** | `rlist`"},{"lineNumber":292,"author":{"gitId":"colintkn"},"content":"**Find residents** | `rfind KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g. `rfind bob bobby`"},{"lineNumber":293,"author":{"gitId":"colintkn"},"content":"**Edit a resident record** | `redit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [r/ROOM]` \u003cbr\u003e e.g. `redit 1 p/91234567 e/e0123456@u.nus.edu`"},{"lineNumber":294,"author":{"gitId":"colintkn"},"content":"**Delete a resident** |  `rdel INDEX` \u003cbr\u003e e.g. `rdel 1`"},{"lineNumber":295,"author":{"gitId":"-"},"content":"**Add a room** |  `oadd n/ROOM_NO t/TYPE o/OCCUPY_STATUS [g/TAG]` \u003cbr\u003e e.g. `oadd n/17-101 t/single_no_ac o/Occupied g/SHN`"},{"lineNumber":296,"author":{"gitId":"-"},"content":"**List all rooms** |  `olist`"},{"lineNumber":297,"author":{"gitId":"-"},"content":"**Find rooms** |  `ofind KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g. `ofind 10- 15-`"},{"lineNumber":298,"author":{"gitId":"-"},"content":"**Edit a room record** |  `oedit INDEX [n/ROOM_NO] [t/TYPE] [g/TAG] [o/OCCUPY_STATUS]` \u003cbr\u003e e.g. `oedit 1 o/Occupied`"},{"lineNumber":299,"author":{"gitId":"-"},"content":"**Delete a room** | `odel INDEX` \u003cbr\u003e e.g. `odel 1`"},{"lineNumber":300,"author":{"gitId":"-"},"content":"**Add an open issue** | `iadd r/ROOM_NO d/DESCRIPTION [t/TIMESTAMP] [s/STATUS] [c/CATEGORY]` \u003cbr\u003e e.g. `iadd r/10-100 d/Broken light c/Furniture`"},{"lineNumber":301,"author":{"gitId":"-"},"content":"**List all issues** | `ilist`"},{"lineNumber":302,"author":{"gitId":"-"},"content":"**Find issues** | `ifind KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g. `ifind wardrobe table`"},{"lineNumber":303,"author":{"gitId":"-"},"content":"**Edit an issue record** | `iedit INDEX [r/ROOM] [d/DESCRIPTION] [t/TIMESTAMP] [s/STATUS] [c/CATEGORY]` \u003cbr\u003e e.g. `iedit 1 r/20-109 s/Closed`"},{"lineNumber":304,"author":{"gitId":"-"},"content":"**Close an issue** | `iclose INDEX` \u003cbr\u003e e.g. `iclose 1`"},{"lineNumber":305,"author":{"gitId":"-"},"content":"**Delete an issue** | `idel INDEX` \u003cbr\u003e e.g. `idel 1`"},{"lineNumber":306,"author":{"gitId":"-"},"content":"**Exit the app** | `exit`"}],"authorContributionMap":{"benedictkhoomw":45,"cnlinh":9,"colintkn":33,"-":178,"DrWala":41}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"benedictkhoomw"},"content":"title: SunRez"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"benedictkhoomw"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103-T14-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103-T14-1/tp/actions)"},{"lineNumber":7,"author":{"gitId":"benedictkhoomw"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103-T14-1/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103-T14-1/tp)"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"benedictkhoomw"},"content":"**SunRez** is a desktop app designed for college residential staff to efficiently manage student housing services. It is optimized for use via a Command Line Interface (CLI). "},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"benedictkhoomw"},"content":"**SunRez** has the following features:"},{"lineNumber":14,"author":{"gitId":"benedictkhoomw"},"content":"* Keeps track of maintenance issues"},{"lineNumber":15,"author":{"gitId":"benedictkhoomw"},"content":"* Keeps track of student records"},{"lineNumber":16,"author":{"gitId":"benedictkhoomw"},"content":"* Keeps track of room records"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"benedictkhoomw"},"content":"If this is your first time using/contributing to **SunRez**, check out our guides in the [Site Map](#site-map) section below."},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"benedictkhoomw"},"content":"## Site Map"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"benedictkhoomw"},"content":"* [User Guide](UserGuide.md)"},{"lineNumber":23,"author":{"gitId":"benedictkhoomw"},"content":"* [Developer Guide](DeveloperGuide.md)"},{"lineNumber":24,"author":{"gitId":"benedictkhoomw"},"content":"* [About Us](AboutUs.md)"},{"lineNumber":25,"author":{"gitId":"benedictkhoomw"},"content":"* [Github](https://github.com/AY2021S2-CS2103-T14-1/tp)"},{"lineNumber":26,"author":{"gitId":"benedictkhoomw"},"content":""},{"lineNumber":27,"author":{"gitId":"benedictkhoomw"},"content":"## Acknowledgements"},{"lineNumber":28,"author":{"gitId":"benedictkhoomw"},"content":""},{"lineNumber":29,"author":{"gitId":"benedictkhoomw"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)."},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)"},{"lineNumber":31,"author":{"gitId":"benedictkhoomw"},"content":"* Favicon designed by [FreeLogoDesign](https://www.freelogodesign.org/)."},{"lineNumber":32,"author":{"gitId":"benedictkhoomw"},"content":""},{"lineNumber":33,"author":{"gitId":"benedictkhoomw"},"content":"## License: [MIT](https://github.com/AY2021S2-CS2103-T14-1/tp/blob/master/LICENSE)"}],"authorContributionMap":{"benedictkhoomw":21,"-":12}},{"path":"setup/setup.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"stein414"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"stein414"},"content":"cp setup/pre-commit .git/hooks/pre-commit"},{"lineNumber":3,"author":{"gitId":"stein414"},"content":"chmod +x .git/hooks/pre-commit"}],"authorContributionMap":{"stein414":3}}]
