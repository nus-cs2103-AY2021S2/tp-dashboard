[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# SmartLib","lastModifiedDate":"2021-02-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-15"},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-W13-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W13-2/tp/actions)","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"SmartLib is a desktop app for managing private book loaning services owning less than 10,000 books, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, SmartLib can systematically manage your books and borrowers’ information in a more efficient manner than traditional GUI apps.","lastModifiedDate":"2021-02-22"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"Type the command in the command box and press Enter to access various features. e.g. typing listbook and pressing Enter will list all the current in-store books.","lastModifiedDate":"2021-02-22"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"## Useful links","lastModifiedDate":"2021-02-23"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"* [User Guide](https://ay2021s2-cs2103t-w13-2.github.io/tp/UserGuide)","lastModifiedDate":"2021-02-23"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"* [Developer Guide](https://ay2021s2-cs2103t-w13-2.github.io/tp/DeveloperGuide)","lastModifiedDate":"2021-02-23"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"* [About Us](https://ay2021s2-cs2103t-w13-2.github.io/tp/AboutUs)","lastModifiedDate":"2021-02-23"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"## Acknowledgements","lastModifiedDate":"2021-02-23"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"* The original source of the project is AB3(AddressBook Level 3), which is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2021-02-27"}],"authorContributionMap":{"arsatis":9,"gycc7253":5,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"mainClassName \u003d \u0027seedu.smartlib.Main\u0027","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"GJ0407790"},"content":"    archiveName \u003d \u0027smartlib.jar\u0027","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"run {","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"arsatis":3,"GJ0407790":1,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"You can reach us at the email `zhengyong@u.nus.edu`","lastModifiedDate":"2021-02-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"### Ang Zheng Yong","lastModifiedDate":"2021-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"\u003cimg src\u003d\"images/arsatis.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"[[github](https://github.com/arsatis)]","lastModifiedDate":"2021-02-23"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"[[portfolio](team/arsatis.md)]","lastModifiedDate":"2021-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"* Role: Team Lead, Scheduling and Tracking","lastModifiedDate":"2021-02-23"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"* Responsibilities:","lastModifiedDate":"2021-02-23"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    * Responsible for overall project coordination.","lastModifiedDate":"2021-02-23"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"    * In charge of defining, assigning, and tracking project tasks.","lastModifiedDate":"2021-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"### Guo Yichao","lastModifiedDate":"2021-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"\u003cimg src\u003d\"images/gycc7253.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"[[github](http://github.com/gycc7253)]","lastModifiedDate":"2021-02-23"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"[[portfolio](team/gycc7253.md)]","lastModifiedDate":"2021-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"* Role: Documentation","lastModifiedDate":"2021-02-23"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"* Responsibilities:","lastModifiedDate":"2021-02-23"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"    * Responsible for the quality of various project documents.","lastModifiedDate":"2021-02-23"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"    * Responsible for distributing of Documentation related jobs.","lastModifiedDate":"2021-02-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"### Huang Nanxi","lastModifiedDate":"2021-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"Nanxi-Huang"},"content":"\u003cimg src\u003d\"images/nanxi-huang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Nanxi-Huang"},"content":"[[github](http://github.com/nanxi-huang)]","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"Nanxi-Huang"},"content":"[[portfolio](team/nanxi-huang.md)]","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"* Role: Code quality, Deliverables and Deadlines","lastModifiedDate":"2021-02-23"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"* Responsibilities:","lastModifiedDate":"2021-02-23"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"    * Looks after code quality, ensures adherence to coding standards, etc.","lastModifiedDate":"2021-02-23"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"    * Ensure project deliverables are done on time and in the right format.","lastModifiedDate":"2021-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"### Loh Guo Jun","lastModifiedDate":"2021-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"GJ0407790"},"content":"\u003cimg src\u003d\"images/gj0407790.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":"[[github](http://github.com/gj0407790)]","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"GJ0407790"},"content":"[[portfolio](team/gj0407790.md)]","lastModifiedDate":"2021-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"* Role: Testing","lastModifiedDate":"2021-02-23"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"* Responsibilities:","lastModifiedDate":"2021-02-23"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"    * Ensures the testing of the project is done properly and on time.","lastModifiedDate":"2021-02-23"},{"lineNumber":58,"author":{"gitId":"GJ0407790"},"content":"    * Ensures the number of test case is sufficient.","lastModifiedDate":"2021-02-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"### Zhang Guangzesheng","lastModifiedDate":"2021-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"Andrewzhang217"},"content":"\u003cimg src\u003d\"images/andrewzhang217.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"Andrewzhang217"},"content":"[[github](https://github.com/Andrewzhang217)]","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"Andrewzhang217"},"content":"[[portfolio](team/Andrewzhang217.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"* Role: Integration, UI","lastModifiedDate":"2021-02-23"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"* Responsibilities:","lastModifiedDate":"2021-02-23"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"    * In charge of versioning of the code, maintaining the code repository, integrating various parts of the software to create a whole.","lastModifiedDate":"2021-02-23"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"    * In charge of ensuring the GUI is up to standard.","lastModifiedDate":"2021-02-23"}],"authorContributionMap":{"arsatis":28,"Nanxi-Huang":3,"GJ0407790":4,"gycc7253":3,"-":29,"Andrewzhang217":3}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your fork to CodeCov.","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/AY2021S2-CS2103T-W13-2/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103T-W13-2/tp) in that page reflects the coverage of your project.","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/master/src/main/java/seedu/smartlib/MainApp.java).","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadow`).","lastModifiedDate":"2020-05-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"arsatis":2,"-":77}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"# Table of Contents","lastModifiedDate":"2021-02-22"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"* [Introduction](#introduction)","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"    * [Purpose](#purpose)","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"    * [Audience](#audience)","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"    * [Overview](#overview)","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"* [Getting started](#setting-up-getting-started)","lastModifiedDate":"2021-02-23"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"* [Design](#design)","lastModifiedDate":"2021-02-23"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"    * [Architecture](#architecture)","lastModifiedDate":"2021-02-23"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    * [UI component](#ui-component)","lastModifiedDate":"2021-02-23"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"    * [Logic component](#logic-component)","lastModifiedDate":"2021-02-23"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"    * [Model component](#model-component)","lastModifiedDate":"2021-02-23"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"    * [Storage component](#storage-component)","lastModifiedDate":"2021-02-23"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    * [Common classes](#common-classes)","lastModifiedDate":"2021-02-23"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"* [Implementation](#implementation)","lastModifiedDate":"2021-02-23"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"    * [Deleting a book](#deleting-a-book)","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    * [Finding a book](#finding-books-with-keywords)","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    * [Adding a reader](#adding-a-reader)","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"    * [Listing all readers](#listing-all-readers)","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    * [Finding a reader](#finding-readers-with-keywords)","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"    * [Borrowing a book](#borrowing-a-book)","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"    * [Returning a book](#returning-a-book)","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    * [Returning overdue books](#returning-overdue-books)","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    * [\\[Proposed\\] Undo/redo feature](#proposed-undoredo-feature)","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"* [Documentation, logging, testing, configuration, dev-ops](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2021-02-23"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"* [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2021-02-23"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"    * [Product scope](#product-scope)","lastModifiedDate":"2021-02-23"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"    * [User stories](#user-stories)","lastModifiedDate":"2021-02-23"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"    * [Use cases](#use-cases)","lastModifiedDate":"2021-02-23"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"    * [Non-functional requirements](#non-functional-requirements)","lastModifiedDate":"2021-02-23"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"    * [Glossary](#glossary)","lastModifiedDate":"2021-02-23"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"* [Appendix: Instructions for manual testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2021-02-23"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"    * [Launch and shutdown](#launch-and-shutdown)","lastModifiedDate":"2021-02-23"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    * [Deleting a reader](#deleting-a-reader)","lastModifiedDate":"2021-02-23"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    * [Saving data](#saving-data)","lastModifiedDate":"2021-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"## **Introduction**","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"### Purpose","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"The purpose of this document is to provide a brief overview of the multi-level design architecture of SmartLib,","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"so that our target readers would be able to gain a better understanding of the relationship between","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"the various components that SmartLib is made up from.","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"### Audience","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"This Developer Guide (DG) is meant for any user who is interested in understanding the internal design architecture of","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"SmartLib. Some of our intended audience include:","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"* SmartLib\u0027s developers: any developer who may want to upgrade or extend SmartLib\u0027s features to support a greater range","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"of features and functions.","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"* Tech-savvy users of SmartLib: users of SmartLib who may want to improve the efficiency and features of our","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"application to support their needs are also welcome to explore our application with the help of this DG.","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"### Overview","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"SmartLib is a desktop app for managing private book loaning services owning less than 10,000 books,","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"optimized for use via a Command Line Interface (CLI),","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"If you can type fast, SmartLib would be a brilliant and efficient assistant in the systematic management of your books","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"and borrowers\u0027 information, as compared to the traditional GUI apps currently available in the market.","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2021-02-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"each component.","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"[diagrams](https://github.com/AY2021S2-CS2103T-W13-2/tp/tree/master/docs/diagrams) folder.","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"how to create and edit diagrams.","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"**`Main`** has two classes called","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"[`Main`](https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/master/src/main/java/seedu/smartlib/Main.java) and","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"arsatis"},"content":"[`MainApp`](https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/master/src/main/java/seedu/smartlib/MainApp.java).","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"arsatis"},"content":"It is responsible for:","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"arsatis"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"arsatis"},"content":"`interface` mentioned in the previous point.","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"arsatis"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"arsatis"},"content":"and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"arsatis"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"arsatis"},"content":"the command `delete 1`.","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"arsatis"},"content":"[`Ui.java`](https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/master/src/main/java/seedu/smartlib/ui/Ui.java)","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"arsatis"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `ReaderListPanel`,","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"arsatis"},"content":"`StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"arsatis"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are","lastModifiedDate":"2021-03-27"},{"lineNumber":143,"author":{"gitId":"arsatis"},"content":"in the `src/main/resources/view` folder. For example, the layout of the","lastModifiedDate":"2021-03-27"},{"lineNumber":144,"author":{"gitId":"arsatis"},"content":"[`MainWindow`](https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/master/src/main/java/seedu/smartlib/ui/MainWindow.java)","lastModifiedDate":"2021-03-27"},{"lineNumber":145,"author":{"gitId":"arsatis"},"content":"is specified in","lastModifiedDate":"2021-03-27"},{"lineNumber":146,"author":{"gitId":"arsatis"},"content":"[`MainWindow.fxml`](https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/master/src/main/resources/view/MainWindow.fxml).","lastModifiedDate":"2021-03-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"arsatis"},"content":"[`Logic.java`](https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/master/src/main/java/seedu/smartlib/logic/Logic.java)","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"Nanxi-Huang"},"content":"1. `Logic` uses the `SmartLibParser` class to parse the user command.","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"gycc7253"},"content":"1. The command execution can affect the `Model` (e.g. adding a reader).","lastModifiedDate":"2021-02-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"arsatis"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying","lastModifiedDate":"2021-03-27"},{"lineNumber":165,"author":{"gitId":"arsatis"},"content":"help to the user.","lastModifiedDate":"2021-03-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"arsatis"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"arsatis"},"content":"call.","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"arsatis"},"content":"![Interactions Inside the Logic Component for the `deletereader 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2021-03-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"arsatis"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for","lastModifiedDate":"2021-03-27"},{"lineNumber":173,"author":{"gitId":"arsatis"},"content":"`DeleteReaderCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline","lastModifiedDate":"2021-03-27"},{"lineNumber":174,"author":{"gitId":"arsatis"},"content":"reaches the end of diagram.","lastModifiedDate":"2021-03-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"arsatis"},"content":"**API** :","lastModifiedDate":"2021-03-27"},{"lineNumber":182,"author":{"gitId":"arsatis"},"content":"[`Model.java`](https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/master/src/main/java/seedu/smartlib/model/Model.java)","lastModifiedDate":"2021-03-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"Nanxi-Huang"},"content":"* stores the SmartLib data.","lastModifiedDate":"2021-03-15"},{"lineNumber":188,"author":{"gitId":"arsatis"},"content":"* exposes an unmodifiable `ObservableList\u003cReader\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that","lastModifiedDate":"2021-03-27"},{"lineNumber":189,"author":{"gitId":"arsatis"},"content":"the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-03-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"arsatis"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model","lastModifiedDate":"2021-03-27"},{"lineNumber":194,"author":{"gitId":"arsatis"},"content":"is given below. It has a `Tag` list in the `SmartLib`, which `Reader` references. This allows `SmartLib` to only require","lastModifiedDate":"2021-03-27"},{"lineNumber":195,"author":{"gitId":"arsatis"},"content":"one `Tag` object per unique `Tag`, instead of each `Reader` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"arsatis"},"content":"**API** :","lastModifiedDate":"2021-03-27"},{"lineNumber":206,"author":{"gitId":"arsatis"},"content":"[`Storage.java`](https://github.com/AY2021S2-CS2103T-W13-2/tp/blob/master/src/main/java/seedu/smartlib/storage/Storage.java)","lastModifiedDate":"2021-03-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"Nanxi-Huang"},"content":"* can save the SmartLib data in json format and read it back.","lastModifiedDate":"2021-03-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"Nanxi-Huang"},"content":"Classes used by multiple components are in the `seedu.smartlib.commons` package.","lastModifiedDate":"2021-03-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"arsatis"},"content":"### Deleting a book","lastModifiedDate":"2021-03-27"},{"lineNumber":223,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":224,"author":{"gitId":"arsatis"},"content":"The execution of deleting a book and deleting a reader is very similar (refer to the sequence diagram under","lastModifiedDate":"2021-03-27"},{"lineNumber":225,"author":{"gitId":"arsatis"},"content":"[**`Logic`**](#logic-component)).","lastModifiedDate":"2021-03-27"},{"lineNumber":226,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":227,"author":{"gitId":"arsatis"},"content":"The only difference is that `DeleteBookCommandParser` is used to parse the","lastModifiedDate":"2021-03-27"},{"lineNumber":228,"author":{"gitId":"arsatis"},"content":"argument(s) and `DeleteBookCommand` is created. In order to delete a book,","lastModifiedDate":"2021-03-27"},{"lineNumber":229,"author":{"gitId":"arsatis"},"content":"`Model#deleteBook()` is called instead of `Model#deleteReader()`.","lastModifiedDate":"2021-03-27"},{"lineNumber":230,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":231,"author":{"gitId":"arsatis"},"content":"The following activity diagram summarizes what happen when a user executes a delete book command.","lastModifiedDate":"2021-03-27"},{"lineNumber":232,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":233,"author":{"gitId":"arsatis"},"content":"![DeleteBookActivityDiagram](images/DeleteBookActivityDiagram.png)","lastModifiedDate":"2021-03-27"},{"lineNumber":234,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":235,"author":{"gitId":"arsatis"},"content":"### Finding books with keywords","lastModifiedDate":"2021-03-27"},{"lineNumber":236,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":237,"author":{"gitId":"arsatis"},"content":"Finding books in the book list requires a user input from the CLI.","lastModifiedDate":"2021-03-27"},{"lineNumber":238,"author":{"gitId":"arsatis"},"content":"The respective parsers will parse the user input to check whether the input is valid, and obtain the keyword(s) of the","lastModifiedDate":"2021-03-27"},{"lineNumber":239,"author":{"gitId":"arsatis"},"content":"book(s) that the user wants to find.","lastModifiedDate":"2021-03-27"},{"lineNumber":240,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":241,"author":{"gitId":"arsatis"},"content":"Given below is an example usage scenario of how the `findbook` mechanism behaves at each step. In our example and the","lastModifiedDate":"2021-03-27"},{"lineNumber":242,"author":{"gitId":"arsatis"},"content":"diagrams below, we assume that the user input is `findbook Harry Potter`:","lastModifiedDate":"2021-03-27"},{"lineNumber":243,"author":{"gitId":"arsatis"},"content":"* Step 1: The user launches the SmartLib application with all of his/her readers already added to the reader list.","lastModifiedDate":"2021-03-27"},{"lineNumber":244,"author":{"gitId":"arsatis"},"content":"* Step 2: The user inputs `findbook Harry Potter` to SmartLib, which calls upon `LogicManager#execute()`.","lastModifiedDate":"2021-03-27"},{"lineNumber":245,"author":{"gitId":"arsatis"},"content":"* Step 3: `SmartLibParser` and `FindBookCommandParser` will check the user input, and return a `FindBookCommand` to the","lastModifiedDate":"2021-03-27"},{"lineNumber":246,"author":{"gitId":"arsatis"},"content":"`LogicManager` if the input is valid.","lastModifiedDate":"2021-03-27"},{"lineNumber":247,"author":{"gitId":"arsatis"},"content":"* Step 4: `LogicManager` will then call `FindBookCommand#execute()`, which in turn calls","lastModifiedDate":"2021-03-27"},{"lineNumber":248,"author":{"gitId":"arsatis"},"content":"`Model#updateFilteredBookList()`.","lastModifiedDate":"2021-03-27"},{"lineNumber":249,"author":{"gitId":"arsatis"},"content":"* Step 5: The book list is updated and reflected on the GUI.","lastModifiedDate":"2021-03-27"},{"lineNumber":250,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":251,"author":{"gitId":"arsatis"},"content":"The following sequence diagram shows how the `findbook` operation works:","lastModifiedDate":"2021-03-27"},{"lineNumber":252,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":253,"author":{"gitId":"arsatis"},"content":"![FindBookSequenceDiagram](images/FindBookSequenceDiagram.png)","lastModifiedDate":"2021-03-27"},{"lineNumber":254,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":255,"author":{"gitId":"arsatis"},"content":"The following activity diagram summarizes what happens when a user executes the `findbook` command:","lastModifiedDate":"2021-03-27"},{"lineNumber":256,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":257,"author":{"gitId":"arsatis"},"content":"![FindBookActivityDiagram](images/FindBookActivityDiagram.png)","lastModifiedDate":"2021-03-27"},{"lineNumber":258,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":259,"author":{"gitId":"arsatis"},"content":"### Adding a reader","lastModifiedDate":"2021-03-27"},{"lineNumber":260,"author":{"gitId":"Nanxi-Huang"},"content":"Adding a reader into a class requires user input from the CLI.","lastModifiedDate":"2021-03-25"},{"lineNumber":261,"author":{"gitId":"Nanxi-Huang"},"content":"The `SmartLibParser` will parse the user input to check the validity of it, the input is valid if","lastModifiedDate":"2021-03-25"},{"lineNumber":262,"author":{"gitId":"Nanxi-Huang"},"content":"1. The reader does not already exist in the code base.","lastModifiedDate":"2021-03-25"},{"lineNumber":263,"author":{"gitId":"Nanxi-Huang"},"content":"2. The formats for the name, phone, email and address are correct.","lastModifiedDate":"2021-03-25"},{"lineNumber":264,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":265,"author":{"gitId":"Nanxi-Huang"},"content":"Given below is an example usage scenario of how the `addreader` mechanism behaves at each step.","lastModifiedDate":"2021-03-25"},{"lineNumber":266,"author":{"gitId":"Nanxi-Huang"},"content":"* Step 1: The user launches the SmartLib application with all of his/her readers already added to the reader list.","lastModifiedDate":"2021-03-25"},{"lineNumber":267,"author":{"gitId":"arsatis"},"content":"* Step 2: The user inputs `addreader r/Tom p/81688168 e/tom@email.com a/Queestown` to SmartLib, which calls upon","lastModifiedDate":"2021-03-27"},{"lineNumber":268,"author":{"gitId":"arsatis"},"content":"`LogicManager#execute()`.","lastModifiedDate":"2021-03-27"},{"lineNumber":269,"author":{"gitId":"arsatis"},"content":"* Step 3: `SmartLibParser` and `AddReaderCommandParser` checks the user input and returns an `AddReaderCommand` to the","lastModifiedDate":"2021-03-27"},{"lineNumber":270,"author":{"gitId":"arsatis"},"content":"`LogicManager` if the input is valid.","lastModifiedDate":"2021-03-27"},{"lineNumber":271,"author":{"gitId":"Nanxi-Huang"},"content":"* Step 4: `LogicManager` calls `AddReaderCommand#execute()`, which in turn calls `Model#addReader()`.","lastModifiedDate":"2021-03-25"},{"lineNumber":272,"author":{"gitId":"arsatis"},"content":"* Step 5: By calling `Model#addReader()`, `ModelManager` then calls `SmartLib#addReader()` and","lastModifiedDate":"2021-03-27"},{"lineNumber":273,"author":{"gitId":"arsatis"},"content":"`Model#updateUniqueReaderList()`.","lastModifiedDate":"2021-03-27"},{"lineNumber":274,"author":{"gitId":"Nanxi-Huang"},"content":"* Step 6: `SmartLib#addReader()` adds the reader to the reader list.","lastModifiedDate":"2021-03-25"},{"lineNumber":275,"author":{"gitId":"Nanxi-Huang"},"content":"* Step 7: `ModelManager#updateUniqueReaderList()` updates the reader list in local storage file.","lastModifiedDate":"2021-03-25"},{"lineNumber":276,"author":{"gitId":"Nanxi-Huang"},"content":"* Step 8: The reader list is updated in the storage and reflected on the GUI.","lastModifiedDate":"2021-03-25"},{"lineNumber":277,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":278,"author":{"gitId":"Nanxi-Huang"},"content":"The following sequence diagram shows how the `addreader` operation works:","lastModifiedDate":"2021-03-25"},{"lineNumber":279,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":280,"author":{"gitId":"Nanxi-Huang"},"content":"![AddReaderSequenceDiagram](images/AddReaderSequenceDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":281,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":282,"author":{"gitId":"Nanxi-Huang"},"content":"The following activity diagram summarizes what happens when a user executes the `addreader` command:","lastModifiedDate":"2021-03-25"},{"lineNumber":283,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":284,"author":{"gitId":"Nanxi-Huang"},"content":"![AddReaderActivityDiagram](images/AddReaderActivityDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":285,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":286,"author":{"gitId":"arsatis"},"content":"### Listing all readers","lastModifiedDate":"2021-03-27"},{"lineNumber":287,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":288,"author":{"gitId":"arsatis"},"content":"Listing all readers in a class requires user input from the CLI.","lastModifiedDate":"2021-03-23"},{"lineNumber":289,"author":{"gitId":"arsatis"},"content":"The `SmartLibParser` will then create a `ListReaderCommand`, which will trigger Model to update the GUI with a full list","lastModifiedDate":"2021-03-27"},{"lineNumber":290,"author":{"gitId":"arsatis"},"content":"of the readers.","lastModifiedDate":"2021-03-27"},{"lineNumber":291,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":292,"author":{"gitId":"arsatis"},"content":"**Notes:**","lastModifiedDate":"2021-03-23"},{"lineNumber":293,"author":{"gitId":"arsatis"},"content":"* Any arguments that the user inputs after the command `listreader` will not be examined by the application.","lastModifiedDate":"2021-03-23"},{"lineNumber":294,"author":{"gitId":"arsatis"},"content":"* If the current view of the GUI is already the full list of readers, `listreader` will not refresh or update the GUI.","lastModifiedDate":"2021-03-23"},{"lineNumber":295,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":296,"author":{"gitId":"arsatis"},"content":"Given below is an example usage scenario of how the `listreader` mechanism behaves at each step:","lastModifiedDate":"2021-03-23"},{"lineNumber":297,"author":{"gitId":"Nanxi-Huang"},"content":"* Step 1: The user launches the SmartLib application with all of his/her readers already added to the reader list.","lastModifiedDate":"2021-03-25"},{"lineNumber":298,"author":{"gitId":"arsatis"},"content":"* Step 2: The user inputs `listreader` to SmartLib, which calls upon `LogicManager#execute()`.","lastModifiedDate":"2021-03-23"},{"lineNumber":299,"author":{"gitId":"arsatis"},"content":"* Step 3: `SmartLibParser` checks the user input and returns a `ListReaderCommand` to the `LogicManager` if the input is","lastModifiedDate":"2021-03-27"},{"lineNumber":300,"author":{"gitId":"arsatis"},"content":"valid.","lastModifiedDate":"2021-03-27"},{"lineNumber":301,"author":{"gitId":"arsatis"},"content":"* Step 4: `LogicManager` will then call `ListReaderCommand#execute()`, which in turn calls","lastModifiedDate":"2021-03-27"},{"lineNumber":302,"author":{"gitId":"arsatis"},"content":"`Model#updateFilteredReaderList()`.","lastModifiedDate":"2021-03-27"},{"lineNumber":303,"author":{"gitId":"arsatis"},"content":"* Step 5: The reader list is updated and reflected on the GUI.","lastModifiedDate":"2021-03-23"},{"lineNumber":304,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":305,"author":{"gitId":"arsatis"},"content":"The following sequence diagram shows how the `listreader` operation works:","lastModifiedDate":"2021-03-23"},{"lineNumber":306,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":307,"author":{"gitId":"arsatis"},"content":"![ListReaderSequenceDiagram](images/ListReaderSequenceDiagram.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":308,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":309,"author":{"gitId":"arsatis"},"content":"The following activity diagram summarizes what happens when a user executes the `listreader` command:","lastModifiedDate":"2021-03-23"},{"lineNumber":310,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":311,"author":{"gitId":"arsatis"},"content":"![ListReaderActivityDiagram](images/ListReaderActivityDiagram.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":312,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":313,"author":{"gitId":"arsatis"},"content":"### Finding readers with keywords","lastModifiedDate":"2021-03-27"},{"lineNumber":314,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":315,"author":{"gitId":"arsatis"},"content":"The execution of finding a reader using keywords and finding a book using keywords is very similar (you may want to","lastModifiedDate":"2021-03-27"},{"lineNumber":316,"author":{"gitId":"arsatis"},"content":"refer to the diagrams under [**`Finding books with keywords`**](#finding-books-with-keywords)).","lastModifiedDate":"2021-03-27"},{"lineNumber":317,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":318,"author":{"gitId":"arsatis"},"content":"The only differences are that `FindReaderCommandParser` is used to parse the argument(s) and instead of","lastModifiedDate":"2021-03-27"},{"lineNumber":319,"author":{"gitId":"arsatis"},"content":"`FindBookCommandParser`, and an object of `FindReaderCommand` is created. In order to find a reader using keywords,","lastModifiedDate":"2021-03-27"},{"lineNumber":320,"author":{"gitId":"arsatis"},"content":"`Model#updateFilteredReaderList()` is called instead of `Model#updateFilteredBookList()`.","lastModifiedDate":"2021-03-27"},{"lineNumber":321,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":322,"author":{"gitId":"arsatis"},"content":"### Borrowing a book","lastModifiedDate":"2021-03-27"},{"lineNumber":323,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":324,"author":{"gitId":"gycc7253"},"content":"Recording a reader borrowing a book requires a user input from the CLI.","lastModifiedDate":"2021-03-24"},{"lineNumber":325,"author":{"gitId":"gycc7253"},"content":"The respective parsers will parse the user input to check whether the input is valid, the input is valid if","lastModifiedDate":"2021-03-24"},{"lineNumber":326,"author":{"gitId":"gycc7253"},"content":"1. The book and reader specified exist in the code base","lastModifiedDate":"2021-03-24"},{"lineNumber":327,"author":{"gitId":"gycc7253"},"content":"2. The book is available","lastModifiedDate":"2021-03-24"},{"lineNumber":328,"author":{"gitId":"gycc7253"},"content":"3. The reader does not have overdue books or exceed his borrowing quota","lastModifiedDate":"2021-03-24"},{"lineNumber":329,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":330,"author":{"gitId":"arsatis"},"content":"Then take the following pseudo processes:","lastModifiedDate":"2021-03-27"},{"lineNumber":331,"author":{"gitId":"gycc7253"},"content":"1. Obtain the Reader object and the Book object based on the identity provided by the user","lastModifiedDate":"2021-03-24"},{"lineNumber":332,"author":{"gitId":"gycc7253"},"content":"2. Add a corresponding record to the record List","lastModifiedDate":"2021-03-24"},{"lineNumber":333,"author":{"gitId":"arsatis"},"content":"3. Update reader and book\u0027s borrowing status by adding the book in reader\u0027s borrowing list and setting the book\u0027s","lastModifiedDate":"2021-03-27"},{"lineNumber":334,"author":{"gitId":"arsatis"},"content":"borrower to the reader","lastModifiedDate":"2021-03-27"},{"lineNumber":335,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":336,"author":{"gitId":"arsatis"},"content":"Given below is an example usage scenario of how the `borrow` mechanism behaves at each step. In our example and the","lastModifiedDate":"2021-03-27"},{"lineNumber":337,"author":{"gitId":"arsatis"},"content":"diagrams below,","lastModifiedDate":"2021-03-27"},{"lineNumber":338,"author":{"gitId":"gycc7253"},"content":"we assume that the user input is `borrow r/Tom b/Cloud Atlas`:","lastModifiedDate":"2021-03-24"},{"lineNumber":339,"author":{"gitId":"arsatis"},"content":"* Step 1: The user launches the SmartLib application with all of his/her readers already added to the reader list and","lastModifiedDate":"2021-03-27"},{"lineNumber":340,"author":{"gitId":"arsatis"},"content":"books added to the book list.","lastModifiedDate":"2021-03-27"},{"lineNumber":341,"author":{"gitId":"gycc7253"},"content":"* Step 2: The user inputs `borrow r/Tom b/Cloud Atlas` to SmartLib, which calls upon `LogicManager#execute()`.","lastModifiedDate":"2021-03-24"},{"lineNumber":342,"author":{"gitId":"gycc7253"},"content":"* Step 3: `SmartLibParser` and `BorrowCommandParser` will check the user input, and return a `BorrowCommand` to","lastModifiedDate":"2021-03-24"},{"lineNumber":343,"author":{"gitId":"gycc7253"},"content":"  the `LogicManager` if the input is valid.","lastModifiedDate":"2021-03-24"},{"lineNumber":344,"author":{"gitId":"arsatis"},"content":"* Step 4: `LogicManager` will then call `BorrowCommand#execute()`, which in turn calls `Model#addRecord()` and","lastModifiedDate":"2021-03-27"},{"lineNumber":345,"author":{"gitId":"arsatis"},"content":"`Model#borrowBook()`.","lastModifiedDate":"2021-03-27"},{"lineNumber":346,"author":{"gitId":"arsatis"},"content":"* Step 5: For calling `Model#addRecord()`, `ModelManager` will then call `SmartLib#addRecord()` and","lastModifiedDate":"2021-03-27"},{"lineNumber":347,"author":{"gitId":"arsatis"},"content":"`Model#updateFilteredRecordList()`","lastModifiedDate":"2021-03-27"},{"lineNumber":348,"author":{"gitId":"gycc7253"},"content":"* Step 6: `SmartLib#addRecord()` will add the corresponding record to record list","lastModifiedDate":"2021-03-24"},{"lineNumber":349,"author":{"gitId":"gycc7253"},"content":"* Step 7: `ModelManager#updateFilteredRecordList()` will update corresponding record list in local storage file","lastModifiedDate":"2021-03-24"},{"lineNumber":350,"author":{"gitId":"arsatis"},"content":"* Step 8: On the other hand, `ModelManager#borrowBook()` will change the borrowing status of book and reader\u0027s borrowing","lastModifiedDate":"2021-03-27"},{"lineNumber":351,"author":{"gitId":"arsatis"},"content":"list by calling `SmartLib#borrowBook()` and","lastModifiedDate":"2021-03-27"},{"lineNumber":352,"author":{"gitId":"gycc7253"},"content":"  update local storage by calling `Model#updateFilteredReaderList()` and `Model#updateFilteredBookList()`.","lastModifiedDate":"2021-03-24"},{"lineNumber":353,"author":{"gitId":"gycc7253"},"content":"* Step 9: All reader list, book list and record list will be updated in storage and reflected on the GUI","lastModifiedDate":"2021-03-24"},{"lineNumber":354,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":355,"author":{"gitId":"gycc7253"},"content":"The following sequence diagram shows how the `borrow` operation works:","lastModifiedDate":"2021-03-24"},{"lineNumber":356,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":357,"author":{"gitId":"gycc7253"},"content":"![BorrowSequenceDiagram](images/BorrowSequenceDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":358,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":359,"author":{"gitId":"gycc7253"},"content":"The following activity diagram summarizes what happens when a user executes the `borrow` command:","lastModifiedDate":"2021-03-24"},{"lineNumber":360,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":361,"author":{"gitId":"gycc7253"},"content":"![BorrowActivityDiagram](images/BorrowActivityDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":362,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":363,"author":{"gitId":"arsatis"},"content":"### Returning a book","lastModifiedDate":"2021-03-27"},{"lineNumber":364,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":365,"author":{"gitId":"gycc7253"},"content":"Recording a reader returning a book requires a user input from the CLI.","lastModifiedDate":"2021-03-24"},{"lineNumber":366,"author":{"gitId":"gycc7253"},"content":"The respective parsers will parse the user input to check whether the input is valid, the input is valid if","lastModifiedDate":"2021-03-24"},{"lineNumber":367,"author":{"gitId":"gycc7253"},"content":"1. The reader and book specified exists in the code base.","lastModifiedDate":"2021-03-24"},{"lineNumber":368,"author":{"gitId":"gycc7253"},"content":"2. The reader is borrowing the book and the book is borrowed by the reader","lastModifiedDate":"2021-03-24"},{"lineNumber":369,"author":{"gitId":"gycc7253"},"content":"3. There is such a valid borrowing record existing in the code base","lastModifiedDate":"2021-03-24"},{"lineNumber":370,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":371,"author":{"gitId":"arsatis"},"content":"Then take the following pseudo processes:","lastModifiedDate":"2021-03-27"},{"lineNumber":372,"author":{"gitId":"gycc7253"},"content":"1. Obtain the Reader object and the Book object based on the identity provided by the user","lastModifiedDate":"2021-03-24"},{"lineNumber":373,"author":{"gitId":"gycc7253"},"content":"2. Mark a corresponding record as returned by indicating the dateReturned field.","lastModifiedDate":"2021-03-24"},{"lineNumber":374,"author":{"gitId":"gycc7253"},"content":"3. Remove the book from reader\u0027s borrowing list and set book\u0027s borrower to null","lastModifiedDate":"2021-03-24"},{"lineNumber":375,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":376,"author":{"gitId":"arsatis"},"content":"Given below is an example usage scenario of how the `return` mechanism behaves at each step. In our example and the","lastModifiedDate":"2021-03-27"},{"lineNumber":377,"author":{"gitId":"arsatis"},"content":"diagrams below,","lastModifiedDate":"2021-03-27"},{"lineNumber":378,"author":{"gitId":"gycc7253"},"content":"we assume that the user input is `return r/Tom b/Cloud Atlas`:","lastModifiedDate":"2021-03-24"},{"lineNumber":379,"author":{"gitId":"gycc7253"},"content":"* Step 1: The user launches the SmartLib application with all of his/her readers already added to the reader","lastModifiedDate":"2021-03-24"},{"lineNumber":380,"author":{"gitId":"gycc7253"},"content":"  list and books added to the book list and records added to record list","lastModifiedDate":"2021-03-24"},{"lineNumber":381,"author":{"gitId":"gycc7253"},"content":"* Step 2: The user inputs `return r/Tom b/Cloud Atlas` to SmartLib, which calls upon `LogicManager#execute()`.","lastModifiedDate":"2021-03-24"},{"lineNumber":382,"author":{"gitId":"gycc7253"},"content":"* Step 3: `SmartLibParser` and `ReturnCommandParser` will check the user input, and return a `ReturnCommand` to","lastModifiedDate":"2021-03-24"},{"lineNumber":383,"author":{"gitId":"gycc7253"},"content":"  the `LogicManager` if the input is valid.","lastModifiedDate":"2021-03-24"},{"lineNumber":384,"author":{"gitId":"arsatis"},"content":"* Step 4: `LogicManager` will then call `ReturnCommand#execute()`, which in turn calls `Model#markRecordAsReturned()`","lastModifiedDate":"2021-03-27"},{"lineNumber":385,"author":{"gitId":"arsatis"},"content":"and `Model#returnBook()`.","lastModifiedDate":"2021-03-27"},{"lineNumber":386,"author":{"gitId":"arsatis"},"content":"* Step 5: For calling `Model#markRecordAsReturned()`, `ModelManager` will then call `SmartLib#markRecordAsReturned()`","lastModifiedDate":"2021-03-27"},{"lineNumber":387,"author":{"gitId":"arsatis"},"content":"and `Model#updateFilteredRecordList()`","lastModifiedDate":"2021-03-27"},{"lineNumber":388,"author":{"gitId":"gycc7253"},"content":"* Step 6: `SmartLib#markRecordAsReturned()` will find the corresponding record in the record list and set the","lastModifiedDate":"2021-03-24"},{"lineNumber":389,"author":{"gitId":"gycc7253"},"content":"  dateReturned to LocalDate.now()","lastModifiedDate":"2021-03-24"},{"lineNumber":390,"author":{"gitId":"gycc7253"},"content":"* Step 7: `ModelManager#updateFilteredRecordList()` will update corresponding record list in local storage file","lastModifiedDate":"2021-03-24"},{"lineNumber":391,"author":{"gitId":"arsatis"},"content":"* Step 8: `ModelManager#returnBook()` will change the status of book and reader specified by calling","lastModifiedDate":"2021-03-27"},{"lineNumber":392,"author":{"gitId":"arsatis"},"content":"`SmartLib#returnBook()` and","lastModifiedDate":"2021-03-27"},{"lineNumber":393,"author":{"gitId":"gycc7253"},"content":"  update local storage by calling `Model#updateFilteredReaderList()` and `Model#updateFilteredBookList()`.","lastModifiedDate":"2021-03-24"},{"lineNumber":394,"author":{"gitId":"gycc7253"},"content":"* Step 9: All reader list, book list and record list will be updated in storage and reflected on the GUI","lastModifiedDate":"2021-03-24"},{"lineNumber":395,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":396,"author":{"gitId":"gycc7253"},"content":"The following sequence diagram shows how the `return` operation works:","lastModifiedDate":"2021-03-24"},{"lineNumber":397,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":398,"author":{"gitId":"gycc7253"},"content":"![ReturnSequenceDiagram](images/ReturnSequenceDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":399,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":400,"author":{"gitId":"gycc7253"},"content":"The following activity diagram summarizes what happens when a user executes the `return` command:","lastModifiedDate":"2021-03-24"},{"lineNumber":401,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":402,"author":{"gitId":"gycc7253"},"content":"![ReturnActivityDiagram](images/ReturnActivityDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":403,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":404,"author":{"gitId":"arsatis"},"content":"### Returning overdue books","lastModifiedDate":"2021-03-27"},{"lineNumber":405,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":406,"author":{"gitId":"GJ0407790"},"content":"This section is a more detailed explanation of how the system deals with returned book that is overdue.","lastModifiedDate":"2021-03-25"},{"lineNumber":407,"author":{"gitId":"arsatis"},"content":"This process happens after `ReturnCommand#returnBook()` and before creating a `CommandResult` object (refer to","lastModifiedDate":"2021-03-27"},{"lineNumber":408,"author":{"gitId":"arsatis"},"content":"[**`this`**](#returning-a-book)).","lastModifiedDate":"2021-03-27"},{"lineNumber":409,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":410,"author":{"gitId":"GJ0407790"},"content":"Given below is an example scenario of how the system deals with overdue book at each step.","lastModifiedDate":"2021-03-25"},{"lineNumber":411,"author":{"gitId":"GJ0407790"},"content":"Here, we assume that the book is indeed overdue by 10 hours.","lastModifiedDate":"2021-03-25"},{"lineNumber":412,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":413,"author":{"gitId":"GJ0407790"},"content":"* Step 1: `ReturnCommand` checks whether the book is overdue by invoking its own method `ReturnCommand#isOverdue()`","lastModifiedDate":"2021-03-25"},{"lineNumber":414,"author":{"gitId":"GJ0407790"},"content":"* Step 2: `ReturnCommand` instantiate a `Cost` object with parameter `10`.","lastModifiedDate":"2021-03-25"},{"lineNumber":415,"author":{"gitId":"GJ0407790"},"content":"* Step 3: `Cost#getCost()` will returns the total amount of fine that the reader is required to pay.","lastModifiedDate":"2021-03-25"},{"lineNumber":416,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":417,"author":{"gitId":"GJ0407790"},"content":"The following sequence diagram shows how `ReturnCommand` deals with overdue book.","lastModifiedDate":"2021-03-25"},{"lineNumber":418,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":419,"author":{"gitId":"GJ0407790"},"content":"![OverdueBookSequenceDiagram](images/OverdueBookSequenceDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":420,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":421,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"arsatis"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedSmartLib`. It extends `SmartLib` with an undo/redo history,","lastModifiedDate":"2021-03-27"},{"lineNumber":426,"author":{"gitId":"arsatis"},"content":"stored internally as an `smartLibStateList` and `currentStatePointer`. Additionally, it implements the following","lastModifiedDate":"2021-03-27"},{"lineNumber":427,"author":{"gitId":"arsatis"},"content":"operations:","lastModifiedDate":"2021-03-27"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"arsatis"},"content":"* `VersionedSmartLib#commit()` — Saves the current SmartLib state in its history.","lastModifiedDate":"2021-03-23"},{"lineNumber":430,"author":{"gitId":"arsatis"},"content":"* `VersionedSmartLib#undo()` — Restores the previous SmartLib state from its history.","lastModifiedDate":"2021-03-23"},{"lineNumber":431,"author":{"gitId":"arsatis"},"content":"* `VersionedSmartLib#redo()` — Restores a previously undone SmartLib state from its history.","lastModifiedDate":"2021-03-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"arsatis"},"content":"These operations are exposed in the `Model` interface as `Model#commitSmartLib()`, `Model#undoSmartLib()` and","lastModifiedDate":"2021-03-27"},{"lineNumber":434,"author":{"gitId":"arsatis"},"content":"`Model#redoSmartLib()` respectively.","lastModifiedDate":"2021-03-27"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"arsatis"},"content":"Step 1. The user launches the application for the first time. The `VersionedSmartLib` will be initialized with the","lastModifiedDate":"2021-03-27"},{"lineNumber":439,"author":{"gitId":"arsatis"},"content":"initial SmartLib state, and the `currentStatePointer` pointing to that single SmartLib state.","lastModifiedDate":"2021-03-27"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"arsatis"},"content":"Step 2. The user executes `delete 5` command to delete the 5th reader in the SmartLib. The `delete` command calls","lastModifiedDate":"2021-03-27"},{"lineNumber":444,"author":{"gitId":"arsatis"},"content":"`Model#commitSmartLib()`, causing the modified state of the SmartLib after the `delete 5` command executes to be saved","lastModifiedDate":"2021-03-27"},{"lineNumber":445,"author":{"gitId":"arsatis"},"content":"in the `smartLibStateList`, and the `currentStatePointer` is shifted to the newly inserted SmartLib state.","lastModifiedDate":"2021-03-27"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"arsatis"},"content":"Step 3. The user executes `add n/David …​` to add a new reader. The `add` command also calls `Model#commitSmartLib()`,","lastModifiedDate":"2021-03-27"},{"lineNumber":450,"author":{"gitId":"arsatis"},"content":"causing another modified SmartLib state to be saved into the `smartLibStateList`.","lastModifiedDate":"2021-03-27"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"arsatis"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will","lastModifiedDate":"2021-03-27"},{"lineNumber":455,"author":{"gitId":"arsatis"},"content":"not call `Model#commitSmartLib()`, so the SmartLib state will not be saved into the `smartLibStateList`.","lastModifiedDate":"2021-03-27"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"arsatis"},"content":"Step 4. The user now decides that adding the reader was a mistake, and decides to undo that action by executing the","lastModifiedDate":"2021-03-27"},{"lineNumber":460,"author":{"gitId":"arsatis"},"content":"`undo` command. The `undo` command will call `Model#undoSmartLib()`, which will shift the `currentStatePointer` once to","lastModifiedDate":"2021-03-27"},{"lineNumber":461,"author":{"gitId":"arsatis"},"content":"the left, pointing it to the previous SmartLib state, and restores the SmartLib to that state.","lastModifiedDate":"2021-03-27"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"arsatis"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0,","lastModifiedDate":"2021-03-27"},{"lineNumber":466,"author":{"gitId":"arsatis"},"content":"pointing to the initial SmartLib state, then there are no previous SmartLib states to restore. The `undo` command uses","lastModifiedDate":"2021-03-27"},{"lineNumber":467,"author":{"gitId":"arsatis"},"content":"`Model#canUndoSmartLib()` to check if this is the case. If so, it will return an error to the user rather than","lastModifiedDate":"2021-03-27"},{"lineNumber":468,"author":{"gitId":"arsatis"},"content":"attempting to perform the undo.","lastModifiedDate":"2021-03-27"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"arsatis"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end","lastModifiedDate":"2021-03-27"},{"lineNumber":477,"author":{"gitId":"arsatis"},"content":"at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-03-27"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"arsatis"},"content":"The `redo` command does the opposite — it calls `Model#redoSmartLib()`, which shifts the `currentStatePointer` once to","lastModifiedDate":"2021-03-27"},{"lineNumber":482,"author":{"gitId":"arsatis"},"content":"the right, pointing to the previously undone state, and restores the SmartLib to that state.","lastModifiedDate":"2021-03-27"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"arsatis"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index","lastModifiedDate":"2021-03-27"},{"lineNumber":485,"author":{"gitId":"arsatis"},"content":"`smartLibStateList.size() - 1`, pointing to the latest SmartLib state, then there are no undone SmartLib states to","lastModifiedDate":"2021-03-27"},{"lineNumber":486,"author":{"gitId":"arsatis"},"content":"restore. The `redo` command uses `Model#canRedoSmartLib()` to check if this is the case. If so, it will return an error","lastModifiedDate":"2021-03-27"},{"lineNumber":487,"author":{"gitId":"arsatis"},"content":"to the user rather than attempting to perform the redo.","lastModifiedDate":"2021-03-27"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"arsatis"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the SmartLib, such as `list`,","lastModifiedDate":"2021-03-27"},{"lineNumber":492,"author":{"gitId":"arsatis"},"content":"will usually not call `Model#commitSmartLib()`, `Model#undoSmartLib()` or `Model#redoSmartLib()`. Thus, the","lastModifiedDate":"2021-03-27"},{"lineNumber":493,"author":{"gitId":"arsatis"},"content":"`smartLibStateList` remains unchanged.","lastModifiedDate":"2021-03-27"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"arsatis"},"content":"Step 6. The user executes `clear`, which calls `Model#commitSmartLib()`. Since the `currentStatePointer` is not pointing","lastModifiedDate":"2021-03-27"},{"lineNumber":498,"author":{"gitId":"arsatis"},"content":"at the end of the `smartLibStateList`, all SmartLib states after the `currentStatePointer` will be purged. Reason: It no","lastModifiedDate":"2021-03-27"},{"lineNumber":499,"author":{"gitId":"arsatis"},"content":"longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications","lastModifiedDate":"2021-03-27"},{"lineNumber":500,"author":{"gitId":"arsatis"},"content":"follow.","lastModifiedDate":"2021-03-27"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"#### Design consideration:","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"arsatis"},"content":"* **Alternative 1 (current choice):** Saves the entire SmartLib.","lastModifiedDate":"2021-03-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"gycc7253"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the reader being deleted).","lastModifiedDate":"2021-02-19"},{"lineNumber":519,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":526,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":527,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":528,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":529,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"arsatis"},"content":"* an owner of a private book loan service","lastModifiedDate":"2021-02-22"},{"lineNumber":540,"author":{"gitId":"arsatis"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2021-02-22"},{"lineNumber":541,"author":{"gitId":"arsatis"},"content":"* types fast","lastModifiedDate":"2021-02-22"},{"lineNumber":542,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":543,"author":{"gitId":"arsatis"},"content":"* is proficient with using CLI apps","lastModifiedDate":"2021-02-22"},{"lineNumber":544,"author":{"gitId":"arsatis"},"content":"* is very meticulous","lastModifiedDate":"2021-02-22"},{"lineNumber":545,"author":{"gitId":"arsatis"},"content":"* wants to keep track of his/her loans","lastModifiedDate":"2021-02-22"},{"lineNumber":546,"author":{"gitId":"arsatis"},"content":"* wants to keep track of the details of all of his/her books","lastModifiedDate":"2021-02-22"},{"lineNumber":547,"author":{"gitId":"arsatis"},"content":"* wants to keep track of the condition of the book before and after the loan","lastModifiedDate":"2021-02-22"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-22"},{"lineNumber":549,"author":{"gitId":"arsatis"},"content":"**Value proposition**: systematic management of books and borrowers\u0027 information.","lastModifiedDate":"2021-02-22"},{"lineNumber":550,"author":{"gitId":"arsatis"},"content":"* It would be a pain for private book loan services to have to keep track of their books by paper.","lastModifiedDate":"2021-02-22"},{"lineNumber":551,"author":{"gitId":"arsatis"},"content":"* By having a reliable system to keep track of things, it would help save the owners of private book loan services an","lastModifiedDate":"2021-03-27"},{"lineNumber":552,"author":{"gitId":"arsatis"},"content":"immense amount of time.","lastModifiedDate":"2021-03-27"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                             | So that I can…​                                                                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"arsatis"},"content":"| -------- | ------------------------------------------ | ---------------------------------------- | -------------------------------------------------------------------------------- |","lastModifiedDate":"2021-03-27"},{"lineNumber":561,"author":{"gitId":"arsatis"},"content":"| `* * *`  | user                                       | add a new book                           |                                                                                  |","lastModifiedDate":"2021-02-22"},{"lineNumber":562,"author":{"gitId":"arsatis"},"content":"| `* * *`  | user                                       | delete a book                            | remove entries that I no longer need                                             |","lastModifiedDate":"2021-02-22"},{"lineNumber":563,"author":{"gitId":"arsatis"},"content":"| `* * *`  | user                                       | list all books                           | keep track of my books                                                           |","lastModifiedDate":"2021-02-22"},{"lineNumber":564,"author":{"gitId":"arsatis"},"content":"| `* * *`  | user                                       | find a book by name                      | locate details of books without having to go through the entire list             |","lastModifiedDate":"2021-02-22"},{"lineNumber":565,"author":{"gitId":"gycc7253"},"content":"| `* * *`  | user                                       | add a new reader                         |                                                                                  |","lastModifiedDate":"2021-02-19"},{"lineNumber":566,"author":{"gitId":"gycc7253"},"content":"| `* * *`  | user                                       | delete a reader                          | remove entries that I no longer need                                             |","lastModifiedDate":"2021-02-19"},{"lineNumber":567,"author":{"gitId":"arsatis"},"content":"| `* * *`  | user                                       | list all readers                         | keep track of my readers                                                         |","lastModifiedDate":"2021-02-22"},{"lineNumber":568,"author":{"gitId":"gycc7253"},"content":"| `* * *`  | user                                       | find a reader by name                    | locate details of readers without having to go through the entire list           |","lastModifiedDate":"2021-02-19"},{"lineNumber":569,"author":{"gitId":"arsatis"},"content":"| `* * *`  | user                                       | record the borrowing of a book           | keep track of whether the book is borrowed out                                   |","lastModifiedDate":"2021-02-22"},{"lineNumber":570,"author":{"gitId":"arsatis"},"content":"| `* * *`  | user                                       | record the returning of a book           | keep track of whether the book has been returned                                 |","lastModifiedDate":"2021-02-22"},{"lineNumber":571,"author":{"gitId":"arsatis"},"content":"| `* *`    | meticulous user                            | keep track of due date of a book         | ensure that the book is returned on time                                         |","lastModifiedDate":"2021-02-22"},{"lineNumber":572,"author":{"gitId":"arsatis"},"content":"| `* *`    | concerned user                             | keep track of cost of each book          | ensure that I receive the correct reimbursement for lost books                   |","lastModifiedDate":"2021-02-22"},{"lineNumber":573,"author":{"gitId":"arsatis"},"content":"| `* *`    | meticulous user                            | keep track of readers\u0027 borrow records    | know my readers\u0027 preferences and fill my store with suitable books               |","lastModifiedDate":"2021-02-22"},{"lineNumber":574,"author":{"gitId":"arsatis"},"content":"| `* *`    | user                                       | rank the most borrowed books             | know my readers\u0027 preferences and increase the quantity of these books            |","lastModifiedDate":"2021-02-22"},{"lineNumber":575,"author":{"gitId":"arsatis"},"content":"| `* *`    | user                                       | rank the least borrowed books            | know my readers\u0027 preferences and reduce the quantity of these books              |","lastModifiedDate":"2021-02-22"},{"lineNumber":576,"author":{"gitId":"arsatis"},"content":"| `*`      | user with a huge membership base           | find readers using other particulars     | differentiate between readers with similar names                                 |","lastModifiedDate":"2021-02-22"},{"lineNumber":577,"author":{"gitId":"arsatis"},"content":"| `*`      | user                                       | rank the readers who borrowed most books | reward him/her for his/her studiousness                                          |","lastModifiedDate":"2021-02-22"},{"lineNumber":578,"author":{"gitId":"arsatis"},"content":"| `*`      | user                                       | sort books by name                       | locate a book easily                                                             |","lastModifiedDate":"2021-02-22"},{"lineNumber":579,"author":{"gitId":"arsatis"},"content":"| `*`      | user                                       | sort readers by name                     | locate a reader easily                                                           |","lastModifiedDate":"2021-02-22"},{"lineNumber":580,"author":{"gitId":"arsatis"},"content":"| `*`      | user                                       | tag books based on their genre           | local a book easily                                                              |","lastModifiedDate":"2021-02-22"},{"lineNumber":581,"author":{"gitId":"arsatis"},"content":"| `*`      | user                                       | find a book by their genre               | locate a book easily                                                             |","lastModifiedDate":"2021-02-22"},{"lineNumber":582,"author":{"gitId":"arsatis"},"content":"| `*`      | user                                       | sort books by their genre                | locate a book easily                                                             |","lastModifiedDate":"2021-02-22"},{"lineNumber":583,"author":{"gitId":"arsatis"},"content":"| `*`      | concerned user                             | remind readers to return books           | get my readers to return their books on time                                     |","lastModifiedDate":"2021-02-22"},{"lineNumber":584,"author":{"gitId":"arsatis"},"content":"| `*`      | concerned but lazy user                    | automate my reminders                    | get my readers to return their books on time without putting in any extra effort |","lastModifiedDate":"2021-02-22"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"arsatis"},"content":"(For all use cases below, the **System** is `SmartLib` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-02-26"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"arsatis"},"content":"**Use case: UC01 - List all readers**","lastModifiedDate":"2021-02-26"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"arsatis"},"content":"1.  User requests to list readers.","lastModifiedDate":"2021-02-26"},{"lineNumber":595,"author":{"gitId":"arsatis"},"content":"2.  SmartLib shows a list of readers (if any).","lastModifiedDate":"2021-02-26"},{"lineNumber":596,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":597,"author":{"gitId":"arsatis"},"content":"    Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":598,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":599,"author":{"gitId":"arsatis"},"content":"**Extensions**","lastModifiedDate":"2021-02-26"},{"lineNumber":600,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":601,"author":{"gitId":"arsatis"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-02-26"},{"lineNumber":602,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":603,"author":{"gitId":"arsatis"},"content":"  Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":604,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":605,"author":{"gitId":"arsatis"},"content":"**Use case: UC02 - Search for a reader\u0027s information**","lastModifiedDate":"2021-02-26"},{"lineNumber":606,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":607,"author":{"gitId":"arsatis"},"content":"**MSS**","lastModifiedDate":"2021-02-26"},{"lineNumber":608,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":609,"author":{"gitId":"arsatis"},"content":"1.  User finds a reader by his or her name.","lastModifiedDate":"2021-02-26"},{"lineNumber":610,"author":{"gitId":"arsatis"},"content":"2.  SmartLib shows a list of readers with the given name.","lastModifiedDate":"2021-02-26"},{"lineNumber":611,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":612,"author":{"gitId":"arsatis"},"content":"    Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":613,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":614,"author":{"gitId":"arsatis"},"content":"**Extensions**","lastModifiedDate":"2021-02-26"},{"lineNumber":615,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":616,"author":{"gitId":"arsatis"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-02-26"},{"lineNumber":617,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":618,"author":{"gitId":"arsatis"},"content":"  Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":619,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":620,"author":{"gitId":"arsatis"},"content":"**Use case: UC03 - Find the most or least borrowed books**","lastModifiedDate":"2021-02-26"},{"lineNumber":621,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":622,"author":{"gitId":"arsatis"},"content":"**MSS**","lastModifiedDate":"2021-02-26"},{"lineNumber":623,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":624,"author":{"gitId":"arsatis"},"content":"1.  User requests to list books.","lastModifiedDate":"2021-02-26"},{"lineNumber":625,"author":{"gitId":"arsatis"},"content":"2.  SmartLib shows a list of books.","lastModifiedDate":"2021-02-26"},{"lineNumber":626,"author":{"gitId":"arsatis"},"content":"3.  User requests to sort the books by popularity.","lastModifiedDate":"2021-02-26"},{"lineNumber":627,"author":{"gitId":"arsatis"},"content":"4.  SmartLib sorts the books based on the number of times the books were borrowed.","lastModifiedDate":"2021-02-26"},{"lineNumber":628,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":629,"author":{"gitId":"arsatis"},"content":"**Extensions**","lastModifiedDate":"2021-02-26"},{"lineNumber":630,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":631,"author":{"gitId":"arsatis"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-02-26"},{"lineNumber":632,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":633,"author":{"gitId":"arsatis"},"content":"  Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":634,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":635,"author":{"gitId":"arsatis"},"content":"**Use case: UC04 - Borrow a book**","lastModifiedDate":"2021-03-01"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":637,"author":{"gitId":"gycc7253"},"content":"**MSS**","lastModifiedDate":"2021-02-26"},{"lineNumber":638,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":639,"author":{"gitId":"gycc7253"},"content":"1.  User enter book id and reader id to allow that reader to borrow a book","lastModifiedDate":"2021-02-26"},{"lineNumber":640,"author":{"gitId":"gycc7253"},"content":"2.  SmartLib displays successful borrowing information","lastModifiedDate":"2021-02-26"},{"lineNumber":641,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":642,"author":{"gitId":"gycc7253"},"content":"**Extensions**","lastModifiedDate":"2021-02-26"},{"lineNumber":643,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":644,"author":{"gitId":"gycc7253"},"content":"* 1a. The book does not exist","lastModifiedDate":"2021-02-26"},{"lineNumber":645,"author":{"gitId":"gycc7253"},"content":"* 1b. The reader does not exist","lastModifiedDate":"2021-02-26"},{"lineNumber":646,"author":{"gitId":"gycc7253"},"content":"* 1c. The book is currently not available","lastModifiedDate":"2021-02-26"},{"lineNumber":647,"author":{"gitId":"gycc7253"},"content":"* 1d. The reader has borrowed more than the number of books allowed","lastModifiedDate":"2021-02-26"},{"lineNumber":648,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":649,"author":{"gitId":"gycc7253"},"content":"  Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":650,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":651,"author":{"gitId":"arsatis"},"content":"**Use case: UC05 - Return a book**","lastModifiedDate":"2021-03-01"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":653,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-02-26"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":655,"author":{"gitId":"gycc7253"},"content":"1.  User enter book id and reader id to allow that reader to return a book","lastModifiedDate":"2021-02-26"},{"lineNumber":656,"author":{"gitId":"gycc7253"},"content":"2.  SmartLib displays successful returning information","lastModifiedDate":"2021-02-26"},{"lineNumber":657,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":658,"author":{"gitId":"gycc7253"},"content":"**Extensions**","lastModifiedDate":"2021-02-26"},{"lineNumber":659,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":660,"author":{"gitId":"gycc7253"},"content":"* 1a. The book does not exist","lastModifiedDate":"2021-02-26"},{"lineNumber":661,"author":{"gitId":"gycc7253"},"content":"* 1b. The reader does not exist","lastModifiedDate":"2021-02-26"},{"lineNumber":662,"author":{"gitId":"gycc7253"},"content":"* 1c. The book is not currently borrowed under that reader","lastModifiedDate":"2021-02-26"},{"lineNumber":663,"author":{"gitId":"gycc7253"},"content":"* 1d. The book in loan has exceeded expire date, extra charge","lastModifiedDate":"2021-02-26"},{"lineNumber":664,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":665,"author":{"gitId":"gycc7253"},"content":"  Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":666,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":667,"author":{"gitId":"arsatis"},"content":"**Use case: UC06 - Check a reader\u0027s balance**","lastModifiedDate":"2021-03-01"},{"lineNumber":668,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":669,"author":{"gitId":"gycc7253"},"content":"**MSS**","lastModifiedDate":"2021-02-26"},{"lineNumber":670,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":671,"author":{"gitId":"gycc7253"},"content":"1.  User enter reader id to check the balance left in reader\u0027s account","lastModifiedDate":"2021-02-26"},{"lineNumber":672,"author":{"gitId":"gycc7253"},"content":"2.  SmartLib displays reader\u0027s balance information","lastModifiedDate":"2021-02-26"},{"lineNumber":673,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":674,"author":{"gitId":"gycc7253"},"content":"**Extensions**","lastModifiedDate":"2021-02-26"},{"lineNumber":675,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":676,"author":{"gitId":"gycc7253"},"content":"* 1a. The reader does not exist","lastModifiedDate":"2021-02-26"},{"lineNumber":677,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":678,"author":{"gitId":"gycc7253"},"content":"  Use case ends.","lastModifiedDate":"2021-02-26"},{"lineNumber":679,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":680,"author":{"gitId":"arsatis"},"content":"**Use case: UC07 - Delete a reader**","lastModifiedDate":"2021-03-01"},{"lineNumber":681,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":682,"author":{"gitId":"Nanxi-Huang"},"content":"**Guarantee: Reader will be deleted from the registered reader base**","lastModifiedDate":"2021-02-28"},{"lineNumber":683,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":684,"author":{"gitId":"Nanxi-Huang"},"content":"**MSS**","lastModifiedDate":"2021-02-28"},{"lineNumber":685,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":686,"author":{"gitId":"Nanxi-Huang"},"content":"1.  User requests to list readers","lastModifiedDate":"2021-02-28"},{"lineNumber":687,"author":{"gitId":"Nanxi-Huang"},"content":"2.  SmartLib shows a list of readers","lastModifiedDate":"2021-02-28"},{"lineNumber":688,"author":{"gitId":"Nanxi-Huang"},"content":"3.  User requests to delete a specific reader in the list","lastModifiedDate":"2021-02-28"},{"lineNumber":689,"author":{"gitId":"Nanxi-Huang"},"content":"4.  SmartLib deletes the reader","lastModifiedDate":"2021-03-15"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":691,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":693,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-02-28"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":695,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-02-28"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":697,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":699,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-02-28"},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":701,"author":{"gitId":"GJ0407790"},"content":"    * 3a1. SmartLib shows an error message.","lastModifiedDate":"2021-02-28"},{"lineNumber":702,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":703,"author":{"gitId":"GJ0407790"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-02-28"},{"lineNumber":704,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":705,"author":{"gitId":"arsatis"},"content":"**Use case: UC08 - Add a book**","lastModifiedDate":"2021-03-01"},{"lineNumber":706,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":707,"author":{"gitId":"GJ0407790"},"content":"**MSS**","lastModifiedDate":"2021-02-28"},{"lineNumber":708,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":709,"author":{"gitId":"GJ0407790"},"content":"1.  User requests to add a book to the list.","lastModifiedDate":"2021-02-28"},{"lineNumber":710,"author":{"gitId":"GJ0407790"},"content":"2.  SmartLib adds the book to the list and displays a success message.","lastModifiedDate":"2021-02-28"},{"lineNumber":711,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":712,"author":{"gitId":"GJ0407790"},"content":"    Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":713,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":714,"author":{"gitId":"GJ0407790"},"content":"**Extensions**","lastModifiedDate":"2021-02-28"},{"lineNumber":715,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":716,"author":{"gitId":"GJ0407790"},"content":"* 1a. The format of the `addbook` command is incomplete.","lastModifiedDate":"2021-02-28"},{"lineNumber":717,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":718,"author":{"gitId":"GJ0407790"},"content":"    * 1a1. SmartLib requests the user to reenter the command.","lastModifiedDate":"2021-02-28"},{"lineNumber":719,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":720,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-02-28"},{"lineNumber":721,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":722,"author":{"gitId":"arsatis"},"content":"**Use case: UC09 - Delete a book**","lastModifiedDate":"2021-03-01"},{"lineNumber":723,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":724,"author":{"gitId":"arsatis"},"content":"**MSS**","lastModifiedDate":"2021-03-01"},{"lineNumber":725,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":726,"author":{"gitId":"arsatis"},"content":"1.  User requests to list books.","lastModifiedDate":"2021-03-01"},{"lineNumber":727,"author":{"gitId":"arsatis"},"content":"2.  SmartLib shows a list of books.","lastModifiedDate":"2021-03-01"},{"lineNumber":728,"author":{"gitId":"arsatis"},"content":"3.  User requests to delete a specific book in the list.","lastModifiedDate":"2021-03-01"},{"lineNumber":729,"author":{"gitId":"arsatis"},"content":"4.  SmartLib deletes the book.","lastModifiedDate":"2021-03-01"},{"lineNumber":730,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":731,"author":{"gitId":"arsatis"},"content":"    Use case ends.","lastModifiedDate":"2021-03-01"},{"lineNumber":732,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":733,"author":{"gitId":"arsatis"},"content":"**Extensions**","lastModifiedDate":"2021-03-01"},{"lineNumber":734,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":735,"author":{"gitId":"arsatis"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-01"},{"lineNumber":736,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":737,"author":{"gitId":"arsatis"},"content":"  Use case ends.","lastModifiedDate":"2021-03-01"},{"lineNumber":738,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":739,"author":{"gitId":"arsatis"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-03-01"},{"lineNumber":740,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":741,"author":{"gitId":"arsatis"},"content":"    * 3a1. SmartLib shows an error message.","lastModifiedDate":"2021-03-01"},{"lineNumber":742,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":743,"author":{"gitId":"arsatis"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-01"},{"lineNumber":744,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":745,"author":{"gitId":"arsatis"},"content":"**Use case: UC10 - Add a reader**","lastModifiedDate":"2021-03-01"},{"lineNumber":746,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":747,"author":{"gitId":"Nanxi-Huang"},"content":"**Guarantee: New reader will be added into the registered reader base**","lastModifiedDate":"2021-02-28"},{"lineNumber":748,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":749,"author":{"gitId":"Nanxi-Huang"},"content":"**MSS**","lastModifiedDate":"2021-02-28"},{"lineNumber":750,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":751,"author":{"gitId":"Nanxi-Huang"},"content":"1. User enters data about the reader to be added","lastModifiedDate":"2021-02-28"},{"lineNumber":752,"author":{"gitId":"Nanxi-Huang"},"content":"2. SmartLib confirms the addition","lastModifiedDate":"2021-02-28"},{"lineNumber":753,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":754,"author":{"gitId":"Nanxi-Huang"},"content":"   Use case ends.","lastModifiedDate":"2021-02-28"},{"lineNumber":755,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":756,"author":{"gitId":"Nanxi-Huang"},"content":"**Extensions**","lastModifiedDate":"2021-02-28"},{"lineNumber":757,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":758,"author":{"gitId":"Nanxi-Huang"},"content":"* 1a. SmartLib detects an error in the entered data.","lastModifiedDate":"2021-02-28"},{"lineNumber":759,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":760,"author":{"gitId":"Nanxi-Huang"},"content":"    * 1a1. SmartLib requests for the correct data.","lastModifiedDate":"2021-02-28"},{"lineNumber":761,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":762,"author":{"gitId":"Nanxi-Huang"},"content":"      1a2. User enters new data.","lastModifiedDate":"2021-02-28"},{"lineNumber":763,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":764,"author":{"gitId":"Nanxi-Huang"},"content":"      Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2021-02-28"},{"lineNumber":765,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":766,"author":{"gitId":"Nanxi-Huang"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2021-02-28"},{"lineNumber":767,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":768,"author":{"gitId":"arsatis"},"content":"* 1b. SmartLib detects that the reader has already been added.","lastModifiedDate":"2021-03-01"},{"lineNumber":769,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":770,"author":{"gitId":"arsatis"},"content":"    * 1b1. User proceeds to enter new data to add another reader.","lastModifiedDate":"2021-03-01"},{"lineNumber":771,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":772,"author":{"gitId":"arsatis"},"content":"    * 1b2. Steps 1b and 1b1 are repeated until the data entered is a non-existing reader","lastModifiedDate":"2021-03-01"},{"lineNumber":773,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":774,"author":{"gitId":"arsatis"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2021-03-01"},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"Andrewzhang217"},"content":"**Use case: UC11 - List all books**","lastModifiedDate":"2021-03-02"},{"lineNumber":777,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":778,"author":{"gitId":"Andrewzhang217"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":779,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":780,"author":{"gitId":"Andrewzhang217"},"content":"1.  User requests to list books in the store.","lastModifiedDate":"2021-03-02"},{"lineNumber":781,"author":{"gitId":"Andrewzhang217"},"content":"2.  SmartLib shows a list of books (if any).","lastModifiedDate":"2021-03-02"},{"lineNumber":782,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":783,"author":{"gitId":"Andrewzhang217"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":784,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":785,"author":{"gitId":"Andrewzhang217"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":786,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":787,"author":{"gitId":"Andrewzhang217"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":788,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":789,"author":{"gitId":"Andrewzhang217"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":790,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":791,"author":{"gitId":"Andrewzhang217"},"content":"**Use case: UC12 - Find books whose names contain the given keywords **","lastModifiedDate":"2021-03-02"},{"lineNumber":792,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":793,"author":{"gitId":"Andrewzhang217"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":794,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":795,"author":{"gitId":"Andrewzhang217"},"content":"1.  User requests to find a book.","lastModifiedDate":"2021-03-02"},{"lineNumber":796,"author":{"gitId":"Andrewzhang217"},"content":"2.  SmartLib shows a list of books whose names contain the keywords.","lastModifiedDate":"2021-03-02"},{"lineNumber":797,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":798,"author":{"gitId":"Andrewzhang217"},"content":"    Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":799,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":800,"author":{"gitId":"Andrewzhang217"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":801,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":802,"author":{"gitId":"Andrewzhang217"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":803,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":804,"author":{"gitId":"Andrewzhang217"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":805,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":806,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":807,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":808,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":809,"author":{"gitId":"gycc7253"},"content":"2.  Should be able to hold up to 1000 readers without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-02-19"},{"lineNumber":810,"author":{"gitId":"arsatis"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2021-03-27"},{"lineNumber":811,"author":{"gitId":"arsatis"},"content":" able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-03-27"},{"lineNumber":812,"author":{"gitId":"arsatis"},"content":"4.  Portability and compatibility across different devices.","lastModifiedDate":"2021-03-01"},{"lineNumber":813,"author":{"gitId":"arsatis"},"content":"5.  The SmartLib system should respond within one second.","lastModifiedDate":"2021-03-01"},{"lineNumber":814,"author":{"gitId":"arsatis"},"content":"6.  The user inferface must be intuitive and clear, so that new users can use the app without much difficulty.","lastModifiedDate":"2021-03-01"},{"lineNumber":815,"author":{"gitId":"arsatis"},"content":"7.  The product is offered as a free online service.","lastModifiedDate":"2021-03-01"},{"lineNumber":816,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":817,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":819,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"Andrewzhang217"},"content":"* **ISBN**: International Standard Book Number is a unique numeric commercial book identifier.","lastModifiedDate":"2021-03-25"},{"lineNumber":821,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":822,"author":{"gitId":"arsatis"},"content":"* **Regex**: A string of text that allows you to create patterns that help match, locate, and manage text","lastModifiedDate":"2021-03-01"},{"lineNumber":823,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":824,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":825,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":826,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":827,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":828,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":829,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":830,"author":{"gitId":"arsatis"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting","lastModifiedDate":"2021-03-27"},{"lineNumber":831,"author":{"gitId":"arsatis"},"content":"point for testers to work on;","lastModifiedDate":"2021-03-27"},{"lineNumber":832,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":833,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":834,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":835,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":836,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":837,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":838,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":839,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":840,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":841,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":842,"author":{"gitId":"arsatis"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2021-03-27"},{"lineNumber":843,"author":{"gitId":"arsatis"},"content":"   optimal.","lastModifiedDate":"2021-03-27"},{"lineNumber":844,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":845,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":846,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":847,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":848,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":849,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":850,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":851,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":852,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":853,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":854,"author":{"gitId":"gycc7253"},"content":"### Deleting a reader","lastModifiedDate":"2021-02-19"},{"lineNumber":855,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":856,"author":{"gitId":"gycc7253"},"content":"1. Deleting a reader while all readers are being shown","lastModifiedDate":"2021-02-19"},{"lineNumber":857,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":858,"author":{"gitId":"gycc7253"},"content":"   1. Prerequisites: List all readers using the `list` command. Multiple readers in the list.","lastModifiedDate":"2021-02-19"},{"lineNumber":859,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":860,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":861,"author":{"gitId":"arsatis"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2021-03-27"},{"lineNumber":862,"author":{"gitId":"arsatis"},"content":"      Timestamp in the status bar is updated.","lastModifiedDate":"2021-03-27"},{"lineNumber":863,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":864,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":865,"author":{"gitId":"gycc7253"},"content":"      Expected: No reader is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-02-19"},{"lineNumber":866,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":867,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":868,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":869,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":870,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":871,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":872,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":873,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":874,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":875,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":876,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":877,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":878,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"arsatis":372,"Nanxi-Huang":57,"GJ0407790":32,"gycc7253":106,"-":280,"Andrewzhang217":31}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"   1. Run the `seedu.smartlib.Main` and try a few commands.","lastModifiedDate":"2021-02-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [SmartLib’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"arsatis":1,"gycc7253":1,"-":53}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"   e.g. `seedu.smartlib.commons.StringUtilTest`","lastModifiedDate":"2021-02-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"   e.g. `seedu.smartlib.storage.StorageManagerTest`","lastModifiedDate":"2021-02-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"   e.g. `seedu.smartlib.logic.LogicManagerTest`","lastModifiedDate":"2021-02-19"}],"authorContributionMap":{"gycc7253":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"# Table of Contents","lastModifiedDate":"2021-02-23"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"* [Introduction](#introduction)","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"    * [Purpose](#purpose)","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"    * [Audience](#audience)","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"    * [Overview](#overview)","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"* [Quick start](#quick-start)","lastModifiedDate":"2021-02-23"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"* [Features](#features)","lastModifiedDate":"2021-02-23"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    * [Adding a reader](#adding-a-reader--addreader)","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"    * [Deleting a reader](#deleting-a-reader--deletereader)","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"    * [Listing all readers](#listing-all-readers--listreader)","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"    * [Finding a reader](#locating-readers-by-name--findreader)","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    * [Adding a book](#adding-a-book--addbook)","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    * [Deleting a book](#deleting-a-book--deletebook)","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"    * [Listing all books](#listing-all-books--listbook)","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    * [Finding a book](#locating-books-by-name--findbook)","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    * [Borrowing a book](#borrowing-a-book--borrow)","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"    * [Returning a book](#returning-a-book--return)","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    * [Clearing entries](#clearing-all-entries--clear)","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"    * [Accessing the help page](#viewing-help--help)","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"    * [Exiting the application](#exiting-the-program--exit)","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"* [FAQ](#faq)","lastModifiedDate":"2021-02-23"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"* [Command summary](#command-summary)","lastModifiedDate":"2021-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"## **Introduction**","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"### Purpose","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"The purpose of this document is to provide a brief guide to the various features and functions of SmartLib,","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"so that our target readers would be able to gain a better understanding of how our application works,","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"and may navigate the application with greater ease.","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"### Audience","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"This User Guide (UG) is meant for any user who is interested in understanding the various features and","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"functions of our application, SmartLib. Some of our intended audience include:","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"* SmartLib\u0027s end-users: any user who may want to use SmartLib features to support their businesses and/or for other","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"purposes.","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"### Overview","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"SmartLib is a desktop app for managing private book loaning services owning less than 10,000 books,","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"optimized for use via a Command Line Interface (CLI),","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"If you can type fast, SmartLib would be a brilliant and efficient assistant in the systematic management of your books","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"and borrowers\u0027 information, as compared to the traditional GUI apps currently available in the market.","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"1. Download the latest `smartlib.jar` from [here](https://github.com/AY2021S2-CS2103T-W13-2/tp/releases).","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your SmartLib.","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`listbook`** and pressing Enter will","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"list all the current books in store.\u003cbr\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"   * **`addreader`**`r/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a reader named","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"   `John Doe` to SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"   * **`deletereader`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2021-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"   * **`listbook`** : Lists all contacts.","lastModifiedDate":"2021-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"  e.g. in `add r/NAME`, `NAME` is a parameter which can be used as `add r/John Doe`.","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"  e.g `r/NAME [t/TAG]` can be used as `r/John Doe t/friend` or as `r/John Doe`.","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/VIP`, `t/VIP t/MostFrequentCustomer` etc.","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"arsatis"},"content":"  e.g. if the command specifies `r/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER r/NAME` is also acceptable.","lastModifiedDate":"2021-03-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"arsatis"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"arsatis"},"content":"the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":109,"author":{"gitId":"arsatis"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"arsatis"},"content":"ignored.\u003cbr\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"arsatis"},"content":"### Adding a reader : `addreader`","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":117,"author":{"gitId":"arsatis"},"content":"Adds a reader to SmartLib\u0027s registered reader base .","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":119,"author":{"gitId":"arsatis"},"content":"Format: `addreader r/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS`","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":121,"author":{"gitId":"GJ0407790"},"content":"Examples:","lastModifiedDate":"2021-02-28"},{"lineNumber":122,"author":{"gitId":"arsatis"},"content":"* `addreader r/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"arsatis"},"content":"* `addreader r/Betsy Crowe p/88888888 e/betsycrowe@example.com a/Newgate Prison`","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":125,"author":{"gitId":"arsatis"},"content":"### Deleting a reader : `deletereader`","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":127,"author":{"gitId":"arsatis"},"content":"Deletes the specified reader from SmartLib\u0027s registered reader base.","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":129,"author":{"gitId":"arsatis"},"content":"Format: `deletereader INDEX`","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":131,"author":{"gitId":"arsatis"},"content":"* Deletes the reader at the specified `INDEX`.","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"arsatis"},"content":"* The index refers to the index number shown in the displayed reader list.","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"arsatis"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-02-28"},{"lineNumber":136,"author":{"gitId":"arsatis"},"content":"* `deletereader 1`","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"arsatis"},"content":"* `deletereader 2`","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":139,"author":{"gitId":"arsatis"},"content":"Tip:","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"arsatis"},"content":"* `listreader` followed by `deletereader 2` deletes the 2nd reader in the displayed reader list.","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":142,"author":{"gitId":"arsatis"},"content":"### Listing all readers : `listreader`","lastModifiedDate":"2021-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":144,"author":{"gitId":"arsatis"},"content":"Shows a list of all readers in SmartLib.","lastModifiedDate":"2021-03-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2021-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":148,"author":{"gitId":"arsatis"},"content":"### Locating readers by name : `findreader`","lastModifiedDate":"2021-02-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":150,"author":{"gitId":"arsatis"},"content":"Finds readers whose names contain any of the given keywords.","lastModifiedDate":"2021-02-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":152,"author":{"gitId":"arsatis"},"content":"Format: `findreader KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-02-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":154,"author":{"gitId":"arsatis"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2021-02-23"},{"lineNumber":155,"author":{"gitId":"arsatis"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2021-02-23"},{"lineNumber":156,"author":{"gitId":"arsatis"},"content":"* Only the name is searched.","lastModifiedDate":"2021-02-23"},{"lineNumber":157,"author":{"gitId":"arsatis"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2021-02-23"},{"lineNumber":158,"author":{"gitId":"arsatis"},"content":"* Readers matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"arsatis"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2021-02-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-02-23"},{"lineNumber":162,"author":{"gitId":"arsatis"},"content":"* `findreader John` returns `john` and `John Doe`","lastModifiedDate":"2021-02-23"},{"lineNumber":163,"author":{"gitId":"arsatis"},"content":"* `findreader alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2021-02-23"},{"lineNumber":164,"author":{"gitId":"arsatis"},"content":"  ![result for \u0027findreader alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2021-02-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":166,"author":{"gitId":"arsatis"},"content":"### Adding a book : `addbook`","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"arsatis"},"content":"Adds a book to the book list.","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"arsatis"},"content":"Format: `addbook b/NAME a/AUTHOR p/PUBLISHER i/ISBN g/Genre`","lastModifiedDate":"2021-03-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"arsatis"},"content":"* `addbook b/Harry Porter a/JK Rowling p/Bloomsbury i/9783161484100 g/Fantasy`","lastModifiedDate":"2021-03-27"},{"lineNumber":174,"author":{"gitId":"arsatis"},"content":"* `addbook b/Hunger Games a/Suzanne Collins p/Scholastic i/9783161484100 g/Young Adult`","lastModifiedDate":"2021-03-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"arsatis"},"content":"### Deleting a book : `deletebook`","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"arsatis"},"content":"Deletes a specific book from the book list.","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"arsatis"},"content":"Format: `deletebook INDEX`","lastModifiedDate":"2021-03-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"arsatis"},"content":"* Deletes the book at the specified `INDEX`.","lastModifiedDate":"2021-03-27"},{"lineNumber":183,"author":{"gitId":"arsatis"},"content":"* The index refers to the index number shown in the displayed reader list.","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"arsatis"},"content":"* The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"arsatis"},"content":"* `listbook` followed by `deletebook 2` deletes the 2nd book in the book list.","lastModifiedDate":"2021-03-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"arsatis"},"content":"### Listing all books : `listbook`","lastModifiedDate":"2021-03-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"arsatis"},"content":"Lists all the current in-store books.","lastModifiedDate":"2021-03-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"arsatis"},"content":"Format: `listbook`","lastModifiedDate":"2021-03-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"arsatis"},"content":"### Locating books by name : `findbook`","lastModifiedDate":"2021-03-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"arsatis"},"content":"Finds books whose names contain any of the given keywords.","lastModifiedDate":"2021-03-27"},{"lineNumber":198,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":199,"author":{"gitId":"arsatis"},"content":"Format: `findbook KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-03-27"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":201,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-27"},{"lineNumber":202,"author":{"gitId":"arsatis"},"content":"*`findbook fiction` returns books related to fiction","lastModifiedDate":"2021-03-27"},{"lineNumber":203,"author":{"gitId":"arsatis"},"content":"*`findbook history [American History]` returns books related to history, especially American history.","lastModifiedDate":"2021-03-27"},{"lineNumber":204,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":205,"author":{"gitId":"gycc7253"},"content":"### Borrowing a book : `borrow`","lastModifiedDate":"2021-02-26"},{"lineNumber":206,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":207,"author":{"gitId":"gycc7253"},"content":"Records a borrowing activity.","lastModifiedDate":"2021-02-26"},{"lineNumber":208,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":209,"author":{"gitId":"gycc7253"},"content":"Format: `borrow b/BOOKNAME r/READERNAME`","lastModifiedDate":"2021-03-20"},{"lineNumber":210,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":211,"author":{"gitId":"gycc7253"},"content":"* Let reader at the specified name READERNAME borrow the book specified by name BOOKNAME","lastModifiedDate":"2021-03-20"},{"lineNumber":212,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":213,"author":{"gitId":"gycc7253"},"content":"Examples:","lastModifiedDate":"2021-02-26"},{"lineNumber":214,"author":{"gitId":"gycc7253"},"content":"* `borrow b/The Old Man and the Sea r/Alex Yeoh` records a rental entry that reader whose name is Alex Yeoh borrowed","lastModifiedDate":"2021-03-20"},{"lineNumber":215,"author":{"gitId":"gycc7253"},"content":"a book which name is The Old Man and the Sea","lastModifiedDate":"2021-03-20"},{"lineNumber":216,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":217,"author":{"gitId":"gycc7253"},"content":"### Returning a book : `return`","lastModifiedDate":"2021-02-26"},{"lineNumber":218,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":219,"author":{"gitId":"gycc7253"},"content":"Records a returning activity.","lastModifiedDate":"2021-02-26"},{"lineNumber":220,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":221,"author":{"gitId":"gycc7253"},"content":"Format: `return b/BOOKNAME r/READERNAME`","lastModifiedDate":"2021-03-20"},{"lineNumber":222,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":223,"author":{"gitId":"gycc7253"},"content":"* Let reader at the specified name READERNAME return the book specified by name BOOKNAME","lastModifiedDate":"2021-03-20"},{"lineNumber":224,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":225,"author":{"gitId":"gycc7253"},"content":"Examples:","lastModifiedDate":"2021-02-26"},{"lineNumber":226,"author":{"gitId":"gycc7253"},"content":"* `return b/The Old Man and the Sea r/Alex Yeoh` records a rental entry that reader whose name is Alex Yeoh returned","lastModifiedDate":"2021-03-20"},{"lineNumber":227,"author":{"gitId":"gycc7253"},"content":"a book which name is The Old Man and the Sea","lastModifiedDate":"2021-03-20"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"arsatis"},"content":"Clears all entries from SmartLib.","lastModifiedDate":"2021-03-01"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"arsatis"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-03-27"},{"lineNumber":236,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":237,"author":{"gitId":"arsatis"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-03-27"},{"lineNumber":238,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":239,"author":{"gitId":"arsatis"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-03-27"},{"lineNumber":240,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":241,"author":{"gitId":"arsatis"},"content":"Format: `help`","lastModifiedDate":"2021-03-27"},{"lineNumber":242,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"arsatis"},"content":"SmartLib data are saved in the hard disk automatically after any command that changes the data. There is no need to save","lastModifiedDate":"2021-03-27"},{"lineNumber":252,"author":{"gitId":"arsatis"},"content":"manually.","lastModifiedDate":"2021-03-27"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":256,"author":{"gitId":"arsatis"},"content":"SmartLib data are saved as a JSON file `[JAR file location]/data/smartlib.json`. Advanced users are welcome to update","lastModifiedDate":"2021-03-27"},{"lineNumber":257,"author":{"gitId":"arsatis"},"content":"data directly by editing that data file.","lastModifiedDate":"2021-03-27"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":260,"author":{"gitId":"arsatis"},"content":"If your changes to the data file makes its format invalid, SmartLib will discard all data and start with an empty data","lastModifiedDate":"2021-03-27"},{"lineNumber":261,"author":{"gitId":"arsatis"},"content":"file at the next run.","lastModifiedDate":"2021-03-27"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":264,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"arsatis"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2021-03-27"},{"lineNumber":270,"author":{"gitId":"arsatis"},"content":"the data of your previous SmartLib home folder.","lastModifiedDate":"2021-03-27"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"arsatis"},"content":"**Add reader** | `addreader r/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS` \u003cbr\u003e e.g., `addreader r/James Ho p/22224444e/jamesho@example.com a/123, Clementi Rd, 1234665`","lastModifiedDate":"2021-03-27"},{"lineNumber":279,"author":{"gitId":"arsatis"},"content":"**Delete reader** | `deletereader INDEX`\u003cbr\u003e e.g., `deletereader 3`","lastModifiedDate":"2021-03-27"},{"lineNumber":280,"author":{"gitId":"arsatis"},"content":"**Find reader** | `findreader KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `findreader James Jake`","lastModifiedDate":"2021-03-27"},{"lineNumber":281,"author":{"gitId":"arsatis"},"content":"**List readers** | `listreader`","lastModifiedDate":"2021-03-27"},{"lineNumber":282,"author":{"gitId":"arsatis"},"content":"**Add book** | `addbook b/NAME a/AUTHOR p/PUBLISHER i/ISBN g/Genre` \u003cbr\u003e e.g., `addbook b/Harry Porter a/JK Rowling p/Bloomsbury i/9783161484100 g/Fantasy`","lastModifiedDate":"2021-03-27"},{"lineNumber":283,"author":{"gitId":"arsatis"},"content":"**Borrow book** | `borrow b/BOOKNAME r/READERNAME`\u003cbr\u003e e.g., `borrow b/The Old Man and the Sea r/Alex Yeoh`","lastModifiedDate":"2021-03-27"},{"lineNumber":284,"author":{"gitId":"arsatis"},"content":"**Delete book** | `deletebook INDEX`\u003cbr\u003e e.g., `deletebook 3`","lastModifiedDate":"2021-03-27"},{"lineNumber":285,"author":{"gitId":"arsatis"},"content":"**Find book** | `findbook KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `findbook Thomas the Tank Engine`","lastModifiedDate":"2021-03-27"},{"lineNumber":286,"author":{"gitId":"arsatis"},"content":"**List books** | `listbook`","lastModifiedDate":"2021-03-27"},{"lineNumber":287,"author":{"gitId":"arsatis"},"content":"**Return book** | `return b/BOOKNAME r/READERNAME`\u003cbr\u003e e.g., `return b/The Old Man and the Sea r/Alex Yeoh`","lastModifiedDate":"2021-03-27"},{"lineNumber":288,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"arsatis"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"arsatis":143,"Nanxi-Huang":2,"GJ0407790":1,"gycc7253":23,"-":120,"Andrewzhang217":1}},{"path":"docs/diagrams/AddReaderActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Nanxi-Huang"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"Nanxi-Huang"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"Nanxi-Huang"},"content":"start","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"Nanxi-Huang"},"content":":User inputs an addreader command;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"Nanxi-Huang"},"content":"if () then ([valid input])","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"Nanxi-Huang"},"content":"  :SmartLib execute command;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"Nanxi-Huang"},"content":"  :add the reader into the registered reader base;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"Nanxi-Huang"},"content":"  :SmartLib shows confirmation message that new reader is added;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"Nanxi-Huang"},"content":"  :New reader appear on the list of registered readers of SmartLib;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"Nanxi-Huang"},"content":"else ([invalid input])","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"Nanxi-Huang"},"content":"  if () then ([wrong input format])","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"Nanxi-Huang"},"content":"  :SmartLib shows a message of the correct format;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"Nanxi-Huang"},"content":"  else ([reader already exists])","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"Nanxi-Huang"},"content":"  :SmartLib shows a message that reader already exists;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"Nanxi-Huang"},"content":"  endif","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"Nanxi-Huang"},"content":"endif","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"Nanxi-Huang"},"content":"stop","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"Nanxi-Huang"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"Nanxi-Huang":21}},{"path":"docs/diagrams/AddReaderSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Nanxi-Huang"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"Nanxi-Huang"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"Nanxi-Huang"},"content":"autoactivate on","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"Nanxi-Huang"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"Nanxi-Huang"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"Nanxi-Huang"},"content":"participant \":SmartLibParser\" as SmartLibParser LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"Nanxi-Huang"},"content":"participant \":AddReaderCommandParser\" as AddReaderCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"Nanxi-Huang"},"content":"participant \":AddReaderCommand\" as AddReaderCommand LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"Nanxi-Huang"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"Nanxi-Huang"},"content":"end box","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"Nanxi-Huang"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"Nanxi-Huang"},"content":"participant \":reader:Reader\" as Reader MODEL_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"Nanxi-Huang"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"Nanxi-Huang"},"content":"participant \":SmartLib\" as SmartLib MODEL_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"Nanxi-Huang"},"content":"end box","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"Nanxi-Huang"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"Nanxi-Huang"},"content":"participant \":UniqueReaderList\" as UniqueReaderList STORAGE_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"Nanxi-Huang"},"content":"end box","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"Nanxi-Huang"},"content":"[-\u003e LogicManager : execute(\"addreader r/Tom p/81688168 e/tom@email.com a/Queenstown\")","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"Nanxi-Huang"},"content":"activate LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"Nanxi-Huang"},"content":"LogicManager -\u003e SmartLibParser : parseCommand(\"addreader r/Tom p/81688168 e/tom@email.com a/Queenstown\")","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"Nanxi-Huang"},"content":"activate SmartLibParser","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"Nanxi-Huang"},"content":"create AddReaderCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"Nanxi-Huang"},"content":"SmartLibParser -\u003e AddReaderCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"Nanxi-Huang"},"content":"activate AddReaderCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"Nanxi-Huang"},"content":"AddReaderCommandParser --\u003e SmartLibParser","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"Nanxi-Huang"},"content":"deactivate AddReaderCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"Nanxi-Huang"},"content":"SmartLibParser -\u003e AddReaderCommandParser : parse(\"addreader r/Tom p/81688168 e/tom@email.com a/Queenstown\")","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"Nanxi-Huang"},"content":"activate AddReaderCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"Nanxi-Huang"},"content":"create Reader","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"Nanxi-Huang"},"content":"AddReaderCommandParser -\u003e Reader : new Reader(Tom, 81688168, tom@email.com, Queenstown)","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"Nanxi-Huang"},"content":"activate Reader","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"Nanxi-Huang"},"content":"Reader -\u003e AddReaderCommandParser : reader","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"Nanxi-Huang"},"content":"deactivate Reader","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"Nanxi-Huang"},"content":"create AddReaderCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"Nanxi-Huang"},"content":"AddReaderCommandParser -\u003e AddReaderCommand : new AddReaderCommand(reader)","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"Nanxi-Huang"},"content":"activate AddReaderCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"Nanxi-Huang"},"content":"AddReaderCommand --\u003e AddReaderCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"Nanxi-Huang"},"content":"deactivate AddReaderCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"Nanxi-Huang"},"content":"AddReaderCommandParser --\u003e SmartLibParser","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"Nanxi-Huang"},"content":"deactivate AddReaderCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"Nanxi-Huang"},"content":"SmartLibParser --\u003e LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"Nanxi-Huang"},"content":"destroy SmartLibParser","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"Nanxi-Huang"},"content":"AddReaderCommand -\u003e ModelManager : addReader(reader)","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"Nanxi-Huang"},"content":"activate ModelManager","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"Nanxi-Huang"},"content":"ModelManager -\u003e SmartLib : addReader(reader)","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"Nanxi-Huang"},"content":"activate UniqueReaderList","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"Nanxi-Huang"},"content":"SmartLib -\u003e UniqueReaderList: addReader(reader)","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"Nanxi-Huang"},"content":"activate UniqueReaderList","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"Nanxi-Huang"},"content":"UniqueReaderList --\u003e SmartLib :","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"Nanxi-Huang"},"content":"deactivate UniqueReaderList","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"Nanxi-Huang"},"content":"SmartLib --\u003e ModelManager :","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"Nanxi-Huang"},"content":"deactivate SmartLib","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"Nanxi-Huang"},"content":"ModelManager --\u003e AddReaderCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"Nanxi-Huang"},"content":"deactivate ModelManager","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"Nanxi-Huang"},"content":"create CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"Nanxi-Huang"},"content":"AddReaderCommand -\u003e CommandResult :","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"Nanxi-Huang"},"content":"activate CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"Nanxi-Huang"},"content":"CommandResult --\u003e AddReaderCommand :","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"Nanxi-Huang"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"Nanxi-Huang"},"content":"AddReaderCommand --\u003e LogicManager :","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"Nanxi-Huang"},"content":"deactivate AddReaderCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"Nanxi-Huang"},"content":"AddReaderCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"Nanxi-Huang"},"content":"destroy AddReaderCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"Nanxi-Huang"},"content":"[\u003c--LogicManager :","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"Nanxi-Huang"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"Nanxi-Huang"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"Nanxi-Huang":93}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteReader(r)","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveSmartLib(smartLib)","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"arsatis":2,"-":36}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"SmartLib *-right-\u003e \"1\" UniqueReaderList","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"SmartLib *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"UniqueTagList -[hidden]down- UniqueReaderList","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"UniqueTagList -[hidden]down- UniqueReaderList","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"UniqueReaderList o-right-\u003e Reader","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"Reader -up-\u003e \"*\" Tag","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"Reader *--\u003e Name","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"Reader *--\u003e Phone","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"Reader *--\u003e Email","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"Reader *--\u003e Address","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"arsatis":10,"-":11}},{"path":"docs/diagrams/BorrowActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"start","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":":User inputs \u0027borrow r/Tom b/Cloud Atlas\u0027;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"if () then ([valid input])","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"    :execute command;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"    :addRecord;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"    :updateBookStatus;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"    :updateReaderStatus;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"    :borrow success;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"else ([input invalid or check condition failed])","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"    :command invalid;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"endif","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"stop","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"gycc7253":18}},{"path":"docs/diagrams/BorrowSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"!include style.puml","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"participant \":SmartLibParser\" as SmartLibParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"participant \":BorrowCommandParser\" as BorrowCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"participant \"bc:BorrowCommand\" as BorrowCommand LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"participant \"cr:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"participant \":record:Record\" as Record MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"participant \":SmartLib\" as SmartLib MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"participant \":FilteredList\" as FilteredList STORAGE_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"[-\u003e LogicManager : execute(\"borrow r/Tom b/Cloud Atlas\")","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"activate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"LogicManager -\u003e SmartLibParser : parseCommand(\"borrow r/Tom b/Cloud Atlas\")","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"activate SmartLibParser","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"create BorrowCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"SmartLibParser -\u003e BorrowCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"activate BorrowCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"BorrowCommandParser --\u003e SmartLibParser","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"deactivate BorrowCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"SmartLibParser -\u003e BorrowCommandParser : parse(\"r/Tom b/Cloud Atlas\")","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"activate BorrowCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"create Record","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"BorrowCommandParser -\u003e Record : new Record(\"Tom\", \"Cloud Atlas\", new DateBorrowed(now()))","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"activate Record","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"gycc7253"},"content":"Record -\u003e BorrowCommandParser : record","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"gycc7253"},"content":"deactivate Record","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"gycc7253"},"content":"create BorrowCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"BorrowCommandParser -\u003e BorrowCommand : new BorrowCommand(record)","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"activate BorrowCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"gycc7253"},"content":"BorrowCommand --\u003e BorrowCommandParser : bc","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"gycc7253"},"content":"deactivate BorrowCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"gycc7253"},"content":"BorrowCommandParser --\u003e SmartLibParser : bc","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"gycc7253"},"content":"deactivate BorrowCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"gycc7253"},"content":"BorrowCommandParser -[hidden]-\u003e SmartLibParser","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"gycc7253"},"content":"destroy BorrowCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"gycc7253"},"content":"SmartLibParser --\u003e LogicManager : bc","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"gycc7253"},"content":"deactivate SmartLibParser","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"gycc7253"},"content":"LogicManager -\u003e BorrowCommand : execute(model)","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"gycc7253"},"content":"activate BorrowCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"gycc7253"},"content":"BorrowCommand -\u003e Model : addRecord(record)","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"gycc7253"},"content":"activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"gycc7253"},"content":"Model -\u003e SmartLib : addRecord(record)","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"gycc7253"},"content":"activate SmartLib","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"gycc7253"},"content":"SmartLib -\u003e Model :","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"gycc7253"},"content":"deactivate SmartLib","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"gycc7253"},"content":"Model -\u003e FilteredList: updateFilteredRecordList()","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"gycc7253"},"content":"activate FilteredList","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"gycc7253"},"content":"FilteredList -\u003e Model:","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"gycc7253"},"content":"deactivate FilteredList","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"gycc7253"},"content":"Model -\u003e BorrowCommand :","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"gycc7253"},"content":"deactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"gycc7253"},"content":"BorrowCommand -\u003e Model : borrowBook(\"Tom\", \"Cloud Atlas\")","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"gycc7253"},"content":"activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"gycc7253"},"content":"Model -\u003e SmartLib : borrowBook(\"Tom\", \"Cloud Atlas\")","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"gycc7253"},"content":"activate SmartLib","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"gycc7253"},"content":"SmartLib -\u003e Model :","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"gycc7253"},"content":"deactivate SmartLib","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"gycc7253"},"content":"Model -\u003e FilteredList : updateFilteredReaderList()","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"gycc7253"},"content":"activate FilteredList","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"gycc7253"},"content":"FilteredList --\u003e Model :","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"gycc7253"},"content":"deactivate FilteredList","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"gycc7253"},"content":"Model -\u003e FilteredList : updateFilteredBookList()","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"gycc7253"},"content":"activate FilteredList","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"gycc7253"},"content":"FilteredList --\u003e Model :","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"gycc7253"},"content":"deactivate FilteredList","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"gycc7253"},"content":"Model --\u003e BorrowCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"gycc7253"},"content":"deactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"gycc7253"},"content":"create CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"gycc7253"},"content":"BorrowCommand -\u003e CommandResult :","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"gycc7253"},"content":"activate CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"gycc7253"},"content":"CommandResult --\u003e BorrowCommand : cr","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"gycc7253"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"gycc7253"},"content":"BorrowCommand --\u003e LogicManager : cr","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"gycc7253"},"content":"deactivate BorrowCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"gycc7253"},"content":"BorrowCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"gycc7253"},"content":"destroy BorrowCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"gycc7253"},"content":"[\u003c--LogicManager : cr","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"gycc7253"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"gycc7253"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"gycc7253":122}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"if () then ([command commits SmartLib])","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"    :Save SmartLib to","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"    smartLibStateList;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"arsatis":3,"-":12}},{"path":"docs/diagrams/DeleteBookActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"start","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":":User executes delete book command;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"if () then ([index is a positive number])","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"    if () then ([index is in bound])","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"        :Delete the book at the index;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"        :Output a delete success message;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"    else ([else])","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"        :Output a invalid index message;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"    endif","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"else ([else])","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"    :Output the correct usage of","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"    delete book command;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"endif","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"stop","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"GJ0407790":17}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"participant \":SmartLibParser\" as SmartLibParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"LogicManager -\u003e SmartLibParser : parseCommand(\"delete 1\")","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"activate SmartLibParser","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"SmartLibParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"DeleteCommandParser --\u003e SmartLibParser","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"SmartLibParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"DeleteCommandParser --\u003e SmartLibParser : d","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"DeleteCommandParser -[hidden]-\u003e SmartLibParser","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"SmartLibParser --\u003e LogicManager : d","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"deactivate SmartLibParser","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"DeleteCommand -\u003e Model : deleteReader(1)","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"arsatis":11,"-":58}},{"path":"docs/diagrams/FindBookActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"start","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":":User inputs \u0027findbook Harry Potter\u0027;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"if () then ([valid input])","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"    if () then ([list contains books named \u0027Harry Potter\u0027])","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"        :SmartLib shows list of books that","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"                 contains the keyword \u0027Harry\u0027;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"    else ([else])","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"        :SmartLib shows an empty list;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"    endif","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"else ([else])","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    :Print \"Unknown Command\";","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"endif","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"stop","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"@enduml","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"Andrewzhang217":20}},{"path":"docs/diagrams/FindBookSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"participant \":SmartLibParser\" as SmartLibParser LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"participant \":FindBookCommandParser\" as FindBookCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"participant \"findBookCommand:FindBookCommand\" as FindBookCommand LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"participant \"commandResult:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"end box","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"participant \":FilteredList\" as FilteredList MODEL_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"end box","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"[-\u003e LogicManager : execute(\"findbook Harry Potter\")","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"activate LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"LogicManager -\u003e SmartLibParser : parseCommand(\"findbook Harry Potter\")","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"activate SmartLibParser","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"create FindBookCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"SmartLibParser -\u003e FindBookCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"activate FindBookCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"FindBookCommandParser --\u003e SmartLibParser","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"deactivate FindBookCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"SmartLibParser -\u003e FindBookCommandParser : parse(\"Harry Potter\")","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"activate FindBookCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"create FindBookCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"FindBookCommandParser -\u003e FindBookCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"activate FindBookCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"FindBookCommand --\u003e FindBookCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"FindBookCommandParser --\u003e SmartLibParser : findBookCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"deactivate FindBookCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"FindBookCommandParser -[hidden]-\u003e SmartLibParser","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"destroy FindBookCommandParser","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"SmartLibParser --\u003e LogicManager : findBookCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"deactivate SmartLibParser","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"LogicManager -\u003e FindBookCommand : execute(model)","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"activate FindBookCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"FindBookCommand -\u003e Model : updateFilteredBookList(p)","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":"activate Model","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"Model -\u003e FilteredList : setPredicate(p)","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":"activate FilteredList","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"Andrewzhang217"},"content":"FilteredList --\u003e Model :","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"Andrewzhang217"},"content":"deactivate FilteredList","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"Andrewzhang217"},"content":"Model --\u003e FindBookCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"Andrewzhang217"},"content":"deactivate Model","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"Andrewzhang217"},"content":"create CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"Andrewzhang217"},"content":"FindBookCommand -\u003e CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"Andrewzhang217"},"content":"activate CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"Andrewzhang217"},"content":"CommandResult --\u003e FindBookCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"Andrewzhang217"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"Andrewzhang217"},"content":"FindBookCommand --\u003e LogicManager : commandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"Andrewzhang217"},"content":"deactivate FindBookCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"Andrewzhang217"},"content":"FindBookCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"Andrewzhang217"},"content":"destroy FindBookCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"Andrewzhang217"},"content":"[\u003c--LogicManager : commandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"Andrewzhang217"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"Andrewzhang217"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"Andrewzhang217":78}},{"path":"docs/diagrams/FindReaderActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":"start","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":":User inputs \u0027findreader Tom\u0027;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"if () then ([valid input])","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"    if () then ([list contains readers named \u0027Tom\u0027])","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"        :SmartLib shows list of readers","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"                 with the name \u0027Tom\u0027;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"    else ([else])","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"        :SmartLib shows an empty list;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"    endif","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"else ([else])","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"    :Print \"Unknown Command\";","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"endif","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"stop","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"arsatis":19}},{"path":"docs/diagrams/FindReaderSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":"!include style.puml","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"participant \":SmartLibParser\" as SmartLibParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"participant \":FindReaderCommandParser\" as FindReaderCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"participant \"frc:FindReaderCommand\" as FindReaderCommand LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"participant \"cr:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"participant \":FilteredList\" as FilteredList MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"[-\u003e LogicManager : execute(\"findreader Tom\")","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"activate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"LogicManager -\u003e SmartLibParser : parseCommand(\"findreader Tom\")","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"activate SmartLibParser","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"create FindReaderCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"SmartLibParser -\u003e FindReaderCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"activate FindReaderCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"FindReaderCommandParser --\u003e SmartLibParser","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"deactivate FindReaderCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"SmartLibParser -\u003e FindReaderCommandParser : parse(\"Tom\")","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"activate FindReaderCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"create FindReaderCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"FindReaderCommandParser -\u003e FindReaderCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"activate FindReaderCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"FindReaderCommand --\u003e FindReaderCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"deactivate FindReaderCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"FindReaderCommandParser --\u003e SmartLibParser : frc","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"deactivate FindReaderCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"FindReaderCommandParser -[hidden]-\u003e SmartLibParser","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"destroy FindReaderCommandParser","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"SmartLibParser --\u003e LogicManager : frc","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"deactivate SmartLibParser","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"LogicManager -\u003e FindReaderCommand : execute(model)","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"activate FindReaderCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"FindReaderCommand -\u003e Model : updateFilteredReaderList(p)","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"activate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"Model -\u003e FilteredList : setPredicate(p)","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"activate FilteredList","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"FilteredList --\u003e Model :","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"deactivate FilteredList","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"Model --\u003e FindReaderCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"deactivate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"create CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"FindReaderCommand -\u003e CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"activate CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"CommandResult --\u003e FindReaderCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"FindReaderCommand --\u003e LogicManager : cr","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"deactivate FindReaderCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"FindReaderCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"destroy FindReaderCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"[\u003c--LogicManager : cr","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"arsatis":79}},{"path":"docs/diagrams/ListBookActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"start","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":":User inputs \u0027listbook\u0027;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"if () then ([valid input])","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"    :SmartLib shows list of books;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"else ([else])","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"    :Print \"Unknown Command\";","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"endif","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"stop","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"Andrewzhang217":13}},{"path":"docs/diagrams/ListBookSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"participant \":SmartLibParser\" as SmartLibParser LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"participant \"listBookCommand:ListBookCommand\" as ListBookCommand LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"participant \"commandResult:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"end box","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"participant \":FilteredList\" as FilteredList MODEL_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"end box","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"[-\u003e LogicManager : execute(\"listbook\")","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"activate LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"LogicManager -\u003e SmartLibParser : parseCommand(\"listbook\")","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"activate SmartLibParser","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"create ListBookCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"SmartLibParser -\u003e ListBookCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"activate ListBookCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"ListBookCommand --\u003e SmartLibParser","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"deactivate ListBookCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"SmartLibParser --\u003e LogicManager : listBookCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"deactivate SmartLibParser","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"LogicManager -\u003e ListBookCommand : execute(model)","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"activate ListBookCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"ListBookCommand -\u003e Model : updateFilteredBookList(p)","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"activate Model","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"Model -\u003e FilteredList : setPredicate(p)","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"activate FilteredList","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"FilteredList --\u003e Model :","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"deactivate FilteredList","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"Model --\u003e ListBookCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"deactivate Model","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"create CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"ListBookCommand -\u003e CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"activate CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"CommandResult --\u003e ListBookCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"ListBookCommand --\u003e LogicManager : commandResult","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":"deactivate ListBookCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"Andrewzhang217"},"content":"ListBookCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"Andrewzhang217"},"content":"destroy ListBookCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"Andrewzhang217"},"content":"[\u003c--LogicManager : cr","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"Andrewzhang217"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"Andrewzhang217"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"Andrewzhang217":62}},{"path":"docs/diagrams/ListReaderActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":"start","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":":User inputs \u0027listreader\u0027;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"if () then ([valid input])","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"    :SmartLib shows list of readers;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"else ([else])","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"endif","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"stop","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"arsatis":13}},{"path":"docs/diagrams/ListReaderSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"@startuml","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":"!include style.puml","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"participant \":SmartLibParser\" as SmartLibParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"participant \"lrc:ListReaderCommand\" as ListReaderCommand LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"participant \"cr:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"participant \":FilteredList\" as FilteredList MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"end box","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"[-\u003e LogicManager : execute(\"listreader\")","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"activate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"LogicManager -\u003e SmartLibParser : parseCommand(\"listreader\")","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"activate SmartLibParser","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"create ListReaderCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"SmartLibParser -\u003e ListReaderCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"activate ListReaderCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"ListReaderCommand --\u003e SmartLibParser","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"deactivate ListReaderCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"SmartLibParser --\u003e LogicManager : lrc","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"deactivate SmartLibParser","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"LogicManager -\u003e ListReaderCommand : execute(model)","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"activate ListReaderCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"ListReaderCommand -\u003e Model : updateFilteredReaderList(p)","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"activate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"Model -\u003e FilteredList : setPredicate(p)","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"activate FilteredList","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"FilteredList --\u003e Model :","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"deactivate FilteredList","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"Model --\u003e ListReaderCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"deactivate Model","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"create CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"ListReaderCommand -\u003e CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"activate CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"CommandResult --\u003e ListReaderCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"ListReaderCommand --\u003e LogicManager : cr","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"deactivate ListReaderCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"ListReaderCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"destroy ListReaderCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"[\u003c--LogicManager : cr","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"@enduml","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"arsatis":62}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package Parser {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"    Class SmartLibParser","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    Class XYZCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    Class CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Class ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Class ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Class ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Class Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Command {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"LogicManager --\u003e\"1\" SmartLibParser","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"SmartLibParser .left.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"XYZCommandParser ..|\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult","lastModifiedDate":"2019-07-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult -[hidden]-\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"arsatis":3,"-":59}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"    Interface ReadOnlySmartLib \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    Interface ObservableList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"    Class SmartLib","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"    Class ReadOnlySmartLib","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    Package Reader {","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"        Class Reader","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"        Class UniqueReaderList","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Package Tag {","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"SmartLib .up.|\u003e ReadOnlySmartLib","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model .right.\u003e ObservableList","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"ModelManager o--\u003e \"1\" SmartLib","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager o-left-\u003e \"1\" UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"SmartLib *--\u003e \"1\" UniqueReaderList","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"UniqueReaderList o--\u003e \"*\" Reader","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"Reader *--\u003e Name","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"Reader *--\u003e Phone","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"Reader *--\u003e Email","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"Reader *--\u003e Address","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"Reader *--\u003e \"*\" Tag","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"ModelManager -----\u003e\" ~* filtered list\" Reader","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"arsatis":16,"-":40}},{"path":"docs/diagrams/OverdueBookSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"autoactivate on","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"participant \":ReturnCommand\" as ReturnCommand LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"end box","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"participant \"c:Cost\" as Cost MODEL_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"end box","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"activate ReturnCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"ReturnCommand -\u003e ReturnCommand: isOverdue()","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"return","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"opt isOverdue","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"    create Cost","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"    ReturnCommand -\u003e Cost: new Cost(10)","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"    activate Cost","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"    Cost --\u003e ReturnCommand: c","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"    deactivate Cost","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":"    ReturnCommand -\u003e Cost: getCost()","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"    Cost --\u003e ReturnCommand","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"end","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"GJ0407790":32}},{"path":"docs/diagrams/ReturnActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"start","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":":User inputs \u0027return r/Tom b/Cloud Atlas\u0027;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"if () then ([valid input])","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"    :execute command;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"    :markRecordAsReturned;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"    :updateReaderStatus;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"    :updateBookStatus;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"    :return book success;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"else ([input invalid or check condition failed])","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"    :command invalid;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"endif","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"stop","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"gycc7253":18}},{"path":"docs/diagrams/ReturnSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"!include style.puml","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"participant \":SmartLibParser\" as SmartLibParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"participant \":ReturnCommandParser\" as ReturnCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"participant \"rc:ReturnCommand\" as ReturnCommand LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"participant \"cr:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"participant \":record:Record\" as Record MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"participant \":SmartLib\" as SmartLib MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"participant \":FilteredList\" as FilteredList STORAGE_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"[-\u003e LogicManager : execute(\"return r/Tom b/Cloud Atlas\")","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"activate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"LogicManager -\u003e SmartLibParser : parseCommand(\"return r/Tom b/Cloud Atlas\")","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"activate SmartLibParser","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"create ReturnCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"SmartLibParser -\u003e ReturnCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"activate ReturnCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"ReturnCommandParser --\u003e SmartLibParser","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"deactivate ReturnCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"SmartLibParser -\u003e ReturnCommandParser : parse(\"r/Tom b/Cloud Atlas\")","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"activate ReturnCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"create Record","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"ReturnCommandParser -\u003e Record : new Record(\"Tom\", \"Cloud Atlas\", new DateReturned(now()))","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"activate Record","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"gycc7253"},"content":"Record -\u003e ReturnCommandParser : record","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"gycc7253"},"content":"deactivate Record","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"gycc7253"},"content":"create ReturnCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"ReturnCommandParser -\u003e ReturnCommand : new ReturnCommand(record)","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"activate ReturnCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"gycc7253"},"content":"ReturnCommand --\u003e ReturnCommandParser : rc","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"gycc7253"},"content":"deactivate ReturnCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"gycc7253"},"content":"ReturnCommandParser --\u003e SmartLibParser : rc","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"gycc7253"},"content":"deactivate ReturnCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"gycc7253"},"content":"ReturnCommandParser -[hidden]-\u003e SmartLibParser","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"gycc7253"},"content":"destroy ReturnCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"gycc7253"},"content":"SmartLibParser --\u003e LogicManager : rc","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"gycc7253"},"content":"deactivate SmartLibParser","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"gycc7253"},"content":"LogicManager -\u003e ReturnCommand : execute(model)","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"gycc7253"},"content":"activate ReturnCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"gycc7253"},"content":"ReturnCommand -\u003e Model : markRecordAsReturend(record)","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"gycc7253"},"content":"activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"gycc7253"},"content":"Model -\u003e FilteredList: updateFilteredRecordList()","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"gycc7253"},"content":"activate FilteredList","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"gycc7253"},"content":"FilteredList -\u003e Model:","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"gycc7253"},"content":"deactivate FilteredList","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"gycc7253"},"content":"Model -\u003e ReturnCommand :","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"gycc7253"},"content":"deactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"gycc7253"},"content":"ReturnCommand -\u003e Model : returnBook(\"Tom\", \"Cloud Atlas\")","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"gycc7253"},"content":"activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"gycc7253"},"content":"Model -\u003e SmartLib : returnBook(\"Tom\", \"Cloud Atlas\")","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"gycc7253"},"content":"activate SmartLib","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"gycc7253"},"content":"SmartLib -\u003e Model :","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"gycc7253"},"content":"deactivate SmartLib","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"gycc7253"},"content":"Model -\u003e FilteredList : updateFilteredReaderList()","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"gycc7253"},"content":"activate FilteredList","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"gycc7253"},"content":"FilteredList --\u003e Model :","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"gycc7253"},"content":"deactivate FilteredList","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"gycc7253"},"content":"Model -\u003e FilteredList : updateFilteredBookList()","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"gycc7253"},"content":"activate FilteredList","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"gycc7253"},"content":"FilteredList --\u003e Model :","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"gycc7253"},"content":"deactivate FilteredList","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"gycc7253"},"content":"Model --\u003e ReturnCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"gycc7253"},"content":"deactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"gycc7253"},"content":"create CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"gycc7253"},"content":"ReturnCommand -\u003e CommandResult :","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"gycc7253"},"content":"activate CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"gycc7253"},"content":"CommandResult --\u003e ReturnCommand : cr","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"gycc7253"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"gycc7253"},"content":"ReturnCommand --\u003e LogicManager : cr","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"gycc7253"},"content":"deactivate ReturnCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"gycc7253"},"content":"ReturnCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"gycc7253"},"content":"destroy ReturnCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"gycc7253"},"content":"[\u003c--LogicManager : cr","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"gycc7253"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"gycc7253"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"gycc7253":117}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"Interface SmartLibStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"Class JsonSmartLibStorage","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"StorageManager .left.|\u003e Storage","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"StorageManager o-right-\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"StorageManager o--\u003e SmartLibStorage","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .left.|\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"JsonSmartLibStorage .left.|\u003e SmartLibStorage","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"JsonSmartLibStorage .down.\u003e JsonSerializableSmartLibStorage","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"JsonSerializableSmartLibStorage .right.\u003e JsonSerializableReader","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"JsonSerializableReader .right.\u003e JsonAdaptedTag","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"arsatis":7,"-":17}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"Class ReaderListPanel","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"Class ReaderCard","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow --\u003e HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"MainWindow *-down-\u003e ReaderListPanel","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"ReaderListPanel -down-\u003e ReaderCard","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"ReaderListPanel --|\u003e UiPart","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"ReaderCard --|\u003e UiPart","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow -down-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"ReaderCard ..\u003e Model","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"ReaderListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"arsatis":8,"-":52}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"    class State1 as \"__sl0:SmartLib__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"    class State2 as \"__sl1:SmartLib__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"    class State3 as \"__sl2:SmartLib__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"arsatis":3,"-":17}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"    class State1 as \"__sl0:SmartLib__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"    class State2 as \"__sl1:SmartLib__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"    class State3 as \"__sl2:SmartLib__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"arsatis":3,"-":19}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"    class State1 as \"__sl0:SmartLib__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"    class State2 as \"__sl1:SmartLib__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"    class State3 as \"__sl2:SmartLib__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"arsatis":3,"-":17}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"    class State1 as \"__sl0:SmartLib__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"    class State2 as \"__sl1:SmartLib__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"    class State3 as \"__sl2:SmartLib__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"arsatis":3,"-":17}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"    class State1 as \"__sl0:SmartLib__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"    class State2 as \"__sl1:SmartLib__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"    class State3 as \"__sl2:SmartLib__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"arsatis":3,"-":17}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"    class State1 as \"__sl0:SmartLib__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"    class State2 as \"__sl1:SmartLib__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"    class State3 as \"__sl2:SmartLib__\"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"note right on link: State sl2 deleted.","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"arsatis":4,"-":17}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"participant \":SmartLibParser\" as SmartLibParser LOGIC_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"participant \":VersionedSmartLib\" as VersionedSmartLib MODEL_COLOR","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"LogicManager -\u003e SmartLibParser : parseCommand(undo)","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"activate SmartLibParser","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"SmartLibParser -\u003e UndoCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"UndoCommand --\u003e SmartLibParser","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"SmartLibParser --\u003e LogicManager : u","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"deactivate SmartLibParser","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"UndoCommand -\u003e Model : undoSmartLib()","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"Model -\u003e VersionedSmartLib : undo()","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"activate VersionedSmartLib","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"VersionedSmartLib -\u003e VersionedSmartLib :resetData(ReadOnlySmartLib)","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"VersionedSmartLib --\u003e Model :","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"deactivate VersionedSmartLib","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"arsatis":14,"-":39}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"ecp -\u003e ec ++: index, editReaderDescriptor","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"arsatis":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"title: SmartLib","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-W13-2/tp/branch/master/graph/badge.svg?token\u003dKGHSIHY2LI)](https://codecov.io/gh/AY2021S2-CS2103T-W13-2/tp)","lastModifiedDate":"2021-02-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"**SmartLib is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"* If you are interested in using SmartLib, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"* If you are interested about developing SmartLib, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"arsatis":4,"-":15}},{"path":"docs/team/Andrewzhang217.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"title: Zesheng\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":45,"Andrewzhang217":1}},{"path":"docs/team/arsatis.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"---","lastModifiedDate":"2021-02-26"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":"layout: page","lastModifiedDate":"2021-02-26"},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"title: Zheng Yong\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-26"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"---","lastModifiedDate":"2021-02-26"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"## Project: SmartLib","lastModifiedDate":"2021-02-26"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"SmartLib is a desktop app for managing private book loaning services owning less than 10,000 books, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, SmartLib can systematically manage your books and borrowers’ information in a more efficient manner than traditional GUI apps.","lastModifiedDate":"2021-02-26"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-26"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-02-26"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-02-26"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-02-26"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-02-26"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-02-26"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-02-26"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003darsatis)","lastModifiedDate":"2021-02-26"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"* **Project management**:","lastModifiedDate":"2021-02-26"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-02-26"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-26"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-02-26"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-02-26"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-26"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"  * User Guide:","lastModifiedDate":"2021-02-26"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-02-26"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-02-26"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"  * Developer Guide:","lastModifiedDate":"2021-02-26"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-02-26"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"* **Community**:","lastModifiedDate":"2021-02-26"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-02-26"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-02-26"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-02-26"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-02-26"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"* **Tools**:","lastModifiedDate":"2021-02-26"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-02-26"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-02-26"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-02-26"}],"authorContributionMap":{"arsatis":46}},{"path":"docs/team/gj0407790.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"---","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"layout: page","lastModifiedDate":"2021-02-28"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"title: Guo Jun\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-28"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"---","lastModifiedDate":"2021-02-28"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"## Project: SmartLib","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"SmartLib is a desktop app for managing private book loaning services owning less than 10,000 books, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, SmartLib can systematically manage your books and borrowers’ information in a more efficient manner than traditional GUI apps.","lastModifiedDate":"2021-02-28"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-28"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-02-28"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-02-28"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-02-28"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-02-28"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-02-28"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-02-28"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003darsatis)","lastModifiedDate":"2021-02-28"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"* **Project management**:","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-02-28"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-28"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-02-28"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-02-28"},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-28"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"    * User Guide:","lastModifiedDate":"2021-02-28"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-02-28"},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-02-28"},{"lineNumber":33,"author":{"gitId":"GJ0407790"},"content":"    * Developer Guide:","lastModifiedDate":"2021-02-28"},{"lineNumber":34,"author":{"gitId":"GJ0407790"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-02-28"},{"lineNumber":35,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":36,"author":{"gitId":"GJ0407790"},"content":"* **Community**:","lastModifiedDate":"2021-02-28"},{"lineNumber":37,"author":{"gitId":"GJ0407790"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-02-28"},{"lineNumber":38,"author":{"gitId":"GJ0407790"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-02-28"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-02-28"},{"lineNumber":40,"author":{"gitId":"GJ0407790"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-02-28"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"* **Tools**:","lastModifiedDate":"2021-02-28"},{"lineNumber":43,"author":{"gitId":"GJ0407790"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-02-28"},{"lineNumber":44,"author":{"gitId":"GJ0407790"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-02-28"},{"lineNumber":45,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":46,"author":{"gitId":"GJ0407790"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-02-28"}],"authorContributionMap":{"GJ0407790":46}},{"path":"docs/team/gycc7253.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"---","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"layout: page","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"title: Yichao\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"---","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"## Project: SmartLib","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"SmartLib is a desktop app for managing private book loaning services owning less than 10,000 books, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, SmartLib can systematically manage your books and borrowers’ information in a more efficient manner than traditional GUI apps.","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"* **Project management**:","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"* **Documentation**:","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"  * User Guide:","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"  * Developer Guide:","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"* **Community**:","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"gycc7253"},"content":"* **Tools**:","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"gycc7253"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"gycc7253"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"gycc7253"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"gycc7253":46}},{"path":"docs/team/nanxi-huang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Nanxi-Huang"},"content":"---","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"Nanxi-Huang"},"content":"layout: page","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"Nanxi-Huang"},"content":"title: Nanxi\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"Nanxi-Huang"},"content":"---","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"Nanxi-Huang"},"content":"## Project: SmartLib","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"Nanxi-Huang"},"content":"SmartLib is a desktop app for managing private book loaning services owning less than 10,000 books, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, SmartLib can systematically manage your books and borrowers’ information in a more efficient manner than traditional GUI apps.","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"Nanxi-Huang"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"Nanxi-Huang"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"Nanxi-Huang"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"Nanxi-Huang"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"Nanxi-Huang"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"Nanxi-Huang"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"Nanxi-Huang"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"Nanxi-Huang"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"Nanxi-Huang"},"content":"* **Project management**:","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"Nanxi-Huang"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"Nanxi-Huang"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"Nanxi-Huang"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"Nanxi-Huang"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"Nanxi-Huang"},"content":"* **Documentation**:","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"Nanxi-Huang"},"content":"    * User Guide:","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"Nanxi-Huang"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"Nanxi-Huang"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"Nanxi-Huang"},"content":"    * Developer Guide:","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"Nanxi-Huang"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"Nanxi-Huang"},"content":"* **Community**:","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"Nanxi-Huang"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"Nanxi-Huang"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"Nanxi-Huang"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"Nanxi-Huang"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"Nanxi-Huang"},"content":"* **Tools**:","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"Nanxi-Huang"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"Nanxi-Huang"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"Nanxi-Huang"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"Nanxi-Huang":46}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":" * Changes the remark of an existing reader in the address book.","lastModifiedDate":"2021-02-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"gycc7253"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the reader identified \"","lastModifiedDate":"2021-02-19"},{"lineNumber":68,"author":{"gitId":"gycc7253"},"content":"            + \"by the index number used in the last reader listing. \"","lastModifiedDate":"2021-02-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-02-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"gycc7253"},"content":"     * @param index of the reader in the filtered reader list to edit the remark","lastModifiedDate":"2021-02-19"},{"lineNumber":103,"author":{"gitId":"gycc7253"},"content":"     * @param remark of the reader to be updated to","lastModifiedDate":"2021-02-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"gycc7253"},"content":"Create a `RemarkCommandParser` class in the `seedu.smartlib.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2021-02-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"gycc7253"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of reader data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the reader’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a reader.","lastModifiedDate":"2021-02-19"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"gycc7253"},"content":"Create a new `Remark` in `seedu.smartlib.model.reader`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-02-19"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"gycc7253"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each reader.","lastModifiedDate":"2021-02-19"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"gycc7253"},"content":"Simply add the following to [`seedu.smartlib.ui.ReaderCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-02-19"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"gycc7253"},"content":"public PersonCard(Person reader, int displayedIndex) {","lastModifiedDate":"2021-02-19"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"gycc7253"},"content":"    remark.setText(reader.getRemark().value);","lastModifiedDate":"2021-02-19"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"gycc7253"},"content":"        Person readerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-02-19"},{"lineNumber":344,"author":{"gitId":"gycc7253"},"content":"        Person editedReader \u003d new Person(readerToEdit.getName(), readerToEdit.getPhone(), readerToEdit.getEmail(),","lastModifiedDate":"2021-02-19"},{"lineNumber":345,"author":{"gitId":"gycc7253"},"content":"                readerToEdit.getAddress(), remark, readerToEdit.getTags());","lastModifiedDate":"2021-02-19"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"gycc7253"},"content":"        model.setPerson(readerToEdit, editedReader);","lastModifiedDate":"2021-02-19"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"gycc7253"},"content":"        return new CommandResult(generateSuccessMessage(editedReader));","lastModifiedDate":"2021-02-19"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"gycc7253"},"content":"     * {@code readerToEdit}.","lastModifiedDate":"2021-02-19"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"gycc7253"},"content":"    private String generateSuccessMessage(Person readerToEdit) {","lastModifiedDate":"2021-02-19"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"gycc7253"},"content":"        return String.format(message, readerToEdit);","lastModifiedDate":"2021-02-19"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"gycc7253":23,"-":371}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on AddressBook, you will most likely find that some features and fields that are no longer necessary. In scenarios like this, you can consider refactoring the existing `Person` model to suit your use case.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"In this tutorial, we’ll do exactly just that and remove the `address` field from `Person`.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Fortunately, IntelliJ IDEA provides a robust refactoring tool that can identify *most* usages. Let’s try to use it as much as we can.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"The `address` field in `Person` is actually an instance of the `seedu.smartlib.model.reader.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-02-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry. You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"gycc7253"},"content":"  \"readers\": [ {","lastModifiedDate":"2021-02-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"gycc7253":2,"-":101}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"![Architecture sequence diagram from the developer","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"guide](../images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Note how the diagram shows only how the execution flows *between* the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram succeeds in informing the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of the code base.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Setting a break point","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method. In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the UI transfers control to the Logic component. According to the sequence diagram, the UI component yields control to the Logic component through a method named `execute`. Searching through the code base for `execute()` yields a promising candidate in `seedu.smartlib.ui.CommandBox.CommandExecutor`.","lastModifiedDate":"2021-02-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Using the `Search for target by name` feature. `Navigate` \\\u003e `Symbol`.](../images/tracing/Execute.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"A quick look at the class confirms that this is indeed close to what we’re looking for. However, it is just an `Interface`. Let’s delve further and find the implementation of the interface by using the `Find Usages` feature in IntelliJ IDEA.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to jot down what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and look something like this:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Use the `Show execution point` feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s `Step in` into that method call:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()`. Let’s take a look at the body of the method and annotate what we can deduce.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. `Step over` the logging code since it is of no interest to us now. ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. `Step into` the line where user input in parsed from a String to a Command.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    **`AddressBookParser\\#parseCommand()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. `Step over` until you reach the `switch` statement. The `Variables` window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. Stepping into the `switch`, we obviously stop at **`AddressBookParser\\#parseCommand()`.**","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** Sometimes you might end up stepping into functions that are not of interest. Simply `step out` of them\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the `Variable` tool window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far matches with the diagram?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"1. Now let’s see what happens when we call `command#execute()`\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   **`EditCommand\\#execute()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"gycc7253"},"content":"       Person readerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-02-19"},{"lineNumber":156,"author":{"gitId":"arsatis"},"content":"       Person editedReader \u003d createEditedPerson(readerToEdit, editReaderDescriptor);","lastModifiedDate":"2021-03-07"},{"lineNumber":157,"author":{"gitId":"gycc7253"},"content":"       if (!readerToEdit.isSamePerson(editedReader) \u0026\u0026 model.hasPerson(editedReader)) {","lastModifiedDate":"2021-02-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"gycc7253"},"content":"       model.setPerson(readerToEdit, editedReader);","lastModifiedDate":"2021-02-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"gycc7253"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedReader));","lastModifiedDate":"2021-02-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to `model`.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"1. We can a closer look at how storage works by repeatedly stepping into the code until we arrive at","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    `JsonAddressBook#saveAddressBook()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Again, it appears that the heavy lifting is delegated. Let’s take a look at `JsonSerializableAddressBook`\u0027s constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook\\#JsonSerializableAddressBook()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   /**","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    *","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"   public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"gycc7253"},"content":"       readers.addAll(","lastModifiedDate":"2021-02-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"           source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                 .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                 .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                 .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"1. We can continue to step through until we return to `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    **`ResultDisplay\\#setFeedbackToUser()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"1. Finally, we step through until we reach the end of","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"the result being displayed to the user. From this tutorial, you learned","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"more about the inner workings of AddressBook and how the various","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"components mesh together to form one cohesive product.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"execution path tracing. In some cases, you can do further tracing for","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"the given commands to find exactly what happens.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown(if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"arsatis":1,"gycc7253":6,"-":243}},{"path":"src/main/java/seedu/smartlib/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.LogsCenter;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.util.FileUtil;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"     * Returns the config path of the application.","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     * @return the config path of the application.","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * Updates the config path of the application.","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * @param configPath the new config path of the application.","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     * @param parameters the application command-line parameters.","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     * @return the application command-line parameters parsed as an AppParameters object.","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"     * Checks if this AppParameters object is equal to another AppParameters object.","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"     * @param other the other AppParameters object to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"     * @return true if this AppParameters object is equal to the other AppParameters object, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this AppParameters object.","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this AppParameters object.","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"arsatis":26,"gycc7253":3,"-":61}},{"path":"src/main/java/seedu/smartlib/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"arsatis":2,"gycc7253":1,"-":24}},{"path":"src/main/java/seedu/smartlib/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.Config;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.LogsCenter;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.Version;","lastModifiedDate":"2021-02-19"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-19"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.util.ConfigUtil;","lastModifiedDate":"2021-02-19"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.util.StringUtil;","lastModifiedDate":"2021-02-19"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.Logic;","lastModifiedDate":"2021-02-19"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.LogicManager;","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.ModelManager;","lastModifiedDate":"2021-02-19"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.ReadOnlySmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-02-19"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.SmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.UserPrefs;","lastModifiedDate":"2021-02-19"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.util.SampleDataUtil;","lastModifiedDate":"2021-02-19"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.storage.JsonSmartLibStorage;","lastModifiedDate":"2021-02-19"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-02-19"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.storage.SmartLibStorage;","lastModifiedDate":"2021-02-19"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.storage.Storage;","lastModifiedDate":"2021-02-19"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.storage.StorageManager;","lastModifiedDate":"2021-02-19"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.storage.UserPrefsStorage;","lastModifiedDate":"2021-02-19"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.ui.Ui;","lastModifiedDate":"2021-02-19"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.ui.UiManager;","lastModifiedDate":"2021-02-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     * Initializes the application.","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     * @throws Exception if an error was encountered during the initialization.","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"GJ0407790"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing SmartLib ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"        SmartLibStorage smartLibStorage \u003d new JsonSmartLibStorage(userPrefs.getSmartLibFilePath());","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"gycc7253"},"content":"        storage \u003d new StorageManager(smartLibStorage, userPrefsStorage);","lastModifiedDate":"2021-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"GJ0407790"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s SmartLib and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"GJ0407790"},"content":"     * The data from the sample SmartLib will be used instead if {@code storage}\u0027s SmartLib is not found,","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"GJ0407790"},"content":"     * or an empty SmartLib will be used instead if errors occur when reading {@code storage}\u0027s SmartLib.","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":82,"author":{"gitId":"GJ0407790"},"content":"        Optional\u003cReadOnlySmartLib\u003e smartLibOptional;","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"gycc7253"},"content":"        ReadOnlySmartLib initialData;","lastModifiedDate":"2021-02-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"GJ0407790"},"content":"            smartLibOptional \u003d storage.readSmartLib();","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"GJ0407790"},"content":"            if (!smartLibOptional.isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"GJ0407790"},"content":"                logger.info(\"Data file not found. Will be starting with a sample SmartLib\");","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"GJ0407790"},"content":"            initialData \u003d smartLibOptional.orElseGet(SampleDataUtil::getSampleSmartLib);","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"GJ0407790"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty SmartLib\");","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"gycc7253"},"content":"            initialData \u003d new SmartLib();","lastModifiedDate":"2021-02-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":94,"author":{"gitId":"GJ0407790"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty SmartLib\");","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"gycc7253"},"content":"            initialData \u003d new SmartLib();","lastModifiedDate":"2021-02-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"GJ0407790"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty SmartLib\");","lastModifiedDate":"2021-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":174,"author":{"gitId":"arsatis"},"content":"     * Initializes the stage of the application.","lastModifiedDate":"2021-03-27"},{"lineNumber":175,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"arsatis"},"content":"     * @param primaryStage the stage of the application.","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"GJ0407790"},"content":"        logger.info(\"Starting SmartLib \" + MainApp.VERSION);","lastModifiedDate":"2021-03-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"arsatis"},"content":"     * Halts the stage of the application.","lastModifiedDate":"2021-03-27"},{"lineNumber":186,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"GJ0407790"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping SmartLib ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":196,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"arsatis":21,"GJ0407790":15,"gycc7253":22,"-":139}},{"path":"src/main/java/seedu/smartlib/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.core;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * Config values used by the app.","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    /** Default file path of the config file. */","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     * Returns the log level of the config file.","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"     * @return the log level of the config file","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * Sets the log level of the config file to the given log level.","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * @param logLevel the specified log level that the config file is to be set to.","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"     * Returns the file path of the file storing the user\u0027s preferences.","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     * @return the file path of the file storing the user\u0027s preferences.","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     * Updates the file path of the file storing the user\u0027s preferences.","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     * @param userPrefsFilePath the new file path to the file storing the user\u0027s preferences.","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"     * Checks if this Config object is equal to another Config object.","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"     * @param other the other Config object to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"     * @return true if this Config object is equal to the other Config object, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this Config object.","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this Config object.","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"     * Returns this Config object in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"     * @return this Config object in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"arsatis":38,"gycc7253":1,"-":61}},{"path":"src/main/java/seedu/smartlib/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.core;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * @param windowWidth width of the GUI","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     * @param windowHeight height of the GUI","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * @param xPosition x-position of the GUI","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * @param yPosition y-position of the GUI","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     * Returns the width of the GUI.","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     * @return the width of the GUI","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     * Returns the height of the GUI.","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     * @return the height of the GUI","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     * Returns the coordinates of the GUI.","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"     * @return the coordinates of the GUI","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"     * Checks if this GuiSettings object is equals to another GuiSettings object.","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     * @param other the other GuiSettings object to be compared","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     * @return true if this GuiSettings object is equal to the other GuiSettings object, and false otherwise","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this GuiSettings object.","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this GuiSettings object","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"arsatis"},"content":"     * Returns this GuiSettings object in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"arsatis"},"content":"     * @return this GuiSettings object in String format","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"arsatis":37,"gycc7253":1,"-":78}},{"path":"src/main/java/seedu/smartlib/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.core;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":" *","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    private static final String LOG_FILE \u003d \"smartlib.log\";","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * @param config a config object specifying the custom log level","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     * @param name name of the Logger","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     * @return a Logger with the given name","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     * @param clazz class name of the Logger","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"     * @return a Logger with the given class name","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"     * @param logger the target Logger","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"     * @param logger the target Logger","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"arsatis"},"content":"     * @param logger the target Logger","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"arsatis"},"content":"     * @return the FileHandler for the log file","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"arsatis"},"content":"     * Creates a {@code ConsoleHandler} with the current log level.","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"arsatis"},"content":"     * @return the ConsoleHandler with the current log level","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"arsatis":25,"gycc7253":1,"-":110}},{"path":"src/main/java/seedu/smartlib/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.core;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * Container for user-visible messages.","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"    public static final String MESSAGE_INVALID_READER_DISPLAYED_INDEX \u003d \"The reader index provided is invalid.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"    public static final String MESSAGE_READERS_LISTED_OVERVIEW \u003d \"%1$d readers listed!\";","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"    public static final String MESSAGE_INVALID_BOOK_DISPLAYED_INDEX \u003d \"The book index provided is invalid.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"    public static final String MESSAGE_BOOKS_LISTED_OVERVIEW \u003d \"%1$d books listed!\";","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"arsatis":5,"GJ0407790":1,"gycc7253":1,"-":8}},{"path":"src/main/java/seedu/smartlib/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.core;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * Represents a version with major, minor and patch number.","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     * Returns the major component of the Version.","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"     * @return the major component of the Version","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     * Returns the minor component of the Version.","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     * @return the minor component of the Version","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     * Returns the patch number of the Version.","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"     * @return the patch number of the Version","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"     * Indicates whether the current Version is an early access Version.","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"     * @return true if the current Version is an early access Version, and false otherwise","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"     * Returns this Version object properly formatted in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"     * @return this Version object properly formatted in String format","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"arsatis"},"content":"     * Compares this Version object to another Version object.","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"arsatis"},"content":"     * @param other the other Version object to be compared","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"arsatis"},"content":"     * @return a positive value if this Version is newer than the other Version, and a negative value otherwise","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"arsatis"},"content":"     * Checks if this Version object is equal to another Version object.","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"arsatis"},"content":"     * @param obj the other Version object to be compared","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"arsatis"},"content":"     * @return true if this Version object is equal to the other Version object, and false otherwise","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":146,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this Version object.","lastModifiedDate":"2021-03-27"},{"lineNumber":147,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":148,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this Version object","lastModifiedDate":"2021-03-27"},{"lineNumber":149,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"arsatis":44,"gycc7253":1,"-":114}},{"path":"src/main/java/seedu/smartlib/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.core.index;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     * @param zeroBasedIndex a zero based index","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * Returns a zero-based index.","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * @return a zero-based index","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"     * Returns a one-based index.","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     * @return a one-based index","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     * @param zeroBasedIndex a zero-based index","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     * @return a new index using a zero-based index","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"     * @param oneBasedIndex a one-based index","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"     * @return a new index using a one-based index.","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"     * Checks if this index is equal to another index.","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"     * @param other the other index to be compared","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"     * @return true if this index is equal to the other index, and false otherwise","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"arsatis":26,"gycc7253":1,"-":53}},{"path":"src/main/java/seedu/smartlib/commons/core/name/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"package seedu.smartlib.commons.core.name;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":" * Represents a name in the SmartLib application.","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    private final String fullName;","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     * Returns this Name object in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     * @return this Name object in String format","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     * Checks if this Name object is equal to another Name object.","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     * @param other the other Name object to be compared","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     * @return true if this Name object is equal to the other Name object, and false otherwise","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this Name object.","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this Name object","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"arsatis":17,"GJ0407790":3,"gycc7253":1,"-":53}},{"path":"src/main/java/seedu/smartlib/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.exceptions;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * Represents an error during conversion of data from one format to another.","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"     * A constructor for the DataConversionException.","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"     * @param cause should contain relevant information on the cause(s) of failure.","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"arsatis":7,"gycc7253":1,"-":9}},{"path":"src/main/java/seedu/smartlib/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.exceptions;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"     * A constructor for the IllegalValueException.","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"     * @param message should contain relevant information on the failed constraint(s).","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     * A constructor for the IllegalValueException.","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * @param message should contain relevant information on the failed constraint(s).","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     * @param cause of the main exception.","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"arsatis":9,"gycc7253":1,"-":17}},{"path":"src/main/java/seedu/smartlib/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.util;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.MainApp;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * A container for App specific utility functions.","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     * @param imagePath path leading to the image","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     * @return an Image from the specified path","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * @param condition condition to be checked","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"     * @param condition condition to be checked","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     * @param errorMessage error message to be thrown if condition is false","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"arsatis":8,"gycc7253":2,"-":39}},{"path":"src/main/java/seedu/smartlib/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.util;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" * Utility methods related to Collections.","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     * @param items the collection of items to be checked","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * @param items the objects to be checked","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * @return true if any of the objects are non-null, and false otherwise","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"arsatis":7,"gycc7253":1,"-":33}},{"path":"src/main/java/seedu/smartlib/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.util;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.Config;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" * A class for accessing the Config file.","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     * Reads the Config file from the specified file path.","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     * @param configFilePath file path leading to the Config file","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     * @return an Optional containing a Config object","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * @throws DataConversionException if the file is not a Config file","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * Saves the current configurations to the Config file.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     * @param config a Config object storing the current configurations","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * @param configFilePath file path leading to the Config file","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     * @throws IOException if an error occurs during the saving process","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"arsatis":15,"gycc7253":3,"-":19}},{"path":"src/main/java/seedu/smartlib/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.util;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     * Indicates whether a file exists in the specified file path.","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     * @param file the specified file path.","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * @return true if a file exists in the specified file path, and false otherwise","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     * @return true if path can be converted into a Path object, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     * @param file the path leading to the file.","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"     * @param file the path leading to the file.","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     * @param file the path leading to the file.","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"     * Reads the data from a file.","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"     * Assumes the file exists.","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"     * @param file the path leading to the file.","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"     * @return data from the file, formatted as a String.","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"     * @throws IOException if the file or directory cannot be accessed.","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"     * @param file the path leading to the file.","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"arsatis"},"content":"     * @param content string to be written to the file.","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"arsatis"},"content":"     * @throws IOException if the file or directory cannot be accessed.","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"arsatis":26,"gycc7253":1,"-":81}},{"path":"src/main/java/seedu/smartlib/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.util;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.LogsCenter;","lastModifiedDate":"2021-02-19"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"arsatis":1,"gycc7253":3,"-":139}},{"path":"src/main/java/seedu/smartlib/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.util;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"Nanxi-Huang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     * @param sentence cannot be null.","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     * @param word cannot be null, cannot be empty, must be a single word.","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * @return true if the sentence contains the word, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"Nanxi-Huang"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"Nanxi-Huang"},"content":"     * Returns true if the {@code searchWords} contains the {@code word}.","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"Nanxi-Huang"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"Nanxi-Huang"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"Nanxi-Huang"},"content":"     *       containsAnyIgnoreCase(\"{ABc, def}\", \"abc\") \u003d\u003d true","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"Nanxi-Huang"},"content":"     *       containsAnyIgnoreCase(\"{ABc, def}\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"Nanxi-Huang"},"content":"     *       containsAnyIgnoreCase(\"{ABc, def}\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"Nanxi-Huang"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     * @param searchWords cannot be null.","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     * @param word cannot be null, cannot be empty, must be a single word.","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     * @return true if the searchWords contains the word, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"Nanxi-Huang"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"Nanxi-Huang"},"content":"    public static boolean containsAnyIgnoreCase(ArrayList\u003cString\u003e searchWords, String word) {","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"Nanxi-Huang"},"content":"        boolean isMatched \u003d false;","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"Nanxi-Huang"},"content":"        for (int i \u003d 0; i \u003c searchWords.size(); i++) {","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"Nanxi-Huang"},"content":"            isMatched \u003d containsWordIgnoreCase(searchWords.get(i), word);","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"Nanxi-Huang"},"content":"            if (isMatched \u003d\u003d true) {","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"Nanxi-Huang"},"content":"                break;","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"Nanxi-Huang"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"Nanxi-Huang"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"Nanxi-Huang"},"content":"        return isMatched;","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"     * @param t a Throwable object containing a message.","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     * @return the message of the t.","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"     * @param s the integer (in String format) to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"     * @return true if s represents a non-zero unsigned integer, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":102,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"arsatis":15,"Nanxi-Huang":22,"gycc7253":2,"-":64}},{"path":"src/main/java/seedu/smartlib/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.GuiSettings;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.CommandResult;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ReadOnlySmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.record.Record;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":" * API of the Logic component.","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * Returns the SmartLib.","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"     * @see seedu.smartlib.model.Model#getSmartLib()","lastModifiedDate":"2021-02-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"    ReadOnlySmartLib getSmartLib();","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":37,"author":{"gitId":"Nanxi-Huang"},"content":"    ObservableList\u003cReader\u003e getFilteredReaderList();","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"    /** Returns an unmodifiable view of the filtered list of books */","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"    ObservableList\u003cBook\u003e getFilteredBookList();","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"    /** Returns an unmodifiable view of the filtered list of records */","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"    ObservableList\u003cRecord\u003e getFilteredRecordList();","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     * Returns the user prefs\u0027 smartlib file path.","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"    Path getSmartLibFilePath();","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"arsatis":7,"Nanxi-Huang":1,"gycc7253":8,"-":36,"Andrewzhang217":8}},{"path":"src/main/java/seedu/smartlib/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.GuiSettings;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.LogsCenter;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.Command;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.CommandResult;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-19"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.parser.SmartLibParser;","lastModifiedDate":"2021-02-19"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-19"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ReadOnlySmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.record.Record;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.storage.Storage;","lastModifiedDate":"2021-02-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"    private final SmartLibParser smartLibParser;","lastModifiedDate":"2021-02-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"        smartLibParser \u003d new SmartLibParser();","lastModifiedDate":"2021-02-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     * @param commandText text which the LogicManager needs to parse.","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     * @throws CommandException if an error occurs during command execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     * @throws ParseException if an error occurs during the execution of the parser.","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"gycc7253"},"content":"        Command command \u003d smartLibParser.parseCommand(commandText);","lastModifiedDate":"2021-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"            storage.saveSmartLib(model.getSmartLib());","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"     * Returns an immutable copy of SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"     * @return an immutable copy of SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"    public ReadOnlySmartLib getSmartLib() {","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"gycc7253"},"content":"        return model.getSmartLib();","lastModifiedDate":"2021-02-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"     * Returns SmartLib\u0027s immutable list of readers.","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"     * @return SmartLib\u0027s immutable list of readers.","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"Nanxi-Huang"},"content":"    public ObservableList\u003cReader\u003e getFilteredReaderList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":84,"author":{"gitId":"Nanxi-Huang"},"content":"        return model.getFilteredReaderList();","lastModifiedDate":"2021-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"     * Returns SmartLib\u0027s immutable list of books.","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"     * @return SmartLib\u0027s immutable list of books","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"Andrewzhang217"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"Andrewzhang217"},"content":"    public ObservableList\u003cBook\u003e getFilteredBookList() {","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"Andrewzhang217"},"content":"        return model.getFilteredBookList();","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"Andrewzhang217"},"content":"     * Returns SmartLib\u0027s immutable list of books.","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"Andrewzhang217"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"Andrewzhang217"},"content":"     * @return SmartLib\u0027s immutable list of books","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"Andrewzhang217"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"Andrewzhang217"},"content":"    public ObservableList\u003cRecord\u003e getFilteredRecordList() {","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"Andrewzhang217"},"content":"        return model.getFilteredRecordList();","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"arsatis"},"content":"     * Returns the file path leading to SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"arsatis"},"content":"     * @return the file path leading to SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"arsatis"},"content":"    public Path getSmartLibFilePath() {","lastModifiedDate":"2021-03-07"},{"lineNumber":114,"author":{"gitId":"arsatis"},"content":"        return model.getSmartLibFilePath();","lastModifiedDate":"2021-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"arsatis"},"content":"     * Returns the current GUI settings of the user.","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"arsatis"},"content":"     * @return the current GUI settings of the user.","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"arsatis"},"content":"     * Updates the current GUI settings of the user.","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"arsatis"},"content":"     * @param guiSettings the new GUI settings of the user.","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"arsatis":44,"Nanxi-Huang":2,"gycc7253":16,"-":58,"Andrewzhang217":17}},{"path":"src/main/java/seedu/smartlib/logic/commands/AddBookCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_AUTHOR;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_BOOK;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_GENRE;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_ISBN;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_PUBLISHER;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"import java.util.Random;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Barcode;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":" * Adds a book to the registered book base.","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"public class AddBookCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"    public static final String COMMAND_WORD \u003d \"addbook\";","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a book to SmartLib\u0027s booklist. \"","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"            + PREFIX_BOOK + \"BOOKNAME \"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"            + PREFIX_AUTHOR + \"AUTHOR \"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"            + PREFIX_PUBLISHER + \"PUBLISHER \"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"            + PREFIX_ISBN + \"ISBN \"","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"            + PREFIX_GENRE + \"GENRE \";","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New book added: %1$s\";","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"    public static final String MESSAGE_DUPLICATE_BOOK \u003d \"This book already exists in the book base.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"    private final Book bookWithTempBarcode;","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"     * Creates an AddBookCommand to add the specified book.","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     * @param bookWithTempBarcode the book to be added to SmartLib\u0027s book base.","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"    public AddBookCommand(Book bookWithTempBarcode) {","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"        requireNonNull(bookWithTempBarcode);","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"        this.bookWithTempBarcode \u003d bookWithTempBarcode;","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     * @throws CommandException if an error occurs during command execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"        if (model.hasBook(bookWithTempBarcode)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"Andrewzhang217"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_BOOK);","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"Andrewzhang217"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"        model.addBook(new Book(bookWithTempBarcode.getName(), bookWithTempBarcode.getAuthor(),","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"                bookWithTempBarcode.getPublisher(), bookWithTempBarcode.getIsbn(),","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"                generateBarcode(model), bookWithTempBarcode.getGenre()));","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, bookWithTempBarcode));","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"    private Barcode generateBarcode(Model model) {","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"        int rv \u003d random.nextInt(Barcode.MAX_VALUE - Barcode.MIN_VALUE) + Barcode.MIN_VALUE;","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"        while (model.hasBookWithBarcode(new Barcode(rv))) {","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"            rv \u003d random.nextInt(Barcode.MAX_VALUE - Barcode.MIN_VALUE) + Barcode.MIN_VALUE;","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"        return new Barcode(rv);","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"     * Checks if this AddBookCommand is equal to another AddBookCommand.","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"     * @param other the other AddBookCommand to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"     * @return true if this AddBookCommand is equal to the other AddBookCommand, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"Andrewzhang217"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"Andrewzhang217"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"Andrewzhang217"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"Andrewzhang217"},"content":"                || (other instanceof AddBookCommand // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"                \u0026\u0026 bookWithTempBarcode.equals(((AddBookCommand) other).bookWithTempBarcode));","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"Andrewzhang217"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"arsatis":45,"Andrewzhang217":45}},{"path":"src/main/java/seedu/smartlib/logic/commands/AddReaderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_READER;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Nanxi-Huang"},"content":" * Adds a reader to the registered reader base.","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Nanxi-Huang"},"content":"public class AddReaderCommand extends Command {","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"Nanxi-Huang"},"content":"    public static final String COMMAND_WORD \u003d \"addreader\";","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Nanxi-Huang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a reader to the registered reader base. \"","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"Nanxi-Huang"},"content":"            + PREFIX_READER + \"NAME \"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"Nanxi-Huang"},"content":"            + PREFIX_READER + \"John Doe \"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"Nanxi-Huang"},"content":"            + PREFIX_TAG + \"1-year-membership \"","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"Nanxi-Huang"},"content":"            + PREFIX_TAG + \"vip\";","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"Nanxi-Huang"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New reader added: %1$s\";","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"Nanxi-Huang"},"content":"    public static final String MESSAGE_DUPLICATE_READER \u003d \"This reader already exists in the registered reader base\";","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"    private final Reader toAdd;","lastModifiedDate":"2021-02-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     * Creates an AddReaderCommand to add the specified {@code Reader}.","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     * @param reader the reader to be added to SmartLib\u0027s reader base.","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"Nanxi-Huang"},"content":"    public AddReaderCommand(Reader reader) {","lastModifiedDate":"2021-03-06"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"        requireNonNull(reader);","lastModifiedDate":"2021-02-19"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"        toAdd \u003d reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"     * @throws CommandException if an error occurs during command execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"Nanxi-Huang"},"content":"        if (model.hasReader(toAdd)) {","lastModifiedDate":"2021-03-06"},{"lineNumber":63,"author":{"gitId":"Nanxi-Huang"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_READER);","lastModifiedDate":"2021-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"Nanxi-Huang"},"content":"        model.addReader(toAdd);","lastModifiedDate":"2021-03-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"     * Checks if this AddReaderCommand is equal to another AddReaderCommand.","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     * @param other the other AddReaderCommand to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     * @return true if this AddReaderCommand is equal to the other AddReaderCommand, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"Nanxi-Huang"},"content":"                || (other instanceof AddReaderCommand // instanceof handles nulls","lastModifiedDate":"2021-03-06"},{"lineNumber":80,"author":{"gitId":"Nanxi-Huang"},"content":"                \u0026\u0026 toAdd.equals(((AddReaderCommand) other).toAdd));","lastModifiedDate":"2021-03-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"arsatis":17,"Nanxi-Huang":17,"gycc7253":11,"-":38}},{"path":"src/main/java/seedu/smartlib/logic/commands/BorrowCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-06"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_BOOK;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_READER;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.SmartLib;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Barcode;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.record.IncompleteRecord;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.Record;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"/**","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":" * Adds a record indicating that a reader borrowing a book.","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":" */","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"public class BorrowCommand extends Command {","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"    public static final String COMMAND_WORD \u003d \"borrow\";","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a record of a reader borrowing a book. \"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"            + \"Note that a book cannot be borrowed to multiple readers at the same time.\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"            + \"Note that readers may only borrow up to \" + SmartLib.QUOTA + \" books.\\n\"","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"            + \"Parameters: \" + PREFIX_BOOK + \"\u003cbook name\u003e \" + PREFIX_READER + \"\u003creader name\u003e\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_BOOK + \"The Hobbit \" + PREFIX_READER + \"Alex Yeoh\";","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New borrowing record added.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    public static final String MESSAGE_DUPLICATE_RECORD \u003d \"This record already exists in the registered record base.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    public static final String NO_READER_AND_BOOK_FOUND \u003d \"Sorry, we were unable to find \"","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"            + \"neither the book nor the reader which you have specified. Please check if you have spelled correctly.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"    public static final String NO_BOOK_FOUND \u003d \"Sorry, we could not find the \"","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"            + \"book which you have specified. Please check if you have spelled correctly.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"    public static final String NO_READER_FOUND \u003d \"Sorry, we could not find the \"","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"            + \"reader which you have specified. Please check if you have spelled correctly.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"    public static final String BOOK_ALREADY_BORROWED \u003d \"Sorry, the book is already borrowed by another reader.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"    public static final String READER_DISABLE_BORROWING \u003d \"Sorry, the reader has either reached the quota of books\"","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"            + \" that he/she can borrow, or is holding on to an overdue book.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"    public static final String UNABLE_TO_UPDATE_CODEBASE \u003d \"Sorry, an error has occurred with the codebase and we are\"","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"            + \" unable to update it.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"    private final IncompleteRecord incompleteRecord;","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     * Creates a BorrowCommand to add a record.","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     * @param incompleteRecord the record to be added to the Storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"    public BorrowCommand(IncompleteRecord incompleteRecord) {","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"        requireAllNonNull(incompleteRecord);","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"        this.incompleteRecord \u003d incompleteRecord;","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":50,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"    private void verifyNameRegistration(Model model) throws CommandException {","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"        if (!model.hasBook(incompleteRecord.getBookName()) \u0026\u0026 !model.hasReader(incompleteRecord.getReaderName())) {","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"gycc7253"},"content":"            throw new CommandException(NO_READER_AND_BOOK_FOUND);","lastModifiedDate":"2021-03-20"},{"lineNumber":54,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"        if (!model.hasBook(incompleteRecord.getBookName())) {","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"gycc7253"},"content":"            throw new CommandException(NO_BOOK_FOUND);","lastModifiedDate":"2021-03-20"},{"lineNumber":58,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"        if (!model.hasReader(incompleteRecord.getReaderName())) {","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"gycc7253"},"content":"            throw new CommandException(NO_READER_FOUND);","lastModifiedDate":"2021-03-20"},{"lineNumber":62,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"    private Record createProperRecord(Model model) {","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"        Barcode bookBarcode \u003d model.getBookBarcode(incompleteRecord.getBookName());","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"        return new Record(bookBarcode, incompleteRecord.getReaderName(), incompleteRecord.getDateBorrowed());","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"    private void verifyRecordIntegrity(Model model, Record properRecord) throws CommandException {","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"        if (model.hasRecord(properRecord)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_RECORD);","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"        if (model.isBookWithBarcodeBorrowed(properRecord.getBookBarcode())) {","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"gycc7253"},"content":"            throw new CommandException(BOOK_ALREADY_BORROWED);","lastModifiedDate":"2021-03-21"},{"lineNumber":77,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"        if (!model.canReaderBorrow(properRecord.getReaderName())) {","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"gycc7253"},"content":"            throw new CommandException(READER_DISABLE_BORROWING);","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"     * @throws CommandException if an error occurs during command execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"        requireAllNonNull(model);","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"        verifyNameRegistration(model);","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"        Record properRecord \u003d createProperRecord(model);","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"        verifyRecordIntegrity(model, properRecord);","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"arsatis"},"content":"        model.addRecord(properRecord);","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"        boolean editStatusResult \u003d model.borrowBook(properRecord.getReaderName(), properRecord.getBookBarcode());","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"gycc7253"},"content":"        if (!editStatusResult) {","lastModifiedDate":"2021-03-21"},{"lineNumber":102,"author":{"gitId":"gycc7253"},"content":"            throw new CommandException(UNABLE_TO_UPDATE_CODEBASE);","lastModifiedDate":"2021-03-21"},{"lineNumber":103,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":104,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"arsatis"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, properRecord));","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":107,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":108,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"arsatis"},"content":"     * Checks if this BorrowCommand is equal to another BorrowCommand.","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"arsatis"},"content":"     * @param other the other BorrowCommand to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"arsatis"},"content":"     * @return true if this BorrowCommand is equal to the other BorrowCommand, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":115,"author":{"gitId":"gycc7253"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"gycc7253"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":117,"author":{"gitId":"gycc7253"},"content":"                || (other instanceof BorrowCommand // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"arsatis"},"content":"                \u0026\u0026 incompleteRecord.equals(((BorrowCommand) other).incompleteRecord));","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":120,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"gycc7253"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"arsatis":75,"gycc7253":46}},{"path":"src/main/java/seedu/smartlib/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.SmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"Nanxi-Huang"},"content":" * Clears the SmartLib reader and book records .","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Nanxi-Huang"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"SmartLib has been cleared!\";","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"        model.setSmartLib(new SmartLib());","lastModifiedDate":"2021-02-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"arsatis":8,"Nanxi-Huang":2,"gycc7253":3,"-":16}},{"path":"src/main/java/seedu/smartlib/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"gycc7253":3,"-":17}},{"path":"src/main/java/seedu/smartlib/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"     * @param feedbackToUser a String containing the feedback that will be provided to the user.","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     * @param showHelp true if the command is a HelpCommand, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     * @param exit true if the command is an ExitCommand, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"     * @param feedbackToUser the feedback to be provided to the user.","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     * Returns the feedback to be provided to the user.","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     * @return the feedback to be provided to the user.","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     * Indicates whether the command is a HelpCommand.","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     * @return true if the command is a HelpCommand, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     * Indicates whether the command is an ExitCommand.","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"     * @return true if the command is an ExitCommand, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"     * Checks if this CommandResult is equal to another CommandResult.","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     * @param other the other CommandResult to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     * @return true if this CommandResult is equal to the other CommandResult, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this CommandResult.","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this CommandResult.","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"arsatis":32,"gycc7253":1,"-":70}},{"path":"src/main/java/seedu/smartlib/logic/commands/DeleteBookCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":" * Deletes a book identified using it\u0027s displayed index from SmartLib\u0027s registered book base.","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"public class DeleteBookCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"    public static final String COMMAND_WORD \u003d \"deletebook\";","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"            + \": Deletes the book identified by the index number used in the displayed book list.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"    public static final String MESSAGE_DELETE_BOOK_SUCCESS \u003d \"Deleted Book: %1$s\";","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * Creates an DeleteBookCommand to delete the specified book.","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * @param targetIndex index of the book to be deleted from SmartLib\u0027s book base.","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"GJ0407790"},"content":"    public DeleteBookCommand(Index targetIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"GJ0407790"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     * @throws CommandException if an error occurs during command execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"GJ0407790"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"GJ0407790"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"GJ0407790"},"content":"        List\u003cBook\u003e lastShownList \u003d model.getFilteredBookList();","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"GJ0407790"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"GJ0407790"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"GJ0407790"},"content":"        Book bookToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"GJ0407790"},"content":"        model.deleteBook(bookToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"GJ0407790"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_BOOK_SUCCESS, bookToDelete));","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"     * Checks if this DeleteBookCommand is equal to another DeleteBookCommand.","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     * @param other the other DeleteBookCommand to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"     * @return true if this DeleteBookCommand is equal to the other DeleteBookCommand, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"GJ0407790"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"GJ0407790"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"GJ0407790"},"content":"                || (other instanceof DeleteBookCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"GJ0407790"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteBookCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"GJ0407790"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"arsatis":20,"GJ0407790":53}},{"path":"src/main/java/seedu/smartlib/logic/commands/DeleteReaderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.Messages;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.index.Index;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":" * Deletes a reader identified using it\u0027s displayed index from SmartLib\u0027s registered reader base.","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Nanxi-Huang"},"content":"public class DeleteReaderCommand extends Command {","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Nanxi-Huang"},"content":"    public static final String COMMAND_WORD \u003d \"deletereader\";","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"            + \": Deletes the reader identified by the index number in the displayed reader list.\\n\"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"Nanxi-Huang"},"content":"    public static final String MESSAGE_DELETE_READER_SUCCESS \u003d \"Deleted Reader: %1$s\";","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * Creates an DeleteReaderCommand to delete the specified reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * @param targetIndex index of the reader to be deleted from SmartLib\u0027s reader base.","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"Nanxi-Huang"},"content":"    public DeleteReaderCommand(Index targetIndex) {","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     * @throws CommandException if an error occurs during command execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"Nanxi-Huang"},"content":"        List\u003cReader\u003e lastShownList \u003d model.getFilteredReaderList();","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"Nanxi-Huang"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_READER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"gycc7253"},"content":"        Reader readerToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-02-19"},{"lineNumber":55,"author":{"gitId":"Nanxi-Huang"},"content":"        model.deleteReader(readerToDelete);","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"Nanxi-Huang"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_READER_SUCCESS, readerToDelete));","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"     * Checks if this DeleteReaderCommand is equal to another DeleteReaderCommand.","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     * @param other the other DeleteReaderCommand to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"     * @return true if this DeleteReaderCommand is equal to the other DeleteReaderCommand, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"Nanxi-Huang"},"content":"                || (other instanceof DeleteReaderCommand // instanceof handles nulls","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"Nanxi-Huang"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteReaderCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"arsatis":21,"Nanxi-Huang":10,"gycc7253":7,"-":34}},{"path":"src/main/java/seedu/smartlib/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.model.Model.PREDICATE_SHOW_ALL_READERS;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"import java.util.Map;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.Messages;","lastModifiedDate":"2021-02-19"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.index.Index;","lastModifiedDate":"2021-02-19"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-05"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.util.CollectionUtil;","lastModifiedDate":"2021-02-19"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-19"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Address;","lastModifiedDate":"2021-02-19"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Email;","lastModifiedDate":"2021-02-19"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Phone;","lastModifiedDate":"2021-02-19"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.DateBorrowed;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.tag.Tag;","lastModifiedDate":"2021-02-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"Nanxi-Huang"},"content":" * Edits the details of an existing reader in the SmartLib.","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    public static final String COMMAND_WORD \u003d \"editreader\";","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the reader identified \"","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"            + \"by the index number used in the displayed reader list. \"","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"    public static final String MESSAGE_EDIT_READER_SUCCESS \u003d \"Edited Reader: %1$s\";","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"    public static final String MESSAGE_DUPLICATE_READER \u003d \"This reader already exists in SmartLib.\";","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"    private final EditReaderDescriptor editReaderDescriptor;","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"     * @param index of the reader in the filtered reader list to edit","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"Nanxi-Huang"},"content":"     * @param editReaderDescriptor details to edit the reader with","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"    public EditCommand(Index index, EditReaderDescriptor editReaderDescriptor) {","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"        requireNonNull(editReaderDescriptor);","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"        this.editReaderDescriptor \u003d new EditReaderDescriptor(editReaderDescriptor);","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"     * @throws CommandException if an error occurs during command execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"Nanxi-Huang"},"content":"        List\u003cReader\u003e lastShownList \u003d model.getFilteredReaderList();","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"Nanxi-Huang"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_READER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"gycc7253"},"content":"        Reader readerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-02-19"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"        Reader editedReader \u003d createEditedReader(readerToEdit, editReaderDescriptor);","lastModifiedDate":"2021-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"Nanxi-Huang"},"content":"        if (!readerToEdit.isSameReader(editedReader) \u0026\u0026 model.hasReader(editedReader)) {","lastModifiedDate":"2021-03-06"},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_READER);","lastModifiedDate":"2021-03-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"        model.setReader(readerToEdit, editedReader);","lastModifiedDate":"2021-03-07"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"        model.updateFilteredReaderList(PREDICATE_SHOW_ALL_READERS);","lastModifiedDate":"2021-03-07"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_READER_SUCCESS, editedReader));","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"arsatis"},"content":"     * Creates and returns a {@code Reader} with the details of {@code readerToEdit}","lastModifiedDate":"2021-03-07"},{"lineNumber":102,"author":{"gitId":"arsatis"},"content":"     * edited with {@code editReaderDescriptor}.","lastModifiedDate":"2021-03-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"arsatis"},"content":"    private static Reader createEditedReader(Reader readerToEdit, EditReaderDescriptor editReaderDescriptor) {","lastModifiedDate":"2021-03-07"},{"lineNumber":105,"author":{"gitId":"gycc7253"},"content":"        assert readerToEdit !\u003d null;","lastModifiedDate":"2021-02-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"arsatis"},"content":"        Name updatedName \u003d editReaderDescriptor.getName().orElse(readerToEdit.getName());","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"arsatis"},"content":"        Phone updatedPhone \u003d editReaderDescriptor.getPhone().orElse(readerToEdit.getPhone());","lastModifiedDate":"2021-03-07"},{"lineNumber":109,"author":{"gitId":"arsatis"},"content":"        Email updatedEmail \u003d editReaderDescriptor.getEmail().orElse(readerToEdit.getEmail());","lastModifiedDate":"2021-03-07"},{"lineNumber":110,"author":{"gitId":"arsatis"},"content":"        Address updatedAddress \u003d editReaderDescriptor.getAddress().orElse(readerToEdit.getAddress());","lastModifiedDate":"2021-03-07"},{"lineNumber":111,"author":{"gitId":"arsatis"},"content":"        Set\u003cTag\u003e updatedTags \u003d editReaderDescriptor.getTags().orElse(readerToEdit.getTags());","lastModifiedDate":"2021-03-07"},{"lineNumber":112,"author":{"gitId":"arsatis"},"content":"        Map\u003cBook, DateBorrowed\u003e updatedBorrows \u003d editReaderDescriptor.getBorrows().orElse(readerToEdit.getBorrows());","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"gycc7253"},"content":"        return new Reader(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatedBorrows);","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"arsatis"},"content":"     * Checks if this EditCommand is equal to another EditCommand.","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"arsatis"},"content":"     * @param other the other EditCommand to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"arsatis"},"content":"     * @return true if this EditCommand is equal to the other EditCommand, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"arsatis"},"content":"                \u0026\u0026 editReaderDescriptor.equals(e.editReaderDescriptor);","lastModifiedDate":"2021-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"Nanxi-Huang"},"content":"     * Stores the details to edit the reader with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"Nanxi-Huang"},"content":"     * corresponding field value of the reader.","lastModifiedDate":"2021-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"arsatis"},"content":"    public static class EditReaderDescriptor {","lastModifiedDate":"2021-03-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"arsatis"},"content":"        private Map\u003cBook, DateBorrowed\u003e borrows;","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"arsatis"},"content":"        /**","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"arsatis"},"content":"         * A constructor for the EditReaderDescriptor.","lastModifiedDate":"2021-03-27"},{"lineNumber":155,"author":{"gitId":"arsatis"},"content":"         */","lastModifiedDate":"2021-03-27"},{"lineNumber":156,"author":{"gitId":"arsatis"},"content":"        public EditReaderDescriptor() {}","lastModifiedDate":"2021-03-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"arsatis"},"content":"         *","lastModifiedDate":"2021-03-27"},{"lineNumber":162,"author":{"gitId":"arsatis"},"content":"         * @param toCopy a copy of the EditReaderDescriptor.","lastModifiedDate":"2021-03-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"arsatis"},"content":"        public EditReaderDescriptor(EditReaderDescriptor toCopy) {","lastModifiedDate":"2021-03-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"arsatis"},"content":"         *","lastModifiedDate":"2021-03-27"},{"lineNumber":175,"author":{"gitId":"arsatis"},"content":"         * @return true if at least one field is edited, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"arsatis"},"content":"        /**","lastModifiedDate":"2021-03-27"},{"lineNumber":182,"author":{"gitId":"arsatis"},"content":"         * Updates the name of this reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":183,"author":{"gitId":"arsatis"},"content":"         *","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"arsatis"},"content":"         * @param name the new name of this reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"arsatis"},"content":"         */","lastModifiedDate":"2021-03-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"arsatis"},"content":"        /**","lastModifiedDate":"2021-03-27"},{"lineNumber":191,"author":{"gitId":"arsatis"},"content":"         * Returns the name of this reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":192,"author":{"gitId":"arsatis"},"content":"         *","lastModifiedDate":"2021-03-27"},{"lineNumber":193,"author":{"gitId":"arsatis"},"content":"         * @return an Optional containing the name of this reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":194,"author":{"gitId":"arsatis"},"content":"         */","lastModifiedDate":"2021-03-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"arsatis"},"content":"        /**","lastModifiedDate":"2021-03-27"},{"lineNumber":200,"author":{"gitId":"arsatis"},"content":"         * Updates the phone number of this reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":201,"author":{"gitId":"arsatis"},"content":"         *","lastModifiedDate":"2021-03-27"},{"lineNumber":202,"author":{"gitId":"arsatis"},"content":"         * @param phone the new phone number of this reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":203,"author":{"gitId":"arsatis"},"content":"         */","lastModifiedDate":"2021-03-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"arsatis"},"content":"        /**","lastModifiedDate":"2021-03-27"},{"lineNumber":209,"author":{"gitId":"arsatis"},"content":"         * Returns the phone number of this reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":210,"author":{"gitId":"arsatis"},"content":"         *","lastModifiedDate":"2021-03-27"},{"lineNumber":211,"author":{"gitId":"arsatis"},"content":"         * @return an Optional containing the phone number of this reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":212,"author":{"gitId":"arsatis"},"content":"         */","lastModifiedDate":"2021-03-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"arsatis"},"content":"        /**","lastModifiedDate":"2021-03-27"},{"lineNumber":218,"author":{"gitId":"arsatis"},"content":"         * Updates the email of this reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":219,"author":{"gitId":"arsatis"},"content":"         *","lastModifiedDate":"2021-03-27"},{"lineNumber":220,"author":{"gitId":"arsatis"},"content":"         * @param email the new email of this reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":221,"author":{"gitId":"arsatis"},"content":"         */","lastModifiedDate":"2021-03-27"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"arsatis"},"content":"        /**","lastModifiedDate":"2021-03-27"},{"lineNumber":227,"author":{"gitId":"arsatis"},"content":"         * Returns the email of this reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":228,"author":{"gitId":"arsatis"},"content":"         *","lastModifiedDate":"2021-03-27"},{"lineNumber":229,"author":{"gitId":"arsatis"},"content":"         * @return an Optional containing the email of this reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":230,"author":{"gitId":"arsatis"},"content":"         */","lastModifiedDate":"2021-03-27"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"arsatis"},"content":"        /**","lastModifiedDate":"2021-03-27"},{"lineNumber":236,"author":{"gitId":"arsatis"},"content":"         * Updates the address of this reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":237,"author":{"gitId":"arsatis"},"content":"         *","lastModifiedDate":"2021-03-27"},{"lineNumber":238,"author":{"gitId":"arsatis"},"content":"         * @param address the new address of this reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":239,"author":{"gitId":"arsatis"},"content":"         */","lastModifiedDate":"2021-03-27"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"arsatis"},"content":"        /**","lastModifiedDate":"2021-03-27"},{"lineNumber":245,"author":{"gitId":"arsatis"},"content":"         * Returns the address of this reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":246,"author":{"gitId":"arsatis"},"content":"         *","lastModifiedDate":"2021-03-27"},{"lineNumber":247,"author":{"gitId":"arsatis"},"content":"         * @return an Optional containing the address of this reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":248,"author":{"gitId":"arsatis"},"content":"         */","lastModifiedDate":"2021-03-27"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":254,"author":{"gitId":"arsatis"},"content":"         * Sets {@code tags} to this reader\u0027s {@code tags}.","lastModifiedDate":"2021-03-27"},{"lineNumber":255,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":256,"author":{"gitId":"arsatis"},"content":"         *","lastModifiedDate":"2021-03-27"},{"lineNumber":257,"author":{"gitId":"arsatis"},"content":"         * @param tags tags to be set to this reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":258,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":264,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":266,"author":{"gitId":"arsatis"},"content":"         *","lastModifiedDate":"2021-03-27"},{"lineNumber":267,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"gycc7253"},"content":"        /**","lastModifiedDate":"2021-03-23"},{"lineNumber":274,"author":{"gitId":"arsatis"},"content":"         * Sets {@code borrows} to this reader\u0027s {@code borrows}.","lastModifiedDate":"2021-03-27"},{"lineNumber":275,"author":{"gitId":"arsatis"},"content":"         * A defensive copy of {@code borrows} is used internally.","lastModifiedDate":"2021-03-27"},{"lineNumber":276,"author":{"gitId":"arsatis"},"content":"         *","lastModifiedDate":"2021-03-27"},{"lineNumber":277,"author":{"gitId":"arsatis"},"content":"         * @param borrows borrows to be set to this reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":278,"author":{"gitId":"gycc7253"},"content":"         */","lastModifiedDate":"2021-03-23"},{"lineNumber":279,"author":{"gitId":"arsatis"},"content":"        public void setBorrows(Map\u003cBook, DateBorrowed\u003e borrows) {","lastModifiedDate":"2021-03-27"},{"lineNumber":280,"author":{"gitId":"gycc7253"},"content":"            this.borrows \u003d (borrows !\u003d null) ? new HashMap\u003c\u003e(borrows) : null;","lastModifiedDate":"2021-03-23"},{"lineNumber":281,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":282,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":283,"author":{"gitId":"gycc7253"},"content":"        /**","lastModifiedDate":"2021-03-23"},{"lineNumber":284,"author":{"gitId":"arsatis"},"content":"         * Returns an unmodifiable borrow set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-27"},{"lineNumber":285,"author":{"gitId":"gycc7253"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-03-23"},{"lineNumber":286,"author":{"gitId":"arsatis"},"content":"         *","lastModifiedDate":"2021-03-27"},{"lineNumber":287,"author":{"gitId":"arsatis"},"content":"         * Returns {@code Optional#empty()} if {@code borrows} is null.","lastModifiedDate":"2021-03-27"},{"lineNumber":288,"author":{"gitId":"gycc7253"},"content":"         */","lastModifiedDate":"2021-03-23"},{"lineNumber":289,"author":{"gitId":"arsatis"},"content":"        public Optional\u003cMap\u003cBook, DateBorrowed\u003e\u003e getBorrows() {","lastModifiedDate":"2021-03-27"},{"lineNumber":290,"author":{"gitId":"gycc7253"},"content":"            return (borrows !\u003d null) ? Optional.of(Collections.unmodifiableMap(borrows)) : Optional.empty();","lastModifiedDate":"2021-03-23"},{"lineNumber":291,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":292,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":293,"author":{"gitId":"arsatis"},"content":"        /**","lastModifiedDate":"2021-03-27"},{"lineNumber":294,"author":{"gitId":"arsatis"},"content":"         * Checks if this EditReaderDescriptor is equal to another EditReaderDescriptor.","lastModifiedDate":"2021-03-27"},{"lineNumber":295,"author":{"gitId":"arsatis"},"content":"         *","lastModifiedDate":"2021-03-27"},{"lineNumber":296,"author":{"gitId":"arsatis"},"content":"         * @param other the other EditReaderDescriptor to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":297,"author":{"gitId":"arsatis"},"content":"         * @return true if this EditReaderDescriptor is equal to the other EditReaderDescriptor, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":298,"author":{"gitId":"arsatis"},"content":"         */","lastModifiedDate":"2021-03-27"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":306,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":307,"author":{"gitId":"arsatis"},"content":"            if (!(other instanceof EditReaderDescriptor)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":312,"author":{"gitId":"arsatis"},"content":"            EditReaderDescriptor e \u003d (EditReaderDescriptor) other;","lastModifiedDate":"2021-03-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":320,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":322,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"arsatis":115,"Nanxi-Huang":7,"GJ0407790":1,"gycc7253":32,"-":168}},{"path":"src/main/java/seedu/smartlib/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting SmartLib as requested ...\";","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"arsatis":7,"gycc7253":2,"-":16}},{"path":"src/main/java/seedu/smartlib/logic/commands/FindBookCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.commons.core.Messages;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.book.BookNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":" * Finds and lists all books in SmartLib whose name contains any of the argument keywords.","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"public class FindBookCommand extends Command {","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"    public static final String COMMAND_WORD \u003d \"findbook\";","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all books whose names contain any of \"","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"            + \"Example: \" + COMMAND_WORD + \"Harry Potter\";","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"    private final BookNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     * Creates an FindBookCommand to find the specified book(s).","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * @param predicate a Predicate used to find the specified book(s).","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"    public FindBookCommand(BookNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"        model.updateFilteredBookList(predicate);","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"                String.format(Messages.MESSAGE_BOOKS_LISTED_OVERVIEW, model.getFilteredBookList().size()));","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     * Checks if this FindBookCommand is equal to another FindBookCommand.","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     * @param other the other FindBookCommand to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     * @return true if this FindBookCommand is equal to the other FindBookCommand, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":"                || (other instanceof FindBookCommand // instanceof handles nulls","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"Andrewzhang217"},"content":"                \u0026\u0026 predicate.equals(((FindBookCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"Andrewzhang217"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"arsatis":18,"Andrewzhang217":42}},{"path":"src/main/java/seedu/smartlib/logic/commands/FindReaderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.Messages;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"Nanxi-Huang"},"content":" * Finds and lists all readers in SmartLib whose name contains any of the argument keywords.","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"public class FindReaderCommand extends Command {","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    public static final String COMMAND_WORD \u003d \"findreader\";","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all readers whose names contain any of \"","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"            + \"To find a reader with a certain tag, use \\\"findreader \" + PREFIX_TAG + \"TAG [MORE_TAGS]\\\" instead.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"            + \"Note that the current version of our app does not support the searching of \"","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"            + \"keywords and tags within the same command.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"    private final Predicate\u003cReader\u003e predicate;","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     * Creates an FindReaderCommand to find the specified reader(s).","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     * @param predicate a Predicate used to find the specified reader(s).","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"    public FindReaderCommand(Predicate\u003cReader\u003e predicate) {","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"        model.updateFilteredReaderList(predicate);","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"                String.format(Messages.MESSAGE_READERS_LISTED_OVERVIEW, model.getFilteredReaderList().size()));","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     * Checks if this FindReaderCommand is equal to another FindReaderCommand.","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"     * @param other the other FindReaderCommand to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"     * @return true if this FindReaderCommand is equal to the other FindReaderCommand, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"                || (other instanceof FindReaderCommand // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"                \u0026\u0026 predicate.equals(((FindReaderCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"arsatis":34,"Nanxi-Huang":1,"gycc7253":3,"-":28}},{"path":"src/main/java/seedu/smartlib/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"arsatis":7,"gycc7253":2,"-":19}},{"path":"src/main/java/seedu/smartlib/logic/commands/ListBookCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.model.Model.PREDICATE_SHOW_ALL_BOOKS;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":" * Lists all books in SmartLib to the user.","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"public class ListBookCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"    public static final String COMMAND_WORD \u003d \"listbook\";","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all books\";","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"        model.updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"arsatis":7,"Andrewzhang217":23}},{"path":"src/main/java/seedu/smartlib/logic/commands/ListReaderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.model.Model.PREDICATE_SHOW_ALL_READERS;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * Lists all readers in SmartLib to the user.","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"public class ListReaderCommand extends Command {","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    public static final String COMMAND_WORD \u003d \"listreader\";","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all readers\";","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"        model.updateFilteredReaderList(PREDICATE_SHOW_ALL_READERS);","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"arsatis":13,"gycc7253":2,"-":15}},{"path":"src/main/java/seedu/smartlib/logic/commands/ListRecordCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.model.Model.PREDICATE_SHOW_ALL_RECORDS;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":" * Lists all records in SmartLib to the user.","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"public class ListRecordCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"    public static final String COMMAND_WORD \u003d \"listrecord\";","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all records\";","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"        model.updateFilteredRecordList(PREDICATE_SHOW_ALL_RECORDS);","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Andrewzhang217":29}},{"path":"src/main/java/seedu/smartlib/logic/commands/ReturnCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_BOOK;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_READER;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.model.SmartLib.HOURS_BORROW_ALLOWED;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"import java.time.Duration;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Barcode;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.record.Cost;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.record.IncompleteRecord;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.Record;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":" * Updates a record in the record base to indicate that a reader has returned his or her book.","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"public class ReturnCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"    public static final String COMMAND_WORD \u003d \"return\";","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Returns the book borrowed by the reader.\\n\"","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"            + \"Parameters: \" + PREFIX_BOOK + \"\u003cbook name\u003e \" + PREFIX_READER + \"\u003creader name\u003e\\n\"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_BOOK + \"The Hobbit \" + PREFIX_READER + \"Alex Yeoh\";","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Record marked as returned.\\n\";","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":"    public static final String MESSAGE_COST \u003d \"The total cost is $%.2f\";","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"    public static final String MESSAGE_TOTAL_HOURS_DUE \u003d \"The book is overdue by %d hours.\\n\";","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"    public static final String MESSAGE_NO_SUCH_RECORD_FOUND \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"            \"No such record found. The book has either been returned, or was never borrowed by the reader.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"    public static final String NO_READER_AND_BOOK_FOUND \u003d \"Sorry, we were unable to find \"","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"            + \"neither the book nor the reader which you have specified. Please check if you have spelled correctly.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"    public static final String NO_BOOK_FOUND \u003d \"Sorry, we could not find the \"","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"            + \"book which you have specified. Please check if you have spelled correctly.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"    public static final String NO_READER_FOUND \u003d \"Sorry, we could not find the \"","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"            + \"reader which you have specified. Please check if you have spelled correctly.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    public static final String UNABLE_TO_UPDATE_CODEBASE \u003d \"Sorry, an error has occurred with the codebase and we are\"","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"            + \" unable to update it.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"    private final IncompleteRecord incompleteRecord;","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     * Creates a ReturnCommand to add a record.","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     * @param incompleteRecord record to be added to the Storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"    public ReturnCommand(IncompleteRecord incompleteRecord) {","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"        requireAllNonNull(incompleteRecord);","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"        this.incompleteRecord \u003d incompleteRecord;","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"    private void verifyNameRegistration(Model model) throws CommandException {","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"        if (!model.hasBook(incompleteRecord.getBookName()) \u0026\u0026 !model.hasReader(incompleteRecord.getReaderName())) {","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"            throw new CommandException(NO_READER_AND_BOOK_FOUND);","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"        if (!model.hasBook(incompleteRecord.getBookName())) {","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"            throw new CommandException(NO_BOOK_FOUND);","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"        if (!model.hasReader(incompleteRecord.getReaderName())) {","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"            throw new CommandException(NO_READER_FOUND);","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"    private Record createProperRecord(Model model) {","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"        Barcode bookBarcode \u003d model.getBookBarcodeForReturn(incompleteRecord.getBookName(),","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"                incompleteRecord.getReaderName());","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"GJ0407790"},"content":"        return new Record(bookBarcode, incompleteRecord.getReaderName(), incompleteRecord.getDateReturned());","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"GJ0407790"},"content":"    private boolean isOverdue(Record r) {","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"GJ0407790"},"content":"        Duration duration \u003d r.getBorrowDuration();","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"GJ0407790"},"content":"        return ((int) duration.toHours()) \u003e HOURS_BORROW_ALLOWED;","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"GJ0407790"},"content":"    private String getSuccessMessage(Record r) {","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"GJ0407790"},"content":"        if (isOverdue(r)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"GJ0407790"},"content":"            Duration duration \u003d r.getBorrowDuration();","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"GJ0407790"},"content":"            int overdueHours \u003d ((int) duration.toHours()) - HOURS_BORROW_ALLOWED;","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"GJ0407790"},"content":"            Cost cost \u003d new Cost(overdueHours);","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"GJ0407790"},"content":"            return MESSAGE_SUCCESS + String.format(MESSAGE_TOTAL_HOURS_DUE, overdueHours)","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"GJ0407790"},"content":"                    + String.format(MESSAGE_COST, cost.getCost());","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"GJ0407790"},"content":"        } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"GJ0407790"},"content":"            return MESSAGE_SUCCESS;","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"     * @throws CommandException if an error occurs during command execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"gycc7253"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"gycc7253"},"content":"        requireAllNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"arsatis"},"content":"        verifyNameRegistration(model);","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"arsatis"},"content":"        Record properRecord \u003d createProperRecord(model);","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"arsatis"},"content":"        if (!model.hasRecord(properRecord)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"arsatis"},"content":"            return new CommandResult(String.format(MESSAGE_NO_SUCH_RECORD_FOUND, properRecord));","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"arsatis"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"GJ0407790"},"content":"        Record completeRecord \u003d model.markRecordAsReturned(properRecord);","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"arsatis"},"content":"        boolean editStatusResult \u003d model.returnBook(properRecord.getReaderName(), properRecord.getBookBarcode());","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"arsatis"},"content":"        if (!editStatusResult) {","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"arsatis"},"content":"            throw new CommandException(UNABLE_TO_UPDATE_CODEBASE);","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"arsatis"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"GJ0407790"},"content":"        return new CommandResult(String.format(getSuccessMessage(completeRecord), properRecord));","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":119,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"arsatis"},"content":"     * Checks if this ReturnCommand is equal to another ReturnCommand.","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"arsatis"},"content":"     * @param other the other ReturnCommand to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"arsatis"},"content":"     * @return true if this ReturnCommand is equal to the other ReturnCommand, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"gycc7253"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"gycc7253"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"gycc7253"},"content":"                || (other instanceof ReturnCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":129,"author":{"gitId":"arsatis"},"content":"                \u0026\u0026 incompleteRecord.equals(((ReturnCommand) other).incompleteRecord));","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":131,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"gycc7253"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"arsatis":70,"GJ0407790":29,"gycc7253":33}},{"path":"src/main/java/seedu/smartlib/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands.exceptions;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.logic.commands.Command;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"     * A constructor for the CommandException.","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"     * @param message should contain relevant information on the failed constraint(s).","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     * @param message a String containing the details of the error.","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"     * @param cause cause of the error.","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"arsatis":11,"gycc7253":1,"-":17}},{"path":"src/main/java/seedu/smartlib/logic/parser/AddBookCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_AUTHOR;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_BOOK;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_GENRE;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_ISBN;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_PUBLISHER;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.logic.commands.AddBookCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.book.Author;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Barcode;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.model.book.Genre;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.book.Isbn;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.book.Publisher;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":" * Parses input arguments and creates a new AddBookCommand object.","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"public class AddBookCommandParser implements Parser\u003cAddBookCommand\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"     * Parses the given {@code String} of arguments in the context of the AddBookCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     * and returns an AddBookCommand object for execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     * @param args arguments given in the user input.","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * @return an AddBookCommand object required for execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"    public AddBookCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"Nanxi-Huang"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_BOOK, PREFIX_AUTHOR,","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"Nanxi-Huang"},"content":"                        PREFIX_PUBLISHER, PREFIX_ISBN, PREFIX_GENRE);","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"Nanxi-Huang"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_BOOK, PREFIX_AUTHOR, PREFIX_PUBLISHER, PREFIX_ISBN, PREFIX_GENRE)","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddBookCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"        Name bookName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_BOOK).get());","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"        Author author \u003d ParserUtil.parseAuthor(argMultimap.getValue(PREFIX_AUTHOR).get());","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"        Publisher publisher \u003d ParserUtil.parsePublisher(argMultimap.getValue(PREFIX_PUBLISHER).get());","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"        Isbn isbn \u003d ParserUtil.parseIsbn(argMultimap.getValue(PREFIX_ISBN).get());","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"Nanxi-Huang"},"content":"        Genre genre \u003d ParserUtil.parseGenre(argMultimap.getValue(PREFIX_GENRE).get());","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"        Book bookWithTempBarcode \u003d new Book(bookName, author, publisher, isbn,","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"                new Barcode(Barcode.TEMP_BARCODE_VALUE), genre);","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"        return new AddBookCommand(bookWithTempBarcode);","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"Andrewzhang217"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"Andrewzhang217"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"     * @param argumentMultimap a map containing the args.","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     * @param prefixes prefixes to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"     * @return true if none of the prefixes contains empty values, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"Andrewzhang217"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"Andrewzhang217"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"Andrewzhang217"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"arsatis":17,"Nanxi-Huang":6,"Andrewzhang217":46}},{"path":"src/main/java/seedu/smartlib/logic/parser/AddReaderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_READER;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.logic.commands.AddReaderCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-19"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.Address;","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.Email;","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.Phone;","lastModifiedDate":"2021-02-19"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.tag.Tag;","lastModifiedDate":"2021-02-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":" * Parses input arguments and creates a new AddReaderCommand object.","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"Nanxi-Huang"},"content":"public class AddReaderCommandParser implements Parser\u003cAddReaderCommand\u003e {","lastModifiedDate":"2021-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"Nanxi-Huang"},"content":"     * Parses the given {@code String} of arguments in the context of the AddReaderCommand","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"Nanxi-Huang"},"content":"     * and returns an AddReaderCommand object for execution.","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * @param args arguments given in the user input.","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     * @return an AddReaderCommand object required for execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"Nanxi-Huang"},"content":"    public AddReaderCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"Nanxi-Huang"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_READER, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"Nanxi-Huang"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_READER, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"Nanxi-Huang"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddReaderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"Nanxi-Huang"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_READER).get());","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"gycc7253"},"content":"        Reader reader \u003d new Reader(name, phone, email, address, tagList, new HashMap\u003c\u003e());","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"Nanxi-Huang"},"content":"        return new AddReaderCommand(reader);","lastModifiedDate":"2021-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"     * @param argumentMultimap a map containing the args.","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"     * @param prefixes prefixes to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     * @return true if none of the prefixes contains empty values, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"arsatis":12,"Nanxi-Huang":12,"GJ0407790":1,"gycc7253":11,"-":32}},{"path":"src/main/java/seedu/smartlib/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"     * @param prefix the given prefix.","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"     * @return an Optional containing the last value of the given prefix.","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     * @param prefix the given prefix.","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     * @return all values of the given prefix.","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"     * @return the preamble (text before the first valid prefix).","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"arsatis":9,"gycc7253":1,"-":59}},{"path":"src/main/java/seedu/smartlib/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"     * @param argsString the given arguments string.","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     * @param prefix the given prefix to search.","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     * @param fromIndex the specified index to start the search from.","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     * @return the index of the first occurrence of prefix in argsString starting from the specified index.","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":120,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"arsatis"},"content":"     * @param argsString the given arguments.","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"arsatis"},"content":"     * @param currentPrefixPosition the current position of the prefix in the argsString.","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"arsatis"},"content":"     * @param nextPrefixPosition the next position of a prefix in the argsString.","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"arsatis"},"content":"     * @return the trimmed value of the argument in the arguments string specified by currentPrefixPosition.","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"arsatis"},"content":"        /**","lastModifiedDate":"2021-03-27"},{"lineNumber":145,"author":{"gitId":"arsatis"},"content":"         * Constructor for the PrefixPosition class.","lastModifiedDate":"2021-03-27"},{"lineNumber":146,"author":{"gitId":"arsatis"},"content":"         *","lastModifiedDate":"2021-03-27"},{"lineNumber":147,"author":{"gitId":"arsatis"},"content":"         * @param prefix the given prefix.","lastModifiedDate":"2021-03-27"},{"lineNumber":148,"author":{"gitId":"arsatis"},"content":"         * @param startPosition the initial position of the prefix.","lastModifiedDate":"2021-03-27"},{"lineNumber":149,"author":{"gitId":"arsatis"},"content":"         */","lastModifiedDate":"2021-03-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":155,"author":{"gitId":"arsatis"},"content":"        /**","lastModifiedDate":"2021-03-27"},{"lineNumber":156,"author":{"gitId":"arsatis"},"content":"         * Returns the initial position of the prefix.","lastModifiedDate":"2021-03-27"},{"lineNumber":157,"author":{"gitId":"arsatis"},"content":"         *","lastModifiedDate":"2021-03-27"},{"lineNumber":158,"author":{"gitId":"arsatis"},"content":"         * @return the initial position of the prefix.","lastModifiedDate":"2021-03-27"},{"lineNumber":159,"author":{"gitId":"arsatis"},"content":"         */","lastModifiedDate":"2021-03-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":164,"author":{"gitId":"arsatis"},"content":"        /**","lastModifiedDate":"2021-03-27"},{"lineNumber":165,"author":{"gitId":"arsatis"},"content":"         * Returns the prefix.","lastModifiedDate":"2021-03-27"},{"lineNumber":166,"author":{"gitId":"arsatis"},"content":"         *","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"arsatis"},"content":"         * @return the prefix.","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"arsatis"},"content":"         */","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":172,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"arsatis":27,"gycc7253":1,"-":147}},{"path":"src/main/java/seedu/smartlib/logic/parser/BorrowCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_BOOK;","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_READER;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.BorrowCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.DateBorrowed;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.record.IncompleteRecord;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"/**","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":" * Parses input arguments and creates a new {@code BorrowCommand} object.","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":" */","lastModifiedDate":"2021-03-06"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"public class BorrowCommandParser implements Parser\u003cBorrowCommand\u003e {","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code BorrowCommand}","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"     * and returns a {@code BorrowCommand} object for execution.","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     * @param args arguments given in the user input.","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     * @return a BorrowCommand object required for execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"    public BorrowCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_BOOK, PREFIX_READER);","lastModifiedDate":"2021-03-06"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_BOOK, PREFIX_READER)","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, BorrowCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"        Name bookName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_BOOK).get());","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"        Name readerName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_READER).get());","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"        DateBorrowed dateBorrowed \u003d new DateBorrowed(LocalDateTime.now());","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"        IncompleteRecord record \u003d new IncompleteRecord(bookName, readerName, dateBorrowed);","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"gycc7253"},"content":"        return new BorrowCommand(record);","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"gycc7253"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     * @param argumentMultimap a map containing the args.","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     * @param prefixes prefixes to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     * @return true if none of the prefixes contains empty values, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"gycc7253"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"gycc7253"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"gycc7253"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"arsatis":14,"GJ0407790":2,"gycc7253":41}},{"path":"src/main/java/seedu/smartlib/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands.","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"    public static final Prefix PREFIX_READER \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"    public static final Prefix PREFIX_BOOK \u003d new Prefix(\"b/\");","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    public static final Prefix PREFIX_AUTHOR \u003d new Prefix(\"a/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"    public static final Prefix PREFIX_PUBLISHER \u003d new Prefix(\"p/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"    public static final Prefix PREFIX_ISBN \u003d new Prefix(\"i/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Nanxi-Huang"},"content":"    public static final Prefix PREFIX_GENRE \u003d new Prefix(\"g/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"arsatis":1,"Nanxi-Huang":1,"gycc7253":3,"-":13,"Andrewzhang217":3}},{"path":"src/main/java/seedu/smartlib/logic/parser/DeleteBookCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.logic.commands.DeleteBookCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * Parses input arguments and creates a new DeleteBookCommand object.","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"public class DeleteBookCommandParser implements Parser\u003cDeleteBookCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteBookCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"     * and returns a DeleteBookCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     * @param args arguments given in the user input.","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     * @return a DeleteBookCommand object required for execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"    public DeleteBookCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"            return new DeleteBookCommand(index);","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteBookCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"arsatis":5,"GJ0407790":28}},{"path":"src/main/java/seedu/smartlib/logic/parser/DeleteReaderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.index.Index;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.logic.commands.DeleteReaderCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * Parses input arguments and creates a new DeleteReaderCommand object.","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"Nanxi-Huang"},"content":"public class DeleteReaderCommandParser implements Parser\u003cDeleteReaderCommand\u003e {","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteReaderCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     * and returns a DeleteReaderCommand object for execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     * @param args arguments given in the user input.","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     * @return a DeleteReaderCommand object required for execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"Nanxi-Huang"},"content":"    public DeleteReaderCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":25,"author":{"gitId":"Nanxi-Huang"},"content":"            return new DeleteReaderCommand(index);","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"Nanxi-Huang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteReaderCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"arsatis":7,"Nanxi-Huang":5,"gycc7253":4,"-":16}},{"path":"src/main/java/seedu/smartlib/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_READER;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.index.Index;","lastModifiedDate":"2021-02-19"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.EditCommand;","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.logic.commands.EditCommand.EditReaderDescriptor;","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-19"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.tag.Tag;","lastModifiedDate":"2021-02-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":" * Parses input arguments and creates a new EditCommand object.","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     * @param args arguments given in the user input.","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * @return an EditCommand object required for execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"Nanxi-Huang"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_READER, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"        EditCommand.EditReaderDescriptor editReaderDescriptor \u003d new EditReaderDescriptor();","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"Nanxi-Huang"},"content":"        if (argMultimap.getValue(PREFIX_READER).isPresent()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"Nanxi-Huang"},"content":"            editReaderDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_READER).get()));","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"            editReaderDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"            editReaderDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"            editReaderDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editReaderDescriptor::setTags);","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"        if (!editReaderDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"        return new EditCommand(index, editReaderDescriptor);","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     * @param tags the given collection of tags.","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"     * @return an Optional containing the set of tags.","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"arsatis":17,"Nanxi-Huang":4,"gycc7253":10,"-":58}},{"path":"src/main/java/seedu/smartlib/logic/parser/FindBookCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.logic.commands.FindBookCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.book.BookNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":" * Parses input arguments and creates a new FindBookCommand object.","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"public class FindBookCommandParser implements Parser\u003cFindBookCommand\u003e {","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"     * Parses the given {@code String} of arguments in the context of the FindBookCommand","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"     * and returns a FindBookCommand object for execution.","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * @param args arguments given in the user input.","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     * @return a FindBookCommand object required for execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"    public FindBookCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindBookCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"        return new FindBookCommand(new BookNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"arsatis":5,"Andrewzhang217":31}},{"path":"src/main/java/seedu/smartlib/logic/parser/FindReaderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.logic.commands.FindReaderCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":" * Parses input arguments and creates a new FindReaderCommand object.","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"public class FindReaderCommandParser implements Parser\u003cFindReaderCommand\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     * Parses the given {@code String} of arguments in the context of the FindReaderCommand","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * and returns a FindReaderCommand object for execution.","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     * @param args arguments given in the user input.","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"     * @return a FindReaderCommand object required for execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    public FindReaderCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindReaderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"        int endOfTag \u003d 2;","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"        if (nameKeywords[0].substring(0, endOfTag).equals(PREFIX_TAG.toString())) {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"            nameKeywords[0] \u003d nameKeywords[0].substring(endOfTag); // removes the tag from the search list","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"            return new FindReaderCommand(new TagContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"        } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"            return new FindReaderCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"arsatis":20,"gycc7253":4,"-":20}},{"path":"src/main/java/seedu/smartlib/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.Command;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"arsatis":1,"gycc7253":3,"-":13}},{"path":"src/main/java/seedu/smartlib/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.index.Index;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.util.StringUtil;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-19"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.book.Author;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.model.book.Genre;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.book.Isbn;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.book.Publisher;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Address;","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Email;","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Phone;","lastModifiedDate":"2021-02-19"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.tag.Tag;","lastModifiedDate":"2021-02-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     * @param oneBasedIndex the given index to be parsed.","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * @return an Index object made up of the given one-based index.","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     * @param name the given name to be parsed.","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     * @return a Name object made up of the given name.","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"     * @param phone the given phone (number) to be parsed.","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"     * @return a Phone object made up of the given phone (number).","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"     * @param address the given address to be parsed.","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"     * @return an Address object made up of the given address.","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"     * @param email the given email to be parsed.","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"arsatis"},"content":"     * @return an Email object made up of the given email.","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"arsatis"},"content":"     * @param tag the given tag to be parsed.","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"arsatis"},"content":"     * @return a Tag object made up of the given tag.","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":133,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"arsatis"},"content":"     * @param tags the given tags to be parsed.","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"arsatis"},"content":"     * @return a set of Tag objects made up of the given tags.","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"arsatis"},"content":"     * @throws ParseException if the given {@code tags} is invalid.","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":146,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":147,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":148,"author":{"gitId":"Andrewzhang217"},"content":"     * Parses a {@code String author} into a {@code Author}.","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"Andrewzhang217"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"Andrewzhang217"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"arsatis"},"content":"     * @param author the given author to be parsed.","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"arsatis"},"content":"     * @return an Author object made up of the given author.","lastModifiedDate":"2021-03-27"},{"lineNumber":153,"author":{"gitId":"Andrewzhang217"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"Andrewzhang217"},"content":"    public static Author parseAuthor(String author) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"Andrewzhang217"},"content":"        requireNonNull(author);","lastModifiedDate":"2021-03-15"},{"lineNumber":157,"author":{"gitId":"Andrewzhang217"},"content":"        String trimmedAuthor \u003d author.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"GJ0407790"},"content":"        if (!Author.isValidAuthor(trimmedAuthor)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":159,"author":{"gitId":"GJ0407790"},"content":"            throw new ParseException(Author.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-18"},{"lineNumber":160,"author":{"gitId":"Andrewzhang217"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"GJ0407790"},"content":"        return new Author(new Name(trimmedAuthor));","lastModifiedDate":"2021-03-16"},{"lineNumber":162,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":164,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":165,"author":{"gitId":"Nanxi-Huang"},"content":"     * Parses a {@code String Isbn} into a {@code Isbn}.","lastModifiedDate":"2021-03-23"},{"lineNumber":166,"author":{"gitId":"Andrewzhang217"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-15"},{"lineNumber":167,"author":{"gitId":"Andrewzhang217"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":168,"author":{"gitId":"arsatis"},"content":"     * @param isbn the given ISBN to be parsed.","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"arsatis"},"content":"     * @return an Isbn object made up of the given ISBN.","lastModifiedDate":"2021-03-27"},{"lineNumber":170,"author":{"gitId":"Andrewzhang217"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-03-15"},{"lineNumber":171,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":172,"author":{"gitId":"Andrewzhang217"},"content":"    public static Isbn parseIsbn(String isbn) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":173,"author":{"gitId":"Andrewzhang217"},"content":"        requireNonNull(isbn);","lastModifiedDate":"2021-03-15"},{"lineNumber":174,"author":{"gitId":"Andrewzhang217"},"content":"        String trimmedIsbn \u003d isbn.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":175,"author":{"gitId":"Andrewzhang217"},"content":"        if (!Isbn.isValidIsbn(trimmedIsbn)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":176,"author":{"gitId":"Andrewzhang217"},"content":"            throw new ParseException(Isbn.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":177,"author":{"gitId":"Andrewzhang217"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":178,"author":{"gitId":"Andrewzhang217"},"content":"        return new Isbn(trimmedIsbn);","lastModifiedDate":"2021-03-15"},{"lineNumber":179,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":180,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":181,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":182,"author":{"gitId":"Nanxi-Huang"},"content":"     * Parses a {@code String Publisher} into a {@code Publisher}.","lastModifiedDate":"2021-03-23"},{"lineNumber":183,"author":{"gitId":"Andrewzhang217"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-15"},{"lineNumber":184,"author":{"gitId":"Andrewzhang217"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":185,"author":{"gitId":"arsatis"},"content":"     * @param publisher the given publisher to be parsed.","lastModifiedDate":"2021-03-27"},{"lineNumber":186,"author":{"gitId":"arsatis"},"content":"     * @return a Publisher object made up of the given publisher.","lastModifiedDate":"2021-03-27"},{"lineNumber":187,"author":{"gitId":"Andrewzhang217"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-03-15"},{"lineNumber":188,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":189,"author":{"gitId":"Andrewzhang217"},"content":"    public static Publisher parsePublisher(String publisher) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":190,"author":{"gitId":"Andrewzhang217"},"content":"        requireNonNull(publisher);","lastModifiedDate":"2021-03-15"},{"lineNumber":191,"author":{"gitId":"Andrewzhang217"},"content":"        String trimmedPublisher \u003d publisher.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":192,"author":{"gitId":"GJ0407790"},"content":"        if (!Publisher.isValidPublisher(trimmedPublisher)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":193,"author":{"gitId":"GJ0407790"},"content":"            throw new ParseException(Publisher.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-18"},{"lineNumber":194,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":195,"author":{"gitId":"GJ0407790"},"content":"        return new Publisher(new Name(trimmedPublisher));","lastModifiedDate":"2021-03-16"},{"lineNumber":196,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":197,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":198,"author":{"gitId":"Nanxi-Huang"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":199,"author":{"gitId":"Nanxi-Huang"},"content":"     * Parses a {@code String Genre} into a {@code Genre}.","lastModifiedDate":"2021-03-23"},{"lineNumber":200,"author":{"gitId":"Nanxi-Huang"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-23"},{"lineNumber":201,"author":{"gitId":"Nanxi-Huang"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":202,"author":{"gitId":"arsatis"},"content":"     * @param genre the given genre to be parsed.","lastModifiedDate":"2021-03-27"},{"lineNumber":203,"author":{"gitId":"arsatis"},"content":"     * @return a Genre object made up of the given genre.","lastModifiedDate":"2021-03-27"},{"lineNumber":204,"author":{"gitId":"Nanxi-Huang"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-03-23"},{"lineNumber":205,"author":{"gitId":"Nanxi-Huang"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":206,"author":{"gitId":"Nanxi-Huang"},"content":"    public static Genre parseGenre(String genre) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":207,"author":{"gitId":"Nanxi-Huang"},"content":"        requireNonNull(genre);","lastModifiedDate":"2021-03-23"},{"lineNumber":208,"author":{"gitId":"Nanxi-Huang"},"content":"        String trimmedGenre \u003d genre.trim();","lastModifiedDate":"2021-03-23"},{"lineNumber":209,"author":{"gitId":"Nanxi-Huang"},"content":"        if (!Genre.isValidGenre(trimmedGenre)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":210,"author":{"gitId":"Nanxi-Huang"},"content":"            throw new ParseException(Genre.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":211,"author":{"gitId":"Nanxi-Huang"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":212,"author":{"gitId":"Nanxi-Huang"},"content":"        return new Genre(new Name(trimmedGenre));","lastModifiedDate":"2021-03-23"},{"lineNumber":213,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":214,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"arsatis":26,"Nanxi-Huang":19,"GJ0407790":8,"gycc7253":8,"-":115,"Andrewzhang217":39}},{"path":"src/main/java/seedu/smartlib/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"     * The constructor for the Prefix class.","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"     * @param prefix a given prefix.","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     * Retrieves the prefix associated with this Prefix object.","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"     * @return the prefix associated with this Prefix object.","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * Retrieves the prefix associated with this Prefix object, formatted as a String.","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * @return the prefix associated with this Prefix object, formatted as a String.","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this Prefix object.","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this Prefix object.","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     * Checks if this Prefix object is equal to another Prefix object.","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     * @param obj the other Prefix object to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     * @return true if this Prefix object is equal to the other Prefix object, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"arsatis":28,"gycc7253":1,"-":38}},{"path":"src/main/java/seedu/smartlib/logic/parser/ReturnCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_BOOK;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_READER;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.ReturnCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.DateReturned;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.record.IncompleteRecord;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":" * Parses input arguments and creates a new {@code ReturnCommand} object.","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"public class ReturnCommandParser implements Parser\u003cReturnCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code ReturnCommand}","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"     * and returns a {@code ReturnCommand} object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     * @param args arguments given in the user input.","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * @return a ReturnCommand object required for execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"    public ReturnCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_BOOK, PREFIX_READER);","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_BOOK, PREFIX_READER)","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReturnCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"        Name bookName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_BOOK).get());","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"        Name readerName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_READER).get());","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"        DateReturned dateReturned \u003d new DateReturned(LocalDateTime.now());","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"        IncompleteRecord record \u003d new IncompleteRecord(bookName, readerName, dateReturned);","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":"        return new ReturnCommand(record);","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"gycc7253"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"gycc7253"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     * @param argumentMultimap a map containing the args.","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     * @param prefixes prefixes to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     * @return true if none of the prefixes contains empty values, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"gycc7253"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"gycc7253"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"gycc7253"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"arsatis":14,"GJ0407790":3,"gycc7253":43}},{"path":"src/main/java/seedu/smartlib/logic/parser/SmartLibParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.logic.commands.AddBookCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.logic.commands.AddReaderCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.logic.commands.BorrowCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.logic.commands.Command;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.logic.commands.DeleteBookCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.logic.commands.DeleteReaderCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.logic.commands.EditCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.logic.commands.FindBookCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.logic.commands.FindReaderCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.logic.commands.ListBookCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.logic.commands.ListReaderCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.logic.commands.ListRecordCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.logic.commands.ReturnCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"public class SmartLibParser {","lastModifiedDate":"2021-02-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"Nanxi-Huang"},"content":"        case AddReaderCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-06"},{"lineNumber":55,"author":{"gitId":"Nanxi-Huang"},"content":"            return new AddReaderCommandParser().parse(arguments);","lastModifiedDate":"2021-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"Nanxi-Huang"},"content":"        case DeleteReaderCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"Nanxi-Huang"},"content":"            return new DeleteReaderCommandParser().parse(arguments);","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"        case FindReaderCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"            return new FindReaderCommandParser().parse(arguments);","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"        case ListReaderCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"            return new ListReaderCommand();","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"Andrewzhang217"},"content":"        case AddBookCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"Andrewzhang217"},"content":"            return new AddBookCommandParser().parse(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"Andrewzhang217"},"content":"        case DeleteBookCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"Andrewzhang217"},"content":"            return new DeleteBookCommandParser().parse(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"Andrewzhang217"},"content":"        case FindBookCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"Andrewzhang217"},"content":"            return new FindBookCommandParser().parse(arguments);","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"Andrewzhang217"},"content":"        case ListBookCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"Andrewzhang217"},"content":"            return new ListBookCommand();","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"gycc7253"},"content":"        case BorrowCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-06"},{"lineNumber":85,"author":{"gitId":"gycc7253"},"content":"            return new BorrowCommandParser().parse(arguments);","lastModifiedDate":"2021-03-06"},{"lineNumber":86,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":87,"author":{"gitId":"gycc7253"},"content":"        case ReturnCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"gycc7253"},"content":"            return new ReturnCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"Andrewzhang217"},"content":"        case ListRecordCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"Andrewzhang217"},"content":"            return new ListRecordCommand();","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"arsatis":4,"Nanxi-Huang":4,"gycc7253":11,"-":54,"Andrewzhang217":31}},{"path":"src/main/java/seedu/smartlib/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.parser.exceptions;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"     * A constructor for the ParseException.","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"     * @param message should contain relevant information on the failed constraint(s).","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * A constructor for the ParseException.","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     * @param message should contain relevant information on the failed constraint(s).","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"     * @param cause of the main exception.","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"arsatis":12,"gycc7253":2,"-":15}},{"path":"src/main/java/seedu/smartlib/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.GuiSettings;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Barcode;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.Record;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"    Predicate\u003cBook\u003e PREDICATE_SHOW_ALL_BOOKS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    Predicate\u003cReader\u003e PREDICATE_SHOW_ALL_READERS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"    Predicate\u003cRecord\u003e PREDICATE_SHOW_ALL_RECORDS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     * Returns the user prefs\u0027 SmartLib file path.","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"    Path getSmartLibFilePath();","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     * Sets the user prefs\u0027 SmartLib file path.","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"    void setSmartLibFilePath(Path smartLibFilePath);","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"     * Replaces SmartLib\u0027s data with the data in {@code smartLib}.","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"gycc7253"},"content":"    void setSmartLib(ReadOnlySmartLib smartLib);","lastModifiedDate":"2021-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"     * Returns an immutable copy of the SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"gycc7253"},"content":"    ReadOnlySmartLib getSmartLib();","lastModifiedDate":"2021-02-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"GJ0407790"},"content":"     * Returns true if a book with the same identity as {@code book} exists in the registered book base.","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"GJ0407790"},"content":"    boolean hasBook(Book book);","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":74,"author":{"gitId":"gycc7253"},"content":"     * Returns true if a book with the same name as {@code bookName} exists in the registered book base.","lastModifiedDate":"2021-03-20"},{"lineNumber":75,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":76,"author":{"gitId":"gycc7253"},"content":"    boolean hasBook(Name bookName);","lastModifiedDate":"2021-03-20"},{"lineNumber":77,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"     * Returns true if a book with the same barcode as {@code barcode} exists in the registered book base.","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"    boolean hasBookWithBarcode(Barcode barcode);","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"     * Returns true if a book with the same barcode as {@code barcode} is already borrowed in the registered book base.","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"    boolean isBookWithBarcodeBorrowed(Barcode barcode);","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"Nanxi-Huang"},"content":"     * Returns true if a reader with the same identity as {@code reader} exists in the registered reader base.","lastModifiedDate":"2021-03-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"Nanxi-Huang"},"content":"    boolean hasReader(Reader reader);","lastModifiedDate":"2021-03-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":94,"author":{"gitId":"gycc7253"},"content":"     * Returns true if a reader with the same name as {@code readerName} exists in the registered reader base.","lastModifiedDate":"2021-03-20"},{"lineNumber":95,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":96,"author":{"gitId":"gycc7253"},"content":"    boolean hasReader(Name readerName);","lastModifiedDate":"2021-03-20"},{"lineNumber":97,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":98,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":99,"author":{"gitId":"gycc7253"},"content":"     * Returns true if a reader with the same name as {@code readerName} in the registered reader base","lastModifiedDate":"2021-03-21"},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"     * has already reached his borrow quota.","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":102,"author":{"gitId":"gycc7253"},"content":"    boolean canReaderBorrow(Name readerName);","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":104,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"gycc7253"},"content":"     * Returns true if a record with the same identity as {@code record} exists in the registered record base.","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"gycc7253"},"content":"    boolean hasRecord(Record record);","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":110,"author":{"gitId":"arsatis"},"content":"     * Updates the reader\u0027s and book\u0027s statuses after borrowing.","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":112,"author":{"gitId":"arsatis"},"content":"    boolean borrowBook(Name readerName, Barcode barcode);","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":114,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"arsatis"},"content":"     * Updates the reader\u0027s and book\u0027s statuses after returning.","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"arsatis"},"content":"    boolean returnBook(Name readerName, Barcode barcode);","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"GJ0407790"},"content":"     * Deletes the given book.","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"arsatis"},"content":"     * {@code target} must exist in the registered book base.","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"GJ0407790"},"content":"    void deleteBook(Book target);","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":126,"author":{"gitId":"Nanxi-Huang"},"content":"     * Deletes the given reader.","lastModifiedDate":"2021-03-06"},{"lineNumber":127,"author":{"gitId":"arsatis"},"content":"     * {@code target} must exist in the registered reader base.","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"Nanxi-Huang"},"content":"    void deleteReader(Reader target);","lastModifiedDate":"2021-03-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":131,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"GJ0407790"},"content":"     * Adds the given book.","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"GJ0407790"},"content":"     * {@code book} must not already exist in the registered book base.","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"GJ0407790"},"content":"    void addBook(Book book);","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":138,"author":{"gitId":"Nanxi-Huang"},"content":"     * Adds the given reader.","lastModifiedDate":"2021-03-06"},{"lineNumber":139,"author":{"gitId":"Nanxi-Huang"},"content":"     * {@code reader} must not already exist in the registered reader base.","lastModifiedDate":"2021-03-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":141,"author":{"gitId":"Nanxi-Huang"},"content":"    void addReader(Reader reader);","lastModifiedDate":"2021-03-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":143,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":144,"author":{"gitId":"gycc7253"},"content":"     * Adds the given record.","lastModifiedDate":"2021-03-13"},{"lineNumber":145,"author":{"gitId":"gycc7253"},"content":"     * {@code record} must not already exist in the registered record base.","lastModifiedDate":"2021-03-13"},{"lineNumber":146,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":147,"author":{"gitId":"gycc7253"},"content":"    void addRecord(Record record);","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"arsatis"},"content":"     * Searches for the latest given record and marks it as returned.","lastModifiedDate":"2021-03-27"},{"lineNumber":151,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"GJ0407790"},"content":"    Record markRecordAsReturned(Record record);","lastModifiedDate":"2021-03-28"},{"lineNumber":153,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":154,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":155,"author":{"gitId":"arsatis"},"content":"     * Returns the barcode of the first available (i.e. not borrowed) copy of the book in SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":156,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":157,"author":{"gitId":"arsatis"},"content":"    Barcode getBookBarcode(Name bookName);","lastModifiedDate":"2021-03-27"},{"lineNumber":158,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":159,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":160,"author":{"gitId":"arsatis"},"content":"     * Returns the barcode of the first copy of the specified book borrowed by the reader in SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":161,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":162,"author":{"gitId":"arsatis"},"content":"    Barcode getBookBarcodeForReturn(Name bookName, Name readerName);","lastModifiedDate":"2021-03-27"},{"lineNumber":163,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":165,"author":{"gitId":"Nanxi-Huang"},"content":"     * Replaces the given reader {@code target} with {@code editedReader}.","lastModifiedDate":"2021-03-06"},{"lineNumber":166,"author":{"gitId":"arsatis"},"content":"     * {@code target} must exist in SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"arsatis"},"content":"     * The reader identity of {@code editedReader} must not be the same as another existing reader in SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":169,"author":{"gitId":"arsatis"},"content":"    void setReader(Reader target, Reader editedReader);","lastModifiedDate":"2021-03-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":171,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":172,"author":{"gitId":"arsatis"},"content":"     * Returns an unmodifiable view of the filtered reader list.","lastModifiedDate":"2021-03-27"},{"lineNumber":173,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":174,"author":{"gitId":"Nanxi-Huang"},"content":"    ObservableList\u003cReader\u003e getFilteredReaderList();","lastModifiedDate":"2021-03-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"arsatis"},"content":"     * Returns an unmodifiable view of the filtered book list.","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"GJ0407790"},"content":"    ObservableList\u003cBook\u003e getFilteredBookList();","lastModifiedDate":"2021-03-14"},{"lineNumber":180,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":181,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":182,"author":{"gitId":"Andrewzhang217"},"content":"     * Returns an unmodifiable view of the filtered record list.","lastModifiedDate":"2021-03-29"},{"lineNumber":183,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"Andrewzhang217"},"content":"    ObservableList\u003cRecord\u003e getFilteredRecordList();","lastModifiedDate":"2021-03-29"},{"lineNumber":185,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"GJ0407790"},"content":"     * Updates the filter of the filtered book list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-14"},{"lineNumber":188,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":189,"author":{"gitId":"GJ0407790"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-14"},{"lineNumber":190,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":191,"author":{"gitId":"GJ0407790"},"content":"    void updateFilteredBookList(Predicate\u003cBook\u003e predicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":192,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":194,"author":{"gitId":"arsatis"},"content":"     * Updates the filter of the filtered reader list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-07"},{"lineNumber":195,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":198,"author":{"gitId":"arsatis"},"content":"    void updateFilteredReaderList(Predicate\u003cReader\u003e predicate);","lastModifiedDate":"2021-03-07"},{"lineNumber":199,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":200,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":201,"author":{"gitId":"arsatis"},"content":"     * Updates the filter of the filtered record list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-23"},{"lineNumber":202,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":203,"author":{"gitId":"arsatis"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-23"},{"lineNumber":204,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":205,"author":{"gitId":"gycc7253"},"content":"    void updateFilteredRecordList(Predicate\u003cRecord\u003e predicate);","lastModifiedDate":"2021-03-13"},{"lineNumber":206,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":207,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"arsatis":55,"Nanxi-Huang":9,"GJ0407790":29,"gycc7253":50,"-":59,"Andrewzhang217":6}},{"path":"src/main/java/seedu/smartlib/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.GuiSettings;","lastModifiedDate":"2021-02-19"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.LogsCenter;","lastModifiedDate":"2021-02-19"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Barcode;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.Record;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":" * Represents the in-memory model of SmartLib\u0027s data.","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"    private final SmartLib smartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"    private final FilteredList\u003cBook\u003e filteredBooks;","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"    private final FilteredList\u003cReader\u003e filteredReaders;","lastModifiedDate":"2021-02-19"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"    private final FilteredList\u003cRecord\u003e filteredRecords;","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * Initializes a ModelManager with the given SmartLib and userPrefs.","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"     * @param smartLib the given SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"     * @param userPrefs the user\u0027s preferences.","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"    public ModelManager(ReadOnlySmartLib smartLib, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"        requireAllNonNull(smartLib, userPrefs);","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"        logger.fine(\"Initializing with SmartLib: \" + smartLib + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"        this.smartLib \u003d new SmartLib(smartLib);","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"GJ0407790"},"content":"        filteredBooks \u003d new FilteredList\u003c\u003e(this.smartLib.getBookList());","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"        filteredReaders \u003d new FilteredList\u003c\u003e(this.smartLib.getReaderList());","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"gycc7253"},"content":"        filteredRecords \u003d new FilteredList\u003c\u003e(this.smartLib.getRecordList());","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     * Initializes a ModelManager with a new SmartLib and new userPrefs.","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"gycc7253"},"content":"        this(new SmartLib(), new UserPrefs());","lastModifiedDate":"2021-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"     * @param userPrefs new userPref data.","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     * Returns the user prefs.","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"     * @return the user\u0027s preferences.","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"     * @return the user prefs\u0027 GUI settings.","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"     * @param guiSettings the new GUI settings.","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"arsatis"},"content":"     * Returns the user prefs\u0027 SmartLib file path.","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"arsatis"},"content":"     * @return the user prefs\u0027 SmartLib file path.","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"arsatis"},"content":"    public Path getSmartLibFilePath() {","lastModifiedDate":"2021-03-07"},{"lineNumber":111,"author":{"gitId":"arsatis"},"content":"        return userPrefs.getSmartLibFilePath();","lastModifiedDate":"2021-03-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"arsatis"},"content":"     * Sets the user prefs\u0027 SmartLib file path.","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"arsatis"},"content":"     * @param smartLibFilePath the new SmartLib file path.","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"arsatis"},"content":"    public void setSmartLibFilePath(Path smartLibFilePath) {","lastModifiedDate":"2021-03-07"},{"lineNumber":121,"author":{"gitId":"arsatis"},"content":"        requireNonNull(smartLibFilePath);","lastModifiedDate":"2021-03-07"},{"lineNumber":122,"author":{"gitId":"arsatis"},"content":"        userPrefs.setSmartLibFilePath(smartLibFilePath);","lastModifiedDate":"2021-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"arsatis"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SmartLib \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"arsatis"},"content":"     * Replaces SmartLib\u0027s data with the data in {@code smartLib}.","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"arsatis"},"content":"     * @param smartLib the new SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":133,"author":{"gitId":"gycc7253"},"content":"    public void setSmartLib(ReadOnlySmartLib smartLib) {","lastModifiedDate":"2021-02-19"},{"lineNumber":134,"author":{"gitId":"gycc7253"},"content":"        this.smartLib.resetData(smartLib);","lastModifiedDate":"2021-02-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"arsatis"},"content":"     * Returns an immutable copy of SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"arsatis"},"content":"     * @return an immutable copy of SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":143,"author":{"gitId":"gycc7253"},"content":"    public ReadOnlySmartLib getSmartLib() {","lastModifiedDate":"2021-02-19"},{"lineNumber":144,"author":{"gitId":"gycc7253"},"content":"        return smartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":148,"author":{"gitId":"arsatis"},"content":"     * Returns true if a book with the same identity as {@code book} exists in the registered book base.","lastModifiedDate":"2021-03-27"},{"lineNumber":149,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":150,"author":{"gitId":"arsatis"},"content":"     * @param book book to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":151,"author":{"gitId":"arsatis"},"content":"     * @return true if a book with the same identity as {@code book} exists in the registered book base, and false","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"arsatis"},"content":"     * otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":153,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"GJ0407790"},"content":"    public boolean hasBook(Book book) {","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"GJ0407790"},"content":"        requireNonNull(book);","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"GJ0407790"},"content":"        return smartLib.hasBook(book);","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":161,"author":{"gitId":"arsatis"},"content":"     * Returns true if a book with the same name as {@code bookName} exists in the registered book base.","lastModifiedDate":"2021-03-27"},{"lineNumber":162,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":163,"author":{"gitId":"arsatis"},"content":"     * @param bookName name of the book to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"arsatis"},"content":"     * @return true if a book with the same name as {@code bookName} exists in the registered book base, and false","lastModifiedDate":"2021-03-27"},{"lineNumber":165,"author":{"gitId":"arsatis"},"content":"     * otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":166,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-20"},{"lineNumber":168,"author":{"gitId":"gycc7253"},"content":"    public boolean hasBook(Name bookName) {","lastModifiedDate":"2021-03-20"},{"lineNumber":169,"author":{"gitId":"gycc7253"},"content":"        requireAllNonNull(bookName);","lastModifiedDate":"2021-03-20"},{"lineNumber":170,"author":{"gitId":"gycc7253"},"content":"        return smartLib.hasBook(bookName);","lastModifiedDate":"2021-03-20"},{"lineNumber":171,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":172,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":173,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":174,"author":{"gitId":"arsatis"},"content":"     * Returns true if a book with the same barcode as {@code barcode} exists in the registered book base.","lastModifiedDate":"2021-03-27"},{"lineNumber":175,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"arsatis"},"content":"     * @param barcode barcode of the book to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"arsatis"},"content":"     * @return true if a book with the same barcode as {@code barcode} exists in the registered book base, and false","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"arsatis"},"content":"     * otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"arsatis"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":181,"author":{"gitId":"arsatis"},"content":"    public boolean hasBookWithBarcode(Barcode barcode) {","lastModifiedDate":"2021-03-25"},{"lineNumber":182,"author":{"gitId":"arsatis"},"content":"        requireNonNull(barcode);","lastModifiedDate":"2021-03-25"},{"lineNumber":183,"author":{"gitId":"arsatis"},"content":"        assert(Barcode.isValidBarcode(barcode.getValue()));","lastModifiedDate":"2021-03-25"},{"lineNumber":184,"author":{"gitId":"arsatis"},"content":"        return smartLib.hasBookWithBarcode(barcode);","lastModifiedDate":"2021-03-25"},{"lineNumber":185,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":186,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":187,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":188,"author":{"gitId":"arsatis"},"content":"     * Returns true if a book with the same barcode as {@code barcode} is already borrowed in the registered book base.","lastModifiedDate":"2021-03-27"},{"lineNumber":189,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":190,"author":{"gitId":"arsatis"},"content":"     * @param barcode barcode of the book to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":191,"author":{"gitId":"arsatis"},"content":"     * @return true if a book with the same barcode as {@code barcode} is already borrowed in the registered book base,","lastModifiedDate":"2021-03-27"},{"lineNumber":192,"author":{"gitId":"arsatis"},"content":"     * and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":193,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":194,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":195,"author":{"gitId":"arsatis"},"content":"    public boolean isBookWithBarcodeBorrowed(Barcode barcode) {","lastModifiedDate":"2021-03-27"},{"lineNumber":196,"author":{"gitId":"arsatis"},"content":"        return smartLib.isBookWithBarcodeBorrowed(barcode);","lastModifiedDate":"2021-03-27"},{"lineNumber":197,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":198,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":199,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":200,"author":{"gitId":"arsatis"},"content":"     * Returns true if a reader with the same identity as {@code reader} exists in the registered reader base.","lastModifiedDate":"2021-03-27"},{"lineNumber":201,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":202,"author":{"gitId":"arsatis"},"content":"     * @param reader reader to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":203,"author":{"gitId":"arsatis"},"content":"     * @return true if a reader with the same identity as {@code reader} exists in the registered reader base, and","lastModifiedDate":"2021-03-27"},{"lineNumber":204,"author":{"gitId":"arsatis"},"content":"     * false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":205,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":207,"author":{"gitId":"Nanxi-Huang"},"content":"    public boolean hasReader(Reader reader) {","lastModifiedDate":"2021-03-06"},{"lineNumber":208,"author":{"gitId":"gycc7253"},"content":"        requireNonNull(reader);","lastModifiedDate":"2021-02-19"},{"lineNumber":209,"author":{"gitId":"Nanxi-Huang"},"content":"        return smartLib.hasReader(reader);","lastModifiedDate":"2021-03-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":212,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":213,"author":{"gitId":"arsatis"},"content":"     * Returns true if a reader with the same name as {@code readerName} exists in the registered reader base.","lastModifiedDate":"2021-03-27"},{"lineNumber":214,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":215,"author":{"gitId":"arsatis"},"content":"     * @param readerName name of the reader to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":216,"author":{"gitId":"arsatis"},"content":"     * @return true if a reader with the same name as {@code readerName} exists in the registered reader base, and","lastModifiedDate":"2021-03-27"},{"lineNumber":217,"author":{"gitId":"arsatis"},"content":"     * false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":218,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":219,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-20"},{"lineNumber":220,"author":{"gitId":"gycc7253"},"content":"    public boolean hasReader(Name readerName) {","lastModifiedDate":"2021-03-20"},{"lineNumber":221,"author":{"gitId":"gycc7253"},"content":"        requireAllNonNull(readerName);","lastModifiedDate":"2021-03-20"},{"lineNumber":222,"author":{"gitId":"gycc7253"},"content":"        return smartLib.hasReader(readerName);","lastModifiedDate":"2021-03-20"},{"lineNumber":223,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":224,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":225,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":226,"author":{"gitId":"arsatis"},"content":"     * Returns true if a reader with the same name as {@code readerName} in the registered reader base","lastModifiedDate":"2021-03-27"},{"lineNumber":227,"author":{"gitId":"arsatis"},"content":"     * has already reached his borrow quota.","lastModifiedDate":"2021-03-27"},{"lineNumber":228,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":229,"author":{"gitId":"arsatis"},"content":"     * @param readerName name of the reader to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":230,"author":{"gitId":"arsatis"},"content":"     * @return true if a reader with the same name as {@code readerName} in the registered reader base","lastModifiedDate":"2021-03-27"},{"lineNumber":231,"author":{"gitId":"arsatis"},"content":"     * has already reached his borrow quota, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":232,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":233,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":234,"author":{"gitId":"gycc7253"},"content":"    public boolean canReaderBorrow(Name readerName) {","lastModifiedDate":"2021-03-23"},{"lineNumber":235,"author":{"gitId":"gycc7253"},"content":"        requireAllNonNull(readerName);","lastModifiedDate":"2021-03-21"},{"lineNumber":236,"author":{"gitId":"gycc7253"},"content":"        return smartLib.canReaderBorrow(readerName);","lastModifiedDate":"2021-03-23"},{"lineNumber":237,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":238,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":239,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":240,"author":{"gitId":"arsatis"},"content":"     * Returns true if a record with the same identity as {@code record} exists in the registered record base.","lastModifiedDate":"2021-03-27"},{"lineNumber":241,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":242,"author":{"gitId":"arsatis"},"content":"     * @param record the record to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":243,"author":{"gitId":"arsatis"},"content":"     * @return true if a record with the same identity as {@code record} exists in the registered record base, and","lastModifiedDate":"2021-03-27"},{"lineNumber":244,"author":{"gitId":"arsatis"},"content":"     * false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":245,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":246,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":247,"author":{"gitId":"gycc7253"},"content":"    public boolean hasRecord(Record record) {","lastModifiedDate":"2021-03-13"},{"lineNumber":248,"author":{"gitId":"gycc7253"},"content":"        requireNonNull(record);","lastModifiedDate":"2021-03-13"},{"lineNumber":249,"author":{"gitId":"gycc7253"},"content":"        return smartLib.hasRecord(record);","lastModifiedDate":"2021-03-13"},{"lineNumber":250,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":251,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":252,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":253,"author":{"gitId":"arsatis"},"content":"     * Updates the reader\u0027s and book\u0027s statuses after borrowing.","lastModifiedDate":"2021-03-27"},{"lineNumber":254,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":255,"author":{"gitId":"arsatis"},"content":"     * @param readerName name of the reader borrowing the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":256,"author":{"gitId":"arsatis"},"content":"     * @param barcode barcode of the book to be borrowed.","lastModifiedDate":"2021-03-27"},{"lineNumber":257,"author":{"gitId":"arsatis"},"content":"     * @return true if the reader has successfully borrowed the book, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":258,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":259,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":260,"author":{"gitId":"arsatis"},"content":"    public boolean borrowBook(Name readerName, Barcode barcode) {","lastModifiedDate":"2021-03-27"},{"lineNumber":261,"author":{"gitId":"arsatis"},"content":"        requireAllNonNull(barcode, readerName);","lastModifiedDate":"2021-03-27"},{"lineNumber":262,"author":{"gitId":"arsatis"},"content":"        boolean status \u003d smartLib.borrowBook(readerName, barcode);","lastModifiedDate":"2021-03-27"},{"lineNumber":263,"author":{"gitId":"gycc7253"},"content":"        updateFilteredReaderList(PREDICATE_SHOW_ALL_READERS);","lastModifiedDate":"2021-03-21"},{"lineNumber":264,"author":{"gitId":"gycc7253"},"content":"        updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);","lastModifiedDate":"2021-03-21"},{"lineNumber":265,"author":{"gitId":"gycc7253"},"content":"        return status;","lastModifiedDate":"2021-03-21"},{"lineNumber":266,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":267,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":268,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":269,"author":{"gitId":"arsatis"},"content":"     * Updates the reader\u0027s and book\u0027s statuses after returning.","lastModifiedDate":"2021-03-27"},{"lineNumber":270,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":271,"author":{"gitId":"arsatis"},"content":"     * @param readerName name of the reader returning the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":272,"author":{"gitId":"arsatis"},"content":"     * @param barcode barcode of the book to be returned.","lastModifiedDate":"2021-03-27"},{"lineNumber":273,"author":{"gitId":"arsatis"},"content":"     * @return true if the reader has successfully returned the book, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":274,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":275,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":276,"author":{"gitId":"arsatis"},"content":"    public boolean returnBook(Name readerName, Barcode barcode) {","lastModifiedDate":"2021-03-27"},{"lineNumber":277,"author":{"gitId":"arsatis"},"content":"        requireAllNonNull(barcode, readerName);","lastModifiedDate":"2021-03-27"},{"lineNumber":278,"author":{"gitId":"arsatis"},"content":"        boolean status \u003d smartLib.returnBook(readerName, barcode);","lastModifiedDate":"2021-03-27"},{"lineNumber":279,"author":{"gitId":"gycc7253"},"content":"        updateFilteredReaderList(PREDICATE_SHOW_ALL_READERS);","lastModifiedDate":"2021-03-23"},{"lineNumber":280,"author":{"gitId":"gycc7253"},"content":"        updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);","lastModifiedDate":"2021-03-23"},{"lineNumber":281,"author":{"gitId":"gycc7253"},"content":"        return status;","lastModifiedDate":"2021-03-23"},{"lineNumber":282,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":283,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":284,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":285,"author":{"gitId":"arsatis"},"content":"     * Deletes the given book.","lastModifiedDate":"2021-03-27"},{"lineNumber":286,"author":{"gitId":"arsatis"},"content":"     * {@code target} must exist in the registered book base.","lastModifiedDate":"2021-03-27"},{"lineNumber":287,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":288,"author":{"gitId":"arsatis"},"content":"     * @param target book to be deleted.","lastModifiedDate":"2021-03-27"},{"lineNumber":289,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":290,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":291,"author":{"gitId":"GJ0407790"},"content":"    public void deleteBook(Book target) {","lastModifiedDate":"2021-03-14"},{"lineNumber":292,"author":{"gitId":"GJ0407790"},"content":"        smartLib.removeBook(target);","lastModifiedDate":"2021-03-14"},{"lineNumber":293,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":294,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":295,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":296,"author":{"gitId":"arsatis"},"content":"     * Deletes the given reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":297,"author":{"gitId":"arsatis"},"content":"     * {@code target} must exist in the registered reader base.","lastModifiedDate":"2021-03-27"},{"lineNumber":298,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":299,"author":{"gitId":"arsatis"},"content":"     * @param target reader to be deleted.","lastModifiedDate":"2021-03-27"},{"lineNumber":300,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":302,"author":{"gitId":"Nanxi-Huang"},"content":"    public void deleteReader(Reader target) {","lastModifiedDate":"2021-03-07"},{"lineNumber":303,"author":{"gitId":"Nanxi-Huang"},"content":"        smartLib.removeReader(target);","lastModifiedDate":"2021-03-07"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":307,"author":{"gitId":"arsatis"},"content":"     * Adds the given book.","lastModifiedDate":"2021-03-27"},{"lineNumber":308,"author":{"gitId":"arsatis"},"content":"     * {@code book} must not already exist in the registered book base.","lastModifiedDate":"2021-03-27"},{"lineNumber":309,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":310,"author":{"gitId":"arsatis"},"content":"     * @param book book to be added.","lastModifiedDate":"2021-03-27"},{"lineNumber":311,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":312,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":313,"author":{"gitId":"GJ0407790"},"content":"    public void addBook(Book book) {","lastModifiedDate":"2021-03-14"},{"lineNumber":314,"author":{"gitId":"GJ0407790"},"content":"        smartLib.addBook(book);","lastModifiedDate":"2021-03-14"},{"lineNumber":315,"author":{"gitId":"GJ0407790"},"content":"        updateFilteredBookList(PREDICATE_SHOW_ALL_BOOKS);","lastModifiedDate":"2021-03-14"},{"lineNumber":316,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":317,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":318,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":319,"author":{"gitId":"arsatis"},"content":"     * Adds the given reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":320,"author":{"gitId":"arsatis"},"content":"     * {@code reader} must not already exist in the registered reader base.","lastModifiedDate":"2021-03-27"},{"lineNumber":321,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":322,"author":{"gitId":"arsatis"},"content":"     * @param reader reader to be added.","lastModifiedDate":"2021-03-27"},{"lineNumber":323,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":325,"author":{"gitId":"Nanxi-Huang"},"content":"    public void addReader(Reader reader) {","lastModifiedDate":"2021-03-06"},{"lineNumber":326,"author":{"gitId":"Nanxi-Huang"},"content":"        smartLib.addReader(reader);","lastModifiedDate":"2021-03-06"},{"lineNumber":327,"author":{"gitId":"arsatis"},"content":"        updateFilteredReaderList(PREDICATE_SHOW_ALL_READERS);","lastModifiedDate":"2021-03-07"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":330,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":331,"author":{"gitId":"arsatis"},"content":"     * Adds the given record.","lastModifiedDate":"2021-03-27"},{"lineNumber":332,"author":{"gitId":"arsatis"},"content":"     * {@code record} must not already exist in the registered record base.","lastModifiedDate":"2021-03-27"},{"lineNumber":333,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":334,"author":{"gitId":"arsatis"},"content":"     * @param record record to be added.","lastModifiedDate":"2021-03-27"},{"lineNumber":335,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":336,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":337,"author":{"gitId":"gycc7253"},"content":"    public void addRecord(Record record) {","lastModifiedDate":"2021-03-13"},{"lineNumber":338,"author":{"gitId":"gycc7253"},"content":"        System.out.println(smartLib);","lastModifiedDate":"2021-03-13"},{"lineNumber":339,"author":{"gitId":"gycc7253"},"content":"        smartLib.addRecord(record);","lastModifiedDate":"2021-03-13"},{"lineNumber":340,"author":{"gitId":"gycc7253"},"content":"        updateFilteredRecordList(PREDICATE_SHOW_ALL_RECORDS);","lastModifiedDate":"2021-03-13"},{"lineNumber":341,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":342,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":343,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":344,"author":{"gitId":"arsatis"},"content":"     * Searches for the latest given record and marks it as returned.","lastModifiedDate":"2021-03-27"},{"lineNumber":345,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":346,"author":{"gitId":"arsatis"},"content":"     * @param record record containing the book to be returned.","lastModifiedDate":"2021-03-27"},{"lineNumber":347,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":348,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":349,"author":{"gitId":"GJ0407790"},"content":"    public Record markRecordAsReturned(Record record) {","lastModifiedDate":"2021-03-28"},{"lineNumber":350,"author":{"gitId":"gycc7253"},"content":"        Record foundRecord \u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":351,"author":{"gitId":"gycc7253"},"content":"        for (Record r : smartLib.getRecordList()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":352,"author":{"gitId":"gycc7253"},"content":"            if (r.equals(record)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":353,"author":{"gitId":"gycc7253"},"content":"                foundRecord \u003d r;","lastModifiedDate":"2021-03-14"},{"lineNumber":354,"author":{"gitId":"gycc7253"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":355,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":356,"author":{"gitId":"gycc7253"},"content":"        if (foundRecord !\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":357,"author":{"gitId":"gycc7253"},"content":"            foundRecord.setDateReturned(record.getDateReturned());","lastModifiedDate":"2021-03-14"},{"lineNumber":358,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":359,"author":{"gitId":"gycc7253"},"content":"        updateFilteredRecordList(PREDICATE_SHOW_ALL_RECORDS);","lastModifiedDate":"2021-03-14"},{"lineNumber":360,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":361,"author":{"gitId":"GJ0407790"},"content":"        assert foundRecord !\u003d null : \"The record must exist in this step of execution\";","lastModifiedDate":"2021-03-28"},{"lineNumber":362,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":363,"author":{"gitId":"GJ0407790"},"content":"        return foundRecord;","lastModifiedDate":"2021-03-28"},{"lineNumber":364,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":365,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":366,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":367,"author":{"gitId":"arsatis"},"content":"     * Returns the barcode of the first available (i.e. not borrowed) copy of the book in SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":368,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":369,"author":{"gitId":"arsatis"},"content":"     * @param bookName name of the book to be borrowed","lastModifiedDate":"2021-03-27"},{"lineNumber":370,"author":{"gitId":"arsatis"},"content":"     * @return the barcode of the first available copy of the book in SmartLib","lastModifiedDate":"2021-03-27"},{"lineNumber":371,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":372,"author":{"gitId":"arsatis"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":373,"author":{"gitId":"arsatis"},"content":"    public Barcode getBookBarcode(Name bookName) {","lastModifiedDate":"2021-03-27"},{"lineNumber":374,"author":{"gitId":"arsatis"},"content":"        ArrayList\u003cBook\u003e books \u003d smartLib.getBooksByName(bookName);","lastModifiedDate":"2021-03-27"},{"lineNumber":375,"author":{"gitId":"arsatis"},"content":"        requireNonNull(books);","lastModifiedDate":"2021-03-27"},{"lineNumber":376,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":377,"author":{"gitId":"arsatis"},"content":"        for (Book b : books) {","lastModifiedDate":"2021-03-27"},{"lineNumber":378,"author":{"gitId":"arsatis"},"content":"            if (!b.isBorrowed()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":379,"author":{"gitId":"arsatis"},"content":"                return b.getBarcode();","lastModifiedDate":"2021-03-27"},{"lineNumber":380,"author":{"gitId":"arsatis"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":381,"author":{"gitId":"arsatis"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":382,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":383,"author":{"gitId":"arsatis"},"content":"        return null;","lastModifiedDate":"2021-03-27"},{"lineNumber":384,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":385,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":386,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":387,"author":{"gitId":"arsatis"},"content":"     * Returns the barcode of the first copy of the specified book borrowed by the reader in SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":388,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":389,"author":{"gitId":"arsatis"},"content":"     * @param bookName   name of the book to be borrowed","lastModifiedDate":"2021-03-27"},{"lineNumber":390,"author":{"gitId":"arsatis"},"content":"     * @param readerName name of the reader who borrowed the book","lastModifiedDate":"2021-03-27"},{"lineNumber":391,"author":{"gitId":"arsatis"},"content":"     * @return the barcode of the first such book in SmartLib","lastModifiedDate":"2021-03-27"},{"lineNumber":392,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":393,"author":{"gitId":"arsatis"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":394,"author":{"gitId":"arsatis"},"content":"    public Barcode getBookBarcodeForReturn(Name bookName, Name readerName) {","lastModifiedDate":"2021-03-27"},{"lineNumber":395,"author":{"gitId":"arsatis"},"content":"        ArrayList\u003cBook\u003e books \u003d smartLib.getBooksByName(bookName);","lastModifiedDate":"2021-03-27"},{"lineNumber":396,"author":{"gitId":"arsatis"},"content":"        requireNonNull(books);","lastModifiedDate":"2021-03-27"},{"lineNumber":397,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":398,"author":{"gitId":"arsatis"},"content":"        for (Book b : books) {","lastModifiedDate":"2021-03-27"},{"lineNumber":399,"author":{"gitId":"arsatis"},"content":"            if (b.getBorrowerName() !\u003d null \u0026\u0026 b.getBorrowerName().equals(readerName)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":400,"author":{"gitId":"arsatis"},"content":"                return b.getBarcode();","lastModifiedDate":"2021-03-27"},{"lineNumber":401,"author":{"gitId":"arsatis"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":402,"author":{"gitId":"arsatis"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":403,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":404,"author":{"gitId":"arsatis"},"content":"        return null;","lastModifiedDate":"2021-03-27"},{"lineNumber":405,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":406,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":407,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":408,"author":{"gitId":"arsatis"},"content":"     * Replaces the given reader {@code target} with {@code editedReader}.","lastModifiedDate":"2021-03-27"},{"lineNumber":409,"author":{"gitId":"arsatis"},"content":"     * {@code target} must exist in SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":410,"author":{"gitId":"arsatis"},"content":"     * The reader identity of {@code editedReader} must not be the same as another existing reader in SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":411,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":412,"author":{"gitId":"arsatis"},"content":"     * @param target reader to be replaced.","lastModifiedDate":"2021-03-27"},{"lineNumber":413,"author":{"gitId":"arsatis"},"content":"     * @param editedReader the new reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":414,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":416,"author":{"gitId":"arsatis"},"content":"    public void setReader(Reader target, Reader editedReader) {","lastModifiedDate":"2021-03-07"},{"lineNumber":417,"author":{"gitId":"gycc7253"},"content":"        requireAllNonNull(target, editedReader);","lastModifiedDate":"2021-02-19"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":419,"author":{"gitId":"arsatis"},"content":"        smartLib.setReader(target, editedReader);","lastModifiedDate":"2021-03-07"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":424,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":425,"author":{"gitId":"arsatis"},"content":"     * Returns an unmodifiable view of the filtered reader list.","lastModifiedDate":"2021-03-27"},{"lineNumber":426,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":427,"author":{"gitId":"arsatis"},"content":"     * @return an unmodifiable view of the filtered reader list.","lastModifiedDate":"2021-03-27"},{"lineNumber":428,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":429,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":430,"author":{"gitId":"GJ0407790"},"content":"    public ObservableList\u003cBook\u003e getFilteredBookList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":431,"author":{"gitId":"GJ0407790"},"content":"        return filteredBooks;","lastModifiedDate":"2021-03-14"},{"lineNumber":432,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":433,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":434,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":435,"author":{"gitId":"Andrewzhang217"},"content":"     * Returns an unmodifiable view of the filtered record list.","lastModifiedDate":"2021-03-29"},{"lineNumber":436,"author":{"gitId":"Andrewzhang217"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":437,"author":{"gitId":"Andrewzhang217"},"content":"     * @return an unmodifiable view of the filtered record list.","lastModifiedDate":"2021-03-29"},{"lineNumber":438,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":439,"author":{"gitId":"Andrewzhang217"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":440,"author":{"gitId":"Andrewzhang217"},"content":"    public ObservableList\u003cRecord\u003e getFilteredRecordList() {","lastModifiedDate":"2021-03-29"},{"lineNumber":441,"author":{"gitId":"Andrewzhang217"},"content":"        return filteredRecords;","lastModifiedDate":"2021-03-29"},{"lineNumber":442,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":443,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":444,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":445,"author":{"gitId":"arsatis"},"content":"     * Returns an unmodifiable view of the filtered book list.","lastModifiedDate":"2021-03-27"},{"lineNumber":446,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":447,"author":{"gitId":"arsatis"},"content":"     * @return an unmodifiable view of the filtered book list.","lastModifiedDate":"2021-03-27"},{"lineNumber":448,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":449,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":450,"author":{"gitId":"Nanxi-Huang"},"content":"    public ObservableList\u003cReader\u003e getFilteredReaderList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":451,"author":{"gitId":"gycc7253"},"content":"        return filteredReaders;","lastModifiedDate":"2021-02-19"},{"lineNumber":452,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":454,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":455,"author":{"gitId":"arsatis"},"content":"     * Updates the filter of the filtered book list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-27"},{"lineNumber":456,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":457,"author":{"gitId":"arsatis"},"content":"     * @param predicate new filter of the book list.","lastModifiedDate":"2021-03-27"},{"lineNumber":458,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":459,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":460,"author":{"gitId":"GJ0407790"},"content":"    public void updateFilteredBookList(Predicate\u003cBook\u003e predicate) {","lastModifiedDate":"2021-03-14"},{"lineNumber":461,"author":{"gitId":"GJ0407790"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":462,"author":{"gitId":"GJ0407790"},"content":"        filteredBooks.setPredicate(predicate);","lastModifiedDate":"2021-03-14"},{"lineNumber":463,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":464,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":465,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":466,"author":{"gitId":"arsatis"},"content":"     * Updates the filter of the filtered reader list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-27"},{"lineNumber":467,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":468,"author":{"gitId":"arsatis"},"content":"     * @param predicate new filter of the reader list.","lastModifiedDate":"2021-03-27"},{"lineNumber":469,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":471,"author":{"gitId":"arsatis"},"content":"    public void updateFilteredReaderList(Predicate\u003cReader\u003e predicate) {","lastModifiedDate":"2021-03-07"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":473,"author":{"gitId":"gycc7253"},"content":"        filteredReaders.setPredicate(predicate);","lastModifiedDate":"2021-02-19"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":476,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":477,"author":{"gitId":"arsatis"},"content":"     * Updates the filter of the filtered record list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-27"},{"lineNumber":478,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":479,"author":{"gitId":"arsatis"},"content":"     * @param predicate new filter of the record list.","lastModifiedDate":"2021-03-27"},{"lineNumber":480,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":481,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":482,"author":{"gitId":"gycc7253"},"content":"    public void updateFilteredRecordList(Predicate\u003cRecord\u003e predicate) {","lastModifiedDate":"2021-03-13"},{"lineNumber":483,"author":{"gitId":"gycc7253"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-13"},{"lineNumber":484,"author":{"gitId":"gycc7253"},"content":"        filteredRecords.setPredicate(predicate);","lastModifiedDate":"2021-03-13"},{"lineNumber":485,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":486,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":487,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":488,"author":{"gitId":"arsatis"},"content":"     * Checks if this ModelManager is equal to another ModelManager.","lastModifiedDate":"2021-03-27"},{"lineNumber":489,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":490,"author":{"gitId":"arsatis"},"content":"     * @param obj the other ModelManager to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":491,"author":{"gitId":"arsatis"},"content":"     * @return true if this ModelManager is equal to the other ModelManager, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":492,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":493,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":494,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":497,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":498,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":500,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":501,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":502,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":503,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":505,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":506,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":507,"author":{"gitId":"gycc7253"},"content":"        return smartLib.equals(other.smartLib)","lastModifiedDate":"2021-02-19"},{"lineNumber":508,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":509,"author":{"gitId":"GJ0407790"},"content":"                \u0026\u0026 filteredReaders.equals(other.filteredReaders);","lastModifiedDate":"2021-03-14"},{"lineNumber":510,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":512,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"arsatis":267,"Nanxi-Huang":7,"GJ0407790":37,"gycc7253":86,"-":105,"Andrewzhang217":10}},{"path":"src/main/java/seedu/smartlib/model/ReadOnlySmartLib.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.Record;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * Unmodifiable view of a SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"public interface ReadOnlySmartLib {","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"     * Returns an unmodifiable view of the books list.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"     * This list will not contain any duplicate books.","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"    ObservableList\u003cBook\u003e getBookList();","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"     * Returns an unmodifiable view of the readers list.","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"     * This list will not contain any duplicate readers.","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    ObservableList\u003cReader\u003e getReaderList();","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"     * Returns an unmodifiable view of the record list.","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"     * This list will not contain any duplicate records.","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"    ObservableList\u003cRecord\u003e getRecordList();","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"arsatis":2,"GJ0407790":8,"gycc7253":10,"-":10,"Andrewzhang217":1}},{"path":"src/main/java/seedu/smartlib/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.GuiSettings;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"     * Returns the GUI settings of the userPrefs.","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     * Returns the file path to SmartLib registered in the userPrefs.","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    Path getSmartLibFilePath();","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"arsatis":7,"gycc7253":2,"-":13}},{"path":"src/main/java/seedu/smartlib/model/SmartLib.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Barcode;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.UniqueBookList;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":15,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.model.reader.UniqueReaderList;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.DateBorrowed;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.Record;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.UniqueRecordList;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":" * Wraps all data at the SmartLib level.","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":" * Duplicates are not allowed (by .isSamePerson comparison).","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"public class SmartLib implements ReadOnlySmartLib {","lastModifiedDate":"2021-02-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"    public static final int QUOTA \u003d 4;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":"    public static final long DAYS_BORROW_ALLOWED \u003d 14L;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":"    public static final int HOURS_BORROW_ALLOWED \u003d (int) DAYS_BORROW_ALLOWED * 24;","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"    private final UniqueBookList books;","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"Nanxi-Huang"},"content":"    private final UniqueReaderList readers;","lastModifiedDate":"2021-03-06"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"    private final UniqueRecordList records;","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"        books \u003d new UniqueBookList();","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"Nanxi-Huang"},"content":"        readers \u003d new UniqueReaderList();","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"gycc7253"},"content":"        records \u003d new UniqueRecordList();","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     * An empty constructor for SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"gycc7253"},"content":"    public SmartLib() {}","lastModifiedDate":"2021-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     * Creates a SmartLib using the SmartLib data in the {@code toBeCopied}","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     * @param toBeCopied data of a SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"gycc7253"},"content":"    public SmartLib(ReadOnlySmartLib toBeCopied) {","lastModifiedDate":"2021-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"GJ0407790"},"content":"     * Replaces the contents of the book list with {@code books}.","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"GJ0407790"},"content":"     * {@code books} must not contain duplicate books.","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"     * @param books new list of books.","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"GJ0407790"},"content":"    public void setBooks(List\u003cBook\u003e books) {","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"GJ0407790"},"content":"        this.books.setBooks(books);","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     * Replaces the contents of the reader list with {@code readers}.","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"     * {@code readers} must not contain duplicate readers.","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"     * @param readers new list of readers.","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"    public void setReaders(List\u003cReader\u003e readers) {","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"        this.readers.setReaders(readers);","lastModifiedDate":"2021-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"gycc7253"},"content":"     * Replaces the contents of the record list with {@code records}.","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"gycc7253"},"content":"     * {@code records} must not contain duplicate records.","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"     * @param records new list of records.","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"gycc7253"},"content":"    public void setRecords(List\u003cRecord\u003e records) {","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"gycc7253"},"content":"        this.records.setRecords(records);","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"     * Resets the existing data of this {@code SmartLib} with {@code newData}.","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"     * @param newData an empty SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"gycc7253"},"content":"    public void resetData(ReadOnlySmartLib newData) {","lastModifiedDate":"2021-02-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":102,"author":{"gitId":"GJ0407790"},"content":"        setBooks(newData.getBookList());","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"arsatis"},"content":"        setReaders(newData.getReaderList());","lastModifiedDate":"2021-03-07"},{"lineNumber":104,"author":{"gitId":"gycc7253"},"content":"        setRecords(newData.getRecordList());","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"arsatis"},"content":"    //// reader-level operations","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"Nanxi-Huang"},"content":"     * Returns true if a reader with the same identity as {@code reader} exists in the registered reader base.","lastModifiedDate":"2021-03-06"},{"lineNumber":111,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"arsatis"},"content":"     * @param reader reader to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"arsatis"},"content":"     * @return true if a reader with the same identity as {@code reader} exists in the registered reader base, and","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"arsatis"},"content":"     * false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"Nanxi-Huang"},"content":"    public boolean hasReader(Reader reader) {","lastModifiedDate":"2021-03-06"},{"lineNumber":117,"author":{"gitId":"gycc7253"},"content":"        requireNonNull(reader);","lastModifiedDate":"2021-02-19"},{"lineNumber":118,"author":{"gitId":"Nanxi-Huang"},"content":"        return readers.contains(reader);","lastModifiedDate":"2021-03-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":122,"author":{"gitId":"arsatis"},"content":"     * Returns true if a reader with the same name as {@code readerName} exists in the registered reader base.","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"arsatis"},"content":"     * @param readerName name of the reader to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"arsatis"},"content":"     * @return true if a reader with the same name as {@code readerName} exists in the registered reader base, and","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"arsatis"},"content":"     * false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":128,"author":{"gitId":"gycc7253"},"content":"    public boolean hasReader(Name readerName) {","lastModifiedDate":"2021-03-20"},{"lineNumber":129,"author":{"gitId":"gycc7253"},"content":"        requireNonNull(readerName);","lastModifiedDate":"2021-03-21"},{"lineNumber":130,"author":{"gitId":"gycc7253"},"content":"        return getReaderByName(readerName) !\u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":131,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":132,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":133,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":134,"author":{"gitId":"arsatis"},"content":"     * Returns the reader whose name is specified by readerName.","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"arsatis"},"content":"     * @param readerName name of the specified reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"arsatis"},"content":"     * @return reader whose name is specified by readerName.","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":139,"author":{"gitId":"gycc7253"},"content":"    public Reader getReaderByName(Name readerName) {","lastModifiedDate":"2021-03-21"},{"lineNumber":140,"author":{"gitId":"gycc7253"},"content":"        requireNonNull(readerName);","lastModifiedDate":"2021-03-20"},{"lineNumber":141,"author":{"gitId":"gycc7253"},"content":"        for (Reader reader : readers) {","lastModifiedDate":"2021-03-20"},{"lineNumber":142,"author":{"gitId":"gycc7253"},"content":"            if (reader.getName().equals(readerName)) {","lastModifiedDate":"2021-03-20"},{"lineNumber":143,"author":{"gitId":"gycc7253"},"content":"                return reader;","lastModifiedDate":"2021-03-21"},{"lineNumber":144,"author":{"gitId":"gycc7253"},"content":"            }","lastModifiedDate":"2021-03-20"},{"lineNumber":145,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":146,"author":{"gitId":"gycc7253"},"content":"        return null;","lastModifiedDate":"2021-03-21"},{"lineNumber":147,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":148,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":149,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":150,"author":{"gitId":"arsatis"},"content":"     * Returns true if the reader has already borrowed a book.","lastModifiedDate":"2021-03-27"},{"lineNumber":151,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"arsatis"},"content":"     * @param readerName must exist in reader base.","lastModifiedDate":"2021-03-27"},{"lineNumber":153,"author":{"gitId":"arsatis"},"content":"     * @return true if the reader has neither borrowed all quota of books nor has overdue books, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":155,"author":{"gitId":"gycc7253"},"content":"    public boolean canReaderBorrow(Name readerName) {","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"gycc7253"},"content":"        requireNonNull(readerName);","lastModifiedDate":"2021-03-21"},{"lineNumber":157,"author":{"gitId":"gycc7253"},"content":"        Reader reader \u003d getReaderByName(readerName);","lastModifiedDate":"2021-03-21"},{"lineNumber":158,"author":{"gitId":"gycc7253"},"content":"        if (reader \u003d\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":159,"author":{"gitId":"gycc7253"},"content":"            return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"gycc7253"},"content":"        } else {","lastModifiedDate":"2021-03-21"},{"lineNumber":161,"author":{"gitId":"gycc7253"},"content":"            return !hasReaderUsedUpQuota(reader) \u0026\u0026 !hasReaderOverdueBooks(reader);","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":164,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":165,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":166,"author":{"gitId":"arsatis"},"content":"     * Checks if a reader has used up his borrowing quota.","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"arsatis"},"content":"     * @param reader reader to check, non null.","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"arsatis"},"content":"     * @return true if the reader has reached his or her borrowed QUOTA.","lastModifiedDate":"2021-03-27"},{"lineNumber":170,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":171,"author":{"gitId":"gycc7253"},"content":"    public boolean hasReaderUsedUpQuota(Reader reader) {","lastModifiedDate":"2021-03-23"},{"lineNumber":172,"author":{"gitId":"gycc7253"},"content":"        return reader.getBorrows().size() \u003d\u003d QUOTA;","lastModifiedDate":"2021-03-23"},{"lineNumber":173,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":174,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":175,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":176,"author":{"gitId":"arsatis"},"content":"     * Checks if a reader has overdue books.","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"arsatis"},"content":"     * @param reader reader to check, non null.","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"arsatis"},"content":"     * @return true if the reader has overdue books, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":181,"author":{"gitId":"gycc7253"},"content":"    public boolean hasReaderOverdueBooks(Reader reader) {","lastModifiedDate":"2021-03-23"},{"lineNumber":182,"author":{"gitId":"gycc7253"},"content":"        return reader.hasOverdueBooks();","lastModifiedDate":"2021-03-23"},{"lineNumber":183,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":184,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":185,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":186,"author":{"gitId":"gycc7253"},"content":"     * Returns true if a record with the same identity as {@code record} exists in the registered record base.","lastModifiedDate":"2021-03-13"},{"lineNumber":187,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":188,"author":{"gitId":"arsatis"},"content":"     * @param record record to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":189,"author":{"gitId":"arsatis"},"content":"     * @return true if a record with the same identity as {@code record} exists in the registered record base, and","lastModifiedDate":"2021-03-27"},{"lineNumber":190,"author":{"gitId":"arsatis"},"content":"     * false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":191,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":192,"author":{"gitId":"gycc7253"},"content":"    public boolean hasRecord(Record record) {","lastModifiedDate":"2021-03-13"},{"lineNumber":193,"author":{"gitId":"gycc7253"},"content":"        requireNonNull(record);","lastModifiedDate":"2021-03-13"},{"lineNumber":194,"author":{"gitId":"gycc7253"},"content":"        return records.contains(record);","lastModifiedDate":"2021-03-13"},{"lineNumber":195,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":196,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":198,"author":{"gitId":"Nanxi-Huang"},"content":"     * Adds a reader to the registered reader base.","lastModifiedDate":"2021-03-06"},{"lineNumber":199,"author":{"gitId":"Nanxi-Huang"},"content":"     * The reader must not already exist in the registered reader base.","lastModifiedDate":"2021-03-06"},{"lineNumber":200,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":201,"author":{"gitId":"arsatis"},"content":"     * @param p reader to be added.","lastModifiedDate":"2021-03-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":203,"author":{"gitId":"Nanxi-Huang"},"content":"    public void addReader(Reader p) {","lastModifiedDate":"2021-03-06"},{"lineNumber":204,"author":{"gitId":"Nanxi-Huang"},"content":"        readers.addReader(p);","lastModifiedDate":"2021-03-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":208,"author":{"gitId":"gycc7253"},"content":"     * Adds a record to the registered record base.","lastModifiedDate":"2021-03-13"},{"lineNumber":209,"author":{"gitId":"gycc7253"},"content":"     * The record must not already exist in the registered record base.","lastModifiedDate":"2021-03-13"},{"lineNumber":210,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":211,"author":{"gitId":"arsatis"},"content":"     * @param r record to be added.","lastModifiedDate":"2021-03-27"},{"lineNumber":212,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":213,"author":{"gitId":"gycc7253"},"content":"    public void addRecord(Record r) {","lastModifiedDate":"2021-03-13"},{"lineNumber":214,"author":{"gitId":"gycc7253"},"content":"        records.addRecord(r);","lastModifiedDate":"2021-03-13"},{"lineNumber":215,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":216,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":218,"author":{"gitId":"arsatis"},"content":"     * Replaces the given reader {@code target} in the list with {@code editedReader}.","lastModifiedDate":"2021-03-13"},{"lineNumber":219,"author":{"gitId":"arsatis"},"content":"     * {@code target} must exist in SmartLib.","lastModifiedDate":"2021-03-13"},{"lineNumber":220,"author":{"gitId":"arsatis"},"content":"     * The reader identity of {@code editedReader} must not be the same as another existing reader in SmartLib.","lastModifiedDate":"2021-03-13"},{"lineNumber":221,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":222,"author":{"gitId":"arsatis"},"content":"     * @param target reader to be replaced.","lastModifiedDate":"2021-03-27"},{"lineNumber":223,"author":{"gitId":"arsatis"},"content":"     * @param editedReader the new reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":225,"author":{"gitId":"arsatis"},"content":"    public void setReader(Reader target, Reader editedReader) {","lastModifiedDate":"2021-03-07"},{"lineNumber":226,"author":{"gitId":"gycc7253"},"content":"        requireNonNull(editedReader);","lastModifiedDate":"2021-02-19"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":228,"author":{"gitId":"arsatis"},"content":"        readers.setReader(target, editedReader);","lastModifiedDate":"2021-03-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":231,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":232,"author":{"gitId":"gycc7253"},"content":"     * Replaces the given book {@code target} in the list with {@code editedBook}.","lastModifiedDate":"2021-03-21"},{"lineNumber":233,"author":{"gitId":"gycc7253"},"content":"     * {@code target} must exist in SmartLib.","lastModifiedDate":"2021-03-21"},{"lineNumber":234,"author":{"gitId":"gycc7253"},"content":"     * The book identity of {@code editedBook} must not be the same as another existing book in SmartLib.","lastModifiedDate":"2021-03-21"},{"lineNumber":235,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":236,"author":{"gitId":"arsatis"},"content":"     * @param target book to be replaced.","lastModifiedDate":"2021-03-27"},{"lineNumber":237,"author":{"gitId":"arsatis"},"content":"     * @param editedBook the new book.","lastModifiedDate":"2021-03-27"},{"lineNumber":238,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":239,"author":{"gitId":"gycc7253"},"content":"    public void setBook(Book target, Book editedBook) {","lastModifiedDate":"2021-03-21"},{"lineNumber":240,"author":{"gitId":"gycc7253"},"content":"        requireNonNull(editedBook);","lastModifiedDate":"2021-03-21"},{"lineNumber":241,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":242,"author":{"gitId":"gycc7253"},"content":"        books.setBook(target, editedBook);","lastModifiedDate":"2021-03-21"},{"lineNumber":243,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":244,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":246,"author":{"gitId":"Nanxi-Huang"},"content":"     * Removes {@code key} from this {@code SmartLib}.","lastModifiedDate":"2021-03-07"},{"lineNumber":247,"author":{"gitId":"Nanxi-Huang"},"content":"     * {@code key} must exist in the SmartLib registered reader base.","lastModifiedDate":"2021-03-07"},{"lineNumber":248,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":249,"author":{"gitId":"arsatis"},"content":"     * @param key reader to be deleted.","lastModifiedDate":"2021-03-27"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":251,"author":{"gitId":"Nanxi-Huang"},"content":"    public void removeReader(Reader key) {","lastModifiedDate":"2021-03-07"},{"lineNumber":252,"author":{"gitId":"Nanxi-Huang"},"content":"        readers.remove(key);","lastModifiedDate":"2021-03-06"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"GJ0407790"},"content":"    //// book-level operations","lastModifiedDate":"2021-03-14"},{"lineNumber":256,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":257,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":258,"author":{"gitId":"GJ0407790"},"content":"     * Returns true if a book with the same identity as {@code book} exists in the registered book base.","lastModifiedDate":"2021-03-14"},{"lineNumber":259,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":260,"author":{"gitId":"arsatis"},"content":"     * @param book book to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":261,"author":{"gitId":"arsatis"},"content":"     * @return true if a book with the same identity as {@code book} exists in the registered book base, and false","lastModifiedDate":"2021-03-27"},{"lineNumber":262,"author":{"gitId":"arsatis"},"content":"     * otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":263,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":264,"author":{"gitId":"GJ0407790"},"content":"    public boolean hasBook(Book book) {","lastModifiedDate":"2021-03-14"},{"lineNumber":265,"author":{"gitId":"GJ0407790"},"content":"        requireNonNull(book);","lastModifiedDate":"2021-03-14"},{"lineNumber":266,"author":{"gitId":"GJ0407790"},"content":"        return books.contains(book);","lastModifiedDate":"2021-03-14"},{"lineNumber":267,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":268,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":269,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":270,"author":{"gitId":"arsatis"},"content":"     * Returns true if a book with the same name as {@code bookName} exists in the registered book base.","lastModifiedDate":"2021-03-27"},{"lineNumber":271,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":272,"author":{"gitId":"arsatis"},"content":"     * @param bookName name of the book to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":273,"author":{"gitId":"arsatis"},"content":"     * @return true if a book with the same name as {@code bookName} exists in the registered book base, and false","lastModifiedDate":"2021-03-27"},{"lineNumber":274,"author":{"gitId":"arsatis"},"content":"     * otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":275,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":276,"author":{"gitId":"gycc7253"},"content":"    public boolean hasBook(Name bookName) {","lastModifiedDate":"2021-03-20"},{"lineNumber":277,"author":{"gitId":"gycc7253"},"content":"        requireNonNull(bookName);","lastModifiedDate":"2021-03-21"},{"lineNumber":278,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":279,"author":{"gitId":"arsatis"},"content":"        ArrayList\u003cBook\u003e booksWithName \u003d getBooksByName(bookName);","lastModifiedDate":"2021-03-27"},{"lineNumber":280,"author":{"gitId":"arsatis"},"content":"        requireNonNull(booksWithName);","lastModifiedDate":"2021-03-27"},{"lineNumber":281,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":282,"author":{"gitId":"arsatis"},"content":"        return booksWithName.size() \u003e 0;","lastModifiedDate":"2021-03-27"},{"lineNumber":283,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":284,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":285,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":286,"author":{"gitId":"arsatis"},"content":"     * Returns true if a book with the same barcode as {@code book} exists in the registered book base.","lastModifiedDate":"2021-03-25"},{"lineNumber":287,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":288,"author":{"gitId":"arsatis"},"content":"     * @param barcode barcode of the book to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":289,"author":{"gitId":"arsatis"},"content":"     * @return true if a book with the same barcode as {@code book} exists in the registered book base, and false","lastModifiedDate":"2021-03-27"},{"lineNumber":290,"author":{"gitId":"arsatis"},"content":"     * otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":291,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":292,"author":{"gitId":"arsatis"},"content":"    public boolean hasBookWithBarcode(Barcode barcode) {","lastModifiedDate":"2021-03-25"},{"lineNumber":293,"author":{"gitId":"arsatis"},"content":"        requireNonNull(barcode);","lastModifiedDate":"2021-03-25"},{"lineNumber":294,"author":{"gitId":"arsatis"},"content":"        assert(Barcode.isValidBarcode(barcode.getValue()));","lastModifiedDate":"2021-03-25"},{"lineNumber":295,"author":{"gitId":"arsatis"},"content":"        return getBookByBarcode(barcode) !\u003d null;","lastModifiedDate":"2021-03-25"},{"lineNumber":296,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":297,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":298,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":299,"author":{"gitId":"arsatis"},"content":"     * Retrieves the Book object whose barcode is specified by the given input.","lastModifiedDate":"2021-03-27"},{"lineNumber":300,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":301,"author":{"gitId":"arsatis"},"content":"     * @param barcode Book\u0027s barcode.","lastModifiedDate":"2021-03-27"},{"lineNumber":302,"author":{"gitId":"arsatis"},"content":"     * @return Book Object, null if does not exist.","lastModifiedDate":"2021-03-27"},{"lineNumber":303,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":304,"author":{"gitId":"arsatis"},"content":"    private Book getBookByBarcode(Barcode barcode) {","lastModifiedDate":"2021-03-25"},{"lineNumber":305,"author":{"gitId":"arsatis"},"content":"        requireNonNull(barcode);","lastModifiedDate":"2021-03-25"},{"lineNumber":306,"author":{"gitId":"arsatis"},"content":"        assert(Barcode.isValidBarcode(barcode.getValue()));","lastModifiedDate":"2021-03-25"},{"lineNumber":307,"author":{"gitId":"arsatis"},"content":"        for (Book book: books) {","lastModifiedDate":"2021-03-25"},{"lineNumber":308,"author":{"gitId":"arsatis"},"content":"            if (book.getBarcode().equals(barcode)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":309,"author":{"gitId":"arsatis"},"content":"                return book;","lastModifiedDate":"2021-03-25"},{"lineNumber":310,"author":{"gitId":"arsatis"},"content":"            }","lastModifiedDate":"2021-03-25"},{"lineNumber":311,"author":{"gitId":"arsatis"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":312,"author":{"gitId":"arsatis"},"content":"        return null;","lastModifiedDate":"2021-03-25"},{"lineNumber":313,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":314,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":315,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":316,"author":{"gitId":"arsatis"},"content":"     * Retrieves a list of Book objects whose name is specified by bookName.","lastModifiedDate":"2021-03-27"},{"lineNumber":317,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":318,"author":{"gitId":"arsatis"},"content":"     * @param bookName Book\u0027s name.","lastModifiedDate":"2021-03-27"},{"lineNumber":319,"author":{"gitId":"arsatis"},"content":"     * @return list of Book objects, an empty list if there is no such book.","lastModifiedDate":"2021-03-27"},{"lineNumber":320,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":321,"author":{"gitId":"arsatis"},"content":"    public ArrayList\u003cBook\u003e getBooksByName(Name bookName) {","lastModifiedDate":"2021-03-27"},{"lineNumber":322,"author":{"gitId":"gycc7253"},"content":"        requireNonNull(bookName);","lastModifiedDate":"2021-03-20"},{"lineNumber":323,"author":{"gitId":"arsatis"},"content":"        ArrayList\u003cBook\u003e booksWithName \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":324,"author":{"gitId":"gycc7253"},"content":"        for (Book book : books) {","lastModifiedDate":"2021-03-20"},{"lineNumber":325,"author":{"gitId":"gycc7253"},"content":"            if (book.getName().equals(bookName)) {","lastModifiedDate":"2021-03-20"},{"lineNumber":326,"author":{"gitId":"arsatis"},"content":"                booksWithName.add(book);","lastModifiedDate":"2021-03-27"},{"lineNumber":327,"author":{"gitId":"gycc7253"},"content":"            }","lastModifiedDate":"2021-03-20"},{"lineNumber":328,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":329,"author":{"gitId":"arsatis"},"content":"        return booksWithName;","lastModifiedDate":"2021-03-27"},{"lineNumber":330,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":331,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":332,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":333,"author":{"gitId":"arsatis"},"content":"     * Returns true if a book with the same barcode as {@code barcode} is already borrowed.","lastModifiedDate":"2021-03-27"},{"lineNumber":334,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":335,"author":{"gitId":"arsatis"},"content":"     * @param barcode barcode of book, which must exist in the book base.","lastModifiedDate":"2021-03-27"},{"lineNumber":336,"author":{"gitId":"arsatis"},"content":"     * @return true if the book is borrowed, or if the book is not found.","lastModifiedDate":"2021-03-27"},{"lineNumber":337,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":338,"author":{"gitId":"arsatis"},"content":"    public boolean isBookWithBarcodeBorrowed(Barcode barcode) {","lastModifiedDate":"2021-03-27"},{"lineNumber":339,"author":{"gitId":"arsatis"},"content":"        requireNonNull(barcode);","lastModifiedDate":"2021-03-27"},{"lineNumber":340,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":341,"author":{"gitId":"arsatis"},"content":"        for (Book book : books) {","lastModifiedDate":"2021-03-27"},{"lineNumber":342,"author":{"gitId":"arsatis"},"content":"            if (book.getBarcode().equals(barcode)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":343,"author":{"gitId":"arsatis"},"content":"                if (book.isBorrowed()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":344,"author":{"gitId":"gycc7253"},"content":"                    return true;","lastModifiedDate":"2021-03-21"},{"lineNumber":345,"author":{"gitId":"arsatis"},"content":"                }","lastModifiedDate":"2021-03-27"},{"lineNumber":346,"author":{"gitId":"gycc7253"},"content":"            }","lastModifiedDate":"2021-03-21"},{"lineNumber":347,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":348,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":349,"author":{"gitId":"arsatis"},"content":"        return false;","lastModifiedDate":"2021-03-27"},{"lineNumber":350,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":351,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":352,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":353,"author":{"gitId":"GJ0407790"},"content":"     * Adds a book to the registered book base.","lastModifiedDate":"2021-03-14"},{"lineNumber":354,"author":{"gitId":"GJ0407790"},"content":"     * The book must not already exist in the registered book base.","lastModifiedDate":"2021-03-14"},{"lineNumber":355,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":356,"author":{"gitId":"arsatis"},"content":"     * @param toAdd book to be added.","lastModifiedDate":"2021-03-27"},{"lineNumber":357,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":358,"author":{"gitId":"GJ0407790"},"content":"    public void addBook(Book toAdd) {","lastModifiedDate":"2021-03-14"},{"lineNumber":359,"author":{"gitId":"GJ0407790"},"content":"        books.addBook(toAdd);","lastModifiedDate":"2021-03-14"},{"lineNumber":360,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":361,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":362,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":363,"author":{"gitId":"GJ0407790"},"content":"     * Removes {@code book} from this {@code SmartLib}.","lastModifiedDate":"2021-03-14"},{"lineNumber":364,"author":{"gitId":"GJ0407790"},"content":"     * {@code book} must exist in the SmartLib registered book base.","lastModifiedDate":"2021-03-14"},{"lineNumber":365,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":366,"author":{"gitId":"arsatis"},"content":"     * @param book book to be deleted.","lastModifiedDate":"2021-03-27"},{"lineNumber":367,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":368,"author":{"gitId":"GJ0407790"},"content":"    public void removeBook(Book book) {","lastModifiedDate":"2021-03-14"},{"lineNumber":369,"author":{"gitId":"GJ0407790"},"content":"        books.remove(book);","lastModifiedDate":"2021-03-14"},{"lineNumber":370,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":371,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":374,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":375,"author":{"gitId":"arsatis"},"content":"     * Returns the current size of this SmartLib in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":376,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":377,"author":{"gitId":"arsatis"},"content":"     * @return the current size of this SmartLib in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":378,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":381,"author":{"gitId":"Andrewzhang217"},"content":"        return readers.asUnmodifiableObservableList().size() + \" readers\"","lastModifiedDate":"2021-03-15"},{"lineNumber":382,"author":{"gitId":"gycc7253"},"content":"                + \"\\n\" + records.asUnmodifiableObservableList().size() + \" records\";","lastModifiedDate":"2021-03-13"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":385,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":386,"author":{"gitId":"arsatis"},"content":"     * Returns the list of books in SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":387,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":388,"author":{"gitId":"arsatis"},"content":"     * @return the list of books in SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":389,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":390,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":391,"author":{"gitId":"GJ0407790"},"content":"    public ObservableList\u003cBook\u003e getBookList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":392,"author":{"gitId":"GJ0407790"},"content":"        return books.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-14"},{"lineNumber":393,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":394,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":395,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":396,"author":{"gitId":"arsatis"},"content":"     * Returns the list of readers in SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":397,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":398,"author":{"gitId":"arsatis"},"content":"     * @return the list of readers in SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":399,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":401,"author":{"gitId":"arsatis"},"content":"    public ObservableList\u003cReader\u003e getReaderList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":402,"author":{"gitId":"Nanxi-Huang"},"content":"        return readers.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-06"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":405,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":406,"author":{"gitId":"arsatis"},"content":"     * Returns the list of records in SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":407,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":408,"author":{"gitId":"arsatis"},"content":"     * @return the list of records in SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":409,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":410,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":411,"author":{"gitId":"gycc7253"},"content":"    public ObservableList\u003cRecord\u003e getRecordList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":412,"author":{"gitId":"gycc7253"},"content":"        return records.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-13"},{"lineNumber":413,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":414,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":415,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":416,"author":{"gitId":"arsatis"},"content":"     * Checks if this SmartLib is equal to another SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":417,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":418,"author":{"gitId":"arsatis"},"content":"     * @param other the other SmartLib to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":419,"author":{"gitId":"arsatis"},"content":"     * @return true if this SmartLib is equal to the other SmartLib, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":420,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":424,"author":{"gitId":"gycc7253"},"content":"                || (other instanceof SmartLib // instanceof handles nulls","lastModifiedDate":"2021-02-19"},{"lineNumber":425,"author":{"gitId":"GJ0407790"},"content":"                \u0026\u0026 readers.equals(((SmartLib) other).readers));","lastModifiedDate":"2021-03-14"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":428,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":429,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":430,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":431,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":432,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":434,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":435,"author":{"gitId":"Nanxi-Huang"},"content":"        return readers.hashCode();","lastModifiedDate":"2021-03-06"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":437,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":438,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":439,"author":{"gitId":"arsatis"},"content":"     * Updates the reader\u0027s and book\u0027s statuses after borrowing.","lastModifiedDate":"2021-03-27"},{"lineNumber":440,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":441,"author":{"gitId":"arsatis"},"content":"     * @param readerName readerName, must exist in reader base and must satisfy requirement for borrowing","lastModifiedDate":"2021-03-27"},{"lineNumber":442,"author":{"gitId":"arsatis"},"content":"     * @param barcode barcode of book, must exist in book base","lastModifiedDate":"2021-03-27"},{"lineNumber":443,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":444,"author":{"gitId":"arsatis"},"content":"    public boolean borrowBook(Name readerName, Barcode barcode) {","lastModifiedDate":"2021-03-27"},{"lineNumber":445,"author":{"gitId":"gycc7253"},"content":"        Reader reader \u003d getReaderByName(readerName);","lastModifiedDate":"2021-03-21"},{"lineNumber":446,"author":{"gitId":"arsatis"},"content":"        if (reader \u003d\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":447,"author":{"gitId":"gycc7253"},"content":"            return false;","lastModifiedDate":"2021-03-21"},{"lineNumber":448,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":449,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":450,"author":{"gitId":"arsatis"},"content":"        Book book \u003d getBookByBarcode(barcode);","lastModifiedDate":"2021-03-27"},{"lineNumber":451,"author":{"gitId":"arsatis"},"content":"        if (book \u003d\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":452,"author":{"gitId":"gycc7253"},"content":"            return false;","lastModifiedDate":"2021-03-21"},{"lineNumber":453,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":454,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":455,"author":{"gitId":"arsatis"},"content":"        if (!book.isBorrowed()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":456,"author":{"gitId":"GJ0407790"},"content":"            reader.getBorrows().put(book, new DateBorrowed(LocalDateTime.now()));","lastModifiedDate":"2021-03-28"},{"lineNumber":457,"author":{"gitId":"gycc7253"},"content":"            Reader editedReader \u003d new Reader(reader.getName(), reader.getPhone(), reader.getEmail(),","lastModifiedDate":"2021-03-23"},{"lineNumber":458,"author":{"gitId":"gycc7253"},"content":"                    reader.getAddress(), reader.getTags(), reader.getBorrows());","lastModifiedDate":"2021-03-23"},{"lineNumber":459,"author":{"gitId":"Nanxi-Huang"},"content":"            Book editedBook \u003d new Book(book.getName(), book.getAuthor(), book.getPublisher(),","lastModifiedDate":"2021-03-23"},{"lineNumber":460,"author":{"gitId":"arsatis"},"content":"                    book.getIsbn(), book.getBarcode(), book.getGenre(), readerName);","lastModifiedDate":"2021-03-25"},{"lineNumber":461,"author":{"gitId":"gycc7253"},"content":"            setReader(reader, editedReader);","lastModifiedDate":"2021-03-23"},{"lineNumber":462,"author":{"gitId":"gycc7253"},"content":"            setBook(book, editedBook);","lastModifiedDate":"2021-03-23"},{"lineNumber":463,"author":{"gitId":"gycc7253"},"content":"            return true;","lastModifiedDate":"2021-03-23"},{"lineNumber":464,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":465,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":466,"author":{"gitId":"arsatis"},"content":"        return false;","lastModifiedDate":"2021-03-27"},{"lineNumber":467,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":468,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":469,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":470,"author":{"gitId":"arsatis"},"content":"     * Updates the reader\u0027s and book\u0027s statuses after returning.","lastModifiedDate":"2021-03-27"},{"lineNumber":471,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":472,"author":{"gitId":"gycc7253"},"content":"     * @param readerName readerName, must exist in reader base","lastModifiedDate":"2021-03-23"},{"lineNumber":473,"author":{"gitId":"arsatis"},"content":"     * @param barcode barcode of book, must exist in book base","lastModifiedDate":"2021-03-27"},{"lineNumber":474,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":475,"author":{"gitId":"arsatis"},"content":"    public boolean returnBook(Name readerName, Barcode barcode) {","lastModifiedDate":"2021-03-27"},{"lineNumber":476,"author":{"gitId":"gycc7253"},"content":"        Reader reader \u003d getReaderByName(readerName);","lastModifiedDate":"2021-03-23"},{"lineNumber":477,"author":{"gitId":"arsatis"},"content":"        if (reader \u003d\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":478,"author":{"gitId":"gycc7253"},"content":"            return false;","lastModifiedDate":"2021-03-21"},{"lineNumber":479,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":480,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":481,"author":{"gitId":"arsatis"},"content":"        Book book \u003d getBookByBarcode(barcode);","lastModifiedDate":"2021-03-27"},{"lineNumber":482,"author":{"gitId":"arsatis"},"content":"        if (book \u003d\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":483,"author":{"gitId":"gycc7253"},"content":"            return false;","lastModifiedDate":"2021-03-21"},{"lineNumber":484,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":485,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":486,"author":{"gitId":"arsatis"},"content":"        if (!reader.getBorrows().containsKey(book) || !book.getBorrowerName().equals(readerName)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":487,"author":{"gitId":"gycc7253"},"content":"            System.out.println(reader.getBorrows());","lastModifiedDate":"2021-03-23"},{"lineNumber":488,"author":{"gitId":"gycc7253"},"content":"            System.out.println(book.getBorrowerName());","lastModifiedDate":"2021-03-23"},{"lineNumber":489,"author":{"gitId":"arsatis"},"content":"            System.out.println(\"Reader did not borrow the book, or Book was not borrowed to the reader.\");","lastModifiedDate":"2021-03-27"},{"lineNumber":490,"author":{"gitId":"gycc7253"},"content":"            return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":491,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":492,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":493,"author":{"gitId":"arsatis"},"content":"        reader.getBorrows().remove(book);","lastModifiedDate":"2021-03-27"},{"lineNumber":494,"author":{"gitId":"gycc7253"},"content":"        Reader editedReader \u003d new Reader(reader.getName(), reader.getPhone(), reader.getEmail(),","lastModifiedDate":"2021-03-21"},{"lineNumber":495,"author":{"gitId":"gycc7253"},"content":"                reader.getAddress(), reader.getTags(), reader.getBorrows());","lastModifiedDate":"2021-03-23"},{"lineNumber":496,"author":{"gitId":"arsatis"},"content":"        Book editedBook \u003d new Book(book.getName(), book.getAuthor(), book.getPublisher(), book.getIsbn(),","lastModifiedDate":"2021-03-27"},{"lineNumber":497,"author":{"gitId":"arsatis"},"content":"                book.getBarcode(), book.getGenre());","lastModifiedDate":"2021-03-27"},{"lineNumber":498,"author":{"gitId":"gycc7253"},"content":"        setReader(reader, editedReader);","lastModifiedDate":"2021-03-21"},{"lineNumber":499,"author":{"gitId":"gycc7253"},"content":"        setBook(book, editedBook);","lastModifiedDate":"2021-03-21"},{"lineNumber":500,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":501,"author":{"gitId":"gycc7253"},"content":"        return true;","lastModifiedDate":"2021-03-21"},{"lineNumber":502,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":503,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":504,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"arsatis":201,"Nanxi-Huang":17,"GJ0407790":49,"gycc7253":160,"-":76,"Andrewzhang217":1}},{"path":"src/main/java/seedu/smartlib/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.GuiSettings;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":" * Represents the User\u0027s preferences.","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    private Path smartLibFilePath \u003d Paths.get(\"data\" , \"smartlib.json\");","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * @param userPrefs the user\u0027s preferences.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"     * @param newUserPrefs a blank copy of userPrefs.","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"        setSmartLibFilePath(newUserPrefs.getSmartLibFilePath());","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     * Returns the GUI settings of the userPrefs.","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     * @return the GUI settings of the userPrefs.","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     * Updates the GUI settings of the userPrefs.","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"     * @param guiSettings the new GUI settings.","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"     * Returns the file path to SmartLib registered in the userPrefs.","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"     * @return the file path to SmartLib registered in the userPrefs.","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"    public Path getSmartLibFilePath() {","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"        return smartLibFilePath;","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     * Updates the file path to SmartLib registered in the userPrefs.","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"     * @param smartLibFilePath the new file path to SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"    public void setSmartLibFilePath(Path smartLibFilePath) {","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"        requireNonNull(smartLibFilePath);","lastModifiedDate":"2021-03-07"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"        this.smartLibFilePath \u003d smartLibFilePath;","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"     * Checks if this UserPrefs object is equal to another UserPrefs object.","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"     * @param other the other UserPrefs object to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"     * @return true if this UserPrefs object is equal to the other UserPrefs object, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"arsatis"},"content":"                \u0026\u0026 smartLibFilePath.equals(o.smartLibFilePath);","lastModifiedDate":"2021-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this UserPrefs object.","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this UserPrefs object.","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"arsatis"},"content":"        return Objects.hash(guiSettings, smartLibFilePath);","lastModifiedDate":"2021-03-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"arsatis"},"content":"     * Returns this UserPrefs object in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"arsatis"},"content":"     * @return this UserPrefs object in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"arsatis"},"content":"        sb.append(\"\\nLocal data file location : \" + smartLibFilePath);","lastModifiedDate":"2021-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"arsatis":51,"gycc7253":2,"-":74}},{"path":"src/main/java/seedu/smartlib/model/book/Author.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"package seedu.smartlib.model.book;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"/**","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":" * Represents an author in SmartLib.","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":" */","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"public class Author {","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"            \"Author\u0027s names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"    private final Name fullName;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"     * Constructs an {@code Author}.","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"     *","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"     * @param fullName A valid full name of the author.","lastModifiedDate":"2021-03-05"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"    public Author(Name fullName) {","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"        this.fullName \u003d fullName;","lastModifiedDate":"2021-03-05"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"     * Returns true if a given string is a valid author\u0027s name.","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * @param test the string to be tested.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     * @return true if a given string is a valid author\u0027s name, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"    public static boolean isValidAuthor(String test) {","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"        return Name.isValidName(test);","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * Returns this Author in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"     * @return this Author in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":40,"author":{"gitId":"GJ0407790"},"content":"    public String toString() {","lastModifiedDate":"2021-03-05"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"        return fullName.toString();","lastModifiedDate":"2021-03-05"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":43,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     * Checks if this Author is equal to another Author.","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     * @param other the other Author to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     * @return true if this Author is equal to the other Author, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":51,"author":{"gitId":"GJ0407790"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-05"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-05"},{"lineNumber":53,"author":{"gitId":"GJ0407790"},"content":"                || (other instanceof Author // instanceof handles nulls","lastModifiedDate":"2021-03-05"},{"lineNumber":54,"author":{"gitId":"GJ0407790"},"content":"                \u0026\u0026 fullName.equals(((Author) other).fullName)); // state check","lastModifiedDate":"2021-03-05"},{"lineNumber":55,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":56,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":57,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"     * Generates a hashCode for this Author object.","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"     * @return hashCode of Author.","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":63,"author":{"gitId":"GJ0407790"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-05"},{"lineNumber":64,"author":{"gitId":"GJ0407790"},"content":"        return fullName.hashCode();","lastModifiedDate":"2021-03-05"},{"lineNumber":65,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":66,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":67,"author":{"gitId":"GJ0407790"},"content":"}","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"arsatis":17,"GJ0407790":45,"gycc7253":2,"Andrewzhang217":3}},{"path":"src/main/java/seedu/smartlib/model/book/Barcode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package seedu.smartlib.model.book;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" * Represents an Barcode of a book in SmartLib.","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBarcode(int)}.","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"public class Barcode {","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"    public static final int MIN_VALUE \u003d 1000000000;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"    public static final int MAX_VALUE \u003d 2000000000;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    public static final int TEMP_BARCODE_VALUE \u003d 0;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"            \"Barcodes should only contain numbers, and it should only contain 10 digits.\";","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    private final int value;","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     * Constructs a {@code barcode}.","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"     * @param barcode A valid barcode.","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"    public Barcode(int barcode) {","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"        assert(isValidBarcode(barcode));","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"        checkArgument(isValidBarcode(barcode), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"        value \u003d barcode;","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * Returns the value of the barcode.","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * @return The value of the barcode.","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"    public int getValue() {","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"        return value;","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     * Returns true if a given int is a valid barcode.","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     * @param barcode integer to be tested.","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     * @return true if a given int is a valid barcode.","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"    public static boolean isValidBarcode(int barcode) {","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"        return (barcode \u003e\u003d Barcode.MIN_VALUE \u0026\u0026 barcode \u003c\u003d Barcode.MAX_VALUE)","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"                || barcode \u003d\u003d TEMP_BARCODE_VALUE;","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     * Returns this Barcode in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     * @return this Barcode in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"    public String toString() {","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"        return value + \"\";","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     * Checks if this Barcode is equal to another Barcode.","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"     * @param other the other Barcode to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"     * @return true if this Barcode is equal to the other Barcode, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"                || (other instanceof Barcode // instanceof handles nulls","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"                \u0026\u0026 value \u003d\u003d ((Barcode) other).value); // state check","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this Barcode.","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this Barcode.","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"        return toString().hashCode();","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"arsatis":84}},{"path":"src/main/java/seedu/smartlib/model/book/Book.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.book;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":" * Represents a book in SmartLib.","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"public class Book {","lastModifiedDate":"2021-02-19"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"    // Identity fields","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"    private final Name name;","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"    // Data fields","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"    private final Author author;","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"    private final Publisher publisher;","lastModifiedDate":"2021-03-05"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"    private final Isbn isbn;","lastModifiedDate":"2021-03-05"},{"lineNumber":22,"author":{"gitId":"Nanxi-Huang"},"content":"    private final Genre genre;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"    private final Name borrowerName;","lastModifiedDate":"2021-03-21"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"    private final Barcode barcode;","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * Constructor for the Book class.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * @param name Name of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     * @param author Author of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * @param publisher Publisher of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     * @param isbn ISBN of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * @param barcode Barcode of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * @param genre Genre of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    public Book(Name name, Author author, Publisher publisher, Isbn isbn, Barcode barcode, Genre genre) {","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"Nanxi-Huang"},"content":"        requireAllNonNull(name, author, publisher, isbn, genre);","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-05"},{"lineNumber":40,"author":{"gitId":"GJ0407790"},"content":"        this.author \u003d author;","lastModifiedDate":"2021-03-05"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"        this.publisher \u003d publisher;","lastModifiedDate":"2021-03-05"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"        this.isbn \u003d isbn;","lastModifiedDate":"2021-03-05"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"        this.barcode \u003d barcode;","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"Nanxi-Huang"},"content":"        this.genre \u003d genre;","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":"        this.borrowerName \u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     * Constructor for the Book class.","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"gycc7253"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     * @param name Name of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     * @param author Author of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     * @param publisher Publisher of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     * @param isbn ISBN of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"     * @param barcode Barcode of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"     * @param genre Genre of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"     * @param borrowerName Reader who borrowed the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"    public Book(Name name, Author author, Publisher publisher, Isbn isbn, Barcode barcode, Genre genre,","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"                Name borrowerName) {","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"gycc7253"},"content":"        requireAllNonNull(name, author, publisher, isbn);","lastModifiedDate":"2021-03-21"},{"lineNumber":63,"author":{"gitId":"gycc7253"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-21"},{"lineNumber":64,"author":{"gitId":"gycc7253"},"content":"        this.author \u003d author;","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"gycc7253"},"content":"        this.publisher \u003d publisher;","lastModifiedDate":"2021-03-21"},{"lineNumber":66,"author":{"gitId":"gycc7253"},"content":"        this.isbn \u003d isbn;","lastModifiedDate":"2021-03-21"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"        this.barcode \u003d barcode;","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"Nanxi-Huang"},"content":"        this.genre \u003d genre;","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"gycc7253"},"content":"        this.borrowerName \u003d borrowerName;","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":71,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     * Retrieves the name of the reader who borrowed this book.","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     * @return the name of the reader who borrowed this book.","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"gycc7253"},"content":"    public Name getBorrowerName() {","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"gycc7253"},"content":"        return this.borrowerName;","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":80,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"     * Indicates whether this book is borrowed to a reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"     * @return true if this book is borrowed to a reader, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"gycc7253"},"content":"    public boolean isBorrowed() {","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"gycc7253"},"content":"        return this.borrowerName !\u003d null;","lastModifiedDate":"2021-03-21"},{"lineNumber":88,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":89,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"     * Gets the name of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"     * @return name of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"GJ0407790"},"content":"    public Name getName() {","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"GJ0407790"},"content":"        return name;","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"     * Gets the author of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"arsatis"},"content":"     * @return author of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"GJ0407790"},"content":"    public Author getAuthor() {","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"GJ0407790"},"content":"        return author;","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"arsatis"},"content":"     * Gets the publisher of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"arsatis"},"content":"     * @return publisher of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"GJ0407790"},"content":"    public Publisher getPublisher() {","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"GJ0407790"},"content":"        return publisher;","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"arsatis"},"content":"     * Gets the ISBN of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"arsatis"},"content":"     * @return ISBN of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"GJ0407790"},"content":"    public Isbn getIsbn() {","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"GJ0407790"},"content":"        return isbn;","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"Nanxi-Huang"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"arsatis"},"content":"     * Gets the genre of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"arsatis"},"content":"     * @return genre of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"Nanxi-Huang"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"Nanxi-Huang"},"content":"    public Genre getGenre() {","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"Nanxi-Huang"},"content":"        return genre;","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"arsatis"},"content":"     * Gets the barcode of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"arsatis"},"content":"     * @return barcode of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":140,"author":{"gitId":"arsatis"},"content":"    public Barcode getBarcode() {","lastModifiedDate":"2021-03-25"},{"lineNumber":141,"author":{"gitId":"arsatis"},"content":"        return barcode;","lastModifiedDate":"2021-03-25"},{"lineNumber":142,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":143,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":144,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"arsatis"},"content":"     * Returns true if both books have the same name and barcode.","lastModifiedDate":"2021-03-25"},{"lineNumber":146,"author":{"gitId":"GJ0407790"},"content":"     * This defines a weaker notion of equality between two books.","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":148,"author":{"gitId":"arsatis"},"content":"     * @param otherBook the book to be compared with this book.","lastModifiedDate":"2021-03-27"},{"lineNumber":149,"author":{"gitId":"arsatis"},"content":"     * @return true if both books have the same name and barcode, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":150,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":151,"author":{"gitId":"GJ0407790"},"content":"    public boolean isSameBook(Book otherBook) {","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"GJ0407790"},"content":"        if (otherBook \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"GJ0407790"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":154,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"GJ0407790"},"content":"        return otherBook !\u003d null","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"arsatis"},"content":"                \u0026\u0026 otherBook.getName().equals(getName())","lastModifiedDate":"2021-03-25"},{"lineNumber":158,"author":{"gitId":"arsatis"},"content":"                \u0026\u0026 otherBook.getBarcode().equals(getBarcode());","lastModifiedDate":"2021-03-25"},{"lineNumber":159,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":161,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":162,"author":{"gitId":"arsatis"},"content":"     * Checks if this Book is equal to another Book.","lastModifiedDate":"2021-03-27"},{"lineNumber":163,"author":{"gitId":"arsatis"},"content":"     * A stronger notion of equality between two books.","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":165,"author":{"gitId":"arsatis"},"content":"     * @param other the book to be compared with this book.","lastModifiedDate":"2021-03-27"},{"lineNumber":166,"author":{"gitId":"arsatis"},"content":"     * @return true if this Book is equal to the other Book, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":169,"author":{"gitId":"GJ0407790"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":170,"author":{"gitId":"GJ0407790"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":171,"author":{"gitId":"GJ0407790"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":172,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":173,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":174,"author":{"gitId":"GJ0407790"},"content":"        if (!(other instanceof Book)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":175,"author":{"gitId":"GJ0407790"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":176,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":177,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":178,"author":{"gitId":"GJ0407790"},"content":"        Book otherBook \u003d (Book) other;","lastModifiedDate":"2021-03-14"},{"lineNumber":179,"author":{"gitId":"GJ0407790"},"content":"        return otherBook.getName().equals(getName())","lastModifiedDate":"2021-03-14"},{"lineNumber":180,"author":{"gitId":"GJ0407790"},"content":"                \u0026\u0026 otherBook.getAuthor().equals(getAuthor())","lastModifiedDate":"2021-03-14"},{"lineNumber":181,"author":{"gitId":"GJ0407790"},"content":"                \u0026\u0026 otherBook.getPublisher().equals(getPublisher())","lastModifiedDate":"2021-03-14"},{"lineNumber":182,"author":{"gitId":"Nanxi-Huang"},"content":"                \u0026\u0026 otherBook.getIsbn().equals(getIsbn())","lastModifiedDate":"2021-03-23"},{"lineNumber":183,"author":{"gitId":"arsatis"},"content":"                \u0026\u0026 otherBook.getGenre().equals(getGenre())","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"arsatis"},"content":"                \u0026\u0026 otherBook.getBarcode().equals(getBarcode());","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":186,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":188,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this Book.","lastModifiedDate":"2021-03-27"},{"lineNumber":189,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":190,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this Book.","lastModifiedDate":"2021-03-27"},{"lineNumber":191,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":192,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":193,"author":{"gitId":"GJ0407790"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-14"},{"lineNumber":194,"author":{"gitId":"GJ0407790"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-14"},{"lineNumber":195,"author":{"gitId":"GJ0407790"},"content":"        return Objects.hash(name, author, publisher, isbn);","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":197,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":198,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":199,"author":{"gitId":"arsatis"},"content":"     * Returns this Book in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":200,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":201,"author":{"gitId":"arsatis"},"content":"     * @return this Book in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":202,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":203,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":204,"author":{"gitId":"GJ0407790"},"content":"    public String toString() {","lastModifiedDate":"2021-03-14"},{"lineNumber":205,"author":{"gitId":"GJ0407790"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-14"},{"lineNumber":206,"author":{"gitId":"GJ0407790"},"content":"        builder.append(getName())","lastModifiedDate":"2021-03-14"},{"lineNumber":207,"author":{"gitId":"GJ0407790"},"content":"                .append(\"; Author: \")","lastModifiedDate":"2021-03-14"},{"lineNumber":208,"author":{"gitId":"GJ0407790"},"content":"                .append(getAuthor())","lastModifiedDate":"2021-03-14"},{"lineNumber":209,"author":{"gitId":"GJ0407790"},"content":"                .append(\"; Publisher: \")","lastModifiedDate":"2021-03-14"},{"lineNumber":210,"author":{"gitId":"GJ0407790"},"content":"                .append(getPublisher())","lastModifiedDate":"2021-03-14"},{"lineNumber":211,"author":{"gitId":"GJ0407790"},"content":"                .append(\"; Isbn: \")","lastModifiedDate":"2021-03-14"},{"lineNumber":212,"author":{"gitId":"gycc7253"},"content":"                .append(getIsbn())","lastModifiedDate":"2021-03-21"},{"lineNumber":213,"author":{"gitId":"arsatis"},"content":"                .append(\"; Barcode: \")","lastModifiedDate":"2021-03-25"},{"lineNumber":214,"author":{"gitId":"arsatis"},"content":"                .append(getBarcode())","lastModifiedDate":"2021-03-25"},{"lineNumber":215,"author":{"gitId":"Nanxi-Huang"},"content":"                .append(\"; Genre: \")","lastModifiedDate":"2021-03-23"},{"lineNumber":216,"author":{"gitId":"Nanxi-Huang"},"content":"                .append(getGenre())","lastModifiedDate":"2021-03-23"},{"lineNumber":217,"author":{"gitId":"gycc7253"},"content":"                .append(\"; Borrower: \")","lastModifiedDate":"2021-03-21"},{"lineNumber":218,"author":{"gitId":"gycc7253"},"content":"                .append(isBorrowed() ? this.borrowerName : \"Not borrowed.\");","lastModifiedDate":"2021-03-21"},{"lineNumber":219,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":220,"author":{"gitId":"GJ0407790"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-14"},{"lineNumber":221,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":222,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":223,"author":{"gitId":"gycc7253"},"content":"}","lastModifiedDate":"2021-02-19"}],"authorContributionMap":{"arsatis":85,"Nanxi-Huang":13,"GJ0407790":89,"gycc7253":36}},{"path":"src/main/java/seedu/smartlib/model/book/BookNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"package seedu.smartlib.model.book;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"Nanxi-Huang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"import java.util.List;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.util.StringUtil;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":" * Tests that a {@code Book}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"public class BookNameContainsKeywordsPredicate implements Predicate\u003cBook\u003e {","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     * Creates a BookNameContainsKeywordPredicate.","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"     * @param keywords list of keywords","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"    public BookNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     * Tests if the book contains any of the keywords.","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     * @param book the book to be tested.","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     * @return true if the book contains any of the keywords, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"    public boolean test(Book book) {","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"Nanxi-Huang"},"content":"        ArrayList\u003cString\u003e bookInfo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"Nanxi-Huang"},"content":"        bookInfo.add(book.getName().toString());","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"Nanxi-Huang"},"content":"        bookInfo.add(book.getAuthor().toString());","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"Nanxi-Huang"},"content":"        bookInfo.add(book.getGenre().toString());","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"Nanxi-Huang"},"content":"        bookInfo.add(book.getPublisher().toString());","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"Nanxi-Huang"},"content":"        bookInfo.add(book.getIsbn().toString());","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"Nanxi-Huang"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsAnyIgnoreCase(","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"Nanxi-Huang"},"content":"                        bookInfo, keyword));","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     * Checks if this BookNameContainsKeywordPredicate is equal to another BookNameContainsKeywordPredicate.","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     * @param other the other BookNameContainsKeywordPredicate to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     * @return true if this BookNameContainsKeywordPredicate is equal to the other BookNameContainsKeywordPredicate,","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     *         and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"GJ0407790"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"GJ0407790"},"content":"                || (other instanceof BookNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"GJ0407790"},"content":"                \u0026\u0026 keywords.equals(((BookNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"GJ0407790"},"content":"}","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"arsatis":16,"Nanxi-Huang":9,"GJ0407790":34}},{"path":"src/main/java/seedu/smartlib/model/book/Genre.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nanxi-Huang"},"content":"package seedu.smartlib.model.book;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Nanxi-Huang"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Nanxi-Huang"},"content":" * Represents a genre of books in SmartLib.","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Nanxi-Huang"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Nanxi-Huang"},"content":"public class Genre {","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Nanxi-Huang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"Nanxi-Huang"},"content":"            \"Genre should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Nanxi-Huang"},"content":"    private final Name genreName;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Nanxi-Huang"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"Nanxi-Huang"},"content":"     * Constructs an {@code Genre}.","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"Nanxi-Huang"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"Nanxi-Huang"},"content":"     * @param genreName A valid name of a genre.","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"Nanxi-Huang"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"Nanxi-Huang"},"content":"    public Genre(Name genreName) {","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"Nanxi-Huang"},"content":"        this.genreName \u003d genreName;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"Nanxi-Huang"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"Nanxi-Huang"},"content":"     * Returns true if a given string is a valid genre name.","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * @param test string to be tested.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     * @return true if the given string is a valid genre name.","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"Nanxi-Huang"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"Nanxi-Huang"},"content":"    public static boolean isValidGenre(String test) {","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"Nanxi-Huang"},"content":"        return Name.isValidName(test);","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * Returns this Genre in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"     * @return this Genre in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"Nanxi-Huang"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"Nanxi-Huang"},"content":"    public String toString() {","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"Nanxi-Huang"},"content":"        return genreName.toString();","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     * Checks if this Genre is equal to another Genre.","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     * @param other the other Genre to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     * @return true if this Genre is equal to the other Genre, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"Nanxi-Huang"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"Nanxi-Huang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"Nanxi-Huang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"Nanxi-Huang"},"content":"                || (other instanceof Genre // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"Nanxi-Huang"},"content":"                \u0026\u0026 genreName.equals(((Genre) other).genreName)); // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"Nanxi-Huang"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"     * Calculates the hashCode of this Genre object.","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"     * @return hashCode of Genre.","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"Nanxi-Huang"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"Nanxi-Huang"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"Nanxi-Huang"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"Nanxi-Huang"},"content":"        return genreName.hashCode();","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"Nanxi-Huang"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"arsatis":17,"Nanxi-Huang":50}},{"path":"src/main/java/seedu/smartlib/model/book/Isbn.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"package seedu.smartlib.model.book;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"/**","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * Represents an ISBN(International Standard Book Number) of a book in SmartLib.","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidIsbn(String)}","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":" */","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"public class Isbn {","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"            \"ISBN should only contain numbers, and it should only contain 13 digits.\";","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{13}\";","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"    //The length of isbn is 13.","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"    public static final int ISBN_LENGTH \u003d 13;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    private final String value;","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"     * Constructs an {@code ISBN}.","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"     *","lastModifiedDate":"2021-03-05"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     * @param isbn A valid ISBN.","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"    public Isbn(String isbn) {","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"        requireNonNull(isbn);","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"        checkArgument(isValidIsbn(isbn), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"        value \u003d isbn;","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":33,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * Returns true if a given string is a valid ISBN.","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     * @param test string to be tested.","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"     * @return true if a given string is a valid ISBN.","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"    public static boolean isValidIsbn(String test) {","lastModifiedDate":"2021-03-05"},{"lineNumber":40,"author":{"gitId":"GJ0407790"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003d\u003d ISBN_LENGTH;","lastModifiedDate":"2021-03-05"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     * Returns this ISBN in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     * @return this ISBN in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":49,"author":{"gitId":"GJ0407790"},"content":"    public String toString() {","lastModifiedDate":"2021-03-05"},{"lineNumber":50,"author":{"gitId":"GJ0407790"},"content":"        return value;","lastModifiedDate":"2021-03-05"},{"lineNumber":51,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     * Checks if this ISBN is equal to another ISBN.","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"     * @param other the other ISBN to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"     * @return true if this ISBN is equal to the other ISBN, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":60,"author":{"gitId":"GJ0407790"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-05"},{"lineNumber":61,"author":{"gitId":"GJ0407790"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-05"},{"lineNumber":62,"author":{"gitId":"GJ0407790"},"content":"                || (other instanceof Isbn // instanceof handles nulls","lastModifiedDate":"2021-03-05"},{"lineNumber":63,"author":{"gitId":"GJ0407790"},"content":"                \u0026\u0026 value.equals(((Isbn) other).value)); // state check","lastModifiedDate":"2021-03-05"},{"lineNumber":64,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":65,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this ISBN.","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this ISBN.","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":72,"author":{"gitId":"GJ0407790"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-05"},{"lineNumber":73,"author":{"gitId":"GJ0407790"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-05"},{"lineNumber":74,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":75,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":76,"author":{"gitId":"GJ0407790"},"content":"}","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"arsatis":23,"GJ0407790":48,"Andrewzhang217":5}},{"path":"src/main/java/seedu/smartlib/model/book/Publisher.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"package seedu.smartlib.model.book;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"/**","lastModifiedDate":"2021-03-05"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":" * Represents a publisher in SmartLib.","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":" */","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"public class Publisher {","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"            \"Publisher\u0027s names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"    private final Name fullName;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-05"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"     * Constructs an {@code Publisher}.","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"     *","lastModifiedDate":"2021-03-05"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"     * @param fullName A valid full name of the publisher.","lastModifiedDate":"2021-03-05"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-05"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"    public Publisher(Name fullName) {","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"        this.fullName \u003d fullName;","lastModifiedDate":"2021-03-05"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"     * Returns true if a given string is a valid publisher\u0027s name.","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * @param test string to be tested.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     * @return true if a given string is a valid publisher\u0027s name.","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"    public static boolean isValidPublisher(String test) {","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"        return Name.isValidName(test);","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * Returns this Publisher in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"     * @return this Publisher in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":40,"author":{"gitId":"GJ0407790"},"content":"    public String toString() {","lastModifiedDate":"2021-03-05"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"        return fullName.toString();","lastModifiedDate":"2021-03-05"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":43,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     * Checks if this Publisher is equal to another Publisher.","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     * @param other the other Publisher to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     * @return true if this Publisher is equal to the other Publisher, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":51,"author":{"gitId":"GJ0407790"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-05"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-05"},{"lineNumber":53,"author":{"gitId":"GJ0407790"},"content":"                || (other instanceof Publisher // instanceof handles nulls","lastModifiedDate":"2021-03-05"},{"lineNumber":54,"author":{"gitId":"GJ0407790"},"content":"                \u0026\u0026 fullName.equals(((Publisher) other).fullName)); // state check","lastModifiedDate":"2021-03-05"},{"lineNumber":55,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":56,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this Publisher.","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this Publisher.","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-05"},{"lineNumber":63,"author":{"gitId":"GJ0407790"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-05"},{"lineNumber":64,"author":{"gitId":"GJ0407790"},"content":"        return fullName.hashCode();","lastModifiedDate":"2021-03-05"},{"lineNumber":65,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-05"},{"lineNumber":66,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":67,"author":{"gitId":"GJ0407790"},"content":"}","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"arsatis":19,"GJ0407790":48}},{"path":"src/main/java/seedu/smartlib/model/book/UniqueBookList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"package seedu.smartlib.model.book;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.exceptions.BookNotFoundException;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.exceptions.DuplicateBookException;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":" * A list of books that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":" * A book is considered unique by comparing using {@code Book#isSameBook(Book)}. As such, adding and updating of","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":" * books uses Book#isSameBook(Book) for equality so as to ensure that the book being added or updated is","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":" * unique in terms of identity in the UniqueBookList. However, the removal of a book uses Book#equals(Object) so","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":" * as to ensure that the book with exactly the same fields will be removed.","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":" * @see Book#isSameBook(Book)","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"public class UniqueBookList implements Iterable\u003cBook\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":"    private final ObservableList\u003cBook\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":"    private final ObservableList\u003cBook\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"     * Returns true if the list contains an equivalent book as the given argument.","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * @param toCheck the book to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * @return true if the list contains an equivalent book as the given argument, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"GJ0407790"},"content":"    public boolean contains(Book toCheck) {","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"GJ0407790"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"        return internalList.stream().anyMatch(toCheck::isSameBook);","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"GJ0407790"},"content":"     * Adds a book to the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"GJ0407790"},"content":"     * The book must not already exist in the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     * @param toAdd the book to be added.","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"GJ0407790"},"content":"    public void addBook(Book toAdd) {","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"GJ0407790"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"GJ0407790"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"GJ0407790"},"content":"            throw new DuplicateBookException();","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"GJ0407790"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"GJ0407790"},"content":"     * Removes the equivalent book from the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"GJ0407790"},"content":"     * The book must exist in the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"     * @param toRemove the book to be removed.","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"GJ0407790"},"content":"    public void remove(Book toRemove) {","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"GJ0407790"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"GJ0407790"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"GJ0407790"},"content":"            throw new BookNotFoundException();","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"     * Updates the books in the unique book list.","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"     * @param replacement the new list of books.","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"GJ0407790"},"content":"    public void setBooks(UniqueBookList replacement) {","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"GJ0407790"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"GJ0407790"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"GJ0407790"},"content":"     * Replaces the contents of this list with {@code books}.","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"GJ0407790"},"content":"     * {@code books} must not contain duplicate books.","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"     * @param books the new list of books.","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"GJ0407790"},"content":"    public void setBooks(List\u003cBook\u003e books) {","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"GJ0407790"},"content":"        requireAllNonNull(books);","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"GJ0407790"},"content":"        if (!booksAreUnique(books)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"GJ0407790"},"content":"            throw new DuplicateBookException();","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"GJ0407790"},"content":"        internalList.setAll(books);","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"GJ0407790"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"     * @return the backing list of books.","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"GJ0407790"},"content":"    public ObservableList\u003cBook\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"GJ0407790"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"arsatis"},"content":"     * Returns an iterator for the unique book list.","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"arsatis"},"content":"     * @return an iterator for the unique book list.","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"GJ0407790"},"content":"    public Iterator\u003cBook\u003e iterator() {","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"GJ0407790"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"arsatis"},"content":"     * Checks if this UniqueBookList is equal to another UniqueBookList.","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"arsatis"},"content":"     * @param other the other UniqueBookList to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"arsatis"},"content":"     * @return true if this UniqueBookList is equal to the other UniqueBookList, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"GJ0407790"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"GJ0407790"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"GJ0407790"},"content":"                || (other instanceof UniqueBookList // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"GJ0407790"},"content":"                \u0026\u0026 internalList.equals(((UniqueBookList) other).internalList));","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this UniqueBookList.","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this UniqueBookList.","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"GJ0407790"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"GJ0407790"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"GJ0407790"},"content":"     * Returns true if {@code books} contains only unique books.","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"arsatis"},"content":"     * @param books the list of books to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"arsatis"},"content":"     * @return true if {@code books} contains only unique books, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"GJ0407790"},"content":"    private boolean booksAreUnique(List\u003cBook\u003e books) {","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"GJ0407790"},"content":"        for (int i \u003d 0; i \u003c books.size() - 1; i++) {","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"GJ0407790"},"content":"            for (int j \u003d i + 1; j \u003c books.size(); j++) {","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"GJ0407790"},"content":"                if (books.get(i).isSameBook(books.get(j))) {","lastModifiedDate":"2021-03-14"},{"lineNumber":146,"author":{"gitId":"GJ0407790"},"content":"                    return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"GJ0407790"},"content":"                }","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"GJ0407790"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"GJ0407790"},"content":"        return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":151,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":153,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"arsatis"},"content":"     * Updates a book in the book list with a new book.","lastModifiedDate":"2021-03-27"},{"lineNumber":155,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":156,"author":{"gitId":"arsatis"},"content":"     * @param target the book in the book list that is to be updated.","lastModifiedDate":"2021-03-27"},{"lineNumber":157,"author":{"gitId":"arsatis"},"content":"     * @param editedBook the new book.","lastModifiedDate":"2021-03-27"},{"lineNumber":158,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":159,"author":{"gitId":"gycc7253"},"content":"    public void setBook(Book target, Book editedBook) {","lastModifiedDate":"2021-03-21"},{"lineNumber":160,"author":{"gitId":"gycc7253"},"content":"        requireAllNonNull(target, editedBook);","lastModifiedDate":"2021-03-21"},{"lineNumber":161,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":162,"author":{"gitId":"gycc7253"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-21"},{"lineNumber":163,"author":{"gitId":"gycc7253"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-21"},{"lineNumber":164,"author":{"gitId":"Nanxi-Huang"},"content":"            throw new BookNotFoundException();","lastModifiedDate":"2021-03-23"},{"lineNumber":165,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":166,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":167,"author":{"gitId":"gycc7253"},"content":"        if (!target.isSameBook(editedBook) \u0026\u0026 contains(editedBook)) {","lastModifiedDate":"2021-03-21"},{"lineNumber":168,"author":{"gitId":"Nanxi-Huang"},"content":"            throw new DuplicateBookException();","lastModifiedDate":"2021-03-23"},{"lineNumber":169,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":170,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":171,"author":{"gitId":"gycc7253"},"content":"        internalList.set(index, editedBook);","lastModifiedDate":"2021-03-21"},{"lineNumber":172,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":173,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":174,"author":{"gitId":"arsatis"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"arsatis":43,"Nanxi-Huang":2,"GJ0407790":116,"gycc7253":13}},{"path":"src/main/java/seedu/smartlib/model/book/exceptions/BookNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"package seedu.smartlib.model.book.exceptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":" * Signals that the operation is unable to find the specified reader.","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"public class BookNotFoundException extends RuntimeException {","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"arsatis":3,"GJ0407790":5}},{"path":"src/main/java/seedu/smartlib/model/book/exceptions/DuplicateBookException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"package seedu.smartlib.model.book.exceptions;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * Signals that the operation will result in duplicate Books (Books are considered duplicates if they have the same","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":" * identity).","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"public class DuplicateBookException extends RuntimeException {","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"     * A constructor for the DuplicateBookException.","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"    public DuplicateBookException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"        super(\"Operation would result in duplicate books\");","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"arsatis":6,"GJ0407790":10}},{"path":"src/main/java/seedu/smartlib/model/reader/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * Represents a Reader\u0027s address in SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    private final String value;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Nanxi-Huang"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     * @param test string to be tested.","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"     * @return true if a given string is a valid address, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     * Returns this Address in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     * @return this Address in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     * Checks if this Address is equal to another Address.","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"     * @param other the other Address to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"     * @return true if this Address is equal to the other Address, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this Address.","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this Address.","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"arsatis":21,"Nanxi-Huang":1,"gycc7253":2,"-":52}},{"path":"src/main/java/seedu/smartlib/model/reader/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * Represents a Reader\u0027s email in SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";","lastModifiedDate":"2018-02-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \") .\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. \"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    - be at least 2 characters long\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - start and end with alphanumeric characters\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - consist of alphanumeric characters, a period or a hyphen for the characters in between, if any.\";","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\"; // alphanumeric characters except underscore","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\"; // alphanumeric, period and hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]$\";","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\"","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + DOMAIN_FIRST_CHARACTER_REGEX + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX;","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"    private final String value;","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     * @param test string to be tested.","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     * @return true if a given string is a valid email, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     * Returns this Email in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"     * @return this Email in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"     * Checks if this Email is equal to another Email.","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"     * @param other the other Email to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"     * @return true if this Email is equal to the other Email, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this Email.","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this Email.","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"arsatis":22,"gycc7253":2,"-":62}},{"path":"src/main/java/seedu/smartlib/model/reader/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.util.StringUtil;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":" * Tests that a {@code Reader}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cReader\u003e {","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     * Creates a NameContainsKeywordPredicate.","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"     * @param keywords list of keywords","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     * Tests if the reader\u0027s name contains any of the keywords.","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * @param reader the reader to be tested.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     * @return true if the reader\u0027s name contains any of the keywords, and false otherwise.","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"    public boolean test(Reader reader) {","lastModifiedDate":"2021-02-19"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"        return keywords","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"                .stream()","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(reader.getName().toString(), keyword));","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"     * Checks if this NameContainsKeywordPredicate is equal to another NameContainsKeywordPredicate.","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     * @param other the other NameContainsKeywordPredicate to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     * @return true if this NameContainsKeywordPredicate is equal to the other NameContainsKeywordPredicate,","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     *         and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"arsatis":19,"GJ0407790":1,"gycc7253":7,"-":24}},{"path":"src/main/java/seedu/smartlib/model/reader/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * Represents a Reader\u0027s phone number in SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    private final String value;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     * @param test string to be tested.","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * @return true if a given string is a valid phone number.","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     * Returns this phone number in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     * @return this phone number in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     * Checks if this phone number is equal to another phone number.","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     * @param other the other phone number to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     * @return true if this phone number is equal to the other phone number, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this Phone.","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this Phone.","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"arsatis":23,"gycc7253":2,"-":48}},{"path":"src/main/java/seedu/smartlib/model/reader/Reader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import java.util.Map;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-05"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.DateBorrowed;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.tag.Tag;","lastModifiedDate":"2021-02-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":" * Represents a reader in SmartLib.","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"public class Reader {","lastModifiedDate":"2021-02-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"    private final Map\u003cBook, DateBorrowed\u003e borrows \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * Constructor for the Reader class.","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"     * @param name name of the reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"     * @param phone phone number of the reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"     * @param email email of the reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     * @param address address of the reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     * @param tags tags which the reader is associated with.","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     * @param borrows list of books borrowed by the reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"gycc7253"},"content":"    public Reader(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"                  Set\u003cTag\u003e tags, Map\u003cBook, DateBorrowed\u003e borrows) {","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"gycc7253"},"content":"        requireAllNonNull(name, phone, email, address, tags, borrows);","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"gycc7253"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"gycc7253"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-21"},{"lineNumber":51,"author":{"gitId":"gycc7253"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-03-21"},{"lineNumber":52,"author":{"gitId":"gycc7253"},"content":"        this.borrows.putAll(borrows);","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":54,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"     * Retrieves the list of books borrowed by the reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"     * @return the list of books borrowed by the reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"    public Map\u003cBook, DateBorrowed\u003e getBorrows() {","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"gycc7253"},"content":"        return borrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"     * Retrieves the name of the reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"     * @return the name of the reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     * Retrieves the phone number of the reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"     * @return the phone number of the reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"     * Retrieves the email of the reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"     * @return the email of the reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"     * Retrieves the address of the reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"     * @return the address of the reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":103,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"arsatis"},"content":"     * @return an immutable tag set.","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"arsatis"},"content":"     * Checks if a reader has overdue books.","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"arsatis"},"content":"     * @return true if the reader has overdue books, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"gycc7253"},"content":"    public boolean hasOverdueBooks() {","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"arsatis"},"content":"        for (DateBorrowed dateBorrowed : borrows.values()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"gycc7253"},"content":"            if (dateBorrowed.isOverdue()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"gycc7253"},"content":"                return true;","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"gycc7253"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"gycc7253"},"content":"        return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"arsatis"},"content":"     * Returns true if both readers have the same name.","lastModifiedDate":"2021-03-13"},{"lineNumber":126,"author":{"gitId":"arsatis"},"content":"     * This defines a weaker notion of equality between two readers.","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"arsatis"},"content":"     * @param otherReader the reader to be compared with this reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"arsatis"},"content":"     * @return true if both readers have the same name, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"Nanxi-Huang"},"content":"    public boolean isSameReader(Reader otherReader) {","lastModifiedDate":"2021-03-06"},{"lineNumber":132,"author":{"gitId":"gycc7253"},"content":"        if (otherReader \u003d\u003d this) {","lastModifiedDate":"2021-02-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"gycc7253"},"content":"        return otherReader !\u003d null","lastModifiedDate":"2021-02-19"},{"lineNumber":137,"author":{"gitId":"gycc7253"},"content":"                \u0026\u0026 otherReader.getName().equals(getName());","lastModifiedDate":"2021-02-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"arsatis"},"content":"     * Returns true if both readers have the same identity and data fields.","lastModifiedDate":"2021-03-13"},{"lineNumber":142,"author":{"gitId":"arsatis"},"content":"     * This defines a stronger notion of equality between two readers.","lastModifiedDate":"2021-03-13"},{"lineNumber":143,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":144,"author":{"gitId":"arsatis"},"content":"     * @param other the reader to be compared with this reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":145,"author":{"gitId":"arsatis"},"content":"     * @return true if both readers have the same identity and data fields, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"gycc7253"},"content":"        if (!(other instanceof Reader)) {","lastModifiedDate":"2021-02-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"gycc7253"},"content":"        Reader otherReader \u003d (Reader) other;","lastModifiedDate":"2021-02-19"},{"lineNumber":158,"author":{"gitId":"gycc7253"},"content":"        return otherReader.getName().equals(getName())","lastModifiedDate":"2021-02-19"},{"lineNumber":159,"author":{"gitId":"gycc7253"},"content":"                \u0026\u0026 otherReader.getPhone().equals(getPhone())","lastModifiedDate":"2021-02-19"},{"lineNumber":160,"author":{"gitId":"gycc7253"},"content":"                \u0026\u0026 otherReader.getEmail().equals(getEmail())","lastModifiedDate":"2021-02-19"},{"lineNumber":161,"author":{"gitId":"gycc7253"},"content":"                \u0026\u0026 otherReader.getAddress().equals(getAddress())","lastModifiedDate":"2021-02-19"},{"lineNumber":162,"author":{"gitId":"gycc7253"},"content":"                \u0026\u0026 otherReader.getTags().equals(getTags());","lastModifiedDate":"2021-02-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":166,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this Reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this Reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":176,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"arsatis"},"content":"     * Returns this Reader in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"arsatis"},"content":"     * @return this Reader in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"arsatis":64,"Nanxi-Huang":1,"GJ0407790":1,"gycc7253":42,"-":92}},{"path":"src/main/java/seedu/smartlib/model/reader/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package seedu.smartlib.model.reader;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.commons.util.StringUtil;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.tag.Tag;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * Tests that a {@code Reader}\u0027s {@code Tags} matches any of the keywords given.","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cReader\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     * Creates a TagContainsKeywordsPredicate.","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     * @param keywords list of keywords","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     * Tests if the reader\u0027s tags contains any of the keywords.","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     * @param reader the reader to be tested.","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     * @return true if the reader\u0027s tags contains any of the keywords, and false otherwise.","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"    public boolean test(Reader reader) {","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"        return keywords","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"                .stream()","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"                .anyMatch(keyword -\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"                    for (Tag tag : reader.getTags()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"                        if (StringUtil.containsWordIgnoreCase(tag.getTagName(), keyword)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"                            return true;","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"                        }","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"                    }","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"                    return false;","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"                });","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     * Checks if this TagContainsKeywordsPredicate is equal to another TagContainsKeywordsPredicate.","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     * @param other the other TagContainsKeywordsPredicate to be compared.","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     * @return true if this TagContainsKeywordsPredicate is equal to the other TagContainsKeywordsPredicate,","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     *         and false otherwise.","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"                || (other instanceof TagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"                \u0026\u0026 keywords.equals(((TagContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"arsatis":59}},{"path":"src/main/java/seedu/smartlib/model/reader/UniqueReaderList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.exceptions.DuplicateReaderException;","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.exceptions.ReaderNotFoundException;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Nanxi-Huang"},"content":" * A list of readers that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"Nanxi-Huang"},"content":" * A reader is considered unique by comparing using {@code Reader#isSameReader(Reader)}. As such, adding and updating of","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":" * readers uses Reader#isSameREader(Reader) for equality so as to ensure that the reader being added or updated is","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":" * unique in terms of identity in the UniqueReaderList. However, the removal of a reader uses Reader#equals(Object) so","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"Nanxi-Huang"},"content":" * as to ensure that the reader with exactly the same fields will be removed.","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"Nanxi-Huang"},"content":" * @see Reader#isSameReader(Reader)","lastModifiedDate":"2021-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"Nanxi-Huang"},"content":"public class UniqueReaderList implements Iterable\u003cReader\u003e {","lastModifiedDate":"2021-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"    private final ObservableList\u003cReader\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-02-19"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"    private final ObservableList\u003cReader\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-02-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * Returns true if the list contains an equivalent reader as the given argument.","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * @param toCheck the reader to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * @return true if the list contains an equivalent reader as the given argument, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"    public boolean contains(Reader toCheck) {","lastModifiedDate":"2021-02-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"Nanxi-Huang"},"content":"        return internalList.stream().anyMatch(toCheck::isSameReader);","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"Nanxi-Huang"},"content":"     * Adds a reader to the list.","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"Nanxi-Huang"},"content":"     * The reader must not already exist in the list.","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     * @param toAdd the reader to be added.","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"Nanxi-Huang"},"content":"    public void addReader(Reader toAdd) {","lastModifiedDate":"2021-03-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"            throw new DuplicateReaderException();","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"     * Replaces the reader {@code target} in the list with {@code editedReader}.","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"     * The person identity of {@code editedReader} must not be the same as another existing reader in the list.","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"     * @param target the reader to be replaced.","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     * @param editedReader the new reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"    public void setReader(Reader target, Reader editedReader) {","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"gycc7253"},"content":"        requireAllNonNull(target, editedReader);","lastModifiedDate":"2021-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"            throw new ReaderNotFoundException();","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"Nanxi-Huang"},"content":"        if (!target.isSameReader(editedReader) \u0026\u0026 contains(editedReader)) {","lastModifiedDate":"2021-03-06"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"            throw new DuplicateReaderException();","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"gycc7253"},"content":"        internalList.set(index, editedReader);","lastModifiedDate":"2021-02-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"     * Removes the equivalent reader from the list.","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"     * The reader must exist in the list.","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"     * @param toRemove the reader to be removed.","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"gycc7253"},"content":"    public void remove(Reader toRemove) {","lastModifiedDate":"2021-02-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"            throw new ReaderNotFoundException();","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"     * Updates the readers in the unique reader list.","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"     * @param replacement the new list of readers.","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"    public void setReaders(UniqueReaderList replacement) {","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"arsatis"},"content":"     * Replaces the contents of this list with {@code readers}.","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"arsatis"},"content":"     * {@code readers} must not contain duplicate readers.","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"arsatis"},"content":"     * @param readers the new list of readers.","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"arsatis"},"content":"    public void setReaders(List\u003cReader\u003e readers) {","lastModifiedDate":"2021-03-07"},{"lineNumber":109,"author":{"gitId":"gycc7253"},"content":"        requireAllNonNull(readers);","lastModifiedDate":"2021-02-19"},{"lineNumber":110,"author":{"gitId":"Nanxi-Huang"},"content":"        if (!readersAreUnique(readers)) {","lastModifiedDate":"2021-03-07"},{"lineNumber":111,"author":{"gitId":"arsatis"},"content":"            throw new DuplicateReaderException();","lastModifiedDate":"2021-03-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":114,"author":{"gitId":"gycc7253"},"content":"        internalList.setAll(readers);","lastModifiedDate":"2021-02-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":119,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"arsatis"},"content":"     * @return the backing list of readers.","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":122,"author":{"gitId":"gycc7253"},"content":"    public ObservableList\u003cReader\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-02-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":126,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"arsatis"},"content":"     * Returns an iterator for the unique reader list.","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"arsatis"},"content":"     * @return an iterator for the unique reader list.","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"gycc7253"},"content":"    public Iterator\u003cReader\u003e iterator() {","lastModifiedDate":"2021-02-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"arsatis"},"content":"     * Checks if this UniqueReaderList is equal to another UniqueReaderList.","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"arsatis"},"content":"     * @param other the other UniqueReaderList to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"arsatis"},"content":"     * @return true if this UniqueReaderList is equal to the other UniqueReaderList, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"Nanxi-Huang"},"content":"                || (other instanceof UniqueReaderList // instanceof handles nulls","lastModifiedDate":"2021-03-06"},{"lineNumber":146,"author":{"gitId":"Nanxi-Huang"},"content":"                        \u0026\u0026 internalList.equals(((UniqueReaderList) other).internalList));","lastModifiedDate":"2021-03-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":150,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this UniqueReaderList.","lastModifiedDate":"2021-03-27"},{"lineNumber":151,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this UniqueReaderList.","lastModifiedDate":"2021-03-27"},{"lineNumber":153,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"arsatis"},"content":"     * Returns true if {@code readers} contains only unique readers.","lastModifiedDate":"2021-03-13"},{"lineNumber":161,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":162,"author":{"gitId":"arsatis"},"content":"     * @param readers the list of readers to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":163,"author":{"gitId":"arsatis"},"content":"     * @return true if {@code readers} contains only unique readers, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"Nanxi-Huang"},"content":"    private boolean readersAreUnique(List\u003cReader\u003e readers) {","lastModifiedDate":"2021-03-07"},{"lineNumber":166,"author":{"gitId":"gycc7253"},"content":"        for (int i \u003d 0; i \u003c readers.size() - 1; i++) {","lastModifiedDate":"2021-02-19"},{"lineNumber":167,"author":{"gitId":"gycc7253"},"content":"            for (int j \u003d i + 1; j \u003c readers.size(); j++) {","lastModifiedDate":"2021-02-19"},{"lineNumber":168,"author":{"gitId":"Nanxi-Huang"},"content":"                if (readers.get(i).isSameReader(readers.get(j))) {","lastModifiedDate":"2021-03-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":175,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"arsatis":59,"Nanxi-Huang":15,"gycc7253":14,"-":88}},{"path":"src/main/java/seedu/smartlib/model/reader/exceptions/DuplicateReaderException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package seedu.smartlib.model.reader.exceptions;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * Signals that the operation will result in duplicate Readers (Readers are considered duplicates if they have the same","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":" * identity).","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"public class DuplicateReaderException extends RuntimeException {","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"     * A constructor for the DuplicateReaderException.","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"    public DuplicateReaderException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"        super(\"Operation would result in duplicate readers\");","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"arsatis":16}},{"path":"src/main/java/seedu/smartlib/model/reader/exceptions/ReaderNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package seedu.smartlib.model.reader.exceptions;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * Signals that the operation is unable to find the specified reader.","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"public class ReaderNotFoundException extends RuntimeException {","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"arsatis":8}},{"path":"src/main/java/seedu/smartlib/model/record/Cost.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"package seedu.smartlib.model.record;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":" * Represents the cost of overdue books.","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"public class Cost {","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"    public static final double RATES_PER_HOUR \u003d 0.1;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"    private final int overdueHour;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"     * Creates a cost of overdue book.","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"     * @param overdueHour The duration, in hours, that the book was overdue.","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"    public Cost(int overdueHour) {","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"        assert overdueHour \u003e\u003d 0 : \"Overdue hours cannot be negative\";","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"        this.overdueHour \u003d overdueHour;","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"     * Calculate the total cost given the overdue hours.","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"     * @return The total cost of the overdue book.","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"    public double getCost() {","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"        return RATES_PER_HOUR * overdueHour;","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"    public String toString() {","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"        return String.format(\"The total cost is %d.\", this.getCost());","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"GJ0407790"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"GJ0407790"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"GJ0407790"},"content":"                || (other instanceof Cost // instanceof handles nulls","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"GJ0407790"},"content":"                \u0026\u0026 overdueHour \u003d\u003d ((Cost) other).overdueHour); // state check","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"GJ0407790"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"GJ0407790":40}},{"path":"src/main/java/seedu/smartlib/model/record/DateBorrowed.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.record;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static java.time.temporal.ChronoUnit.DAYS;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.model.SmartLib.DAYS_BORROW_ALLOWED;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":" * The DateBorrowed class takes note of the date which a book is borrowed from SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"public class DateBorrowed {","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date should be of the format yyyy-mm-dd \";","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    private final String value;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"     * Constructs an {@code DateBorrowed}.","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"     * @param date A valid date.","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"    public DateBorrowed(LocalDateTime date) {","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":"        checkArgument(isValidDate(date.toString()), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"        value \u003d date.toString();","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"     * Constructs an {@code DateBorrowed}.","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"     * @param date A valid date.","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"    public DateBorrowed(String date) {","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"GJ0407790"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"        value \u003d date;","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"    public String getValue() {","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"GJ0407790"},"content":"        return value;","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     * Indicates whether the book associated with a record is overdue.","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     * @return true if the book is overdue, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"gycc7253"},"content":"    public boolean isOverdue() {","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":"        return DAYS.between(LocalDateTime.parse(this.value), LocalDateTime.now()) \u003e DAYS_BORROW_ALLOWED;","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"     * Indicates whether a given string is a valid date.","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"     * @param test string to be tested.","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"     * @return true if a given string is a valid date, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"gycc7253"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"GJ0407790"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"GJ0407790"},"content":"            LocalDateTime.parse(test);","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"GJ0407790"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"GJ0407790"},"content":"            // the given string is not a valid date (cannot be parsed)","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"GJ0407790"},"content":"            return false;","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"GJ0407790"},"content":"        return true;","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"     * Returns this borrow date in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     * @return this borrow date in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"gycc7253"},"content":"    public String toString() {","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"gycc7253"},"content":"        return value;","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"     * Checks if this borrow date is equal to another borrow date.","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"     * @param other the other borrow date to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"     * @return true if this borrow date is equal to the other borrow date, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"gycc7253"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"gycc7253"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"gycc7253"},"content":"                || (other instanceof DateBorrowed // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"gycc7253"},"content":"                \u0026\u0026 value.equals(((DateBorrowed) other).value)); // state check","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this borrow date.","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this borrow date.","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"gycc7253"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"gycc7253"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"gycc7253"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"arsatis":29,"GJ0407790":19,"gycc7253":56}},{"path":"src/main/java/seedu/smartlib/model/record/DateReturned.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.record;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * The DateReturned class takes note of the date which a book is returned to SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"public class DateReturned {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date should be of the format yyyy-mm-dd \";","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{4}\\\\-(0?[1-9]|1[012])\\\\-(0?[1-9]|[12][0-9]|3[01])$\";","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    private final String value;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * Constructs a {@code DateReturned}.","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"     * @param date A valid date.","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"    public DateReturned(LocalDateTime date) {","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"        checkArgument(isValidDate(date.toString()), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"        value \u003d date.toString();","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"     * Constructs an {@code DateReturned}.","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"     * @param date A valid date.","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"    public DateReturned(String date) {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"GJ0407790"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"        value \u003d date;","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"    public String getValue() {","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"        return value;","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     * Indicates whether a given string is a valid date.","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     * @param test string to be tested.","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     * @return true if a given string is a valid date, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"gycc7253"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"GJ0407790"},"content":"            LocalDateTime.parse(test);","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"GJ0407790"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"GJ0407790"},"content":"            // the given string is not a valid date (cannot be parsed)","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"GJ0407790"},"content":"            return false;","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"GJ0407790"},"content":"        return true;","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     * Returns this return date in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"     * @return this return date in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"gycc7253"},"content":"    public String toString() {","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"gycc7253"},"content":"        return value;","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"     * Checks if this return date is equal to another return date.","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     * @param other the other return date to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     * @return true if this return date is equal to the other return date, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"gycc7253"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"gycc7253"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"gycc7253"},"content":"                || (other instanceof DateReturned // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"gycc7253"},"content":"                \u0026\u0026 value.equals(((DateReturned) other).value)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this return date.","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this return date.","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"gycc7253"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"gycc7253"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"gycc7253"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"arsatis":25,"GJ0407790":17,"gycc7253":52}},{"path":"src/main/java/seedu/smartlib/model/record/IncompleteRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package seedu.smartlib.model.record;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Barcode;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * Incomplete record (i.e. a record with missing barcode) of a borrowing activity.","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"public class IncompleteRecord extends Record {","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"    private final Name bookName;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"     * Creates a borrowing record.","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     * @param bookName     name of the book that is borrowed.","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     * @param readerName   reader who borrowed the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     * @param dateBorrowed borrow date of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    public IncompleteRecord(Name bookName, Name readerName, DateBorrowed dateBorrowed) {","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"        super(new Barcode(Barcode.TEMP_BARCODE_VALUE), readerName, dateBorrowed);","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"        this.bookName \u003d bookName;","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     * Creates a returning record.","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     * @param bookName     name of the book that is borrowed.","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     * @param readerName   reader who borrowed the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * @param dateReturned return date of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"    public IncompleteRecord(Name bookName, Name readerName, DateReturned dateReturned) {","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"        super(new Barcode(Barcode.TEMP_BARCODE_VALUE), readerName, dateReturned);","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"        this.bookName \u003d bookName;","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"     * Returns the book name associated with this incomplete borrow record.","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     * @return the book name associated with this incomplete borrow record.","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"    public Name getBookName() {","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"        return bookName;","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"arsatis":46}},{"path":"src/main/java/seedu/smartlib/model/record/IsReturned.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.record;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * The IsReturned class indicates whether the book associated with a record has been returned to SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"public class IsReturned {","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"    private final String value;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"     * Constructs an {@code DateBorrowed}.","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"     * @param isReturned A boolean indicating whether a book is returned.","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"    public IsReturned(boolean isReturned) {","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"        value \u003d isReturned + \"\";","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * Returns true if a given string is a valid returned object.","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     * @param test string to be tested","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"     * @return true if a given string is a valid returned object, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"    public static boolean isValidIsReturned(String test) {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"        return test.equals(\"true\") || test.equals(\"false\");","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * Returns this IsReturned object in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * @return this IsReturned object in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"    public String toString() {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"        return value;","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     * Checks if this IsReturned object is equal to another IsReturned object.","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     * @param other the other IsReturned object to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     * @return true if this IsReturned object is equal to the other IsReturned object, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"gycc7253"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"                || (other instanceof IsReturned // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"gycc7253"},"content":"                \u0026\u0026 value.equals(((IsReturned) other).value)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this IsReturned object.","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this IsReturned object.","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"gycc7253"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"gycc7253"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"gycc7253"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"arsatis":26,"gycc7253":36}},{"path":"src/main/java/seedu/smartlib/model/record/Record.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.record;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"import java.time.Duration;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Barcode;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"/**","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * The Record class represents a record of a reader\u0027s borrowing activity.","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":" */","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"public class Record {","lastModifiedDate":"2021-02-19"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"    protected final Barcode barcode;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"    protected final Name readerName;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"    // null when creating an returning record to mark existing record as returned","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    protected final DateBorrowed dateBorrowed;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"    // null when creating an borrowing record, is a returned record when dateReturned non-null","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"    protected DateReturned dateReturned;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     * Creates a borrowing record.","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     * @param barcode barcode of the book that is borrowed.","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     * @param readerName reader who borrowed the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     * @param dateBorrowed borrow date of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"    public Record(Barcode barcode, Name readerName, DateBorrowed dateBorrowed) {","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"        this.barcode \u003d barcode;","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"        this.readerName \u003d readerName;","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"        this.dateBorrowed \u003d dateBorrowed;","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"        this.dateReturned \u003d null;","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     * Creates a returning record.","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"     * @param barcode barcode of the book that is borrowed.","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"     * @param readerName reader who borrowed the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     * @param dateReturned return date of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"    public Record(Barcode barcode, Name readerName, DateReturned dateReturned) {","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"        this.barcode \u003d barcode;","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"gycc7253"},"content":"        this.readerName \u003d readerName;","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"        this.dateBorrowed \u003d null;","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"        this.dateReturned \u003d dateReturned;","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     * Creates a borrowing record.","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     * @param barcode barcode of the book that is borrowed.","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     * @param readerName reader who borrowed the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     * @param dateBorrowed borrow date of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     * @param dateReturned return date of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"    public Record(Barcode barcode, Name readerName, DateBorrowed dateBorrowed, DateReturned dateReturned) {","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"        this.barcode \u003d barcode;","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"gycc7253"},"content":"        this.readerName \u003d readerName;","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"gycc7253"},"content":"        this.dateBorrowed \u003d dateBorrowed;","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"gycc7253"},"content":"        this.dateReturned \u003d dateReturned;","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"     * Marks the record as returned.","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"     * @param dateReturned return date of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"gycc7253"},"content":"    public void returnRecord(DateReturned dateReturned) {","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"gycc7253"},"content":"        this.dateReturned \u003d dateReturned;","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     * Retrieves the barcode of the book associated with this record.","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"     * @return the barcode of the book associated with this record.","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"    public Barcode getBookBarcode() {","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"        return barcode;","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"     * Retrieves the name of the reader associated with this record.","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"     * @return the name of the reader associated with this record.","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"gycc7253"},"content":"    public Name getReaderName() {","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"gycc7253"},"content":"        return readerName;","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"     * Retrieves the borrow date noted in this record.","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"     * @return the borrow date noted in this record.","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"gycc7253"},"content":"    public DateBorrowed getDateBorrowed() {","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"gycc7253"},"content":"        return dateBorrowed;","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"arsatis"},"content":"     * Retrieves the return date noted in this record.","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"arsatis"},"content":"     * @return the return date noted in this record.","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"gycc7253"},"content":"    public DateReturned getDateReturned() {","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"gycc7253"},"content":"        return dateReturned;","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"arsatis"},"content":"     * Updates the return date noted in this record.","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"arsatis"},"content":"     * @param dateReturned the new return date noted in this record.","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"gycc7253"},"content":"    public void setDateReturned(DateReturned dateReturned) {","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"gycc7253"},"content":"        this.dateReturned \u003d dateReturned;","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"arsatis"},"content":"     * Returns true if both records have the same details.","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"arsatis"},"content":"     * This defines a weaker notion of equality between two records, to facilitate checking when recording a record.","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"arsatis"},"content":"     * Whenever getDateReturned or getDateBorrowed are not equal, or if any field is missing, then they are equal.","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"arsatis"},"content":"     * @param otherRecord the record to be compared with this record.","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"arsatis"},"content":"     * @return true if both records have the same details, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":126,"author":{"gitId":"gycc7253"},"content":"    public boolean isSameRecord(Record otherRecord) {","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"gycc7253"},"content":"        if (otherRecord \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"gycc7253"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"gycc7253"},"content":"        if (otherRecord \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"gycc7253"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"gycc7253"},"content":"        if (!otherRecord.getReaderName().equals(this.getReaderName())) {","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"gycc7253"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"arsatis"},"content":"        if (!otherRecord.getBookBarcode().equals(this.getBookBarcode())) {","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"gycc7253"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":143,"author":{"gitId":"gycc7253"},"content":"        if (otherRecord.getDateReturned() !\u003d null \u0026\u0026 this.getDateReturned() !\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"gycc7253"},"content":"            return otherRecord.getDateReturned() \u003d\u003d this.getDateReturned();","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":146,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":147,"author":{"gitId":"gycc7253"},"content":"        if (otherRecord.getDateBorrowed() !\u003d null \u0026\u0026 this.getDateBorrowed() !\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"gycc7253"},"content":"            return otherRecord.getDateBorrowed() \u003d\u003d this.getDateBorrowed();","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":151,"author":{"gitId":"gycc7253"},"content":"        return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":154,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":155,"author":{"gitId":"GJ0407790"},"content":"     * Gets the duration of the book being borrowed.","lastModifiedDate":"2021-03-28"},{"lineNumber":156,"author":{"gitId":"GJ0407790"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":157,"author":{"gitId":"GJ0407790"},"content":"     * @return A Duration class that represent the duration the book is borrowed.","lastModifiedDate":"2021-03-28"},{"lineNumber":158,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":159,"author":{"gitId":"GJ0407790"},"content":"    public Duration getBorrowDuration() {","lastModifiedDate":"2021-03-28"},{"lineNumber":160,"author":{"gitId":"GJ0407790"},"content":"        assert dateBorrowed !\u003d null \u0026\u0026 dateReturned !\u003d null : \"Date cannot be null\";","lastModifiedDate":"2021-03-28"},{"lineNumber":161,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":162,"author":{"gitId":"GJ0407790"},"content":"        LocalDateTime startDate \u003d LocalDateTime.parse(dateBorrowed.getValue());","lastModifiedDate":"2021-03-28"},{"lineNumber":163,"author":{"gitId":"GJ0407790"},"content":"        LocalDateTime endDate \u003d LocalDateTime.parse(dateReturned.getValue());","lastModifiedDate":"2021-03-28"},{"lineNumber":164,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"GJ0407790"},"content":"        return Duration.between(startDate, endDate);","lastModifiedDate":"2021-03-28"},{"lineNumber":166,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":167,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":168,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"arsatis"},"content":"     * Returns true if both records have the same identity and data fields.","lastModifiedDate":"2021-03-27"},{"lineNumber":170,"author":{"gitId":"arsatis"},"content":"     * This defines a stronger notion of equality between two records.","lastModifiedDate":"2021-03-27"},{"lineNumber":171,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":172,"author":{"gitId":"arsatis"},"content":"     * @param other the record to be compared with this record.","lastModifiedDate":"2021-03-27"},{"lineNumber":173,"author":{"gitId":"arsatis"},"content":"     * @return true if both records have the same identity and data fields, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":174,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":175,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":176,"author":{"gitId":"gycc7253"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":177,"author":{"gitId":"gycc7253"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":178,"author":{"gitId":"gycc7253"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":179,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":180,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":181,"author":{"gitId":"gycc7253"},"content":"        if (other.getClass() !\u003d getClass()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":182,"author":{"gitId":"gycc7253"},"content":"            return false;","lastModifiedDate":"2021-03-15"},{"lineNumber":183,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":184,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"gycc7253"},"content":"        Record otherRecord \u003d (Record) other;","lastModifiedDate":"2021-03-14"},{"lineNumber":186,"author":{"gitId":"gycc7253"},"content":"        return isSameRecord(otherRecord);","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":188,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":189,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":190,"author":{"gitId":"arsatis"},"content":"     * Returns this Record in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":191,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":192,"author":{"gitId":"arsatis"},"content":"     * @return this Record in String format.","lastModifiedDate":"2021-03-27"},{"lineNumber":193,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":194,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":195,"author":{"gitId":"gycc7253"},"content":"    public String toString() {","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"arsatis"},"content":"        return this.getBookBarcode() + \" : \" + this.getReaderName() + \" : \"","lastModifiedDate":"2021-03-27"},{"lineNumber":197,"author":{"gitId":"gycc7253"},"content":"                + this.getDateBorrowed() + \" : \" + this.getDateReturned();","lastModifiedDate":"2021-03-14"},{"lineNumber":198,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":199,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":200,"author":{"gitId":"gycc7253"},"content":"}","lastModifiedDate":"2021-02-19"}],"authorContributionMap":{"arsatis":89,"GJ0407790":17,"gycc7253":94}},{"path":"src/main/java/seedu/smartlib/model/record/RecordContainsBarcodePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package seedu.smartlib.model.record;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.book.Barcode;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":" * Tests that a {@code Record}\u0027s {@code Name} matches the barcode given.","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"public class RecordContainsBarcodePredicate implements Predicate\u003cRecord\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"    private final Barcode barcode;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"     * Creates a RecordNameContainsKeywordPredicate.","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"     * @param barcode barcode of the book","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"    public RecordContainsBarcodePredicate(Barcode barcode) {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"        this.barcode \u003d barcode;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"     * Tests if the record contains the given barcode.","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"     * @param record the record to be tested.","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"     * @return true if the record contains the barcode, and false otherwise.","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"    public boolean test(Record record) {","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"        return this.barcode.equals(record.getBookBarcode());","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"     * Checks if this RecordNameContainsKeywordPredicate is equal to another RecordNameContainsKeywordPredicate.","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"     * @param other the other RecordNameContainsKeywordPredicate to be compared.","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"     * @return true if this RecordNameContainsKeywordPredicate is equal to the other RecordNameContainsKeywordPredicate,","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"     *         and false otherwise.","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"                || (other instanceof seedu.smartlib.model.record.RecordContainsBarcodePredicate","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"                \u0026\u0026 barcode.equals(((seedu.smartlib.model.record.RecordContainsBarcodePredicate) other).barcode));","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Andrewzhang217":51}},{"path":"src/main/java/seedu/smartlib/model/record/UniqueRecordList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.record;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.exceptions.DuplicateRecordException;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.exceptions.RecordNotFoundException;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":" * A list of records that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":" * A record is considered unique by comparing using {@code Record#isSameRecord(Record)}. As such, adding and updating of","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":" * records uses Record#isSameRecord(Record) for equality so as to ensure that the record being added or updated is","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":" * unique in terms of identity in the UniqueRecordList. However, the removal of a records uses Record#equals(Object) so","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":" * as to ensure that the record with exactly the same fields will be removed.","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":" *","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":" *","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":" * @see Record#isSameRecord(Record)","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"public class UniqueRecordList implements Iterable\u003cRecord\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"    private final ObservableList\u003cRecord\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"    private final ObservableList\u003cRecord\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"     * Returns true if the list contains an equivalent record as the given argument.","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * @param toCheck the record to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * @return true if the list contains an equivalent record as the given argument, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"    public boolean contains(Record toCheck) {","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"        return internalList.stream().anyMatch(toCheck::isSameRecord);","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"gycc7253"},"content":"     * Adds a record to the list.","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"gycc7253"},"content":"     * The record must not already exist in the list.","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     * @param toAdd the record to be added.","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"    public void addRecord(Record toAdd) {","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"gycc7253"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"gycc7253"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"gycc7253"},"content":"            throw new DuplicateRecordException();","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"gycc7253"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"gycc7253"},"content":"     * Replaces the record {@code target} in the list with {@code editedRecord}.","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"gycc7253"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"gycc7253"},"content":"     * The record identity of {@code editedRecord} must not be the same as another existing record in the list.","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"     * @param target the record to be replaced.","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     * @param editedRecord the new record.","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"gycc7253"},"content":"    public void setRecord(Record target, Record editedRecord) {","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"gycc7253"},"content":"        requireAllNonNull(target, editedRecord);","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"gycc7253"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"gycc7253"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"gycc7253"},"content":"            throw new RecordNotFoundException();","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"gycc7253"},"content":"        if (!target.isSameRecord(editedRecord) \u0026\u0026 contains(editedRecord)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"gycc7253"},"content":"            throw new DuplicateRecordException();","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"gycc7253"},"content":"        internalList.set(index, editedRecord);","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"gycc7253"},"content":"     * Removes the equivalent record from the list.","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"gycc7253"},"content":"     * The record must exist in the list.","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"     * @param toRemove the record to be removed.","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"gycc7253"},"content":"    public void remove(Record toRemove) {","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"gycc7253"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"gycc7253"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"gycc7253"},"content":"            throw new RecordNotFoundException();","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"     * Updates the records in the unique record list.","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"     * @param replacement the new list of records.","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"gycc7253"},"content":"    public void setRecords(UniqueRecordList replacement) {","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"gycc7253"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"gycc7253"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"gycc7253"},"content":"     * Replaces the contents of this list with {@code records}.","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"gycc7253"},"content":"     * {@code records} must not contain duplicate records.","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"arsatis"},"content":"     * @param records the new list of records.","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"gycc7253"},"content":"    public void setRecords(List\u003cRecord\u003e records) {","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"gycc7253"},"content":"        requireAllNonNull(records);","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"gycc7253"},"content":"        if (!recordsAreUnique(records)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"gycc7253"},"content":"            throw new DuplicateRecordException();","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"gycc7253"},"content":"        internalList.setAll(records);","lastModifiedDate":"2021-03-13"},{"lineNumber":115,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":117,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"gycc7253"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"arsatis"},"content":"     * @return the backing list of records.","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"gycc7253"},"content":"    public ObservableList\u003cRecord\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"gycc7253"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":125,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":126,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"arsatis"},"content":"     * Returns an iterator for the unique record list.","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"arsatis"},"content":"     * @return an iterator for the unique record list.","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"gycc7253"},"content":"    public Iterator\u003cRecord\u003e iterator() {","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"gycc7253"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":135,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"arsatis"},"content":"     * Checks if this UniqueRecordList is equal to another UniqueRecordList.","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"arsatis"},"content":"     * @param other the other UniqueRecordList to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"arsatis"},"content":"     * @return true if this UniqueRecordList is equal to the other UniqueRecordList, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":142,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":143,"author":{"gitId":"gycc7253"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":144,"author":{"gitId":"gycc7253"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":145,"author":{"gitId":"gycc7253"},"content":"                || (other instanceof UniqueRecordList // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":146,"author":{"gitId":"gycc7253"},"content":"                        \u0026\u0026 internalList.equals(((UniqueRecordList) other).internalList));","lastModifiedDate":"2021-03-13"},{"lineNumber":147,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":150,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this UniqueRecordList.","lastModifiedDate":"2021-03-27"},{"lineNumber":151,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this UniqueRecordList.","lastModifiedDate":"2021-03-27"},{"lineNumber":153,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":155,"author":{"gitId":"gycc7253"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-13"},{"lineNumber":156,"author":{"gitId":"gycc7253"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-13"},{"lineNumber":157,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":158,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":159,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":160,"author":{"gitId":"gycc7253"},"content":"     * Returns true if {@code records} contains only unique records.","lastModifiedDate":"2021-03-13"},{"lineNumber":161,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":162,"author":{"gitId":"arsatis"},"content":"     * @param records the list of records to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":163,"author":{"gitId":"arsatis"},"content":"     * @return true if {@code records} contains only unique records, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":165,"author":{"gitId":"gycc7253"},"content":"    private boolean recordsAreUnique(List\u003cRecord\u003e records) {","lastModifiedDate":"2021-03-13"},{"lineNumber":166,"author":{"gitId":"gycc7253"},"content":"        for (int i \u003d 0; i \u003c records.size() - 1; i++) {","lastModifiedDate":"2021-03-13"},{"lineNumber":167,"author":{"gitId":"gycc7253"},"content":"            for (int j \u003d i + 1; j \u003c records.size(); j++) {","lastModifiedDate":"2021-03-13"},{"lineNumber":168,"author":{"gitId":"gycc7253"},"content":"                if (records.get(i).isSameRecord(records.get(j))) {","lastModifiedDate":"2021-03-13"},{"lineNumber":169,"author":{"gitId":"gycc7253"},"content":"                    return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":170,"author":{"gitId":"gycc7253"},"content":"                }","lastModifiedDate":"2021-03-13"},{"lineNumber":171,"author":{"gitId":"gycc7253"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":172,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":173,"author":{"gitId":"gycc7253"},"content":"        return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":174,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":175,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"gycc7253"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"arsatis":39,"gycc7253":137}},{"path":"src/main/java/seedu/smartlib/model/record/exceptions/DuplicateRecordException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.record.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":" * Signals that the operation will result in duplicate Records (Records are considered duplicates if they have the same","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":" * reader name and book name and dateBorrowed).","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"public class DuplicateRecordException extends RuntimeException {","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"     * A constructor for the DuplicateRecordException.","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"    public DuplicateRecordException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"        super(\"Operation would result in duplicate records\");","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"arsatis":5,"gycc7253":11}},{"path":"src/main/java/seedu/smartlib/model/record/exceptions/RecordNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.record.exceptions;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":" * Signals that the operation is unable to find the specified record.","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"public class RecordNotFoundException extends RuntimeException {","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"arsatis":3,"gycc7253":5}},{"path":"src/main/java/seedu/smartlib/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.tag;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * Represents a Tag in SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"    private final String tagName;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * Returns the name associated with this tag.","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * @return The name associated with this tag","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"    public String getTagName() {","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"        return tagName;","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     * @param test string to be tested.","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     * @return true if a given string is a valid tag name, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     * Checks if this Tag is equal to another Tag.","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     * @param other the other Tag to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     * @return true if this Tag is equal to the other Tag, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     * Generates a hashcode for this Tag.","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"     * @return the hashcode for this Tag.","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"     * Formats the tag as text for viewing.","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     * @return the tag as text for viewing.","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"arsatis":29,"gycc7253":2,"-":49}},{"path":"src/main/java/seedu/smartlib/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.util;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import java.util.Map;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ReadOnlySmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.SmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.book.Author;","lastModifiedDate":"2021-03-21"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Barcode;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-21"},{"lineNumber":15,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.model.book.Genre;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.book.Isbn;","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.book.Publisher;","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.Address;","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.Email;","lastModifiedDate":"2021-02-19"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.Phone;","lastModifiedDate":"2021-02-19"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.DateBorrowed;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.Record;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.tag.Tag;","lastModifiedDate":"2021-02-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":" * Contains utility methods for populating {@code SmartLib} with sample data.","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"    private static final Book OLDMAN \u003d new Book(","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"            new Name(\"The Old Man And The Sea\"),","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"            new Author(new Name(\"Harmingway\")),","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"            new Publisher(new Name(\"Pearson\")),","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"            new Isbn(\"1234567890123\"),","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"            new Barcode(Barcode.MIN_VALUE),","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"            new Genre(new Name(\"Novel\")),","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"            new Name(\"Bernice Yu\")","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"    );","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"    private static final Book HOBBIT \u003d new Book(","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"            new Name(\"The Hobbit\"),","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"            new Author(new Name(\"Tolkien\")),","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"            new Publisher(new Name(\"Pearson\")),","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"            new Isbn(\"1234567890124\"), new Barcode(Barcode.MIN_VALUE + 1),","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"            new Genre(new Name(\"Fantasy\")),","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"            new Name(\"Bernice Yu\")","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"    );","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"    private static final Book CLOUDATLAS \u003d new Book(","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"            new Name(\"Cloud Atlas\"),","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"            new Author(new Name(\"David Mitchell\")),","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"            new Publisher(new Name(\"Pearson\")),","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"            new Isbn(\"1234567890125\"),","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"            new Barcode(Barcode.MAX_VALUE),","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"            new Genre(new Name(\"SciFi\")),","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"            new Name(\"Alex Yeoh\")","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"    );","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"    private static final Book CLOUDNINE \u003d new Book(","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"            new Name(\"Cloud Nine\"),","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"            new Author(new Name(\"Tom Hanks\")),","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"            new Publisher(new Name(\"Scientific\")),","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"            new Isbn(\"1234567890120\"),","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"            new Barcode(Barcode.MAX_VALUE - 1),","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"            new Genre(new Name(\"SciFi\"))","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"    );","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"    private static final Book AVENGERS \u003d new Book(","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"            new Name(\"The Avengers\"),","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"            new Author(new Name(\"Marvel\")),","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"            new Publisher(new Name(\"Pearson\")),","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"            new Isbn(\"1234567890129\"),","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"            new Barcode(Barcode.MAX_VALUE - 2),","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"            new Genre(new Name(\"Comic\"))","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"    );","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"     * Gets an array of sample readers.","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"     * @return an array of sample readers.","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"    public static Reader[] getSampleReaders() {","lastModifiedDate":"2021-03-07"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"        HashMap\u003cBook, DateBorrowed\u003e berniceMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"GJ0407790"},"content":"        berniceMap.put(HOBBIT, new DateBorrowed(\"2021-01-22T23:30:00\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"GJ0407790"},"content":"        berniceMap.put(OLDMAN, new DateBorrowed(\"2021-03-02T13:45:00\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"        HashMap\u003cBook, DateBorrowed\u003e alexMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"GJ0407790"},"content":"        alexMap.put(CLOUDATLAS, new DateBorrowed(\"2020-11-23T08:30:00\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"gycc7253"},"content":"        return new Reader[] {","lastModifiedDate":"2021-02-19"},{"lineNumber":92,"author":{"gitId":"gycc7253"},"content":"            new Reader(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-02-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"                getTagSet(\"VIP\"), alexMap),","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"gycc7253"},"content":"            new Reader(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-02-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"                getTagSet(\"VIP\", \"TopBorrower\"), berniceMap),","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"gycc7253"},"content":"            new Reader(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-02-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"                getTagSet(\"VIP\"), getBorrowMap(new HashMap\u003c\u003e())),","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"gycc7253"},"content":"            new Reader(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-02-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":103,"author":{"gitId":"arsatis"},"content":"                getTagSet(), getBorrowMap(new HashMap\u003c\u003e())),","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"gycc7253"},"content":"            new Reader(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-02-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":106,"author":{"gitId":"arsatis"},"content":"                getTagSet(), getBorrowMap(new HashMap\u003c\u003e())),","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"gycc7253"},"content":"            new Reader(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2021-02-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":109,"author":{"gitId":"arsatis"},"content":"                getTagSet(\"VIP\"), getBorrowMap(new HashMap\u003c\u003e()))","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":113,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"arsatis"},"content":"     * Gets an array of sample records.","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"arsatis"},"content":"     * @return an array of sample records.","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"gycc7253"},"content":"    public static Record[] getSampleRecords() {","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"gycc7253"},"content":"        return new Record[] {","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"GJ0407790"},"content":"            new Record(CLOUDATLAS.getBarcode(), CLOUDATLAS.getBorrowerName(),","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"GJ0407790"},"content":"                    new DateBorrowed(\"2020-11-23T08:30:00\")),","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"GJ0407790"},"content":"            new Record(HOBBIT.getBarcode(), HOBBIT.getBorrowerName(), new DateBorrowed(\"2021-01-22T23:30:00\")),","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"GJ0407790"},"content":"            new Record(OLDMAN.getBarcode(), OLDMAN.getBorrowerName(), new DateBorrowed(\"2021-03-02T13:45:00\"))","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"gycc7253"},"content":"        };","lastModifiedDate":"2021-03-13"},{"lineNumber":125,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":126,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":128,"author":{"gitId":"arsatis"},"content":"     * Gets an array of sample books.","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"arsatis"},"content":"     * @return an array of sample books.","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":132,"author":{"gitId":"gycc7253"},"content":"    public static Book[] getSampleBooks() {","lastModifiedDate":"2021-03-21"},{"lineNumber":133,"author":{"gitId":"arsatis"},"content":"        return new Book[] { OLDMAN, HOBBIT, CLOUDATLAS, CLOUDNINE, AVENGERS };","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":135,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":136,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"arsatis"},"content":"     * Gets a Sample of SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"arsatis"},"content":"     * @return SmartLib Sample.","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"arsatis"},"content":"    public static ReadOnlySmartLib getSampleSmartLib() {","lastModifiedDate":"2021-03-07"},{"lineNumber":142,"author":{"gitId":"gycc7253"},"content":"        SmartLib sampleAb \u003d new SmartLib();","lastModifiedDate":"2021-02-19"},{"lineNumber":143,"author":{"gitId":"arsatis"},"content":"        for (Reader sampleReader : getSampleReaders()) {","lastModifiedDate":"2021-03-07"},{"lineNumber":144,"author":{"gitId":"Nanxi-Huang"},"content":"            sampleAb.addReader(sampleReader);","lastModifiedDate":"2021-03-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":146,"author":{"gitId":"gycc7253"},"content":"        for (Record sampleRecord : getSampleRecords()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":147,"author":{"gitId":"gycc7253"},"content":"            sampleAb.addRecord(sampleRecord);","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"gycc7253"},"content":"        for (Book sampleBook : getSampleBooks()) {","lastModifiedDate":"2021-03-21"},{"lineNumber":150,"author":{"gitId":"gycc7253"},"content":"            sampleAb.addBook(sampleBook);","lastModifiedDate":"2021-03-21"},{"lineNumber":151,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":157,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":158,"author":{"gitId":"arsatis"},"content":"     * @param strings given list of strings.","lastModifiedDate":"2021-03-27"},{"lineNumber":159,"author":{"gitId":"arsatis"},"content":"     * @return tag set containing the list of strings given.","lastModifiedDate":"2021-03-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":167,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":168,"author":{"gitId":"arsatis"},"content":"     * Returns a borrow map containing the list of borrow records given.","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":170,"author":{"gitId":"arsatis"},"content":"     * @param map given list of borrow records.","lastModifiedDate":"2021-03-27"},{"lineNumber":171,"author":{"gitId":"arsatis"},"content":"     * @return borrow map containing the list of borrow records given.","lastModifiedDate":"2021-03-27"},{"lineNumber":172,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":173,"author":{"gitId":"arsatis"},"content":"    private static Map\u003cBook, DateBorrowed\u003e getBorrowMap(HashMap\u003cBook, DateBorrowed\u003e map) {","lastModifiedDate":"2021-03-27"},{"lineNumber":174,"author":{"gitId":"gycc7253"},"content":"        return map;","lastModifiedDate":"2021-03-23"},{"lineNumber":175,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":176,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"arsatis":87,"Nanxi-Huang":2,"GJ0407790":8,"gycc7253":48,"-":32}},{"path":"src/main/java/seedu/smartlib/storage/JsonAdaptedBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"package seedu.smartlib.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Author;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Barcode;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.model.book.Genre;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Isbn;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Publisher;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":" * Jackson-friendly version of {@link Book}.","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"class JsonAdaptedBook {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Book\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"    private final String name;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"    private final String author;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"    private final String publisher;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"    private final String isbn;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    private final String barcode;","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"Nanxi-Huang"},"content":"    private final String genre;","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"    private final String borrowerName;","lastModifiedDate":"2021-03-21"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"     * Constructs a {@code JsonAdaptedBook} with the given book details.","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     * @param name name of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * @param author author of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * @param publisher publisher of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     * @param isbn ISBN of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"     * @param barcode barcode of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"     * @param genre genre of the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"     * @param borrowerName reader who borrowed the book.","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"    public JsonAdaptedBook(@JsonProperty(\"name\") String name, @JsonProperty(\"author\") String author,","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"gycc7253"},"content":"                           @JsonProperty(\"publisher\") String publisher, @JsonProperty(\"isbn\") String isbn,","lastModifiedDate":"2021-03-21"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"                           @JsonProperty(\"barcode\") String barcode, @JsonProperty(\"genre\") String genre,","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":"                           @JsonProperty(\"borrowerName\") String borrowerName) {","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"GJ0407790"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"GJ0407790"},"content":"        this.author \u003d author;","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"GJ0407790"},"content":"        this.publisher \u003d publisher;","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"GJ0407790"},"content":"        this.isbn \u003d isbn;","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"        this.barcode \u003d barcode;","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"Nanxi-Huang"},"content":"        this.genre \u003d genre;","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"gycc7253"},"content":"        this.borrowerName \u003d borrowerName;","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"GJ0407790"},"content":"     * Converts a given {@code Book} into this class for Jackson use.","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"     * @param source book to be converted.","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"GJ0407790"},"content":"    public JsonAdaptedBook(Book source) {","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"        name \u003d source.getName().toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"GJ0407790"},"content":"        author \u003d source.getAuthor().toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"GJ0407790"},"content":"        publisher \u003d source.getPublisher().toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"        isbn \u003d source.getIsbn().toString();","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"        barcode \u003d source.getBarcode().toString();","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"Nanxi-Huang"},"content":"        genre \u003d source.getGenre().toString();","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"        borrowerName \u003d source.getBorrowerName() \u003d\u003d null ? null : source.getBorrowerName().toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"GJ0407790"},"content":"     * Converts this Jackson-friendly adapted book object into the model\u0027s {@code Book} object.","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"GJ0407790"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     * @return Book object converted from the storage file.","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"GJ0407790"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted book.","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"GJ0407790"},"content":"    public Book toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"GJ0407790"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"GJ0407790"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"GJ0407790"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"GJ0407790"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"GJ0407790"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"GJ0407790"},"content":"        if (author \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"GJ0407790"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Author.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"GJ0407790"},"content":"        if (!Author.isValidAuthor(author)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"GJ0407790"},"content":"            throw new IllegalValueException(Author.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"GJ0407790"},"content":"        final Author modelAuthor \u003d new Author(new Name(author));","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"GJ0407790"},"content":"        if (publisher \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"GJ0407790"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"GJ0407790"},"content":"                    Publisher.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"GJ0407790"},"content":"        if (!Publisher.isValidPublisher(publisher)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"GJ0407790"},"content":"            throw new IllegalValueException(Publisher.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"GJ0407790"},"content":"        final Publisher modelPublisher \u003d new Publisher(new Name(publisher));","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"GJ0407790"},"content":"        if (isbn \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"GJ0407790"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Isbn.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"GJ0407790"},"content":"        if (!Isbn.isValidIsbn(isbn)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"GJ0407790"},"content":"            throw new IllegalValueException(Isbn.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"GJ0407790"},"content":"        final Isbn modelIsbn \u003d new Isbn(isbn);","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"arsatis"},"content":"        if (barcode \u003d\u003d null) {","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"arsatis"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Barcode.class.getSimpleName()));","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"arsatis"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"arsatis"},"content":"        if (!Barcode.isValidBarcode(Integer.parseInt(barcode))) {","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"arsatis"},"content":"            throw new IllegalValueException(Isbn.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"arsatis"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"arsatis"},"content":"        final Barcode modelBarcode \u003d new Barcode(Integer.parseInt(barcode));","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":119,"author":{"gitId":"Nanxi-Huang"},"content":"        if (genre \u003d\u003d null) {","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"Nanxi-Huang"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Genre.class.getSimpleName()));","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"Nanxi-Huang"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"Nanxi-Huang"},"content":"        if (!Genre.isValidGenre(genre)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"Nanxi-Huang"},"content":"            throw new IllegalValueException(Genre.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"Nanxi-Huang"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"Nanxi-Huang"},"content":"        final Genre modelGenre \u003d new Genre(new Name(genre));","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"gycc7253"},"content":"        if (borrowerName \u003d\u003d null) {","lastModifiedDate":"2021-03-21"},{"lineNumber":128,"author":{"gitId":"arsatis"},"content":"            return new Book(modelName, modelAuthor, modelPublisher, modelIsbn, modelBarcode, modelGenre);","lastModifiedDate":"2021-03-25"},{"lineNumber":129,"author":{"gitId":"gycc7253"},"content":"        } else {","lastModifiedDate":"2021-03-21"},{"lineNumber":130,"author":{"gitId":"gycc7253"},"content":"            final Name readerName \u003d new Name(borrowerName);","lastModifiedDate":"2021-03-21"},{"lineNumber":131,"author":{"gitId":"arsatis"},"content":"            return new Book(modelName, modelAuthor, modelPublisher, modelIsbn, modelBarcode, modelGenre, readerName);","lastModifiedDate":"2021-03-25"},{"lineNumber":132,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":133,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"GJ0407790"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"arsatis":29,"Nanxi-Huang":12,"GJ0407790":86,"gycc7253":8}},{"path":"src/main/java/seedu/smartlib/storage/JsonAdaptedBookDateBorrowedPair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package seedu.smartlib.storage;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import java.util.AbstractMap;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import java.util.Map;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Author;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Barcode;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Genre;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Isbn;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Publisher;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.record.DateBorrowed;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":" * Jackson-friendly version of {@link Book DateBorrowed Pair}.","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"class JsonAdaptedBookDateBorrowedPair {","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    private static final String MESSAGE_CONSTRAINTS \u003d \"NameDateBorrowedPair creation exception\";","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    private final List\u003cString\u003e book;","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"    private final String dateBorrowed;","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     * Constructs a {@code JsonAdaptedBookDateBorrowedPair} with the given {@code NameDateBorrowedPair}.","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     * @param book book associated with this pair.","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * @param dateBorrowed borrow date associated with this pair.","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    public JsonAdaptedBookDateBorrowedPair(@JsonProperty(\"book\") List\u003cString\u003e book,","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"                                           @JsonProperty(\"dateBorrowed\") String dateBorrowed) {","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"        this.book \u003d book;","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"        this.dateBorrowed \u003d dateBorrowed;","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     * Converts a given {@code NameDateBorrowedPair} into this class for Jackson use.","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     * @param entry pair to be converted.","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"    public JsonAdaptedBookDateBorrowedPair(Map.Entry\u003cBook, DateBorrowed\u003e entry) {","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"        Book book \u003d entry.getKey();","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"        this.book \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"        this.book.add(book.getName().toString());","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"        this.book.add(book.getAuthor().toString());","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"        this.book.add(book.getPublisher().toString());","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"        this.book.add(book.getIsbn().toString());","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"        this.book.add(book.getBarcode().toString());","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"        this.book.add(book.getGenre().toString());","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"        this.dateBorrowed \u003d entry.getValue().toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"     * Converts a given {@code NameDateBorrowedPair} into this class for Jackson use.","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"     * @param book book to be converted.","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"     * @param dateBorrowed borrow date to be converted.","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"    public JsonAdaptedBookDateBorrowedPair(Book book, DateBorrowed dateBorrowed) {","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"        this.book \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"        this.book.add(book.getName().toString());","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"        this.book.add(book.getAuthor().toString());","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"        this.book.add(book.getPublisher().toString());","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"        this.book.add(book.getIsbn().toString());","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"        this.book.add(book.getBarcode().toString());","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"        this.book.add(book.getGenre().toString());","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"        this.dateBorrowed \u003d dateBorrowed.toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"     * Converts this Jackson-friendly adapted NameDateBorrowedPair object into the model\u0027s","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"     * {@code NameDateBorrowedPair} object.","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"     * @return NameDateBorrowedPair object converted from the storage file.","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted NameDateBorrowedPair.","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"    public Map.Entry\u003cBook, DateBorrowed\u003e toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"        if (!DateBorrowed.isValidDate(dateBorrowed)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"            throw new IllegalValueException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"        return new AbstractMap.SimpleEntry\u003c\u003e(","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"                new Book(new Name(book.get(0)),","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"                        new Author(new Name(book.get(1))),","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"                        new Publisher(new Name(book.get(2))),","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"                        new Isbn(book.get(3)),","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"                        new Barcode(Integer.parseInt(book.get(4))),","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"                        new Genre(new Name(book.get(5)))","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"                ), // there is no need to store details of the reader who borrowed the book here","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"                new DateBorrowed(dateBorrowed)","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"        );","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"arsatis":100}},{"path":"src/main/java/seedu/smartlib/storage/JsonAdaptedReader.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.storage;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import java.util.Map;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-19"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.Address;","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.Email;","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.Phone;","lastModifiedDate":"2021-02-19"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.DateBorrowed;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.tag.Tag;","lastModifiedDate":"2021-02-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":" * Jackson-friendly version of {@link Reader}.","lastModifiedDate":"2021-02-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"class JsonAdaptedReader {","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Reader\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"    public static final String NOT_BORROWED \u003d \"Not Borrowed\";","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    private final List\u003cJsonAdaptedBookDateBorrowedPair\u003e borrows \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     * Constructs a {@code JsonAdaptedReader} with the given reader details.","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     * @param name name of the reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     * @param phone phone number of the reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     * @param email email of the reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     * @param address address of the reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     * @param tagged tags of the reader.","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     * @param borrows books which the reader has borrowed.","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"    public JsonAdaptedReader(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"gycc7253"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-03-21"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"                             @JsonProperty(\"borrows\") List\u003cJsonAdaptedBookDateBorrowedPair\u003e borrows) {","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"gycc7253"},"content":"        if (borrows !\u003d null) {","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"gycc7253"},"content":"            this.borrows.addAll(borrows);","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"     * Converts a given {@code Reader} into this class for Jackson use.","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"     * @param source reader to be converted.","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"    public JsonAdaptedReader(Reader source) {","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"        name \u003d source.getName().toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"        phone \u003d source.getPhone().toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"        email \u003d source.getEmail().toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"        address \u003d source.getAddress().toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"gycc7253"},"content":"        borrows.addAll(source.getBorrows().entrySet().stream()","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"                .map(JsonAdaptedBookDateBorrowedPair::new)","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"gycc7253"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"     * Converts this Jackson-friendly adapted reader object into the model\u0027s {@code Reader} object.","lastModifiedDate":"2021-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"     * @return Reader object converted from the storage file.","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted reader.","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"gycc7253"},"content":"    public Reader toModelType() throws IllegalValueException {","lastModifiedDate":"2021-02-19"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"        final List\u003cTag\u003e readerTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"            readerTags.add(tag.toModelType());","lastModifiedDate":"2021-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"        final Map\u003cBook, DateBorrowed\u003e readerBorrows \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"        for (JsonAdaptedBookDateBorrowedPair pair : borrows) {","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"gycc7253"},"content":"            readerBorrows.put(pair.toModelType().getKey(), pair.toModelType().getValue());","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"arsatis"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(readerTags);","lastModifiedDate":"2021-03-07"},{"lineNumber":134,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":135,"author":{"gitId":"arsatis"},"content":"        final Map\u003cBook, DateBorrowed\u003e modelBorrows \u003d new HashMap\u003c\u003e(readerBorrows);","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"gycc7253"},"content":"        return new Reader(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelBorrows);","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"arsatis":36,"GJ0407790":1,"gycc7253":21,"-":82}},{"path":"src/main/java/seedu/smartlib/storage/JsonAdaptedRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.storage;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Barcode;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.DateBorrowed;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.DateReturned;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.Record;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":" * Jackson-friendly version of {@link Record}.","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"class JsonAdaptedRecord {","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Record\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    private final String barcode;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"    private final String readerName;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"    private final String dateBorrowed;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"    private final String dateReturned;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"     * Constructs a {@code JsonAdaptedRecord} with the given record details.","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     * @param barcode barcode associated with the record.","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     * @param readerName name of the reader associated with the record.","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * @param dateBorrowed borrow date associated with the record.","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     * @param dateReturned return date associated with the record.","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"    public JsonAdaptedRecord(@JsonProperty(\"barcode\") String barcode,","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"                             @JsonProperty(\"readerName\") String readerName,","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"                             @JsonProperty(\"dateBorrowed\") String dateBorrowed,","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"                             @JsonProperty(\"dateReturned\") String dateReturned) {","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"        this.barcode \u003d barcode;","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"        this.readerName \u003d readerName;","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"        this.dateBorrowed \u003d dateBorrowed;","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"        this.dateReturned \u003d dateReturned;","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":"     * Converts a given {@code Record} into this class for Jackson use.","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     * @param source record to be converted.","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"gycc7253"},"content":"    public JsonAdaptedRecord(Record source) {","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"        barcode \u003d source.getBookBarcode().toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"        readerName \u003d source.getReaderName().toString();","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"gycc7253"},"content":"        dateBorrowed \u003d source.getDateBorrowed().toString();","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"gycc7253"},"content":"        if (source.getDateReturned() \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"gycc7253"},"content":"            dateReturned \u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"gycc7253"},"content":"        } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"gycc7253"},"content":"            dateReturned \u003d source.getDateReturned().toString();","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"gycc7253"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"gycc7253"},"content":"     * Converts this Jackson-friendly adapted record object into the model\u0027s {@code record} object.","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"gycc7253"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"     * @return Record object converted from the storage file.","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"gycc7253"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted record.","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"gycc7253"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"gycc7253"},"content":"    public Record toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"        if (barcode \u003d\u003d null) {","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Barcode.class.getSimpleName()));","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"        if (!Barcode.isValidBarcode(Integer.parseInt(barcode))) {","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"gycc7253"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"        final Barcode modelBookBarcode \u003d new Barcode(Integer.parseInt(barcode));","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"gycc7253"},"content":"        if (readerName \u003d\u003d null) {","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"gycc7253"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"gycc7253"},"content":"        if (!Name.isValidName(readerName)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"gycc7253"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"gycc7253"},"content":"        final Name modelReaderName \u003d new Name(readerName);","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"gycc7253"},"content":"        if (dateBorrowed \u003d\u003d null) {","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"gycc7253"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"gycc7253"},"content":"                    DateBorrowed.class.getSimpleName()));","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"gycc7253"},"content":"        if (!DateBorrowed.isValidDate(dateBorrowed)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"gycc7253"},"content":"            throw new IllegalValueException(DateBorrowed.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"gycc7253"},"content":"        final DateBorrowed modelDateBorrowed \u003d new DateBorrowed(dateBorrowed);","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"gycc7253"},"content":"        final DateReturned modelDateReturned;","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"gycc7253"},"content":"        if (dateReturned \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"gycc7253"},"content":"            modelDateReturned \u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"gycc7253"},"content":"        } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"gycc7253"},"content":"            modelDateReturned \u003d new DateReturned(dateReturned);","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"        return new Record(modelBookBarcode, modelReaderName, modelDateBorrowed, modelDateReturned);","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"gycc7253"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"arsatis":20,"gycc7253":83}},{"path":"src/main/java/seedu/smartlib/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.storage;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.tag.Tag;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     * @param tagName tag to be associated with this object.","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     * @param source tag to be converted.","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"        tagName \u003d source.getTagName();","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     * Returns the name of the tag.","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"     * @return the name of the tag.","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     * @return Tag object converted from the storage file.","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"arsatis":11,"gycc7253":3,"-":44}},{"path":"src/main/java/seedu/smartlib/storage/JsonSerializableSmartLib.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.storage;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.BorrowCommand.MESSAGE_DUPLICATE_RECORD;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-19"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ReadOnlySmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.SmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.Record;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":" * An Immutable SmartLib that is serializable to JSON format.","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"@JsonRootName(value \u003d \"smartlib\")","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"class JsonSerializableSmartLib {","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"    public static final String MESSAGE_DUPLICATE_BOOK \u003d \"Books list contains duplicate book(s).\";","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    public static final String MESSAGE_DUPLICATE_READER \u003d \"Readers list contains duplicate reader(s).\";","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"    private final List\u003cJsonAdaptedBook\u003e books \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"    private final List\u003cJsonAdaptedReader\u003e readers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"    private final List\u003cJsonAdaptedRecord\u003e records \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"GJ0407790"},"content":"     * Constructs a {@code JsonSerializableSmartLib} with the given books, readers and records.","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     * @param books list of books in the SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"     * @param readers list of readers in the SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"     * @param records list of records in the SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"    public JsonSerializableSmartLib(@JsonProperty(\"books\") List\u003cJsonAdaptedBook\u003e books,","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"                                    @JsonProperty(\"readers\") List\u003cJsonAdaptedReader\u003e readers,","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"gycc7253"},"content":"                                    @JsonProperty(\"records\") List\u003cJsonAdaptedRecord\u003e records) {","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"GJ0407790"},"content":"        this.books.addAll(books);","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"        this.readers.addAll(readers);","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"gycc7253"},"content":"        this.records.addAll(records);","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     * Converts a given {@code ReadOnlySmartLib} into this class for Jackson use.","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableSmartLib}.","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"    public JsonSerializableSmartLib(ReadOnlySmartLib source) {","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"GJ0407790"},"content":"        books.addAll(source.getBookList().stream().map(JsonAdaptedBook::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"        readers.addAll(source.getReaderList().stream().map(JsonAdaptedReader::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"gycc7253"},"content":"        records.addAll(source.getRecordList().stream().map(JsonAdaptedRecord::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"     * Converts this smartlib into the model\u0027s {@code SmartLib} object.","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"gycc7253"},"content":"    public SmartLib toModelType() throws IllegalValueException {","lastModifiedDate":"2021-02-19"},{"lineNumber":66,"author":{"gitId":"gycc7253"},"content":"        SmartLib smartLib \u003d new SmartLib();","lastModifiedDate":"2021-02-19"},{"lineNumber":67,"author":{"gitId":"GJ0407790"},"content":"        for (JsonAdaptedBook jsonAdaptedBook : books) {","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"GJ0407790"},"content":"            Book book \u003d jsonAdaptedBook.toModelType();","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"GJ0407790"},"content":"            if (smartLib.hasBook(book)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"GJ0407790"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_BOOK);","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"GJ0407790"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"GJ0407790"},"content":"            smartLib.addBook(book);","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"        for (JsonAdaptedReader jsonAdaptedReader : readers) {","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"            Reader reader \u003d jsonAdaptedReader.toModelType();","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"Nanxi-Huang"},"content":"            if (smartLib.hasReader(reader)) {","lastModifiedDate":"2021-03-06"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_READER);","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"Nanxi-Huang"},"content":"            smartLib.addReader(reader);","lastModifiedDate":"2021-03-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"gycc7253"},"content":"        for (JsonAdaptedRecord jsonAdaptedRecord : records) {","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"gycc7253"},"content":"            Record record \u003d jsonAdaptedRecord.toModelType();","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"gycc7253"},"content":"            if (smartLib.hasRecord(record)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"gycc7253"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_RECORD);","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"gycc7253"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"gycc7253"},"content":"            smartLib.addRecord(record);","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"gycc7253"},"content":"        return smartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"arsatis":19,"Nanxi-Huang":2,"GJ0407790":18,"gycc7253":22,"-":33}},{"path":"src/main/java/seedu/smartlib/storage/JsonSmartLibStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.storage;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.LogsCenter;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-19"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.util.FileUtil;","lastModifiedDate":"2021-02-19"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.util.JsonUtil;","lastModifiedDate":"2021-02-19"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ReadOnlySmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":" * A class to access SmartLib data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"public class JsonSmartLibStorage implements SmartLibStorage {","lastModifiedDate":"2021-02-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonSmartLibStorage.class);","lastModifiedDate":"2021-02-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * Constructs the JsonSmartLibStorage class.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     * @param filePath file leading to SmartLib\u0027s data.","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"    public JsonSmartLibStorage(Path filePath) {","lastModifiedDate":"2021-02-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     * Returns the file path of SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"     * @return the file path of SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"    public Path getSmartLibFilePath() {","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     * Returns SmartLib\u0027s data as a {@link ReadOnlySmartLib}.","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     * @return SmartLib\u0027s data.","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"    public Optional\u003cReadOnlySmartLib\u003e readSmartLib() throws DataConversionException {","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"        return readSmartLib(filePath);","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"     * Similar to {@link #readSmartLib()}.","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"    public Optional\u003cReadOnlySmartLib\u003e readSmartLib(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"GJ0407790"},"content":"        Optional\u003cJsonSerializableSmartLib\u003e jsonSmartLib \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"                filePath, JsonSerializableSmartLib.class);","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"GJ0407790"},"content":"        if (!jsonSmartLib.isPresent()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"GJ0407790"},"content":"            return Optional.of(jsonSmartLib.get().toModelType());","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"     * Saves the given {@link ReadOnlySmartLib} to the storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"     * @param smartLib cannot be null.","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"GJ0407790"},"content":"    public void saveSmartLib(ReadOnlySmartLib smartLib) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"GJ0407790"},"content":"        saveSmartLib(smartLib, filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"     * Similar to {@link #saveSmartLib(ReadOnlySmartLib)}.","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"     * @param smartLib cannot be null.","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"GJ0407790"},"content":"    public void saveSmartLib(ReadOnlySmartLib smartLib, Path filePath) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"GJ0407790"},"content":"        requireNonNull(smartLib);","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"GJ0407790"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableSmartLib(smartLib), filePath);","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"arsatis":32,"GJ0407790":9,"gycc7253":10,"-":54}},{"path":"src/main/java/seedu/smartlib/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.storage;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.util.JsonUtil;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.UserPrefs;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * Constructor for the JsonUserPrefsStorage class.","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     * @param filePath file path of the userPrefs file.","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     * Returns the file path of the userPrefs file.","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     * @return the file path of the userPrefs file.","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     * @return userPrefs data from storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"     * Saves the given {@link seedu.smartlib.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"arsatis":24,"gycc7253":5,"-":42}},{"path":"src/main/java/seedu/smartlib/storage/SmartLibStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.storage;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ReadOnlySmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.SmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":" * Represents a storage for {@link SmartLib}.","lastModifiedDate":"2021-02-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"public interface SmartLibStorage {","lastModifiedDate":"2021-02-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"    Path getSmartLibFilePath();","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"     * Returns SmartLib data as a {@link ReadOnlySmartLib}.","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    Optional\u003cReadOnlySmartLib\u003e readSmartLib() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * @see #getSmartLibFilePath()","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"    Optional\u003cReadOnlySmartLib\u003e readSmartLib(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"     * Saves the given {@link ReadOnlySmartLib} to the storage.","lastModifiedDate":"2021-02-19"},{"lineNumber":36,"author":{"gitId":"GJ0407790"},"content":"     * @param smartLib cannot be null.","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"    void saveSmartLib(ReadOnlySmartLib smartLib) throws IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     * @see #saveSmartLib(ReadOnlySmartLib)","lastModifiedDate":"2021-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"GJ0407790"},"content":"    void saveSmartLib(ReadOnlySmartLib smartLib, Path filePath) throws IOException;","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"arsatis":5,"GJ0407790":4,"gycc7253":7,"-":30}},{"path":"src/main/java/seedu/smartlib/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.storage;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ReadOnlySmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.UserPrefs;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":" * API of the Storage component.","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"public interface Storage extends SmartLibStorage, UserPrefsStorage {","lastModifiedDate":"2021-02-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * Saves the given {@link seedu.smartlib.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    Path getSmartLibFilePath();","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     * Returns SmartLib data as a {@link ReadOnlySmartLib}.","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"    Optional\u003cReadOnlySmartLib\u003e readSmartLib() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     * Saves the given {@link ReadOnlySmartLib} to the storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     * @param smartLib cannot be null.","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"    void saveSmartLib(ReadOnlySmartLib smartLib) throws IOException;","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"arsatis":29,"gycc7253":6,"-":22}},{"path":"src/main/java/seedu/smartlib/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.storage;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.LogsCenter;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ReadOnlySmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.UserPrefs;","lastModifiedDate":"2021-02-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":" * Manages storage of SmartLib data in local storage.","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"    private SmartLibStorage smartLibStorage;","lastModifiedDate":"2021-02-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     * Creates a {@code StorageManager} with the given {@code SmartLibStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     * @param smartLibStorage storage for SmartLib.","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * @param userPrefsStorage storage for UserPrefs.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"    public StorageManager(SmartLibStorage smartLibStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-02-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"        this.smartLibStorage \u003d smartLibStorage;","lastModifiedDate":"2021-02-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     * @return the file path of the UserPrefs data file.","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     * @return userPrefs data from storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"     * Saves the given {@link seedu.smartlib.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"     * @throws IOException","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"GJ0407790"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d SmartLib methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"     * @return the file path of the data file.","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"    public Path getSmartLibFilePath() {","lastModifiedDate":"2021-03-07"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"        return smartLibStorage.getSmartLibFilePath();","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"     * Returns SmartLib data as a {@link ReadOnlySmartLib}.","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"     * @return SmartLib\u0027s data.","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"    public Optional\u003cReadOnlySmartLib\u003e readSmartLib() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-07"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"        return readSmartLib(smartLibStorage.getSmartLibFilePath());","lastModifiedDate":"2021-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"     * @see #getSmartLibFilePath()","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"arsatis"},"content":"     * @param filePath file path leading to the SmartLib data.","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"     * @return SmartLib\u0027s data.","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"arsatis"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"arsatis"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":105,"author":{"gitId":"arsatis"},"content":"    public Optional\u003cReadOnlySmartLib\u003e readSmartLib(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":107,"author":{"gitId":"arsatis"},"content":"        return smartLibStorage.readSmartLib(filePath);","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"arsatis"},"content":"     * Saves the given {@link ReadOnlySmartLib} to the storage.","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"arsatis"},"content":"     * @param smartLib cannot be null.","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"arsatis"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"arsatis"},"content":"    public void saveSmartLib(ReadOnlySmartLib smartLib) throws IOException {","lastModifiedDate":"2021-03-07"},{"lineNumber":118,"author":{"gitId":"arsatis"},"content":"        saveSmartLib(smartLib, smartLibStorage.getSmartLibFilePath());","lastModifiedDate":"2021-03-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":121,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"arsatis"},"content":"     * @see #saveSmartLib(ReadOnlySmartLib)","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"arsatis"},"content":"     * @param smartLib cannot be null.","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"arsatis"},"content":"     * @param filePath file path leading to SmartLib\u0027s data.","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"arsatis"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":129,"author":{"gitId":"arsatis"},"content":"    public void saveSmartLib(ReadOnlySmartLib smartLib, Path filePath) throws IOException {","lastModifiedDate":"2021-03-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":131,"author":{"gitId":"arsatis"},"content":"        smartLibStorage.saveSmartLib(smartLib, filePath);","lastModifiedDate":"2021-03-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"arsatis":68,"GJ0407790":1,"gycc7253":9,"-":56}},{"path":"src/main/java/seedu/smartlib/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.storage;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.UserPrefs;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":" * Represents a storage for {@link seedu.smartlib.model.UserPrefs}.","lastModifiedDate":"2021-02-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"     * Saves the given {@link seedu.smartlib.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-02-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"gycc7253":6,"-":30}},{"path":"src/main/java/seedu/smartlib/ui/BookCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package seedu.smartlib.ui;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":" * An UI component that displays information of a {@code Book}.","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"public class BookCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    private static final String FXML \u003d \"BookListCard.fxml\";","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     * The book associated with this BookCard class.","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    public final Book book;","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"    private Label name;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"    private Label id;","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"    private Label author;","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"    private Label publisher;","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"    private Label isbn;","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"    private Label barcode;","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"Nanxi-Huang"},"content":"    private Label genre;","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"Nanxi-Huang"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"    @FXML","lastModifiedDate":"2021-03-21"},{"lineNumber":49,"author":{"gitId":"gycc7253"},"content":"    private Label borrowerName;","lastModifiedDate":"2021-03-21"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     * Creates a {@code BookCard} with the given {@code Book} and index to display.","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     * @param book book to be displayed.","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     * @param displayedIndex index which the book is displayed at.","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"Andrewzhang217"},"content":"    public BookCard(Book book, int displayedIndex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"Andrewzhang217"},"content":"        super(FXML);","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"Andrewzhang217"},"content":"        this.book \u003d book;","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"Andrewzhang217"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"        name.setText(book.getName().toString());","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"        author.setText(\"Author: \" + book.getAuthor().toString());","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"        publisher.setText(\"Publisher: \" + book.getPublisher().toString());","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"        isbn.setText(\"ISBN: \" + book.getIsbn().toString());","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"        barcode.setText(\"Barcode: \" + book.getBarcode().toString());","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"        genre.setText(\"Genre: \" + book.getGenre().toString());","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"        borrowerName.setText(book.isBorrowed() ? \"Borrowed by: \" + book.getBorrowerName().toString() : \"Available\");","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"     * Checks if this BookCard is equal to another BookCard.","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     * @param other the other BookCard to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     * @return true if this BookCard is equal to the other BookCard, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"Andrewzhang217"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"Andrewzhang217"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"Andrewzhang217"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"Andrewzhang217"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"Andrewzhang217"},"content":"            return true;","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"Andrewzhang217"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"Andrewzhang217"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"Andrewzhang217"},"content":"        if (!(other instanceof BookCard)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"Andrewzhang217"},"content":"            return false;","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"Andrewzhang217"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"Andrewzhang217"},"content":"        // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"Andrewzhang217"},"content":"        BookCard card \u003d (BookCard) other;","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"Andrewzhang217"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"Andrewzhang217"},"content":"                \u0026\u0026 book.equals(card.book);","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"arsatis":26,"Nanxi-Huang":2,"gycc7253":2,"Andrewzhang217":64}},{"path":"src/main/java/seedu/smartlib/ui/BookListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package seedu.smartlib.ui;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.commons.core.LogsCenter;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":" * Panel containing the list of books.","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"public class BookListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"    private static final String FXML \u003d \"BookListPanel.fxml\";","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(BookListPanel.class);","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"    private ListView\u003cBook\u003e bookListView;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"     * Creates a {@code BookListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * @param bookList the given book list.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"    public BookListPanel(ObservableList\u003cBook\u003e bookList) {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"        super(FXML);","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"        bookListView.setItems(bookList);","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"        bookListView.setCellFactory(listView -\u003e new BookListViewCell());","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Book} using a {@code BookCard}.","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"    class BookListViewCell extends ListCell\u003cBook\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"        protected void updateItem(Book book, boolean empty) {","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"            super.updateItem(book, empty);","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"            if (empty || book \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"                setText(null);","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"            } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"                setGraphic(new BookCard(book, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"            }","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"arsatis":6,"Andrewzhang217":48}},{"path":"src/main/java/seedu/smartlib/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.ui;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.CommandResult;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * @param commandExecutor executor of the given command.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"gycc7253"},"content":"         * @see seedu.smartlib.logic.Logic#execute(String)","lastModifiedDate":"2021-02-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"arsatis":2,"gycc7253":5,"-":80}},{"path":"src/main/java/seedu/smartlib/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.ui;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.LogsCenter;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":" * Controller for a help page.","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103t-w13-2.github.io/tp/UserGuide\";","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     * @throws IllegalStateException if an error occurred when generating the help window.","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     * @return true if the help window is currently being shown, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":104,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"arsatis":5,"GJ0407790":1,"gycc7253":2,"-":97}},{"path":"src/main/java/seedu/smartlib/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.ui;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.GuiSettings;","lastModifiedDate":"2021-02-19"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.LogsCenter;","lastModifiedDate":"2021-02-19"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.Logic;","lastModifiedDate":"2021-02-19"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.CommandResult;","lastModifiedDate":"2021-02-19"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"    private ReaderListPanel readerListPanel;","lastModifiedDate":"2021-02-19"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"    private BookListPanel bookListPanel;","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"    private RecordListPanel recordListPanel;","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"    private StackPane readerListPanelPlaceholder;","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"    private StackPane bookListPanelPlaceholder;","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":"    private StackPane recordListPanelPlaceholder;","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"     * @param primaryStage the given stage.","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"     * @param logic the given logic.","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"     * Returns the stage associated with this MainWindow.","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"     * @return the stage associated with this MainWindow.","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"Nanxi-Huang"},"content":"        readerListPanel \u003d new ReaderListPanel(logic.getFilteredReaderList());","lastModifiedDate":"2021-03-07"},{"lineNumber":131,"author":{"gitId":"Andrewzhang217"},"content":"        readerListPanelPlaceholder.getChildren().add(readerListPanel.getRoot());","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"Andrewzhang217"},"content":"        bookListPanel \u003d new BookListPanel(logic.getFilteredBookList());","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"Andrewzhang217"},"content":"        bookListPanelPlaceholder.getChildren().add(bookListPanel.getRoot());","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"Andrewzhang217"},"content":"        recordListPanel \u003d new RecordListPanel(logic.getFilteredRecordList());","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"Andrewzhang217"},"content":"        recordListPanelPlaceholder.getChildren().add(recordListPanel.getRoot());","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"arsatis"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getSmartLibFilePath());","lastModifiedDate":"2021-03-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":174,"author":{"gitId":"arsatis"},"content":"     * Shows the primary stage.","lastModifiedDate":"2021-03-27"},{"lineNumber":175,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":192,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":193,"author":{"gitId":"arsatis"},"content":"     * Returns the panel showing the list of readers.","lastModifiedDate":"2021-03-27"},{"lineNumber":194,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":195,"author":{"gitId":"arsatis"},"content":"     * @return the panel showing the list of readers.","lastModifiedDate":"2021-03-27"},{"lineNumber":196,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":197,"author":{"gitId":"gycc7253"},"content":"    public ReaderListPanel getReaderListPanel() {","lastModifiedDate":"2021-02-19"},{"lineNumber":198,"author":{"gitId":"gycc7253"},"content":"        return readerListPanel;","lastModifiedDate":"2021-02-19"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"gycc7253"},"content":"     * @see seedu.smartlib.logic.Logic#execute(String)","lastModifiedDate":"2021-02-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"arsatis":19,"Nanxi-Huang":1,"gycc7253":11,"-":183,"Andrewzhang217":14}},{"path":"src/main/java/seedu/smartlib/ui/ReaderCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.ui;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.tag.Tag;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":" * An UI component that displays information of a {@code Reader}.","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"public class ReaderCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-02-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    private static final String FXML \u003d \"ReaderListCard.fxml\";","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     * The reader associated with this ReaderCard class.","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    public final Reader reader;","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":46,"author":{"gitId":"gycc7253"},"content":"    @FXML","lastModifiedDate":"2021-03-21"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"    private FlowPane borrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     * Creates a {@code ReaderCard} with the given {@code Reader} and index to display.","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     * @param reader reader to be displayed.","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     * @param displayedIndex index which the reader is displayed at.","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"gycc7253"},"content":"    public ReaderCard(Reader reader, int displayedIndex) {","lastModifiedDate":"2021-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"gycc7253"},"content":"        this.reader \u003d reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"        name.setText(reader.getName().toString());","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"        phone.setText(reader.getPhone().toString());","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"        address.setText(reader.getAddress().toString());","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"        email.setText(reader.getEmail().toString());","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"gycc7253"},"content":"        reader.getTags().stream()","lastModifiedDate":"2021-02-19"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"                .sorted(Comparator.comparing(Tag::getTagName))","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.getTagName())));","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"gycc7253"},"content":"        reader.getBorrows().forEach((key, value) -\u003e borrows.getChildren()","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"                .add(new Label(key.getName().toString() + \", borrowed on \" + value.toString() + \".\")));","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"     * Checks if this ReaderCard is equal to another ReaderCard.","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     * @param other the other ReaderCard to be compared.","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     * @return true if this ReaderCard is equal to the other ReaderCard, and false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"gycc7253"},"content":"        if (!(other instanceof ReaderCard)) {","lastModifiedDate":"2021-02-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"gycc7253"},"content":"        ReaderCard card \u003d (ReaderCard) other;","lastModifiedDate":"2021-02-19"},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"        return id.getText().equals(card.id.getText()) \u0026\u0026 reader.equals(card.reader);","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"arsatis":26,"GJ0407790":1,"gycc7253":11,"-":55}},{"path":"src/main/java/seedu/smartlib/ui/ReaderListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.ui;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.LogsCenter;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":" * Panel containing the list of readers.","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"public class ReaderListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-02-19"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    private static final String FXML \u003d \"ReaderListPanel.fxml\";","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ReaderListPanel.class);","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    private ListView\u003cReader\u003e readerListView;","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"     * Creates a {@code ReaderListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     * @param readerList the given reader list.","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"    public ReaderListPanel(ObservableList\u003cReader\u003e readerList) {","lastModifiedDate":"2021-02-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"        readerListView.setItems(readerList);","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"        readerListView.setCellFactory(listView -\u003e new ReaderListViewCell());","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"GJ0407790"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Reader} using a {@code ReaderCard}.","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    class ReaderListViewCell extends ListCell\u003cReader\u003e {","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"        protected void updateItem(Reader reader, boolean empty) {","lastModifiedDate":"2021-02-19"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"            super.updateItem(reader, empty);","lastModifiedDate":"2021-02-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"gycc7253"},"content":"            if (empty || reader \u003d\u003d null) {","lastModifiedDate":"2021-02-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"                setGraphic(new ReaderCard(reader, getIndex() + 1).getRoot());","lastModifiedDate":"2021-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"arsatis":9,"GJ0407790":3,"gycc7253":10,"-":31}},{"path":"src/main/java/seedu/smartlib/ui/RecordCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package seedu.smartlib.ui;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.record.Record;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":" * An UI component that displays information of a {@code Record}.","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"public class RecordCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"    private static final String FXML \u003d \"RecordListCard.fxml\";","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"     * The record associated with this RecordCard class.","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"    public final Record record;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressrecord-level4/issues/336\"\u003eThe issue on AddressRecord level 4\u003c/a\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"    private Label id;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"    private Label barcode;","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"    private Label readerName;","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"    private Label dateBorrowed;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"    private Label dateReturned;","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"     * Creates a {@code RecordCard} with the given {@code Record} and index to display.","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"     * @param record record to be displayed.","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"     * @param displayedIndex index which the record is displayed at.","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"    public RecordCard(Record record, int displayedIndex) {","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"        super(FXML);","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"        this.record \u003d record;","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"        barcode.setText(record.getBookBarcode().toString());","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":"        readerName.setText(\"Borrower: \" + record.getReaderName().toString());","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":"        dateBorrowed.setText(\"Borrowed on: \" + record.getDateBorrowed().toString());","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"Andrewzhang217"},"content":"     * Checks if this RecordCard is equal to another RecordCard.","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"Andrewzhang217"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"Andrewzhang217"},"content":"     * @param other the other RecordCard to be compared.","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"Andrewzhang217"},"content":"     * @return true if this RecordCard is equal to the other RecordCard, and false otherwise.","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"Andrewzhang217"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"Andrewzhang217"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"Andrewzhang217"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"Andrewzhang217"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"Andrewzhang217"},"content":"            return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"Andrewzhang217"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"Andrewzhang217"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"Andrewzhang217"},"content":"        if (!(other instanceof RecordCard)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"Andrewzhang217"},"content":"            return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"Andrewzhang217"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"Andrewzhang217"},"content":"        // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"Andrewzhang217"},"content":"        RecordCard card \u003d (RecordCard) other;","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"Andrewzhang217"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"Andrewzhang217"},"content":"                \u0026\u0026 record.equals(card.record);","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"Andrewzhang217"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Andrewzhang217":81}},{"path":"src/main/java/seedu/smartlib/ui/RecordListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package seedu.smartlib.ui;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.commons.core.LogsCenter;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.record.Record;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":" * Panel containing the list of records.","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"public class RecordListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"    private static final String FXML \u003d \"RecordListPanel.fxml\";","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(RecordListPanel.class);","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"    private ListView\u003cRecord\u003e recordListView;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"     * Creates a {@code RecordListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"     * @param recordList the given record list.","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"    public RecordListPanel(ObservableList\u003cRecord\u003e recordList) {","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"        super(FXML);","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"        recordListView.setItems(recordList);","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"        recordListView.setCellFactory(listView -\u003e new RecordListViewCell());","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Record} using a {@code RecordCard}.","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"    class RecordListViewCell extends ListCell\u003cRecord\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"        protected void updateItem(Record record, boolean empty) {","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"            super.updateItem(record, empty);","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"            if (empty || record \u003d\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"                setText(null);","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"            } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"                setGraphic(new RecordCard(record, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Andrewzhang217":54}},{"path":"src/main/java/seedu/smartlib/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.ui;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * A UI for the status bar that is displayed at the header of the application.","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * Constructor for the ResultDisplay class.","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * Updates the displayed feedback to the user.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     * @param feedbackToUser the feedback to be displayed to the user.","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"arsatis":9,"gycc7253":1,"-":26}},{"path":"src/main/java/seedu/smartlib/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.ui;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" * A UI for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"     * @param saveLocation the path of the StatusBarFooter.","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"arsatis":3,"gycc7253":1,"-":26}},{"path":"src/main/java/seedu/smartlib/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.ui;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" * API of UI component.","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"arsatis":1,"gycc7253":1,"-":11}},{"path":"src/main/java/seedu/smartlib/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.ui;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.MainApp;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.LogsCenter;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.util.StringUtil;","lastModifiedDate":"2021-02-19"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.Logic;","lastModifiedDate":"2021-02-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/smartlib_32.png\";","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     * @param logic the given logic.","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"     * Starts the UI (and the App).","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     * @param primaryStage the given stage.","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"     * Shows the alert dialog and pauses the app.","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"     * @param type the alert type.","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"     * @param title the alert\u0027s title.","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"     * @param headerText the header text of the alert.","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"     * @param contentText the content text of the alert.","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"arsatis":16,"gycc7253":5,"-":83}},{"path":"src/main/java/seedu/smartlib/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.ui;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.MainApp;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     * @param fxmlFileUrl the url of the specified FXML file.","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * @param fxmlFileName the name of the specified FXML file.","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     * @param fxmlFileUrl the url of the specified FXML file.","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     * @param root the root object.","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"     * @param fxmlFileName the name of the specified FXML file.","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"     * @param root the root object.","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"     * @return the root object of the scene graph of this UiPart.","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"arsatis":13,"gycc7253":2,"-":86}},{"path":"src/main/resources/view/BookListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"            \u003cLabel fx:id\u003d\"author\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$author\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"            \u003cLabel fx:id\u003d\"publisher\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$publisher\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"            \u003cLabel fx:id\u003d\"isbn\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$isbn\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"            \u003cLabel fx:id\u003d\"barcode\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$barcode\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"Nanxi-Huang"},"content":"            \u003cLabel fx:id\u003d\"genre\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$genre\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"            \u003cLabel fx:id\u003d\"borrowerName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$borrowerName\" /\u003e","lastModifiedDate":"2021-03-21"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"arsatis":2,"Nanxi-Huang":1,"gycc7253":1,"Andrewzhang217":35}},{"path":"src/main/resources/view/BookListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"    \u003cListView fx:id\u003d\"bookListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"Andrewzhang217":9}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    \u003cImage url\u003d\"@/images/smartlib_32.png\" /\u003e","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"        \u003cHBox fx:id\u003d\"readerList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"          \u003cStackPane fx:id\u003d\"readerListPanelPlaceholder\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"Andrewzhang217"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"Andrewzhang217"},"content":"          \u003cStackPane fx:id\u003d\"bookListPanelPlaceholder\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"Andrewzhang217"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"Andrewzhang217"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"Andrewzhang217"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"Andrewzhang217"},"content":"          \u003cStackPane fx:id\u003d\"recordListPanelPlaceholder\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"Andrewzhang217"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"arsatis":1,"-":56,"Andrewzhang217":12}},{"path":"src/main/resources/view/ReaderListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"      \u003cFlowPane fx:id\u003d\"borrows\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"arsatis":1,"-":36}},{"path":"src/main/resources/view/ReaderListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"  \u003cListView fx:id\u003d\"readerListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"arsatis":1,"-":7}},{"path":"src/main/resources/view/RecordListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"                \u003cLabel fx:id\u003d\"barcode\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"            \u003cLabel fx:id\u003d\"readerName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$readerName\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"            \u003cLabel fx:id\u003d\"dateBorrowed\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dateBorrowed\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"            \u003cLabel fx:id\u003d\"dateReturned\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dateReturned\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Andrewzhang217":36}},{"path":"src/main/resources/view/RecordListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"    \u003cListView fx:id\u003d\"recordListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Andrewzhang217":10}},{"path":"src/test/data/JsonSerializableSmartLibTest/duplicateReaderSmartLib.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":"  \"readers\": [ {","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"arsatis":1,"-":13}},{"path":"src/test/data/JsonSerializableSmartLibTest/invalidReaderSmartLib.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":"  \"readers\": [ {","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"arsatis":1,"-":7}},{"path":"src/test/data/JsonSerializableSmartLibTest/typicalReaderSmartLib.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"  \"readers\" : [ {","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"arsatis":1,"-":45}},{"path":"src/test/data/JsonSmartLibStorageTest/invalidAndValidReaderSmartLib.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":"  \"readers\": [ {","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"    \"name\": \"Valid Reader\",","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"    \"name\": \"Reader With Invalid Phone Field\",","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"arsatis":1,"-":10,"Andrewzhang217":2}},{"path":"src/test/data/JsonSmartLibStorageTest/invalidReaderSmartLib.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":"  \"readers\": [ {","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"    \"name\": \"Reader with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"arsatis":1,"-":6,"Andrewzhang217":1}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"  \"smartLibFilePath\" : \"smartlib.json\"","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"arsatis":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"  \"smartLibFilePath\" : \"smartlib.json\"","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"arsatis":1,"-":10}},{"path":"src/test/java/seedu/smartlib/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"gycc7253":1,"-":57}},{"path":"src/test/java/seedu/smartlib/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.core;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"gycc7253":1,"-":26}},{"path":"src/test/java/seedu/smartlib/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.core;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gycc7253":2,"-":133}},{"path":"src/test/java/seedu/smartlib/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.core.index;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"        final Index fifthReaderIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"        assertTrue(fifthReaderIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"        assertTrue(fifthReaderIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"        assertTrue(fifthReaderIndex.equals(fifthReaderIndex));","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"        assertFalse(fifthReaderIndex.equals(null));","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"        assertFalse(fifthReaderIndex.equals(5.0f));","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"        assertFalse(fifthReaderIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"arsatis":7,"gycc7253":2,"-":51}},{"path":"src/test/java/seedu/smartlib/commons/core/name/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"package seedu.smartlib.commons.core.name;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"GJ0407790":1,"gycc7253":1,"-":38}},{"path":"src/test/java/seedu/smartlib/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.util;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"        assertNotNull(AppUtil.getImage(\"/images/smartlib_32.png\"));","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"arsatis":1,"gycc7253":2,"-":33}},{"path":"src/test/java/seedu/smartlib/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.util;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"gycc7253":3,"-":105}},{"path":"src/test/java/seedu/smartlib/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.util;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.Config;","lastModifiedDate":"2021-02-19"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"gycc7253":4,"-":112}},{"path":"src/test/java/seedu/smartlib/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.util;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gycc7253":2,"-":21}},{"path":"src/test/java/seedu/smartlib/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.util;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.testutil.SerializableTestClass;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.testutil.TestUtil;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gycc7253":3,"-":42}},{"path":"src/test/java/seedu/smartlib/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.commons.util;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"gycc7253":2,"-":141}},{"path":"src/test/java/seedu/smartlib/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_INVALID_READER_DISPLAYED_INDEX;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.logic.commands.AddReaderCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.CommandResult;","lastModifiedDate":"2021-02-19"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.logic.commands.ListReaderCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-19"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-19"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ModelManager;","lastModifiedDate":"2021-02-19"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ReadOnlySmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.UserPrefs;","lastModifiedDate":"2021-02-19"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.storage.JsonSmartLibStorage;","lastModifiedDate":"2021-02-19"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-02-19"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.storage.StorageManager;","lastModifiedDate":"2021-02-19"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.testutil.ReaderBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"        JsonSmartLibStorage smartLibStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"                new JsonSmartLibStorage(temporaryFolder.resolve(\"smartLib.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"        StorageManager storage \u003d new StorageManager(smartLibStorage, userPrefsStorage);","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"Nanxi-Huang"},"content":"        String deleteCommand \u003d \"deletereader 9\";","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"Nanxi-Huang"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_READER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"        String listCommand \u003d ListReaderCommand.COMMAND_WORD;","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"        assertCommandSuccess(listCommand, ListReaderCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"        // Setup LogicManager with JsonSmartLibIoExceptionThrowingStub","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"        JsonSmartLibStorage smartLibStorage \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"                new JsonSmartLibIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionSmartLib.json\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"        StorageManager storage \u003d new StorageManager(smartLibStorage, userPrefsStorage);","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"Nanxi-Huang"},"content":"        String addCommand \u003d AddReaderCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"        Reader expectedReader \u003d new ReaderBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"Nanxi-Huang"},"content":"        expectedModel.addReader(expectedReader);","lastModifiedDate":"2021-03-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"    public void getFilteredReaderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":93,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredReaderList().remove(0));","lastModifiedDate":"2021-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"gycc7253"},"content":"        Model expectedModel \u003d new ModelManager(model.getSmartLib(), new UserPrefs());","lastModifiedDate":"2021-02-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"gycc7253"},"content":"    private static class JsonSmartLibIoExceptionThrowingStub extends JsonSmartLibStorage {","lastModifiedDate":"2021-02-19"},{"lineNumber":153,"author":{"gitId":"gycc7253"},"content":"        private JsonSmartLibIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-02-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"arsatis"},"content":"        public void saveSmartLib(ReadOnlySmartLib smartLib, Path filePath) throws IOException {","lastModifiedDate":"2021-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"arsatis":14,"Nanxi-Huang":7,"GJ0407790":1,"gycc7253":21,"-":119}},{"path":"src/test/java/seedu/smartlib/logic/commands/AddBookCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.ReadOnlySmartLib;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.SmartLib;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.testutil.BookBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"public class AddBookCommandTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"    public void constructor_nullBook_throwsNullPointerException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddBookCommand(null));","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":"    public void execute_bookAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"        ModelStubAcceptingBookAdded modelStub \u003d new ModelStubAcceptingBookAdded();","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"        Book validBook \u003d new BookBuilder().build();","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"        CommandResult commandResult \u003d new AddBookCommand(validBook).execute(modelStub);","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"GJ0407790"},"content":"        assertEquals(String.format(AddBookCommand.MESSAGE_SUCCESS, validBook), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"GJ0407790"},"content":"        assertEquals(Arrays.asList(validBook), modelStub.booksAdded);","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"    public void execute_duplicateBook_throwsCommandException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"GJ0407790"},"content":"        Book validBook \u003d new BookBuilder().build();","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"        AddBookCommand addBookCommand \u003d new AddBookCommand(validBook);","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"        ModelStub modelStub \u003d new ModelStubWithBook(validBook);","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"GJ0407790"},"content":"        assertThrows(CommandException.class, AddBookCommand.MESSAGE_DUPLICATE_BOOK, () -\u003e","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"GJ0407790"},"content":"                addBookCommand.execute(modelStub));","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"GJ0407790"},"content":"    public void equals() {","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"GJ0407790"},"content":"        Book harry \u003d new BookBuilder().withName(\"Harry Potter\").build();","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"GJ0407790"},"content":"        Book land \u003d new BookBuilder().withName(\"A Promise Land\").build();","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":"        AddBookCommand addHarryCommand \u003d new AddBookCommand(harry);","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"GJ0407790"},"content":"        AddBookCommand addLandCommand \u003d new AddBookCommand(land);","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"GJ0407790"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"GJ0407790"},"content":"        assertTrue(addHarryCommand.equals(addHarryCommand));","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"GJ0407790"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"GJ0407790"},"content":"        AddBookCommand addHarryCommandCopy \u003d new AddBookCommand(harry);","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"GJ0407790"},"content":"        assertTrue(addHarryCommand.equals(addHarryCommandCopy));","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"GJ0407790"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"GJ0407790"},"content":"        assertFalse(addHarryCommand.equals(1));","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"GJ0407790"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"GJ0407790"},"content":"        assertFalse(addHarryCommand.equals(null));","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"GJ0407790"},"content":"        // different reader -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"GJ0407790"},"content":"        assertFalse(addHarryCommand.equals(addLandCommand));","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"GJ0407790"},"content":"     * A Model stub that contains a single book.","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"GJ0407790"},"content":"    private class ModelStubWithBook extends ModelStub {","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"GJ0407790"},"content":"        private final Book book;","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"GJ0407790"},"content":"        ModelStubWithBook(Book book) {","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"GJ0407790"},"content":"            requireNonNull(book);","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"GJ0407790"},"content":"            this.book \u003d book;","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"GJ0407790"},"content":"        @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"GJ0407790"},"content":"        public boolean hasBook(Book book) {","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"GJ0407790"},"content":"            requireNonNull(book);","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"GJ0407790"},"content":"            return this.book.isSameBook(book);","lastModifiedDate":"2021-03-18"},{"lineNumber":88,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":89,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":92,"author":{"gitId":"GJ0407790"},"content":"     * A Model stub that always accept the book being added.","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"GJ0407790"},"content":"    private class ModelStubAcceptingBookAdded extends ModelStub {","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"GJ0407790"},"content":"        final ArrayList\u003cBook\u003e booksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-18"},{"lineNumber":96,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":97,"author":{"gitId":"GJ0407790"},"content":"        @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":98,"author":{"gitId":"GJ0407790"},"content":"        public boolean hasBook(Book book) {","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"GJ0407790"},"content":"            requireNonNull(book);","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"GJ0407790"},"content":"            return booksAdded.stream().anyMatch(book::isSameBook);","lastModifiedDate":"2021-03-18"},{"lineNumber":101,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":102,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":103,"author":{"gitId":"GJ0407790"},"content":"        @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":104,"author":{"gitId":"GJ0407790"},"content":"        public void addBook(Book book) {","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"GJ0407790"},"content":"            requireNonNull(book);","lastModifiedDate":"2021-03-18"},{"lineNumber":106,"author":{"gitId":"GJ0407790"},"content":"            booksAdded.add(book);","lastModifiedDate":"2021-03-18"},{"lineNumber":107,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":108,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":109,"author":{"gitId":"GJ0407790"},"content":"        @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":110,"author":{"gitId":"GJ0407790"},"content":"        public ReadOnlySmartLib getSmartLib() {","lastModifiedDate":"2021-03-18"},{"lineNumber":111,"author":{"gitId":"GJ0407790"},"content":"            return new SmartLib();","lastModifiedDate":"2021-03-18"},{"lineNumber":112,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":113,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":114,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":115,"author":{"gitId":"GJ0407790"},"content":"}","lastModifiedDate":"2021-03-18"},{"lineNumber":116,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"GJ0407790":116}},{"path":"src/test/java/seedu/smartlib/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.getTypicalSmartLib;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ModelManager;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.UserPrefs;","lastModifiedDate":"2021-02-19"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.testutil.ReaderBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"/**","lastModifiedDate":"2021-02-19"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":" */","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2021-02-19"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"    private Model model;","lastModifiedDate":"2021-02-19"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"    @BeforeEach","lastModifiedDate":"2021-02-19"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"    public void setUp() {","lastModifiedDate":"2021-02-19"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"        model \u003d new ModelManager(getTypicalSmartLib(), new UserPrefs());","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-02-19"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"    @Test","lastModifiedDate":"2021-02-19"},{"lineNumber":29,"author":{"gitId":"Nanxi-Huang"},"content":"    public void execute_newReader_success() {","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"        Reader validReader \u003d new ReaderBuilder().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"        Model expectedModel \u003d new ModelManager(model.getSmartLib(), new UserPrefs());","lastModifiedDate":"2021-02-19"},{"lineNumber":33,"author":{"gitId":"Nanxi-Huang"},"content":"        expectedModel.addReader(validReader);","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":35,"author":{"gitId":"Nanxi-Huang"},"content":"        assertCommandSuccess(new AddReaderCommand(validReader), model,","lastModifiedDate":"2021-03-06"},{"lineNumber":36,"author":{"gitId":"Nanxi-Huang"},"content":"                String.format(AddReaderCommand.MESSAGE_SUCCESS, validReader), expectedModel);","lastModifiedDate":"2021-03-06"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-02-19"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"    @Test","lastModifiedDate":"2021-02-19"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"    public void execute_duplicateReader_throwsCommandException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"        Reader readerInList \u003d model.getSmartLib().getReaderList().get(0);","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"Nanxi-Huang"},"content":"        assertCommandFailure(new AddReaderCommand(readerInList), model, AddReaderCommand.MESSAGE_DUPLICATE_READER);","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-02-19"},{"lineNumber":44,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":"}","lastModifiedDate":"2021-02-19"}],"authorContributionMap":{"arsatis":5,"Nanxi-Huang":5,"GJ0407790":1,"gycc7253":34}},{"path":"src/test/java/seedu/smartlib/logic/commands/AddReaderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.GuiSettings;","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-19"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ReadOnlySmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-02-19"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.SmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Barcode;","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.Record;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.testutil.ReaderBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"public class AddReaderCommandTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"    public void constructor_nullReader_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddReaderCommand(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    public void execute_readerAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"        ModelStubAcceptingReaderAdded modelStub \u003d new ModelStubAcceptingReaderAdded();","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"        Reader validReader \u003d new ReaderBuilder().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"Nanxi-Huang"},"content":"        CommandResult commandResult \u003d new AddReaderCommand(validReader).execute(modelStub);","lastModifiedDate":"2021-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"Nanxi-Huang"},"content":"        assertEquals(String.format(AddReaderCommand.MESSAGE_SUCCESS, validReader), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"Nanxi-Huang"},"content":"        assertEquals(Arrays.asList(validReader), modelStub.readersAdded);","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"    public void execute_duplicateReader_throwsCommandException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"        Reader validReader \u003d new ReaderBuilder().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"Nanxi-Huang"},"content":"        AddReaderCommand addCommand \u003d new AddReaderCommand(validReader);","lastModifiedDate":"2021-03-06"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"        ModelStub modelStub \u003d new ModelStubWithReader(validReader);","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(CommandException.class, AddReaderCommand.MESSAGE_DUPLICATE_READER, () -\u003e","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"Nanxi-Huang"},"content":"            addCommand.execute(modelStub));","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"        Reader alice \u003d new ReaderBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"        Reader bob \u003d new ReaderBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"Nanxi-Huang"},"content":"        AddReaderCommand addAliceCommand \u003d new AddReaderCommand(alice);","lastModifiedDate":"2021-03-06"},{"lineNumber":63,"author":{"gitId":"Nanxi-Huang"},"content":"        AddReaderCommand addBobCommand \u003d new AddReaderCommand(bob);","lastModifiedDate":"2021-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"Nanxi-Huang"},"content":"        AddReaderCommand addAliceCommandCopy \u003d new AddReaderCommand(alice);","lastModifiedDate":"2021-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"        // different reader -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"arsatis"},"content":"        public Path getSmartLibFilePath() {","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"arsatis"},"content":"        public void setSmartLibFilePath(Path smartLibFilePath) {","lastModifiedDate":"2021-03-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"Nanxi-Huang"},"content":"        public void addReader(Reader reader) {","lastModifiedDate":"2021-03-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"gycc7253"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"gycc7253"},"content":"        public void addRecord(Record record) {","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"gycc7253"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"GJ0407790"},"content":"        public Record markRecordAsReturned(Record record) {","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"GJ0407790"},"content":"            return null;","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":131,"author":{"gitId":"arsatis"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"arsatis"},"content":"        public Barcode getBookBarcode(Name bookName) {","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"arsatis"},"content":"            return null;","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"arsatis"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"arsatis"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"arsatis"},"content":"        public Barcode getBookBarcodeForReturn(Name bookName, Name readerName) {","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"arsatis"},"content":"            return null;","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"arsatis"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"gycc7253"},"content":"        public void setSmartLib(ReadOnlySmartLib newData) {","lastModifiedDate":"2021-02-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"gycc7253"},"content":"        public ReadOnlySmartLib getSmartLib() {","lastModifiedDate":"2021-02-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"GJ0407790"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"GJ0407790"},"content":"        public boolean hasBook(Book book) {","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"GJ0407790"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":154,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"gycc7253"},"content":"        @Override","lastModifiedDate":"2021-03-20"},{"lineNumber":157,"author":{"gitId":"gycc7253"},"content":"        public boolean hasBook(Name bookName) {","lastModifiedDate":"2021-03-20"},{"lineNumber":158,"author":{"gitId":"gycc7253"},"content":"            return false;","lastModifiedDate":"2021-03-20"},{"lineNumber":159,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":160,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":161,"author":{"gitId":"arsatis"},"content":"        @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":162,"author":{"gitId":"arsatis"},"content":"        public boolean hasBookWithBarcode(Barcode barcode) {","lastModifiedDate":"2021-03-25"},{"lineNumber":163,"author":{"gitId":"arsatis"},"content":"            return false;","lastModifiedDate":"2021-03-25"},{"lineNumber":164,"author":{"gitId":"arsatis"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":165,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":166,"author":{"gitId":"gycc7253"},"content":"        @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":167,"author":{"gitId":"arsatis"},"content":"        public boolean isBookWithBarcodeBorrowed(Barcode barcode) {","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"gycc7253"},"content":"            return false;","lastModifiedDate":"2021-03-21"},{"lineNumber":169,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":170,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"Nanxi-Huang"},"content":"        public boolean hasReader(Reader reader) {","lastModifiedDate":"2021-03-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":176,"author":{"gitId":"gycc7253"},"content":"        @Override","lastModifiedDate":"2021-03-20"},{"lineNumber":177,"author":{"gitId":"gycc7253"},"content":"        public boolean hasReader(Name readerName) {","lastModifiedDate":"2021-03-20"},{"lineNumber":178,"author":{"gitId":"gycc7253"},"content":"            return false;","lastModifiedDate":"2021-03-20"},{"lineNumber":179,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":180,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":181,"author":{"gitId":"gycc7253"},"content":"        @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":182,"author":{"gitId":"gycc7253"},"content":"        public boolean canReaderBorrow(Name readerName) {","lastModifiedDate":"2021-03-23"},{"lineNumber":183,"author":{"gitId":"gycc7253"},"content":"            return false;","lastModifiedDate":"2021-03-21"},{"lineNumber":184,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":185,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":186,"author":{"gitId":"gycc7253"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"gycc7253"},"content":"        public boolean hasRecord(Record record) {","lastModifiedDate":"2021-03-14"},{"lineNumber":188,"author":{"gitId":"gycc7253"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":189,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":190,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":191,"author":{"gitId":"gycc7253"},"content":"        @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":192,"author":{"gitId":"arsatis"},"content":"        public boolean borrowBook(Name readerName, Barcode barcode) {","lastModifiedDate":"2021-03-27"},{"lineNumber":193,"author":{"gitId":"gycc7253"},"content":"            return false;","lastModifiedDate":"2021-03-21"},{"lineNumber":194,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":195,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":196,"author":{"gitId":"gycc7253"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":197,"author":{"gitId":"arsatis"},"content":"        public boolean returnBook(Name readerName, Barcode barcode) {","lastModifiedDate":"2021-03-27"},{"lineNumber":198,"author":{"gitId":"gycc7253"},"content":"            return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":199,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":200,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":201,"author":{"gitId":"GJ0407790"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":202,"author":{"gitId":"GJ0407790"},"content":"        public void deleteBook(Book target) {","lastModifiedDate":"2021-03-14"},{"lineNumber":203,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":204,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":205,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"Nanxi-Huang"},"content":"        public void deleteReader(Reader target) {","lastModifiedDate":"2021-03-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"GJ0407790"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":212,"author":{"gitId":"GJ0407790"},"content":"        public void addBook(Book book) {","lastModifiedDate":"2021-03-14"},{"lineNumber":213,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":214,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":215,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"arsatis"},"content":"        public void setReader(Reader target, Reader editedReader) {","lastModifiedDate":"2021-03-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"Nanxi-Huang"},"content":"        public ObservableList\u003cReader\u003e getFilteredReaderList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"GJ0407790"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":227,"author":{"gitId":"GJ0407790"},"content":"        public ObservableList\u003cBook\u003e getFilteredBookList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":228,"author":{"gitId":"GJ0407790"},"content":"            return null;","lastModifiedDate":"2021-03-14"},{"lineNumber":229,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":230,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":231,"author":{"gitId":"Andrewzhang217"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":232,"author":{"gitId":"Andrewzhang217"},"content":"        public ObservableList\u003cRecord\u003e getFilteredRecordList() {","lastModifiedDate":"2021-03-29"},{"lineNumber":233,"author":{"gitId":"Andrewzhang217"},"content":"            return null;","lastModifiedDate":"2021-03-29"},{"lineNumber":234,"author":{"gitId":"Andrewzhang217"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":235,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":236,"author":{"gitId":"GJ0407790"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":237,"author":{"gitId":"GJ0407790"},"content":"        public void updateFilteredBookList(Predicate\u003cBook\u003e predicate) {","lastModifiedDate":"2021-03-14"},{"lineNumber":238,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":239,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":240,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"arsatis"},"content":"        public void updateFilteredReaderList(Predicate\u003cReader\u003e predicate) {","lastModifiedDate":"2021-03-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":246,"author":{"gitId":"gycc7253"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":247,"author":{"gitId":"gycc7253"},"content":"        public void updateFilteredRecordList(Predicate\u003cRecord\u003e predicate) {","lastModifiedDate":"2021-03-14"},{"lineNumber":248,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":249,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"arsatis"},"content":"     * A Model stub that contains a single reader.","lastModifiedDate":"2021-03-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"arsatis"},"content":"    private class ModelStubWithReader extends ModelStub {","lastModifiedDate":"2021-03-07"},{"lineNumber":256,"author":{"gitId":"gycc7253"},"content":"        private final Reader reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":258,"author":{"gitId":"arsatis"},"content":"        ModelStubWithReader(Reader reader) {","lastModifiedDate":"2021-03-07"},{"lineNumber":259,"author":{"gitId":"gycc7253"},"content":"            requireNonNull(reader);","lastModifiedDate":"2021-02-19"},{"lineNumber":260,"author":{"gitId":"gycc7253"},"content":"            this.reader \u003d reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":264,"author":{"gitId":"Nanxi-Huang"},"content":"        public boolean hasReader(Reader reader) {","lastModifiedDate":"2021-03-06"},{"lineNumber":265,"author":{"gitId":"gycc7253"},"content":"            requireNonNull(reader);","lastModifiedDate":"2021-02-19"},{"lineNumber":266,"author":{"gitId":"Nanxi-Huang"},"content":"            return this.reader.isSameReader(reader);","lastModifiedDate":"2021-03-06"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":271,"author":{"gitId":"arsatis"},"content":"     * A Model stub that always accept the reader being added.","lastModifiedDate":"2021-03-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":273,"author":{"gitId":"arsatis"},"content":"    private class ModelStubAcceptingReaderAdded extends ModelStub {","lastModifiedDate":"2021-03-07"},{"lineNumber":274,"author":{"gitId":"Nanxi-Huang"},"content":"        final ArrayList\u003cReader\u003e readersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-06"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":277,"author":{"gitId":"Nanxi-Huang"},"content":"        public boolean hasReader(Reader reader) {","lastModifiedDate":"2021-03-06"},{"lineNumber":278,"author":{"gitId":"gycc7253"},"content":"            requireNonNull(reader);","lastModifiedDate":"2021-02-19"},{"lineNumber":279,"author":{"gitId":"Nanxi-Huang"},"content":"            return readersAdded.stream().anyMatch(reader::isSameReader);","lastModifiedDate":"2021-03-06"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":283,"author":{"gitId":"Nanxi-Huang"},"content":"        public void addReader(Reader reader) {","lastModifiedDate":"2021-03-06"},{"lineNumber":284,"author":{"gitId":"gycc7253"},"content":"            requireNonNull(reader);","lastModifiedDate":"2021-02-19"},{"lineNumber":285,"author":{"gitId":"Nanxi-Huang"},"content":"            readersAdded.add(reader);","lastModifiedDate":"2021-03-06"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":289,"author":{"gitId":"gycc7253"},"content":"        public ReadOnlySmartLib getSmartLib() {","lastModifiedDate":"2021-02-19"},{"lineNumber":290,"author":{"gitId":"gycc7253"},"content":"            return new SmartLib();","lastModifiedDate":"2021-02-19"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"arsatis":40,"Nanxi-Huang":21,"GJ0407790":29,"gycc7253":65,"-":134,"Andrewzhang217":5}},{"path":"src/test/java/seedu/smartlib/logic/commands/BorrowCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-03-06"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.getTypicalSmartLib;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-06"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ModelManager;","lastModifiedDate":"2021-03-06"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.UserPrefs;","lastModifiedDate":"2021-03-06"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.Record;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"class BorrowCommandTest {","lastModifiedDate":"2021-03-06"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    private Model model \u003d new ModelManager(getTypicalSmartLib(), new UserPrefs());","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"    public void execute() {","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"        Record record \u003d model.getSmartLib().getRecordList().get(0);","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"        //assertCommandFailure(new BorrowCommand(record), model, AddReaderCommand.MESSAGE_DUPLICATE_READER);","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"}","lastModifiedDate":"2021-03-06"}],"authorContributionMap":{"arsatis":1,"GJ0407790":1,"gycc7253":19}},{"path":"src/test/java/seedu/smartlib/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.getTypicalSmartLib;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ModelManager;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.SmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.UserPrefs;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"    public void execute_emptySmartLib_success() {","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"    public void execute_nonEmptySmartLib_success() {","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"        Model model \u003d new ModelManager(getTypicalSmartLib(), new UserPrefs());","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalSmartLib(), new UserPrefs());","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"        expectedModel.setSmartLib(new SmartLib());","lastModifiedDate":"2021-02-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"arsatis":5,"GJ0407790":1,"gycc7253":6,"-":20}},{"path":"src/test/java/seedu/smartlib/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"gycc7253":1,"-":53}},{"path":"src/test/java/seedu/smartlib/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_AUTHOR;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_BOOK;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_GENRE;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_ISBN;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_PUBLISHER;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_READER;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-02-19"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.index.Index;","lastModifiedDate":"2021-02-19"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-02-19"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.SmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.book.Barcode;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.BookNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-02-19"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.record.Record;","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.record.RecordContainsBarcodePredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.testutil.EditReaderDescriptorBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Books \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"GJ0407790"},"content":"    public static final String VALID_NAME_HARRY \u003d \"Harry Potter\";","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"    public static final String VALID_NAME_MAZE \u003d \"Maze Runner\";","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"    public static final String VALID_AUTHOR_HARRY \u003d \"JK Rowling\";","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"GJ0407790"},"content":"    public static final String VALID_AUTHOR_MAZE \u003d \"James Dashner\";","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"GJ0407790"},"content":"    public static final String VALID_PUBLISHER_HARRY \u003d \"Scholastic\";","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"GJ0407790"},"content":"    public static final String VALID_PUBLISHER_MAZE \u003d \"Dell Publishing\";","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"GJ0407790"},"content":"    public static final String VALID_ISBN_HARRY \u003d \"9780439708180\";","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"GJ0407790"},"content":"    public static final String VALID_ISBN_MAZE \u003d \"9780307582881\";","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"Nanxi-Huang"},"content":"    public static final String VALID_GENRE_HARRY \u003d \"Fantasy\";","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"Nanxi-Huang"},"content":"    public static final String VALID_GENRE_MAZE \u003d \"SciFi\";","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"GJ0407790"},"content":"    public static final String NAME_DESC_HARRY \u003d \" \" + PREFIX_BOOK + VALID_NAME_HARRY;","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":"    public static final String NAME_DESC_MAZE \u003d \" \" + PREFIX_BOOK + VALID_NAME_MAZE;","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"GJ0407790"},"content":"    public static final String AUTHOR_DESC_HARRY \u003d \" \" + PREFIX_AUTHOR + VALID_AUTHOR_HARRY;","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"GJ0407790"},"content":"    public static final String AUTHOR_DESC_MAZE \u003d \" \" + PREFIX_AUTHOR + VALID_AUTHOR_MAZE;","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"GJ0407790"},"content":"    public static final String PUBLISHER_DESC_HARRY \u003d \" \" + PREFIX_PUBLISHER + VALID_PUBLISHER_HARRY;","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"GJ0407790"},"content":"    public static final String PUBLISHER_DESC_MAZE \u003d \" \" + PREFIX_PUBLISHER + VALID_PUBLISHER_MAZE;","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"GJ0407790"},"content":"    public static final String ISBN_DESC_HARRY \u003d \" \" + PREFIX_ISBN + VALID_ISBN_HARRY;","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"GJ0407790"},"content":"    public static final String ISBN_DESC_MAZE \u003d \" \" + PREFIX_ISBN + VALID_ISBN_MAZE;","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"Nanxi-Huang"},"content":"    public static final String GENRE_DESC_HARRY \u003d \" \" + PREFIX_GENRE + VALID_GENRE_HARRY;","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"Nanxi-Huang"},"content":"    public static final String GENRE_DESC_MAZE \u003d \" \" + PREFIX_GENRE + VALID_GENRE_MAZE;","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"GJ0407790"},"content":"    public static final String INVALID_BOOKNAME_DESC \u003d \" \" + PREFIX_BOOK + \"Sorcerer\u0027s Stone\";","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"GJ0407790"},"content":"    public static final String INVALID_AUTHOR_DESC \u003d \" \" + PREFIX_AUTHOR + \"J.K. Rowling\";","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"GJ0407790"},"content":"    public static final String INVALID_PUBLISHER_DESC \u003d \" \" + PREFIX_PUBLISHER;","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"GJ0407790"},"content":"    public static final String INVALID_ISBN_DESC \u003d \" \" + PREFIX_ISBN + \"837aa\";","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"Nanxi-Huang"},"content":"    public static final String INVALID_GENRE_DESC \u003d \" \" + PREFIX_GENRE + \"Sci-Fi\";","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"GJ0407790"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Readers \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"Nanxi-Huang"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_READER + VALID_NAME_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"Nanxi-Huang"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_READER + VALID_NAME_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"Nanxi-Huang"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_READER + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"arsatis"},"content":"    public static final EditCommand.EditReaderDescriptor DESC_AMY;","lastModifiedDate":"2021-03-07"},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"    public static final EditCommand.EditReaderDescriptor DESC_BOB;","lastModifiedDate":"2021-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"arsatis"},"content":"        DESC_AMY \u003d new EditReaderDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"arsatis"},"content":"        DESC_BOB \u003d new EditReaderDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"arsatis"},"content":"     * - the smartlib, filtered reader list and selected reader in {@code actualModel} remain unchanged","lastModifiedDate":"2021-03-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"gycc7253"},"content":"        SmartLib expectedSmartLib \u003d new SmartLib(actualModel.getSmartLib());","lastModifiedDate":"2021-02-19"},{"lineNumber":147,"author":{"gitId":"Nanxi-Huang"},"content":"        List\u003cReader\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredReaderList());","lastModifiedDate":"2021-03-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":150,"author":{"gitId":"gycc7253"},"content":"        assertEquals(expectedSmartLib, actualModel.getSmartLib());","lastModifiedDate":"2021-02-19"},{"lineNumber":151,"author":{"gitId":"Nanxi-Huang"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredReaderList());","lastModifiedDate":"2021-03-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"arsatis"},"content":"     * Updates {@code model}\u0027s filtered list to show only the reader at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-07"},{"lineNumber":155,"author":{"gitId":"arsatis"},"content":"     * {@code model}\u0027s smartlib.","lastModifiedDate":"2021-03-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"arsatis"},"content":"    public static void showReaderAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-07"},{"lineNumber":158,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredReaderList().size());","lastModifiedDate":"2021-03-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":160,"author":{"gitId":"Nanxi-Huang"},"content":"        Reader reader \u003d model.getFilteredReaderList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":161,"author":{"gitId":"arsatis"},"content":"        final String[] splitName \u003d reader.getName().toString().split(\"\\\\s+\");","lastModifiedDate":"2021-03-27"},{"lineNumber":162,"author":{"gitId":"arsatis"},"content":"        model.updateFilteredReaderList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-03-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":164,"author":{"gitId":"Nanxi-Huang"},"content":"        assertEquals(1, model.getFilteredReaderList().size());","lastModifiedDate":"2021-03-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":168,"author":{"gitId":"GJ0407790"},"content":"     * Updates {@code model}\u0027s filtered list to show only the book at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-18"},{"lineNumber":169,"author":{"gitId":"GJ0407790"},"content":"     * {@code model}\u0027s smartlib.","lastModifiedDate":"2021-03-18"},{"lineNumber":170,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":171,"author":{"gitId":"GJ0407790"},"content":"    public static void showBookAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-18"},{"lineNumber":172,"author":{"gitId":"GJ0407790"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredBookList().size());","lastModifiedDate":"2021-03-18"},{"lineNumber":173,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":174,"author":{"gitId":"GJ0407790"},"content":"        Book book \u003d model.getFilteredBookList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-18"},{"lineNumber":175,"author":{"gitId":"arsatis"},"content":"        final String[] splitName \u003d book.getName().toString().split(\"\\\\s+\");","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"GJ0407790"},"content":"        model.updateFilteredBookList(new BookNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-03-18"},{"lineNumber":177,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":178,"author":{"gitId":"GJ0407790"},"content":"        assertEquals(1, model.getFilteredBookList().size());","lastModifiedDate":"2021-03-18"},{"lineNumber":179,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":180,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":181,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":182,"author":{"gitId":"Andrewzhang217"},"content":"     * Updates {@code model}\u0027s filtered list to show only the record at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-29"},{"lineNumber":183,"author":{"gitId":"Andrewzhang217"},"content":"     * {@code model}\u0027s smartlib.","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":185,"author":{"gitId":"Andrewzhang217"},"content":"    public static void showRecordAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"Andrewzhang217"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredRecordList().size());","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"Andrewzhang217"},"content":"        Record record \u003d model.getFilteredRecordList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":189,"author":{"gitId":"Andrewzhang217"},"content":"        final Barcode barcode \u003d record.getBookBarcode();","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"Andrewzhang217"},"content":"        model.updateFilteredRecordList((new RecordContainsBarcodePredicate(barcode)));","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"Andrewzhang217"},"content":"        assertEquals(1, model.getFilteredRecordList().size());","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"arsatis":13,"Nanxi-Huang":15,"GJ0407790":43,"gycc7253":13,"-":94,"Andrewzhang217":17}},{"path":"src/test/java/seedu/smartlib/logic/commands/DeleteBookCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.showBookAtIndex;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalIndexes.INDEX_FIRST_BOOK;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalIndexes.INDEX_SECOND_BOOK;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.getTypicalSmartLib;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.Messages;","lastModifiedDate":"2021-02-19"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.index.Index;","lastModifiedDate":"2021-02-19"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ModelManager;","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.UserPrefs;","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":" * {@code DeleteBookCommand}.","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"public class DeleteBookCommandTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    private Model model \u003d new ModelManager(getTypicalSmartLib(), new UserPrefs());","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"        Book bookToDelete \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"        DeleteBookCommand deleteBookCommand \u003d new DeleteBookCommand(INDEX_FIRST_BOOK);","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"GJ0407790"},"content":"        String expectedMessage \u003d String.format(DeleteBookCommand.MESSAGE_DELETE_BOOK_SUCCESS, bookToDelete);","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSmartLib(), new UserPrefs());","lastModifiedDate":"2021-02-19"},{"lineNumber":37,"author":{"gitId":"GJ0407790"},"content":"        expectedModel.deleteBook(bookToDelete);","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"        assertCommandSuccess(deleteBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"GJ0407790"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredBookList().size() + 1);","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"GJ0407790"},"content":"        DeleteBookCommand deleteBookCommand \u003d new DeleteBookCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"GJ0407790"},"content":"        assertCommandFailure(deleteBookCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"GJ0407790"},"content":"        Book bookToDelete \u003d model.getFilteredBookList().get(INDEX_FIRST_BOOK.getZeroBased());","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"GJ0407790"},"content":"        DeleteBookCommand deleteBookCommand \u003d new DeleteBookCommand(INDEX_FIRST_BOOK);","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"GJ0407790"},"content":"        String expectedMessage \u003d String.format(DeleteBookCommand.MESSAGE_DELETE_BOOK_SUCCESS, bookToDelete);","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"gycc7253"},"content":"        Model expectedModel \u003d new ModelManager(model.getSmartLib(), new UserPrefs());","lastModifiedDate":"2021-02-19"},{"lineNumber":60,"author":{"gitId":"GJ0407790"},"content":"        expectedModel.deleteBook(bookToDelete);","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"GJ0407790"},"content":"        showNoBook(expectedModel);","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"GJ0407790"},"content":"        assertCommandSuccess(deleteBookCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"GJ0407790"},"content":"        showBookAtIndex(model, INDEX_FIRST_BOOK);","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"GJ0407790"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_BOOK;","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"        // ensures that outOfBoundIndex is still in bounds of smartLib list","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"GJ0407790"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSmartLib().getBookList().size());","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"GJ0407790"},"content":"        DeleteBookCommand deleteBookCommand \u003d new DeleteBookCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"GJ0407790"},"content":"        assertCommandFailure(deleteBookCommand, model, Messages.MESSAGE_INVALID_BOOK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"GJ0407790"},"content":"        DeleteBookCommand deleteFirstCommand \u003d new DeleteBookCommand(INDEX_FIRST_BOOK);","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"GJ0407790"},"content":"        DeleteBookCommand deleteSecondCommand \u003d new DeleteBookCommand(INDEX_SECOND_BOOK);","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"GJ0407790"},"content":"        DeleteBookCommand deleteFirstCommandCopy \u003d new DeleteBookCommand(INDEX_FIRST_BOOK);","lastModifiedDate":"2021-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"        // different reader -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"GJ0407790"},"content":"     * Updates {@code model}\u0027s filtered book list to show no book.","lastModifiedDate":"2021-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"GJ0407790"},"content":"    private void showNoBook(Model model) {","lastModifiedDate":"2021-03-18"},{"lineNumber":104,"author":{"gitId":"GJ0407790"},"content":"        model.updateFilteredBookList(p -\u003e false);","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"GJ0407790"},"content":"        assertTrue(model.getFilteredBookList().isEmpty());","lastModifiedDate":"2021-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"arsatis":3,"GJ0407790":35,"gycc7253":10,"-":61}},{"path":"src/test/java/seedu/smartlib/logic/commands/DeleteReaderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.showReaderAtIndex;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.testutil.TypicalIndexes.INDEX_FIRST_READER;","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.testutil.TypicalIndexes.INDEX_SECOND_READER;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.getTypicalSmartLib;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.Messages;","lastModifiedDate":"2021-02-19"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.index.Index;","lastModifiedDate":"2021-02-19"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ModelManager;","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.UserPrefs;","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"public class DeleteReaderCommandTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    private Model model \u003d new ModelManager(getTypicalSmartLib(), new UserPrefs());","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"        Reader readerToDelete \u003d model.getFilteredReaderList().get(INDEX_FIRST_READER.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"        DeleteReaderCommand deleteCommand \u003d new DeleteReaderCommand(INDEX_FIRST_READER);","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"Nanxi-Huang"},"content":"        String expectedMessage \u003d String.format(DeleteReaderCommand.MESSAGE_DELETE_READER_SUCCESS, readerToDelete);","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSmartLib(), new UserPrefs());","lastModifiedDate":"2021-02-19"},{"lineNumber":37,"author":{"gitId":"Nanxi-Huang"},"content":"        expectedModel.deleteReader(readerToDelete);","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"Nanxi-Huang"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredReaderList().size() + 1);","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"Nanxi-Huang"},"content":"        DeleteReaderCommand deleteCommand \u003d new DeleteReaderCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"Nanxi-Huang"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_READER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"        showReaderAtIndex(model, INDEX_FIRST_READER);","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"        Reader readerToDelete \u003d model.getFilteredReaderList().get(INDEX_FIRST_READER.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"        DeleteReaderCommand deleteCommand \u003d new DeleteReaderCommand(INDEX_FIRST_READER);","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"Nanxi-Huang"},"content":"        String expectedMessage \u003d String.format(DeleteReaderCommand.MESSAGE_DELETE_READER_SUCCESS, readerToDelete);","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"gycc7253"},"content":"        Model expectedModel \u003d new ModelManager(model.getSmartLib(), new UserPrefs());","lastModifiedDate":"2021-02-19"},{"lineNumber":60,"author":{"gitId":"Nanxi-Huang"},"content":"        expectedModel.deleteReader(readerToDelete);","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"        showNoReader(expectedModel);","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"        showReaderAtIndex(model, INDEX_FIRST_READER);","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_READER;","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"        // ensures that outOfBoundIndex is still in bounds of smartLib list","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSmartLib().getReaderList().size());","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"Nanxi-Huang"},"content":"        DeleteReaderCommand deleteCommand \u003d new DeleteReaderCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"Nanxi-Huang"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_READER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"        DeleteReaderCommand deleteFirstCommand \u003d new DeleteReaderCommand(INDEX_FIRST_READER);","lastModifiedDate":"2021-03-07"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"        DeleteReaderCommand deleteSecondCommand \u003d new DeleteReaderCommand(INDEX_SECOND_READER);","lastModifiedDate":"2021-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"        DeleteReaderCommand deleteFirstCommandCopy \u003d new DeleteReaderCommand(INDEX_FIRST_READER);","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"        // different reader -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"arsatis"},"content":"    private void showNoReader(Model model) {","lastModifiedDate":"2021-03-07"},{"lineNumber":105,"author":{"gitId":"arsatis"},"content":"        model.updateFilteredReaderList(p -\u003e false);","lastModifiedDate":"2021-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(model.getFilteredReaderList().isEmpty());","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"arsatis":20,"Nanxi-Huang":10,"GJ0407790":2,"gycc7253":11,"-":66}},{"path":"src/test/java/seedu/smartlib/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.showReaderAtIndex;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.testutil.TypicalIndexes.INDEX_FIRST_READER;","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.testutil.TypicalIndexes.INDEX_SECOND_READER;","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.getTypicalSmartLib;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.Messages;","lastModifiedDate":"2021-02-19"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.index.Index;","lastModifiedDate":"2021-02-19"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.logic.commands.EditCommand.EditReaderDescriptor;","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ModelManager;","lastModifiedDate":"2021-02-19"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.SmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.UserPrefs;","lastModifiedDate":"2021-02-19"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.testutil.EditReaderDescriptorBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.testutil.ReaderBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"    private Model model \u003d new ModelManager(getTypicalSmartLib(), new UserPrefs());","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"        Reader editedReader \u003d new ReaderBuilder().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"        EditCommand.EditReaderDescriptor descriptor \u003d new EditReaderDescriptorBuilder(editedReader).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_READER, descriptor);","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_READER_SUCCESS, editedReader);","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"gycc7253"},"content":"        Model expectedModel \u003d new ModelManager(new SmartLib(model.getSmartLib()), new UserPrefs());","lastModifiedDate":"2021-02-19"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"        expectedModel.setReader(model.getFilteredReaderList().get(0), editedReader);","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"        Index indexLastReader \u003d Index.fromOneBased(model.getFilteredReaderList().size());","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"        Reader lastReader \u003d model.getFilteredReaderList().get(indexLastReader.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"        ReaderBuilder readerInList \u003d new ReaderBuilder(lastReader);","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"        Reader editedReader \u003d readerInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"        EditCommand.EditReaderDescriptor descriptor \u003d new EditReaderDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastReader, descriptor);","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_READER_SUCCESS, editedReader);","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"gycc7253"},"content":"        Model expectedModel \u003d new ModelManager(new SmartLib(model.getSmartLib()), new UserPrefs());","lastModifiedDate":"2021-02-19"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"        expectedModel.setReader(lastReader, editedReader);","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_READER, new EditCommand.EditReaderDescriptor());","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"        Reader editedReader \u003d model.getFilteredReaderList().get(INDEX_FIRST_READER.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_READER_SUCCESS, editedReader);","lastModifiedDate":"2021-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"gycc7253"},"content":"        Model expectedModel \u003d new ModelManager(new SmartLib(model.getSmartLib()), new UserPrefs());","lastModifiedDate":"2021-02-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"        showReaderAtIndex(model, INDEX_FIRST_READER);","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"        Reader readerInFilteredList \u003d model.getFilteredReaderList().get(INDEX_FIRST_READER.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"        Reader editedReader \u003d new ReaderBuilder(readerInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_READER,","lastModifiedDate":"2021-03-07"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"                new EditReaderDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_READER_SUCCESS, editedReader);","lastModifiedDate":"2021-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"gycc7253"},"content":"        Model expectedModel \u003d new ModelManager(new SmartLib(model.getSmartLib()), new UserPrefs());","lastModifiedDate":"2021-02-19"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"        expectedModel.setReader(model.getFilteredReaderList().get(0), editedReader);","lastModifiedDate":"2021-03-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"arsatis"},"content":"    public void execute_duplicateReaderUnfilteredList_failure() {","lastModifiedDate":"2021-03-07"},{"lineNumber":103,"author":{"gitId":"arsatis"},"content":"        Reader firstReader \u003d model.getFilteredReaderList().get(INDEX_FIRST_READER.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":104,"author":{"gitId":"arsatis"},"content":"        EditCommand.EditReaderDescriptor descriptor \u003d new EditReaderDescriptorBuilder(firstReader).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":105,"author":{"gitId":"arsatis"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_READER, descriptor);","lastModifiedDate":"2021-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"arsatis"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_READER);","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"arsatis"},"content":"    public void execute_duplicateReaderFilteredList_failure() {","lastModifiedDate":"2021-03-07"},{"lineNumber":112,"author":{"gitId":"arsatis"},"content":"        showReaderAtIndex(model, INDEX_FIRST_READER);","lastModifiedDate":"2021-03-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"arsatis"},"content":"        // edit reader in filtered list into a duplicate in SmartLib","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"arsatis"},"content":"        Reader readerInList \u003d model.getSmartLib().getReaderList().get(INDEX_SECOND_READER.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":116,"author":{"gitId":"arsatis"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_READER,","lastModifiedDate":"2021-03-07"},{"lineNumber":117,"author":{"gitId":"arsatis"},"content":"                new EditReaderDescriptorBuilder(readerInList).build());","lastModifiedDate":"2021-03-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"arsatis"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_READER);","lastModifiedDate":"2021-03-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"arsatis"},"content":"    public void execute_invalidReaderIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-07"},{"lineNumber":124,"author":{"gitId":"Nanxi-Huang"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredReaderList().size() + 1);","lastModifiedDate":"2021-03-07"},{"lineNumber":125,"author":{"gitId":"arsatis"},"content":"        EditCommand.EditReaderDescriptor descriptor \u003d new EditReaderDescriptorBuilder()","lastModifiedDate":"2021-03-07"},{"lineNumber":126,"author":{"gitId":"arsatis"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"Nanxi-Huang"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_READER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"arsatis"},"content":"     * but smaller than size of smartLib","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"arsatis"},"content":"    public void execute_invalidReaderIndexFilteredList_failure() {","lastModifiedDate":"2021-03-07"},{"lineNumber":138,"author":{"gitId":"arsatis"},"content":"        showReaderAtIndex(model, INDEX_FIRST_READER);","lastModifiedDate":"2021-03-07"},{"lineNumber":139,"author":{"gitId":"arsatis"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_READER;","lastModifiedDate":"2021-03-07"},{"lineNumber":140,"author":{"gitId":"arsatis"},"content":"        // ensures that outOfBoundIndex is still in bounds of SmartLib list","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"arsatis"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSmartLib().getReaderList().size());","lastModifiedDate":"2021-03-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"arsatis"},"content":"                new EditReaderDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"Nanxi-Huang"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_READER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"arsatis"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_READER, DESC_AMY);","lastModifiedDate":"2021-03-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"arsatis"},"content":"        EditCommand.EditReaderDescriptor copyDescriptor \u003d new EditReaderDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-07"},{"lineNumber":155,"author":{"gitId":"arsatis"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_READER, copyDescriptor);","lastModifiedDate":"2021-03-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"arsatis"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_READER, DESC_AMY)));","lastModifiedDate":"2021-03-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"arsatis"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_READER, DESC_BOB)));","lastModifiedDate":"2021-03-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"arsatis":58,"Nanxi-Huang":3,"GJ0407790":1,"gycc7253":18,"-":94}},{"path":"src/test/java/seedu/smartlib/logic/commands/EditReaderDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.testutil.EditReaderDescriptorBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"public class EditReaderDescriptorTest {","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"        EditCommand.EditReaderDescriptor descriptorWithSameValues \u003d new EditCommand.EditReaderDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"        EditCommand.EditReaderDescriptor editedAmy \u003d new EditReaderDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"        editedAmy \u003d new EditReaderDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"        editedAmy \u003d new EditReaderDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"        editedAmy \u003d new EditReaderDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"        editedAmy \u003d new EditReaderDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"arsatis":8,"gycc7253":9,"-":41}},{"path":"src/test/java/seedu/smartlib/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ModelManager;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"gycc7253":5,"-":15}},{"path":"src/test/java/seedu/smartlib/logic/commands/FindBookCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_BOOKS_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.testutil.TypicalModels.HARRY_PORTER;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.testutil.TypicalModels.LEGACY;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.testutil.TypicalModels.PROMISE_LAND;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.testutil.TypicalModels.getTypicalSmartLib;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.ModelManager;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.UserPrefs;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.book.BookNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":" * Contains integration tests (interaction with the Model) for {@code FindBookCommand}.","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"public class FindBookCommandTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"    private Model model \u003d new ModelManager(getTypicalSmartLib(), new UserPrefs());","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalSmartLib(), new UserPrefs());","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"    public void equals() {","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"        BookNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"                new BookNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"        BookNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"                new BookNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"        FindBookCommand findFirstCommand \u003d new FindBookCommand(firstPredicate);","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"        FindBookCommand findSecondCommand \u003d new FindBookCommand(secondPredicate);","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"Andrewzhang217"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"Andrewzhang217"},"content":"        FindBookCommand findFirstCommandCopy \u003d new FindBookCommand(firstPredicate);","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"Andrewzhang217"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"Andrewzhang217"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"Andrewzhang217"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"Andrewzhang217"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"Andrewzhang217"},"content":"        // different book -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"Andrewzhang217"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"Andrewzhang217"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"Andrewzhang217"},"content":"    public void execute_zeroKeywords_noBookFound() {","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"Andrewzhang217"},"content":"        String expectedMessage \u003d String.format(MESSAGE_BOOKS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"Andrewzhang217"},"content":"        BookNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"Andrewzhang217"},"content":"        FindBookCommand command \u003d new FindBookCommand(predicate);","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"Andrewzhang217"},"content":"        expectedModel.updateFilteredBookList(predicate);","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"Andrewzhang217"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"Andrewzhang217"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredBookList());","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"Andrewzhang217"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"Andrewzhang217"},"content":"    public void execute_partialKeyword_noBookFound() {","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"Andrewzhang217"},"content":"        String expectedMessage \u003d String.format(MESSAGE_BOOKS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"Andrewzhang217"},"content":"        BookNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kur\");","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"Andrewzhang217"},"content":"        FindBookCommand command \u003d new FindBookCommand(predicate);","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"Andrewzhang217"},"content":"        expectedModel.updateFilteredBookList(predicate);","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"Andrewzhang217"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"Andrewzhang217"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredBookList());","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"Andrewzhang217"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"Andrewzhang217"},"content":"    public void execute_multipleKeywords_noBookFound() {","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"Andrewzhang217"},"content":"        String expectedMessage \u003d String.format(MESSAGE_BOOKS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"Andrewzhang217"},"content":"        BookNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Hello Hi\");","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"Andrewzhang217"},"content":"        FindBookCommand command \u003d new FindBookCommand(predicate);","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"Andrewzhang217"},"content":"        expectedModel.updateFilteredBookList(predicate);","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"Andrewzhang217"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"Andrewzhang217"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredBookList());","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"Andrewzhang217"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":88,"author":{"gitId":"Andrewzhang217"},"content":"    public void execute_multipleKeywords_multipleBooksFound() {","lastModifiedDate":"2021-03-18"},{"lineNumber":89,"author":{"gitId":"Andrewzhang217"},"content":"        String expectedMessage \u003d String.format(MESSAGE_BOOKS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"Andrewzhang217"},"content":"        BookNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"POTTER LAND LEGACY\");","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"Andrewzhang217"},"content":"        FindBookCommand command \u003d new FindBookCommand(predicate);","lastModifiedDate":"2021-03-18"},{"lineNumber":92,"author":{"gitId":"Andrewzhang217"},"content":"        expectedModel.updateFilteredBookList(predicate);","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"Andrewzhang217"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"Andrewzhang217"},"content":"        assertEquals(Arrays.asList(HARRY_PORTER, PROMISE_LAND, LEGACY), model.getFilteredBookList());","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":96,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":97,"author":{"gitId":"Andrewzhang217"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":98,"author":{"gitId":"Andrewzhang217"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"Andrewzhang217"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"Andrewzhang217"},"content":"    private BookNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-03-18"},{"lineNumber":101,"author":{"gitId":"Andrewzhang217"},"content":"        return new BookNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-03-18"},{"lineNumber":102,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":103,"author":{"gitId":"Andrewzhang217"},"content":"}","lastModifiedDate":"2021-03-18"},{"lineNumber":104,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"Andrewzhang217":104}},{"path":"src/test/java/seedu/smartlib/logic/commands/FindReaderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_READERS_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.CARL;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.ELLE;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.FIONA;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.getTypicalSmartLib;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ModelManager;","lastModifiedDate":"2021-02-19"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.UserPrefs;","lastModifiedDate":"2021-02-19"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-02-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":" * Contains integration tests (interaction with the Model) for {@code FindReaderCommand}.","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"public class FindReaderCommandTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    private Model model \u003d new ModelManager(getTypicalSmartLib(), new UserPrefs());","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalSmartLib(), new UserPrefs());","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"        FindReaderCommand findFirstCommand \u003d new FindReaderCommand(firstPredicate);","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"        FindReaderCommand findSecondCommand \u003d new FindReaderCommand(secondPredicate);","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"        FindReaderCommand findFirstCommandCopy \u003d new FindReaderCommand(firstPredicate);","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"        // different reader -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"Nanxi-Huang"},"content":"    public void execute_zeroKeywords_noReaderFound() {","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"        String expectedMessage \u003d String.format(MESSAGE_READERS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"        FindReaderCommand command \u003d new FindReaderCommand(predicate);","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"        expectedModel.updateFilteredReaderList(predicate);","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredReaderList());","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"    public void execute_partialKeyword_noReaderFound() {","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"        String expectedMessage \u003d String.format(MESSAGE_READERS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kur\");","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"        FindReaderCommand command \u003d new FindReaderCommand(predicate);","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"        expectedModel.updateFilteredReaderList(predicate);","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredReaderList());","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"    public void execute_multipleKeywords_noReaderFound() {","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"        String expectedMessage \u003d String.format(MESSAGE_READERS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Hello Hi\");","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"        FindReaderCommand command \u003d new FindReaderCommand(predicate);","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"        expectedModel.updateFilteredReaderList(predicate);","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"Nanxi-Huang"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredReaderList());","lastModifiedDate":"2021-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"Nanxi-Huang"},"content":"    public void execute_multipleKeywords_multipleReadersFound() {","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"        String expectedMessage \u003d String.format(MESSAGE_READERS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"        FindReaderCommand command \u003d new FindReaderCommand(predicate);","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"        expectedModel.updateFilteredReaderList(predicate);","lastModifiedDate":"2021-03-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"Nanxi-Huang"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredReaderList());","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"arsatis":35,"Nanxi-Huang":4,"GJ0407790":4,"gycc7253":6,"-":54}},{"path":"src/test/java/seedu/smartlib/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ModelManager;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"gycc7253":5,"-":15}},{"path":"src/test/java/seedu/smartlib/logic/commands/ListBookCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.showBookAtIndex;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.testutil.TypicalIndexes.INDEX_FIRST_READER;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.testutil.TypicalModels.getTypicalSmartLib;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.ModelManager;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.UserPrefs;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListBookCommand.","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"public class ListBookCommandTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"    private Model model;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"        model \u003d new ModelManager(getTypicalSmartLib(), new UserPrefs());","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"        expectedModel \u003d new ModelManager(model.getSmartLib(), new UserPrefs());","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"        assertCommandSuccess(new ListBookCommand(), model, ListBookCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"        showBookAtIndex(model, INDEX_FIRST_READER);","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"        assertCommandSuccess(new ListBookCommand(), model, ListBookCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"Andrewzhang217":39}},{"path":"src/test/java/seedu/smartlib/logic/commands/ListReaderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.showReaderAtIndex;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.testutil.TypicalIndexes.INDEX_FIRST_READER;","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.getTypicalSmartLib;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ModelManager;","lastModifiedDate":"2021-02-19"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.UserPrefs;","lastModifiedDate":"2021-02-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListReaderCommand.","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"public class ListReaderCommandTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"        model \u003d new ModelManager(getTypicalSmartLib(), new UserPrefs());","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"        expectedModel \u003d new ModelManager(model.getSmartLib(), new UserPrefs());","lastModifiedDate":"2021-02-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"        assertCommandSuccess(new ListReaderCommand(), model, ListReaderCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"        showReaderAtIndex(model, INDEX_FIRST_READER);","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"        assertCommandSuccess(new ListReaderCommand(), model, ListReaderCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"arsatis":8,"GJ0407790":1,"gycc7253":6,"-":24}},{"path":"src/test/java/seedu/smartlib/logic/commands/ListRecordCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Andrewzhang217"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.showRecordAtIndex;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.testutil.TypicalIndexes.INDEX_FIRST_RECORD;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Andrewzhang217"},"content":"import static seedu.smartlib.testutil.TypicalModels.getTypicalSmartLib;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Andrewzhang217"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Andrewzhang217"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.ModelManager;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Andrewzhang217"},"content":"import seedu.smartlib.model.UserPrefs;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Andrewzhang217"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListRecordCommand.","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"public class ListRecordCommandTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"    private Model model;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Andrewzhang217"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Andrewzhang217"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Andrewzhang217"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Andrewzhang217"},"content":"        model \u003d new ModelManager(getTypicalSmartLib(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"Andrewzhang217"},"content":"        expectedModel \u003d new ModelManager(model.getSmartLib(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Andrewzhang217"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Andrewzhang217"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Andrewzhang217"},"content":"        assertCommandSuccess(new ListRecordCommand(), model, ListRecordCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"Andrewzhang217"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Andrewzhang217"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Andrewzhang217"},"content":"        showRecordAtIndex(model, INDEX_FIRST_RECORD);","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"Andrewzhang217"},"content":"        assertCommandSuccess(new ListRecordCommand(), model, ListRecordCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Andrewzhang217"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"Andrewzhang217":40}},{"path":"src/test/java/seedu/smartlib/logic/commands/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"package seedu.smartlib.logic.commands;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.core.GuiSettings;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.ReadOnlySmartLib;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Barcode;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.record.Record;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":" * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"class ModelStub implements Model {","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"GJ0407790"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"GJ0407790"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"GJ0407790"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"    public Path getSmartLibFilePath() {","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"GJ0407790"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"GJ0407790"},"content":"    public void setSmartLibFilePath(Path smartLibFilePath) {","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"GJ0407790"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":"    public void addReader(Reader reader) {","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"GJ0407790"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"GJ0407790"},"content":"    public void addRecord(Record record) {","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"GJ0407790"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"GJ0407790"},"content":"    public Record markRecordAsReturned(Record record) {","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"GJ0407790"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"    public Barcode getBookBarcode(Name bookName) {","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"        return null;","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"    public Barcode getBookBarcodeForReturn(Name bookName, Name readerName) {","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"        return null;","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"GJ0407790"},"content":"    public void setSmartLib(ReadOnlySmartLib newData) {","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"GJ0407790"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"GJ0407790"},"content":"    public ReadOnlySmartLib getSmartLib() {","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"GJ0407790"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"GJ0407790"},"content":"    public boolean hasBook(Book book) {","lastModifiedDate":"2021-03-18"},{"lineNumber":88,"author":{"gitId":"GJ0407790"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":89,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-20"},{"lineNumber":92,"author":{"gitId":"gycc7253"},"content":"    public boolean hasBook(Name bookName) {","lastModifiedDate":"2021-03-20"},{"lineNumber":93,"author":{"gitId":"gycc7253"},"content":"        return false;","lastModifiedDate":"2021-03-20"},{"lineNumber":94,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":95,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"    public boolean hasBookWithBarcode(Barcode barcode) {","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"arsatis"},"content":"        return false;","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":102,"author":{"gitId":"arsatis"},"content":"    public boolean isBookWithBarcodeBorrowed(Barcode barcode) {","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"gycc7253"},"content":"        return false;","lastModifiedDate":"2021-03-21"},{"lineNumber":104,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":105,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":106,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":107,"author":{"gitId":"GJ0407790"},"content":"    public boolean hasReader(Reader reader) {","lastModifiedDate":"2021-03-18"},{"lineNumber":108,"author":{"gitId":"GJ0407790"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":109,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":110,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":111,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-20"},{"lineNumber":112,"author":{"gitId":"gycc7253"},"content":"    public boolean hasReader(Name readerName) {","lastModifiedDate":"2021-03-20"},{"lineNumber":113,"author":{"gitId":"gycc7253"},"content":"        return false;","lastModifiedDate":"2021-03-20"},{"lineNumber":114,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":115,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":116,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":117,"author":{"gitId":"gycc7253"},"content":"    public boolean canReaderBorrow(Name readerName) {","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"gycc7253"},"content":"        return false;","lastModifiedDate":"2021-03-21"},{"lineNumber":119,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":120,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":121,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":122,"author":{"gitId":"GJ0407790"},"content":"    public boolean hasRecord(Record record) {","lastModifiedDate":"2021-03-18"},{"lineNumber":123,"author":{"gitId":"GJ0407790"},"content":"        return false;","lastModifiedDate":"2021-03-18"},{"lineNumber":124,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":125,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":126,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-21"},{"lineNumber":127,"author":{"gitId":"arsatis"},"content":"    public boolean borrowBook(Name readerName, Barcode barcode) {","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"gycc7253"},"content":"        return false;","lastModifiedDate":"2021-03-21"},{"lineNumber":129,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":130,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":131,"author":{"gitId":"gycc7253"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"arsatis"},"content":"    public boolean returnBook(Name readerName, Barcode barcode) {","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"gycc7253"},"content":"        return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":137,"author":{"gitId":"GJ0407790"},"content":"    public void deleteBook(Book target) {","lastModifiedDate":"2021-03-18"},{"lineNumber":138,"author":{"gitId":"GJ0407790"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":139,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":140,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":141,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":142,"author":{"gitId":"GJ0407790"},"content":"    public void deleteReader(Reader target) {","lastModifiedDate":"2021-03-18"},{"lineNumber":143,"author":{"gitId":"GJ0407790"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":144,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":145,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":146,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":147,"author":{"gitId":"GJ0407790"},"content":"    public void addBook(Book book) {","lastModifiedDate":"2021-03-18"},{"lineNumber":148,"author":{"gitId":"GJ0407790"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":149,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":150,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":151,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":152,"author":{"gitId":"GJ0407790"},"content":"    public void setReader(Reader target, Reader editedReader) {","lastModifiedDate":"2021-03-18"},{"lineNumber":153,"author":{"gitId":"GJ0407790"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":154,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":155,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":156,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":157,"author":{"gitId":"GJ0407790"},"content":"    public ObservableList\u003cReader\u003e getFilteredReaderList() {","lastModifiedDate":"2021-03-18"},{"lineNumber":158,"author":{"gitId":"GJ0407790"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":159,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":160,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":161,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":162,"author":{"gitId":"GJ0407790"},"content":"    public ObservableList\u003cBook\u003e getFilteredBookList() {","lastModifiedDate":"2021-03-18"},{"lineNumber":163,"author":{"gitId":"GJ0407790"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":164,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":165,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":166,"author":{"gitId":"Andrewzhang217"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"Andrewzhang217"},"content":"    public ObservableList\u003cRecord\u003e getFilteredRecordList() {","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"Andrewzhang217"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"Andrewzhang217"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":172,"author":{"gitId":"GJ0407790"},"content":"    public void updateFilteredBookList(Predicate\u003cBook\u003e predicate) {","lastModifiedDate":"2021-03-18"},{"lineNumber":173,"author":{"gitId":"GJ0407790"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":174,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":175,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":176,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":177,"author":{"gitId":"GJ0407790"},"content":"    public void updateFilteredReaderList(Predicate\u003cReader\u003e predicate) {","lastModifiedDate":"2021-03-18"},{"lineNumber":178,"author":{"gitId":"GJ0407790"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":179,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":180,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":181,"author":{"gitId":"GJ0407790"},"content":"    @Override","lastModifiedDate":"2021-03-18"},{"lineNumber":182,"author":{"gitId":"GJ0407790"},"content":"    public void updateFilteredRecordList(Predicate\u003cRecord\u003e predicate) {","lastModifiedDate":"2021-03-18"},{"lineNumber":183,"author":{"gitId":"GJ0407790"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-18"},{"lineNumber":184,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":185,"author":{"gitId":"GJ0407790"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"arsatis":19,"GJ0407790":133,"gycc7253":28,"Andrewzhang217":5}},{"path":"src/test/java/seedu/smartlib/logic/parser/AddBookCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.AUTHOR_DESC_HARRY;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.AUTHOR_DESC_MAZE;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.GENRE_DESC_HARRY;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.GENRE_DESC_MAZE;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.INVALID_AUTHOR_DESC;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.INVALID_BOOKNAME_DESC;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.INVALID_GENRE_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.INVALID_ISBN_DESC;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.INVALID_PUBLISHER_DESC;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.ISBN_DESC_HARRY;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.ISBN_DESC_MAZE;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.NAME_DESC_HARRY;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.NAME_DESC_MAZE;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.PUBLISHER_DESC_HARRY;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.PUBLISHER_DESC_MAZE;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_AUTHOR_MAZE;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_GENRE_MAZE;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_ISBN_MAZE;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_NAME_MAZE;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_PUBLISHER_MAZE;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.MAZE;","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.logic.commands.AddBookCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Author;","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.model.book.Genre;","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Isbn;","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Publisher;","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.testutil.BookBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"public class AddBookCommandParserTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"    private AddBookCommandParser parser \u003d new AddBookCommandParser();","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"GJ0407790"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"GJ0407790"},"content":"        Book expectedBook \u003d new BookBuilder(MAZE).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"GJ0407790"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"GJ0407790"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_MAZE + AUTHOR_DESC_MAZE","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"Nanxi-Huang"},"content":"                + PUBLISHER_DESC_MAZE + ISBN_DESC_MAZE + GENRE_DESC_MAZE, new AddBookCommand(expectedBook));","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"GJ0407790"},"content":"        assertParseSuccess(parser, NAME_DESC_HARRY + NAME_DESC_MAZE + AUTHOR_DESC_MAZE","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"Nanxi-Huang"},"content":"                + PUBLISHER_DESC_MAZE + ISBN_DESC_MAZE + GENRE_DESC_MAZE, new AddBookCommand(expectedBook));","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"GJ0407790"},"content":"        // multiple authors - last author accepted","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"GJ0407790"},"content":"        assertParseSuccess(parser, NAME_DESC_MAZE + AUTHOR_DESC_HARRY + AUTHOR_DESC_MAZE","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"Nanxi-Huang"},"content":"                + PUBLISHER_DESC_MAZE + ISBN_DESC_MAZE + GENRE_DESC_MAZE, new AddBookCommand(expectedBook));","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"GJ0407790"},"content":"        // multiple publishers - last publisher accepted","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"GJ0407790"},"content":"        assertParseSuccess(parser, NAME_DESC_MAZE + AUTHOR_DESC_MAZE + PUBLISHER_DESC_HARRY","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"Nanxi-Huang"},"content":"                + PUBLISHER_DESC_MAZE + ISBN_DESC_MAZE + GENRE_DESC_MAZE, new AddBookCommand(expectedBook));","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"GJ0407790"},"content":"        // multiple isbn - last isbn accepted","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"GJ0407790"},"content":"        assertParseSuccess(parser, NAME_DESC_MAZE + AUTHOR_DESC_MAZE + PUBLISHER_DESC_MAZE","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"Nanxi-Huang"},"content":"                + ISBN_DESC_HARRY + ISBN_DESC_MAZE + GENRE_DESC_MAZE, new AddBookCommand(expectedBook));","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"Nanxi-Huang"},"content":"        // multiple genres - last genre accepted","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"Nanxi-Huang"},"content":"        assertParseSuccess(parser, NAME_DESC_MAZE + AUTHOR_DESC_MAZE + PUBLISHER_DESC_HARRY","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"Nanxi-Huang"},"content":"                + PUBLISHER_DESC_MAZE + ISBN_DESC_MAZE","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"Nanxi-Huang"},"content":"                + GENRE_DESC_HARRY + GENRE_DESC_MAZE, new AddBookCommand(expectedBook));","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"GJ0407790"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"GJ0407790"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddBookCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"GJ0407790"},"content":"        // missing name prefix","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"Nanxi-Huang"},"content":"        assertParseFailure(parser, VALID_NAME_MAZE + AUTHOR_DESC_MAZE + PUBLISHER_DESC_MAZE + ISBN_DESC_MAZE","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"Nanxi-Huang"},"content":"                + GENRE_DESC_MAZE, expectedMessage);","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"GJ0407790"},"content":"        // missing author prefix","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"Nanxi-Huang"},"content":"        assertParseFailure(parser, NAME_DESC_MAZE + VALID_AUTHOR_MAZE + PUBLISHER_DESC_MAZE + ISBN_DESC_MAZE","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"Nanxi-Huang"},"content":"                + GENRE_DESC_MAZE, expectedMessage);","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"GJ0407790"},"content":"        // missing publisher prefix","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"Nanxi-Huang"},"content":"        assertParseFailure(parser, NAME_DESC_MAZE + AUTHOR_DESC_MAZE + VALID_PUBLISHER_MAZE + ISBN_DESC_MAZE","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"Nanxi-Huang"},"content":"                + GENRE_DESC_MAZE, expectedMessage);","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"GJ0407790"},"content":"        // missing isbn prefix","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"Nanxi-Huang"},"content":"        assertParseFailure(parser, NAME_DESC_MAZE + AUTHOR_DESC_MAZE + PUBLISHER_DESC_MAZE + VALID_ISBN_MAZE","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"Nanxi-Huang"},"content":"                + GENRE_DESC_MAZE, expectedMessage);","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"Nanxi-Huang"},"content":"        // missing genre prefix","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"Nanxi-Huang"},"content":"        assertParseFailure(parser, NAME_DESC_MAZE + AUTHOR_DESC_MAZE + VALID_PUBLISHER_MAZE + ISBN_DESC_MAZE","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"Nanxi-Huang"},"content":"                + VALID_GENRE_MAZE, expectedMessage);","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"GJ0407790"},"content":"        // all prefixes missing","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"GJ0407790"},"content":"        assertParseFailure(parser, VALID_NAME_MAZE + VALID_AUTHOR_MAZE + VALID_PUBLISHER_MAZE + VALID_ISBN_MAZE,","lastModifiedDate":"2021-03-18"},{"lineNumber":101,"author":{"gitId":"GJ0407790"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-18"},{"lineNumber":102,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":103,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":104,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"GJ0407790"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-18"},{"lineNumber":106,"author":{"gitId":"GJ0407790"},"content":"        // invalid name","lastModifiedDate":"2021-03-18"},{"lineNumber":107,"author":{"gitId":"GJ0407790"},"content":"        assertParseFailure(parser, INVALID_BOOKNAME_DESC + AUTHOR_DESC_MAZE","lastModifiedDate":"2021-03-18"},{"lineNumber":108,"author":{"gitId":"Nanxi-Huang"},"content":"                + PUBLISHER_DESC_MAZE + ISBN_DESC_MAZE + GENRE_DESC_MAZE, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":110,"author":{"gitId":"GJ0407790"},"content":"        // invalid author","lastModifiedDate":"2021-03-18"},{"lineNumber":111,"author":{"gitId":"GJ0407790"},"content":"        assertParseFailure(parser, NAME_DESC_MAZE + INVALID_AUTHOR_DESC","lastModifiedDate":"2021-03-18"},{"lineNumber":112,"author":{"gitId":"Nanxi-Huang"},"content":"                + PUBLISHER_DESC_MAZE + ISBN_DESC_MAZE + GENRE_DESC_MAZE, Author.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":114,"author":{"gitId":"GJ0407790"},"content":"        // invalid publisher","lastModifiedDate":"2021-03-18"},{"lineNumber":115,"author":{"gitId":"GJ0407790"},"content":"        assertParseFailure(parser, NAME_DESC_MAZE + AUTHOR_DESC_MAZE","lastModifiedDate":"2021-03-18"},{"lineNumber":116,"author":{"gitId":"Nanxi-Huang"},"content":"                + INVALID_PUBLISHER_DESC + ISBN_DESC_MAZE + GENRE_DESC_MAZE, Publisher.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":118,"author":{"gitId":"GJ0407790"},"content":"        // invalid isbn","lastModifiedDate":"2021-03-18"},{"lineNumber":119,"author":{"gitId":"GJ0407790"},"content":"        assertParseFailure(parser, NAME_DESC_MAZE + AUTHOR_DESC_MAZE","lastModifiedDate":"2021-03-18"},{"lineNumber":120,"author":{"gitId":"Nanxi-Huang"},"content":"                + PUBLISHER_DESC_MAZE + INVALID_ISBN_DESC + GENRE_DESC_MAZE, Isbn.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"Nanxi-Huang"},"content":"        // invalid genre","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"Nanxi-Huang"},"content":"        assertParseFailure(parser, NAME_DESC_MAZE + AUTHOR_DESC_MAZE","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"Nanxi-Huang"},"content":"                + PUBLISHER_DESC_MAZE + ISBN_DESC_MAZE + INVALID_GENRE_DESC, Genre.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":126,"author":{"gitId":"GJ0407790"},"content":"        // non-empty preamble","lastModifiedDate":"2021-03-18"},{"lineNumber":127,"author":{"gitId":"GJ0407790"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_MAZE + AUTHOR_DESC_MAZE","lastModifiedDate":"2021-03-18"},{"lineNumber":128,"author":{"gitId":"GJ0407790"},"content":"                        + PUBLISHER_DESC_MAZE + ISBN_DESC_MAZE,","lastModifiedDate":"2021-03-18"},{"lineNumber":129,"author":{"gitId":"GJ0407790"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddBookCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-18"},{"lineNumber":130,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":131,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"GJ0407790"},"content":"}","lastModifiedDate":"2021-03-18"},{"lineNumber":133,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"arsatis":1,"Nanxi-Huang":36,"GJ0407790":96}},{"path":"src/test/java/seedu/smartlib/logic/parser/AddReaderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-02-19"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-02-19"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-02-19"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-02-19"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-02-19"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-02-19"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-02-19"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-19"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-02-19"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-02-19"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-05"},{"lineNumber":35,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.logic.commands.AddReaderCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.Address;","lastModifiedDate":"2021-02-19"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.Email;","lastModifiedDate":"2021-02-19"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.Phone;","lastModifiedDate":"2021-02-19"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.tag.Tag;","lastModifiedDate":"2021-02-19"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.testutil.ReaderBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"Nanxi-Huang"},"content":"public class AddReaderCommandParserTest {","lastModifiedDate":"2021-03-06"},{"lineNumber":44,"author":{"gitId":"Nanxi-Huang"},"content":"    private AddReaderCommandParser parser \u003d new AddReaderCommandParser();","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"        Reader expectedReader \u003d new ReaderBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"Nanxi-Huang"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddReaderCommand(expectedReader));","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"Nanxi-Huang"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddReaderCommand(expectedReader));","lastModifiedDate":"2021-03-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"Nanxi-Huang"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddReaderCommand(expectedReader));","lastModifiedDate":"2021-03-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"Nanxi-Huang"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddReaderCommand(expectedReader));","lastModifiedDate":"2021-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"Nanxi-Huang"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddReaderCommand(expectedReader));","lastModifiedDate":"2021-03-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"        Reader expectedReaderMultipleTags \u003d new ReaderBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"Nanxi-Huang"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddReaderCommand(expectedReaderMultipleTags));","lastModifiedDate":"2021-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"        Reader expectedReader \u003d new ReaderBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"Nanxi-Huang"},"content":"                new AddReaderCommand(expectedReader));","lastModifiedDate":"2021-03-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"Nanxi-Huang"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddReaderCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"Nanxi-Huang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddReaderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"arsatis":7,"Nanxi-Huang":12,"GJ0407790":3,"gycc7253":30,"-":89}},{"path":"src/test/java/seedu/smartlib/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"gycc7253":1,"-":149}},{"path":"src/test/java/seedu/smartlib/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.Command;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"gycc7253":3,"-":35}},{"path":"src/test/java/seedu/smartlib/logic/parser/DeleteBookCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalIndexes.INDEX_FIRST_BOOK;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.logic.commands.DeleteBookCommand;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":" * outside of the DeleteBookCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":" * same path through the DeleteBookCommand, and therefore we test only one of them.","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"public class DeleteBookCommandParserTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"    private DeleteBookCommandParser parser \u003d new DeleteBookCommandParser();","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"    public void parse_validArgs_returnsDeleteBookCommand() {","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"        assertParseSuccess(parser, \"1\", new DeleteBookCommand(INDEX_FIRST_BOOK));","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteBookCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"GJ0407790"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"GJ0407790":33}},{"path":"src/test/java/seedu/smartlib/logic/parser/DeleteReaderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.testutil.TypicalIndexes.INDEX_FIRST_READER;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.logic.commands.DeleteReaderCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":" * outside of the DeleteReaderCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":" * same path through the DeleteReaderCommand, and therefore we test only one of them.","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"Nanxi-Huang"},"content":"public class DeleteReaderCommandParserTest {","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"Nanxi-Huang"},"content":"    private DeleteReaderCommandParser parser \u003d new DeleteReaderCommandParser();","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"        assertParseSuccess(parser, \"1\", new DeleteReaderCommand(INDEX_FIRST_READER));","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"Nanxi-Huang"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"Nanxi-Huang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteReaderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"arsatis":2,"Nanxi-Huang":5,"GJ0407790":2,"gycc7253":4,"-":20}},{"path":"src/test/java/seedu/smartlib/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-02-19"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-02-19"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-02-19"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-02-19"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-02-19"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-02-19"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-02-19"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-02-19"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-19"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-02-19"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-02-19"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-02-19"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.testutil.TypicalIndexes.INDEX_FIRST_READER;","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.testutil.TypicalIndexes.INDEX_SECOND_READER;","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.testutil.TypicalIndexes.INDEX_THIRD_READER;","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.index.Index;","lastModifiedDate":"2021-02-19"},{"lineNumber":37,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-05"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.EditCommand;","lastModifiedDate":"2021-02-19"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Address;","lastModifiedDate":"2021-02-19"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Email;","lastModifiedDate":"2021-02-19"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Phone;","lastModifiedDate":"2021-02-19"},{"lineNumber":42,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.tag.Tag;","lastModifiedDate":"2021-02-19"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.testutil.EditReaderDescriptorBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Reader} being edited,","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"arsatis"},"content":"        Index targetIndex \u003d INDEX_SECOND_READER;","lastModifiedDate":"2021-03-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"arsatis"},"content":"        EditCommand.EditReaderDescriptor descriptor \u003d new EditReaderDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"arsatis"},"content":"        Index targetIndex \u003d INDEX_FIRST_READER;","lastModifiedDate":"2021-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"arsatis"},"content":"        EditCommand.EditReaderDescriptor descriptor \u003d new EditReaderDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"arsatis"},"content":"        Index targetIndex \u003d INDEX_THIRD_READER;","lastModifiedDate":"2021-03-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"arsatis"},"content":"        EditCommand.EditReaderDescriptor descriptor \u003d new EditReaderDescriptorBuilder()","lastModifiedDate":"2021-03-07"},{"lineNumber":139,"author":{"gitId":"arsatis"},"content":"                .withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"arsatis"},"content":"        descriptor \u003d new EditReaderDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"arsatis"},"content":"        descriptor \u003d new EditReaderDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"arsatis"},"content":"        descriptor \u003d new EditReaderDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"arsatis"},"content":"        descriptor \u003d new EditReaderDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"arsatis"},"content":"        Index targetIndex \u003d INDEX_FIRST_READER;","lastModifiedDate":"2021-03-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"arsatis"},"content":"        EditCommand.EditReaderDescriptor descriptor \u003d new EditReaderDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"arsatis"},"content":"        Index targetIndex \u003d INDEX_FIRST_READER;","lastModifiedDate":"2021-03-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"arsatis"},"content":"        EditCommand.EditReaderDescriptor descriptor \u003d new EditReaderDescriptorBuilder()","lastModifiedDate":"2021-03-07"},{"lineNumber":189,"author":{"gitId":"arsatis"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":196,"author":{"gitId":"arsatis"},"content":"        descriptor \u003d new EditReaderDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":204,"author":{"gitId":"arsatis"},"content":"        Index targetIndex \u003d INDEX_THIRD_READER;","lastModifiedDate":"2021-03-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"arsatis"},"content":"        EditCommand.EditReaderDescriptor descriptor \u003d new EditReaderDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"arsatis":24,"GJ0407790":1,"gycc7253":34,"-":153}},{"path":"src/test/java/seedu/smartlib/logic/parser/FindReaderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.logic.commands.FindReaderCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-02-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"public class FindReaderCommandParserTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"    private FindReaderCommandParser parser \u003d new FindReaderCommandParser();","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindReaderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"        FindReaderCommand expectedFindReaderCommand \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"                new FindReaderCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindReaderCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindReaderCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"arsatis":9,"gycc7253":5,"-":21}},{"path":"src/test/java/seedu/smartlib/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.testutil.TypicalIndexes.INDEX_FIRST_READER;","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Author;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.model.book.Genre;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Isbn;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Publisher;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Address;","lastModifiedDate":"2021-02-19"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Email;","lastModifiedDate":"2021-02-19"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Phone;","lastModifiedDate":"2021-02-19"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.tag.Tag;","lastModifiedDate":"2021-02-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Books \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"    private static final String INVALID_BOOK_NAME \u003d \"Sorcerer\u0027s Stone\";","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"    private static final String INVALID_BOOK_AUTHOR \u003d \"J.K. Rowling\";","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"    private static final String INVALID_BOOK_PUBLISHER \u003d \" \";","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"GJ0407790"},"content":"    private static final String INVALID_BOOK_ISBN \u003d \"1234567\";","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"Nanxi-Huang"},"content":"    private static final String INVALID_BOOK_GENRE \u003d \"-\";","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"GJ0407790"},"content":"    private static final String VALID_BOOK_NAME \u003d \"A Promise Lane\";","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"GJ0407790"},"content":"    private static final String VALID_BOOK_AUTHOR \u003d \"Barack Obama\";","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"GJ0407790"},"content":"    private static final String VALID_BOOK_PUBLISHER \u003d \"Crown Publishing Group\";","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"    private static final String VALID_BOOK_ISBN \u003d \"9781524763169\";","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"Nanxi-Huang"},"content":"    private static final String VALID_BOOK_GENRE \u003d \"Novel\";","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Readers \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"    private static final String INVALID_READER_NAME \u003d \"R@chel\";","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"GJ0407790"},"content":"    private static final String INVALID_READER_PHONE \u003d \"+651234\";","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"GJ0407790"},"content":"    private static final String INVALID_READER_ADDRESS \u003d \" \";","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"GJ0407790"},"content":"    private static final String INVALID_READER_EMAIL \u003d \"example.com\";","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"GJ0407790"},"content":"    private static final String INVALID_READER_TAG \u003d \"#friend\";","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"GJ0407790"},"content":"    private static final String VALID_READER_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"GJ0407790"},"content":"    private static final String VALID_READER_PHONE \u003d \"123456\";","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"GJ0407790"},"content":"    private static final String VALID_READER_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"GJ0407790"},"content":"    private static final String VALID_READER_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":"    private static final String VALID_READER_TAG_1 \u003d \"friend\";","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"GJ0407790"},"content":"    private static final String VALID_READER_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"        assertEquals(INDEX_FIRST_READER, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"        assertEquals(INDEX_FIRST_READER, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"GJ0407790"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_READER_NAME));","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":88,"author":{"gitId":"GJ0407790"},"content":"    public void parseName_invalidBookValue_throwsParseException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":89,"author":{"gitId":"GJ0407790"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_BOOK_NAME));","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"GJ0407790"},"content":"        Name expectedName \u003d new Name(VALID_READER_NAME);","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"GJ0407790"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_READER_NAME));","lastModifiedDate":"2021-03-18"},{"lineNumber":96,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":97,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":98,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"GJ0407790"},"content":"    public void parseName_validBookValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"GJ0407790"},"content":"        Name expectedName \u003d new Name(VALID_BOOK_NAME);","lastModifiedDate":"2021-03-18"},{"lineNumber":101,"author":{"gitId":"GJ0407790"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_BOOK_NAME));","lastModifiedDate":"2021-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":106,"author":{"gitId":"GJ0407790"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_READER_NAME + WHITESPACE;","lastModifiedDate":"2021-03-18"},{"lineNumber":107,"author":{"gitId":"GJ0407790"},"content":"        Name expectedName \u003d new Name(VALID_READER_NAME);","lastModifiedDate":"2021-03-18"},{"lineNumber":108,"author":{"gitId":"GJ0407790"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2021-03-18"},{"lineNumber":109,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":110,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":111,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":112,"author":{"gitId":"GJ0407790"},"content":"    public void parseName_validBookValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2021-03-18"},{"lineNumber":113,"author":{"gitId":"GJ0407790"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_BOOK_NAME + WHITESPACE;","lastModifiedDate":"2021-03-18"},{"lineNumber":114,"author":{"gitId":"GJ0407790"},"content":"        Name expectedName \u003d new Name(VALID_BOOK_NAME);","lastModifiedDate":"2021-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"GJ0407790"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_READER_PHONE));","lastModifiedDate":"2021-03-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"GJ0407790"},"content":"        Phone expectedPhone \u003d new Phone(VALID_READER_PHONE);","lastModifiedDate":"2021-03-18"},{"lineNumber":131,"author":{"gitId":"GJ0407790"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_READER_PHONE));","lastModifiedDate":"2021-03-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"GJ0407790"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_READER_PHONE + WHITESPACE;","lastModifiedDate":"2021-03-18"},{"lineNumber":137,"author":{"gitId":"GJ0407790"},"content":"        Phone expectedPhone \u003d new Phone(VALID_READER_PHONE);","lastModifiedDate":"2021-03-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":148,"author":{"gitId":"GJ0407790"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_READER_ADDRESS));","lastModifiedDate":"2021-03-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"GJ0407790"},"content":"        Address expectedAddress \u003d new Address(VALID_READER_ADDRESS);","lastModifiedDate":"2021-03-18"},{"lineNumber":154,"author":{"gitId":"GJ0407790"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_READER_ADDRESS));","lastModifiedDate":"2021-03-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"GJ0407790"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_READER_ADDRESS + WHITESPACE;","lastModifiedDate":"2021-03-18"},{"lineNumber":160,"author":{"gitId":"GJ0407790"},"content":"        Address expectedAddress \u003d new Address(VALID_READER_ADDRESS);","lastModifiedDate":"2021-03-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":171,"author":{"gitId":"GJ0407790"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_READER_EMAIL));","lastModifiedDate":"2021-03-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"GJ0407790"},"content":"        Email expectedEmail \u003d new Email(VALID_READER_EMAIL);","lastModifiedDate":"2021-03-18"},{"lineNumber":177,"author":{"gitId":"GJ0407790"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_READER_EMAIL));","lastModifiedDate":"2021-03-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"GJ0407790"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_READER_EMAIL + WHITESPACE;","lastModifiedDate":"2021-03-18"},{"lineNumber":183,"author":{"gitId":"GJ0407790"},"content":"        Email expectedEmail \u003d new Email(VALID_READER_EMAIL);","lastModifiedDate":"2021-03-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":194,"author":{"gitId":"GJ0407790"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_READER_TAG));","lastModifiedDate":"2021-03-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"GJ0407790"},"content":"        Tag expectedTag \u003d new Tag(VALID_READER_TAG_1);","lastModifiedDate":"2021-03-18"},{"lineNumber":200,"author":{"gitId":"GJ0407790"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_READER_TAG_1));","lastModifiedDate":"2021-03-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"GJ0407790"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_READER_TAG_1 + WHITESPACE;","lastModifiedDate":"2021-03-18"},{"lineNumber":206,"author":{"gitId":"GJ0407790"},"content":"        Tag expectedTag \u003d new Tag(VALID_READER_TAG_1);","lastModifiedDate":"2021-03-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":217,"author":{"gitId":"GJ0407790"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_READER_TAG_1,","lastModifiedDate":"2021-03-18"},{"lineNumber":218,"author":{"gitId":"GJ0407790"},"content":"                INVALID_READER_TAG)));","lastModifiedDate":"2021-03-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"GJ0407790"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_READER_TAG_1, VALID_READER_TAG_2));","lastModifiedDate":"2021-03-18"},{"lineNumber":229,"author":{"gitId":"GJ0407790"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_READER_TAG_1),","lastModifiedDate":"2021-03-18"},{"lineNumber":230,"author":{"gitId":"GJ0407790"},"content":"                new Tag(VALID_READER_TAG_2)));","lastModifiedDate":"2021-03-18"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":234,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":235,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":236,"author":{"gitId":"GJ0407790"},"content":"    public void parseAuthor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":237,"author":{"gitId":"GJ0407790"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAuthor((String) null));","lastModifiedDate":"2021-03-18"},{"lineNumber":238,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":239,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":240,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":241,"author":{"gitId":"GJ0407790"},"content":"    public void parseAuthor_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":242,"author":{"gitId":"GJ0407790"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAuthor(INVALID_BOOK_AUTHOR));","lastModifiedDate":"2021-03-18"},{"lineNumber":243,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":244,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":245,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":246,"author":{"gitId":"GJ0407790"},"content":"    public void parseAuthor_validValueWithoutWhitespace_returnsAuthor() throws Exception {","lastModifiedDate":"2021-03-18"},{"lineNumber":247,"author":{"gitId":"GJ0407790"},"content":"        Author expectedAuthor \u003d new Author(new Name(VALID_BOOK_AUTHOR));","lastModifiedDate":"2021-03-18"},{"lineNumber":248,"author":{"gitId":"GJ0407790"},"content":"        assertEquals(expectedAuthor, ParserUtil.parseAuthor(VALID_BOOK_AUTHOR));","lastModifiedDate":"2021-03-18"},{"lineNumber":249,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":250,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":251,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":252,"author":{"gitId":"GJ0407790"},"content":"    public void parseAuthor_validValueWithWhitespace_returnsTrimmedAuthor() throws Exception {","lastModifiedDate":"2021-03-18"},{"lineNumber":253,"author":{"gitId":"GJ0407790"},"content":"        String authorWithWhitespace \u003d WHITESPACE + VALID_BOOK_AUTHOR + WHITESPACE;","lastModifiedDate":"2021-03-18"},{"lineNumber":254,"author":{"gitId":"GJ0407790"},"content":"        Author expectedAuthor \u003d new Author(new Name(VALID_BOOK_AUTHOR));","lastModifiedDate":"2021-03-18"},{"lineNumber":255,"author":{"gitId":"GJ0407790"},"content":"        assertEquals(expectedAuthor, ParserUtil.parseAuthor(authorWithWhitespace));","lastModifiedDate":"2021-03-18"},{"lineNumber":256,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":257,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":258,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":259,"author":{"gitId":"GJ0407790"},"content":"    public void parsePublisher_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":260,"author":{"gitId":"GJ0407790"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePublisher((String) null));","lastModifiedDate":"2021-03-18"},{"lineNumber":261,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":262,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":263,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":264,"author":{"gitId":"GJ0407790"},"content":"    public void parsePublisher_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":265,"author":{"gitId":"GJ0407790"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePublisher(INVALID_BOOK_PUBLISHER));","lastModifiedDate":"2021-03-18"},{"lineNumber":266,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":267,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":268,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":269,"author":{"gitId":"GJ0407790"},"content":"    public void parsePublisher_validValueWithoutWhitespace_returnsPublisher() throws Exception {","lastModifiedDate":"2021-03-18"},{"lineNumber":270,"author":{"gitId":"GJ0407790"},"content":"        Publisher expectedPublisher \u003d new Publisher(new Name(VALID_BOOK_PUBLISHER));","lastModifiedDate":"2021-03-18"},{"lineNumber":271,"author":{"gitId":"GJ0407790"},"content":"        assertEquals(expectedPublisher, ParserUtil.parsePublisher(VALID_BOOK_PUBLISHER));","lastModifiedDate":"2021-03-18"},{"lineNumber":272,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":273,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":274,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":275,"author":{"gitId":"GJ0407790"},"content":"    public void parsePublisher_validValueWithWhitespace_returnsTrimmedPublisher() throws Exception {","lastModifiedDate":"2021-03-18"},{"lineNumber":276,"author":{"gitId":"GJ0407790"},"content":"        String publisherWithWhitespace \u003d WHITESPACE + VALID_BOOK_PUBLISHER + WHITESPACE;","lastModifiedDate":"2021-03-18"},{"lineNumber":277,"author":{"gitId":"GJ0407790"},"content":"        Publisher expectedPublisher \u003d new Publisher(new Name(VALID_BOOK_PUBLISHER));","lastModifiedDate":"2021-03-18"},{"lineNumber":278,"author":{"gitId":"GJ0407790"},"content":"        assertEquals(expectedPublisher, ParserUtil.parsePublisher(publisherWithWhitespace));","lastModifiedDate":"2021-03-18"},{"lineNumber":279,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":280,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":281,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":282,"author":{"gitId":"GJ0407790"},"content":"    public void parseIsbn_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":283,"author":{"gitId":"GJ0407790"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseIsbn((String) null));","lastModifiedDate":"2021-03-18"},{"lineNumber":284,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":285,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":286,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":287,"author":{"gitId":"GJ0407790"},"content":"    public void parseIsbn_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":288,"author":{"gitId":"GJ0407790"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIsbn(INVALID_BOOK_ISBN));","lastModifiedDate":"2021-03-18"},{"lineNumber":289,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":290,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":291,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":292,"author":{"gitId":"GJ0407790"},"content":"    public void parseIsbn_validValueWithoutWhitespace_returnsIsbn() throws Exception {","lastModifiedDate":"2021-03-18"},{"lineNumber":293,"author":{"gitId":"GJ0407790"},"content":"        Isbn expectedIsbn \u003d new Isbn(VALID_BOOK_ISBN);","lastModifiedDate":"2021-03-18"},{"lineNumber":294,"author":{"gitId":"GJ0407790"},"content":"        assertEquals(expectedIsbn, ParserUtil.parseIsbn(VALID_BOOK_ISBN));","lastModifiedDate":"2021-03-18"},{"lineNumber":295,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":296,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":297,"author":{"gitId":"GJ0407790"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":298,"author":{"gitId":"GJ0407790"},"content":"    public void parseIsbn_validValueWithWhitespace_returnsTrimmedIsbn() throws Exception {","lastModifiedDate":"2021-03-18"},{"lineNumber":299,"author":{"gitId":"GJ0407790"},"content":"        String isbnWithWhitespace \u003d WHITESPACE + VALID_BOOK_ISBN + WHITESPACE;","lastModifiedDate":"2021-03-18"},{"lineNumber":300,"author":{"gitId":"GJ0407790"},"content":"        Isbn expectedIsbn \u003d new Isbn(VALID_BOOK_ISBN);","lastModifiedDate":"2021-03-18"},{"lineNumber":301,"author":{"gitId":"GJ0407790"},"content":"        assertEquals(expectedIsbn, ParserUtil.parseIsbn(isbnWithWhitespace));","lastModifiedDate":"2021-03-18"},{"lineNumber":302,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":303,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":304,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":305,"author":{"gitId":"Nanxi-Huang"},"content":"    public void parseGenre_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":306,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAuthor(INVALID_BOOK_GENRE));","lastModifiedDate":"2021-03-23"},{"lineNumber":307,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":308,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":309,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":310,"author":{"gitId":"Nanxi-Huang"},"content":"    public void parseGenre_validValueWithoutWhitespace_returnsGenre() throws Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":311,"author":{"gitId":"Nanxi-Huang"},"content":"        Genre expectedGenre \u003d new Genre(new Name(VALID_BOOK_GENRE));","lastModifiedDate":"2021-03-23"},{"lineNumber":312,"author":{"gitId":"Nanxi-Huang"},"content":"        assertEquals(expectedGenre, ParserUtil.parseGenre(VALID_BOOK_GENRE));","lastModifiedDate":"2021-03-23"},{"lineNumber":313,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":314,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":315,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":316,"author":{"gitId":"Nanxi-Huang"},"content":"    public void parseGenre_validValueWithWhitespace_returnsTrimmedGenre() throws Exception {","lastModifiedDate":"2021-03-23"},{"lineNumber":317,"author":{"gitId":"Nanxi-Huang"},"content":"        String genreWithWhitespace \u003d WHITESPACE + VALID_BOOK_GENRE + WHITESPACE;","lastModifiedDate":"2021-03-23"},{"lineNumber":318,"author":{"gitId":"Nanxi-Huang"},"content":"        Genre expectedGenre \u003d new Genre(new Name(VALID_BOOK_GENRE));","lastModifiedDate":"2021-03-23"},{"lineNumber":319,"author":{"gitId":"Nanxi-Huang"},"content":"        assertEquals(expectedGenre, ParserUtil.parseGenre(genreWithWhitespace));","lastModifiedDate":"2021-03-23"},{"lineNumber":320,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"},{"lineNumber":322,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"arsatis":3,"Nanxi-Huang":21,"GJ0407790":146,"gycc7253":8,"-":144}},{"path":"src/test/java/seedu/smartlib/logic/parser/SmartLibParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.logic.parser;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.testutil.TypicalIndexes.INDEX_FIRST_READER;","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.logic.commands.AddReaderCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.logic.commands.DeleteReaderCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.EditCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.logic.commands.FindReaderCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.logic.commands.ListReaderCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-02-19"},{"lineNumber":25,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-02-19"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.testutil.EditReaderDescriptorBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.testutil.ReaderBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.testutil.ReaderUtil;","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"gycc7253"},"content":"public class SmartLibParserTest {","lastModifiedDate":"2021-02-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"    private final SmartLibParser parser \u003d new SmartLibParser();","lastModifiedDate":"2021-02-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"        Reader reader \u003d new ReaderBuilder().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"        AddReaderCommand command \u003d (AddReaderCommand) parser.parseCommand(ReaderUtil.getAddCommand(reader));","lastModifiedDate":"2021-03-07"},{"lineNumber":39,"author":{"gitId":"Nanxi-Huang"},"content":"        assertEquals(new AddReaderCommand(reader), command);","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"Nanxi-Huang"},"content":"        DeleteReaderCommand command \u003d (DeleteReaderCommand) parser.parseCommand(","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"                DeleteReaderCommand.COMMAND_WORD + \" \" + INDEX_FIRST_READER.getOneBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"        assertEquals(new DeleteReaderCommand(INDEX_FIRST_READER), command);","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"        Reader reader \u003d new ReaderBuilder().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"        EditCommand.EditReaderDescriptor descriptor \u003d new EditReaderDescriptorBuilder(reader).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"                + INDEX_FIRST_READER.getOneBased() + \" \" + ReaderUtil.getEditReaderDescriptorDetails(descriptor));","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_READER, descriptor), command);","lastModifiedDate":"2021-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"        FindReaderCommand command \u003d (FindReaderCommand) parser.parseCommand(","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"                FindReaderCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"        assertEquals(new FindReaderCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"        assertTrue(parser.parseCommand(ListReaderCommand.COMMAND_WORD) instanceof ListReaderCommand);","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"        assertTrue(parser.parseCommand(ListReaderCommand.COMMAND_WORD + \" 3\") instanceof ListReaderCommand);","lastModifiedDate":"2021-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"gycc7253"},"content":"    @Test","lastModifiedDate":"2021-03-06"},{"lineNumber":91,"author":{"gitId":"gycc7253"},"content":"    public void parseCommand_borrow() throws Exception {","lastModifiedDate":"2021-03-06"},{"lineNumber":92,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-06"},{"lineNumber":93,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"arsatis":19,"Nanxi-Huang":4,"gycc7253":17,"-":64}},{"path":"src/test/java/seedu/smartlib/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.model.Model.PREDICATE_SHOW_ALL_READERS;","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.ALICE;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.BENSON;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.GuiSettings;","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.testutil.SmartLibBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"        assertEquals(new SmartLib(), new SmartLib(modelManager.getSmartLib()));","lastModifiedDate":"2021-02-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"        userPrefs.setSmartLibFilePath(Paths.get(\"smartLib/file/path\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"        userPrefs.setSmartLibFilePath(Paths.get(\"new/smartLib/file/path\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"    public void setSmartLibFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setSmartLibFilePath(null));","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"    public void setSmartLibFilePath_validPath_setsSmartLibFilePath() {","lastModifiedDate":"2021-03-07"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"        Path path \u003d Paths.get(\"smartLib/file/path\");","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"        modelManager.setSmartLibFilePath(path);","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"        assertEquals(path, modelManager.getSmartLibFilePath());","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"    public void hasReader_nullReader_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"    public void hasReader_readerNotInSmartLib_returnsFalse() {","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(modelManager.hasReader(ALICE));","lastModifiedDate":"2021-03-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"    public void hasReader_readerInSmartLib_returnsTrue() {","lastModifiedDate":"2021-03-07"},{"lineNumber":86,"author":{"gitId":"Nanxi-Huang"},"content":"        modelManager.addReader(ALICE);","lastModifiedDate":"2021-03-06"},{"lineNumber":87,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(modelManager.hasReader(ALICE));","lastModifiedDate":"2021-03-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"    public void getFilteredReaderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredReaderList().remove(0));","lastModifiedDate":"2021-03-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"        SmartLib smartLib \u003d new SmartLibBuilder().withReader(ALICE).withReader(BENSON).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"gycc7253"},"content":"        SmartLib differentSmartLib \u003d new SmartLib();","lastModifiedDate":"2021-02-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"gycc7253"},"content":"        modelManager \u003d new ModelManager(smartLib, userPrefs);","lastModifiedDate":"2021-02-19"},{"lineNumber":103,"author":{"gitId":"gycc7253"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(smartLib, userPrefs);","lastModifiedDate":"2021-02-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"arsatis"},"content":"        // different smartLib -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"gycc7253"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentSmartLib, userPrefs)));","lastModifiedDate":"2021-02-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"arsatis"},"content":"        String[] keywords \u003d ALICE.getName().toString().split(\"\\\\s+\");","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"arsatis"},"content":"        modelManager.updateFilteredReaderList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-03-07"},{"lineNumber":121,"author":{"gitId":"gycc7253"},"content":"        assertFalse(modelManager.equals(new ModelManager(smartLib, userPrefs)));","lastModifiedDate":"2021-02-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"arsatis"},"content":"        modelManager.updateFilteredReaderList(PREDICATE_SHOW_ALL_READERS);","lastModifiedDate":"2021-03-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"arsatis"},"content":"        differentUserPrefs.setSmartLibFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-03-07"},{"lineNumber":129,"author":{"gitId":"gycc7253"},"content":"        assertFalse(modelManager.equals(new ModelManager(smartLib, differentUserPrefs)));","lastModifiedDate":"2021-02-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"arsatis":20,"Nanxi-Huang":4,"GJ0407790":2,"gycc7253":11,"-":94}},{"path":"src/test/java/seedu/smartlib/model/SmartLibTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.ALICE;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.getTypicalSmartLib;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Barcode;","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.exceptions.DuplicateReaderException;","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.DateBorrowed;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.Record;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.testutil.ReaderBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"gycc7253"},"content":"public class SmartLibTest {","lastModifiedDate":"2021-02-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"    private final SmartLib smartLib \u003d new SmartLib();","lastModifiedDate":"2021-02-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"        assertEquals(Collections.emptyList(), smartLib.getReaderList());","lastModifiedDate":"2021-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"gycc7253"},"content":"        assertThrows(NullPointerException.class, () -\u003e smartLib.resetData(null));","lastModifiedDate":"2021-02-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"    public void resetData_withValidReadOnlySmartLib_replacesData() {","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"        SmartLib newData \u003d getTypicalSmartLib();","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"        smartLib.resetData(newData);","lastModifiedDate":"2021-02-19"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"        assertEquals(newData, smartLib);","lastModifiedDate":"2021-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"    public void resetData_withDuplicateReaders_throwsDuplicateReaderException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"        // Two readers with the same identity fields","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"        Reader editedAlice \u003d new ReaderBuilder(ALICE)","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"                .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"gycc7253"},"content":"        List\u003cReader\u003e newReaders \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-02-19"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"        Record record \u003d new Record(","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"GJ0407790"},"content":"                new Barcode(Barcode.MAX_VALUE), new Name(\"Alex Yeoh\"), new DateBorrowed(\"2021-01-22T23:30:00\")","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"        );","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"gycc7253"},"content":"        List\u003cRecord\u003e newRecords \u003d Arrays.asList(record, record);","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"gycc7253"},"content":"        SmartLibStub newData \u003d new SmartLibStub(newRecords, newReaders);","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"        assertThrows(DuplicateReaderException.class, () -\u003e smartLib.resetData(newData));","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"    public void hasReader_nullReader_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"    public void hasReader_readerNotInSmartLib_returnsFalse() {","lastModifiedDate":"2021-03-07"},{"lineNumber":76,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(smartLib.hasReader(ALICE));","lastModifiedDate":"2021-03-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"    public void hasReader_readerInSmartLib_returnsTrue() {","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"Nanxi-Huang"},"content":"        smartLib.addReader(ALICE);","lastModifiedDate":"2021-03-06"},{"lineNumber":82,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(smartLib.hasReader(ALICE));","lastModifiedDate":"2021-03-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"    public void hasReader_readerWithSameIdentityFieldsInSmartLib_returnsTrue() {","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"Nanxi-Huang"},"content":"        smartLib.addReader(ALICE);","lastModifiedDate":"2021-03-06"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"        Reader editedAlice \u003d new ReaderBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(smartLib.hasReader(editedAlice));","lastModifiedDate":"2021-03-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"    public void getReaderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e smartLib.getReaderList().remove(0));","lastModifiedDate":"2021-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"arsatis"},"content":"     * A stub ReadOnlySmartLib whose reader list can violate interface constraints.","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"gycc7253"},"content":"    private static class SmartLibStub implements ReadOnlySmartLib {","lastModifiedDate":"2021-02-19"},{"lineNumber":102,"author":{"gitId":"GJ0407790"},"content":"        private final ObservableList\u003cBook\u003e books \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"gycc7253"},"content":"        private final ObservableList\u003cReader\u003e readers \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-02-19"},{"lineNumber":104,"author":{"gitId":"gycc7253"},"content":"        private final ObservableList\u003cRecord\u003e records \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"gycc7253"},"content":"        SmartLibStub(Collection\u003cRecord\u003e records, Collection\u003cReader\u003e readers) {","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"gycc7253"},"content":"            this.records.setAll(records);","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"gycc7253"},"content":"            this.readers.setAll(readers);","lastModifiedDate":"2021-02-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"GJ0407790"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"GJ0407790"},"content":"        public ObservableList\u003cBook\u003e getBookList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"GJ0407790"},"content":"            return books;","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"arsatis"},"content":"        public ObservableList\u003cReader\u003e getReaderList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":118,"author":{"gitId":"gycc7253"},"content":"            return readers;","lastModifiedDate":"2021-02-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"gycc7253"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"gycc7253"},"content":"        public ObservableList\u003cRecord\u003e getRecordList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":123,"author":{"gitId":"gycc7253"},"content":"            return records;","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"arsatis":25,"Nanxi-Huang":5,"GJ0407790":10,"gycc7253":28,"-":59}},{"path":"src/test/java/seedu/smartlib/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"    public void setSmartLibFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setSmartLibFilePath(null));","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"arsatis":2,"gycc7253":2,"-":17}},{"path":"src/test/java/seedu/smartlib/model/book/AuthorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"package seedu.smartlib.model.book;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"Nanxi-Huang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Nanxi-Huang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Nanxi-Huang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"public class AuthorTest {","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Nanxi-Huang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Author(new Name(null)));","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"Nanxi-Huang"},"content":"    public void constructor_invalidAuthor_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Author(new Name(\"\")));","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"Nanxi-Huang"},"content":"    public void isValidAuthor() {","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"Nanxi-Huang"},"content":"        // null author","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(NullPointerException.class, () -\u003e Author.isValidAuthor(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"Nanxi-Huang"},"content":"        // invalid author","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Author.isValidAuthor(\"\")); // empty string","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Author.isValidAuthor(\" \")); // spaces only","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Author.isValidAuthor(\"Лев Николаевич Толстой\")); // non-English author name","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Author.isValidAuthor(\"Stephen-King\")); // author name with special characters","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Author.isValidAuthor(\".\")); // author name with characters only","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Author.isValidAuthor(\" Brandon Sanderson\")); // author name starting with spaces","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"Nanxi-Huang"},"content":"        // valid author","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(Author.isValidAuthor(\"J K Rowling\")); // author name with spaces","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(Author.isValidAuthor(\"Stephen King \")); // author name with trailing spaces","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(Author.isValidAuthor(\"Aleksey Nikolayevich Tolstoy\")); // very long author name","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(Author.isValidAuthor(\"A\")); // one character author name","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"GJ0407790"},"content":"}","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"Nanxi-Huang":39,"GJ0407790":4}},{"path":"src/test/java/seedu/smartlib/model/book/BookNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nanxi-Huang"},"content":"package seedu.smartlib.model.book;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"Nanxi-Huang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Nanxi-Huang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Nanxi-Huang"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Nanxi-Huang"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Nanxi-Huang"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Nanxi-Huang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.testutil.BookBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Nanxi-Huang"},"content":"public class BookNameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"Nanxi-Huang"},"content":"    public void equals() {","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"Nanxi-Huang"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"Nanxi-Huang"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"Nanxi-Huang"},"content":"        BookNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Nanxi-Huang"},"content":"                new BookNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"Nanxi-Huang"},"content":"        BookNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"Nanxi-Huang"},"content":"                new BookNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"Nanxi-Huang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"Nanxi-Huang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"Nanxi-Huang"},"content":"        BookNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"Nanxi-Huang"},"content":"                new BookNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"Nanxi-Huang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"Nanxi-Huang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"Nanxi-Huang"},"content":"        // different book -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"Nanxi-Huang"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"Nanxi-Huang"},"content":"        // One keyword","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"Nanxi-Huang"},"content":"        BookNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"Nanxi-Huang"},"content":"                new BookNameContainsKeywordsPredicate(Collections.singletonList(\"Harry\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(predicate.test(new BookBuilder().withName(\"Harry Potter\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"Nanxi-Huang"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"Nanxi-Huang"},"content":"        predicate \u003d new BookNameContainsKeywordsPredicate(Arrays.asList(\"Harry\", \"Potter\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(predicate.test(new BookBuilder().withName(\"Harry Potter\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"Nanxi-Huang"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"Nanxi-Huang"},"content":"        predicate \u003d new BookNameContainsKeywordsPredicate(Arrays.asList(\"Maze\", \"Hobbit\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(predicate.test(new BookBuilder().withName(\"Harry Hobbit\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"Nanxi-Huang"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"Nanxi-Huang"},"content":"        predicate \u003d new BookNameContainsKeywordsPredicate(Arrays.asList(\"HaRrY\", \"pOtTeR\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(predicate.test(new BookBuilder().withName(\"Harry Potter\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"Nanxi-Huang"},"content":"        // Keywords match author, but does not match book name","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"Nanxi-Huang"},"content":"        predicate \u003d new BookNameContainsKeywordsPredicate(","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"Nanxi-Huang"},"content":"                Arrays.asList(\"Rowling\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":66,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(predicate.test(new BookBuilder().withName(\"Harry\").withAuthor(\"Rowling\")","lastModifiedDate":"2021-03-26"},{"lineNumber":67,"author":{"gitId":"Nanxi-Huang"},"content":"                .withPublisher(\"Bloomsbury\").withIsbn(\"1234567890123\").withGenre(\"Fantasy\").build()));","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"Nanxi-Huang"},"content":"        // Keywords match publisher, but does not match book name","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"Nanxi-Huang"},"content":"        predicate \u003d new BookNameContainsKeywordsPredicate(","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"Nanxi-Huang"},"content":"                Arrays.asList(\"Bloomsbury\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(predicate.test(new BookBuilder().withName(\"Harry\").withAuthor(\"Rowling\")","lastModifiedDate":"2021-03-26"},{"lineNumber":73,"author":{"gitId":"Nanxi-Huang"},"content":"                .withPublisher(\"Bloomsbury\").withIsbn(\"1234567890123\").withGenre(\"Fantasy\").build()));","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":75,"author":{"gitId":"Nanxi-Huang"},"content":"        // Keywords match isbn, but does not match book name","lastModifiedDate":"2021-03-26"},{"lineNumber":76,"author":{"gitId":"Nanxi-Huang"},"content":"        predicate \u003d new BookNameContainsKeywordsPredicate(","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"Nanxi-Huang"},"content":"                Arrays.asList(\"1234567890123\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(predicate.test(new BookBuilder().withName(\"Harry\").withAuthor(\"Rowling\")","lastModifiedDate":"2021-03-26"},{"lineNumber":79,"author":{"gitId":"Nanxi-Huang"},"content":"                .withPublisher(\"Bloomsbury\").withIsbn(\"1234567890123\").withGenre(\"Fantasy\").build()));","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":81,"author":{"gitId":"Nanxi-Huang"},"content":"        // Keywords match genre, but does not match name","lastModifiedDate":"2021-03-26"},{"lineNumber":82,"author":{"gitId":"Nanxi-Huang"},"content":"        predicate \u003d new BookNameContainsKeywordsPredicate(","lastModifiedDate":"2021-03-26"},{"lineNumber":83,"author":{"gitId":"Nanxi-Huang"},"content":"                Arrays.asList(\"Fantasy\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":84,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(predicate.test(new BookBuilder().withName(\"Harry\").withAuthor(\"Rowling\")","lastModifiedDate":"2021-03-26"},{"lineNumber":85,"author":{"gitId":"Nanxi-Huang"},"content":"                .withPublisher(\"Bloomsbury\").withIsbn(\"1234567890123\").withGenre(\"Fantasy\").build()));","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"Nanxi-Huang"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"Nanxi-Huang"},"content":"        // Zero keywords","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"Nanxi-Huang"},"content":"        BookNameContainsKeywordsPredicate predicate \u003d new BookNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(predicate.test(new BookBuilder().withName(\"Harry\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"Nanxi-Huang"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"Nanxi-Huang"},"content":"        predicate \u003d new BookNameContainsKeywordsPredicate(Arrays.asList(\"Hobbit\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(predicate.test(new BookBuilder().withName(\"Harry Potter\").build()));","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"Nanxi-Huang"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"Nanxi-Huang":101}},{"path":"src/test/java/seedu/smartlib/model/book/BookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"package seedu.smartlib.model.book;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"Nanxi-Huang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Nanxi-Huang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_AUTHOR_HARRY;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_ISBN_HARRY;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_NAME_MAZE;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_PUBLISHER_HARRY;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.testutil.TypicalModels.HARRY_PORTER;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.testutil.TypicalModels.MAZE;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"Nanxi-Huang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.testutil.BookBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"public class BookTest {","lastModifiedDate":"2021-03-05"},{"lineNumber":17,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"Nanxi-Huang"},"content":"    public void isSameBook() {","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"Nanxi-Huang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(HARRY_PORTER.isSameBook(HARRY_PORTER));","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"Nanxi-Huang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(HARRY_PORTER.isSameBook(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"Nanxi-Huang"},"content":"        // same book name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"Nanxi-Huang"},"content":"        Book editedHarry \u003d new BookBuilder(HARRY_PORTER).withAuthor(VALID_AUTHOR_HARRY)","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"Nanxi-Huang"},"content":"                .withPublisher(VALID_PUBLISHER_HARRY).withIsbn(VALID_ISBN_HARRY).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(HARRY_PORTER.isSameBook(editedHarry));","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"Nanxi-Huang"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"Nanxi-Huang"},"content":"        editedHarry \u003d new BookBuilder(HARRY_PORTER).withName(VALID_NAME_MAZE).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(HARRY_PORTER.isSameBook(editedHarry));","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"Nanxi-Huang"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"Nanxi-Huang"},"content":"        Book editedMaze \u003d new BookBuilder(MAZE).withName(VALID_NAME_MAZE.toLowerCase()).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(MAZE.isSameBook(editedMaze));","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"Nanxi-Huang"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"Nanxi-Huang"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_MAZE + \" \";","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"Nanxi-Huang"},"content":"        editedMaze \u003d new BookBuilder(MAZE).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(MAZE.isSameBook(editedMaze));","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"GJ0407790"},"content":"}","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"Nanxi-Huang":41,"GJ0407790":4}},{"path":"src/test/java/seedu/smartlib/model/book/GenreTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nanxi-Huang"},"content":"package seedu.smartlib.model.book;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"Nanxi-Huang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Nanxi-Huang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Nanxi-Huang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"Nanxi-Huang"},"content":"public class GenreTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Nanxi-Huang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Genre(new Name(null)));","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"Nanxi-Huang"},"content":"    public void constructor_invalidGenre_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Genre(new Name(\"\")));","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"Nanxi-Huang"},"content":"    public void isValidGenre() {","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"Nanxi-Huang"},"content":"        // null genre","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(NullPointerException.class, () -\u003e Genre.isValidGenre(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"Nanxi-Huang"},"content":"        // invalid genre","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Genre.isValidGenre(\"\")); // empty string","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Genre.isValidGenre(\" \")); // spaces only","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Genre.isValidGenre(\"科幻\")); // non-English genre name","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Genre.isValidGenre(\"Sci-Fi\")); // genre name with special characters","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Genre.isValidGenre(\"-\")); // genre name with character only","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Genre.isValidGenre(\" Comic\")); // genre name with leading space","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"Nanxi-Huang"},"content":"        // valid genre","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(Genre.isValidGenre(\"Young Adult Fantasy\")); // genre name with space","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(Genre.isValidGenre(\"Young Adult African American Nonfiction\")); // very long genre name","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(Genre.isValidGenre(\"G\")); // one character genre name","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(Genre.isValidGenre(\"Suspense \")); // genre name with trailing space","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(Genre.isValidGenre(\"Comic Series 1\")); // genre name with digits","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"Nanxi-Huang"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"Nanxi-Huang":45}},{"path":"src/test/java/seedu/smartlib/model/book/IsbnTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"package seedu.smartlib.model.book;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"Nanxi-Huang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Nanxi-Huang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Nanxi-Huang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"public class IsbnTest {","lastModifiedDate":"2021-03-05"},{"lineNumber":10,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"Nanxi-Huang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Isbn(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"Nanxi-Huang"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"Nanxi-Huang"},"content":"        String invalidIsbn \u003d \"\";","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Isbn(invalidIsbn));","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"Nanxi-Huang"},"content":"    public void isValidIsbn() {","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"Nanxi-Huang"},"content":"        // null Isbn","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(NullPointerException.class, () -\u003e Isbn.isValidIsbn(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"Nanxi-Huang"},"content":"        // invalid Isbn numbers","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Isbn.isValidIsbn(\"\")); // empty string","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Isbn.isValidIsbn(\" \")); // spaces only","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Isbn.isValidIsbn(\"91\")); // less than 13 numbers","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Isbn.isValidIsbn(\"aaaaaaaaaaaaa\")); // non-numeric with alphabets only","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Isbn.isValidIsbn(\"/////////////\")); // non-numeric with special characters only","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Isbn.isValidIsbn(\"isbn123456789\")); // alphabets within digits","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Isbn.isValidIsbn(\"1234 56789012\")); // spaces within digits","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Isbn.isValidIsbn(\"1234-56789012\")); // characters within digits","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Isbn.isValidIsbn(\"1234567890123456\")); // longer than 13 digits","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Isbn.isValidIsbn(\"1234567890123 \")); // exactly 13 digits with trailing spaces","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Isbn.isValidIsbn(\" 1234567890123\")); // exactly 13 digits starting with spaces","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"Nanxi-Huang"},"content":"        // valid Isbn numbers","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(Isbn.isValidIsbn(\"1234567890123\")); // exactly 13 digits","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(Isbn.isValidIsbn(\"9312153445782\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(Isbn.isValidIsbn(\"1242938420331\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"GJ0407790"},"content":"}","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"Nanxi-Huang":41,"GJ0407790":4}},{"path":"src/test/java/seedu/smartlib/model/book/PublisherTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"package seedu.smartlib.model.book;","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"Nanxi-Huang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Nanxi-Huang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Nanxi-Huang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"public class PublisherTest {","lastModifiedDate":"2021-03-05"},{"lineNumber":12,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Nanxi-Huang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Publisher(new Name(null)));","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"Nanxi-Huang"},"content":"    public void constructor_invalidPublisher_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Publisher(new Name(\"\")));","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"Nanxi-Huang"},"content":"    public void isValidPublisher() {","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"Nanxi-Huang"},"content":"        // null publisher","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(NullPointerException.class, () -\u003e Publisher.isValidPublisher(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"Nanxi-Huang"},"content":"        // invalid publisher","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Publisher.isValidPublisher(\"\")); // empty string","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Publisher.isValidPublisher(\" \")); // spaces only","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Publisher.isValidPublisher(\"北京出版社\")); // non-English publisher name","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Publisher.isValidPublisher(\"Bloomsbury.Children\")); // publisher name with special characters","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Publisher.isValidPublisher(\".\")); // publisher name with characters only","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(Publisher.isValidPublisher(\" Bloomsbury\")); // publisher name starting with space","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"Nanxi-Huang"},"content":"        // valid publisher","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(Publisher.isValidPublisher(\"Penguin Random House\")); // publisher name with space","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(Publisher.isValidPublisher(\"Houghton Mifflin and Harcourt\")); // very long publisher name","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(Publisher.isValidPublisher(\"P\")); // one character publisher name","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(Publisher.isValidPublisher(\"HarperCollins \")); // publisher name with trailing space","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(Publisher.isValidPublisher(\"Scholastic 2002\")); // publisher name with digits","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"GJ0407790"},"content":"}","lastModifiedDate":"2021-03-05"}],"authorContributionMap":{"Nanxi-Huang":42,"GJ0407790":4}},{"path":"src/test/java/seedu/smartlib/model/book/UniqueBookListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nanxi-Huang"},"content":"package seedu.smartlib.model.book;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"Nanxi-Huang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"Nanxi-Huang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"Nanxi-Huang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_AUTHOR_HARRY;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_AUTHOR_MAZE;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_GENRE_HARRY;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_PUBLISHER_HARRY;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.testutil.TypicalModels.HARRY_PORTER;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.testutil.TypicalModels.MAZE;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"Nanxi-Huang"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"Nanxi-Huang"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"Nanxi-Huang"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"Nanxi-Huang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.model.book.exceptions.BookNotFoundException;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.model.book.exceptions.DuplicateBookException;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.testutil.BookBuilder;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"Nanxi-Huang"},"content":"public class UniqueBookListTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"Nanxi-Huang"},"content":"    private final UniqueBookList uniqueBookList \u003d new UniqueBookList();","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"Nanxi-Huang"},"content":"    public void contains_nullBook_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueBookList.contains(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"Nanxi-Huang"},"content":"    public void contains_bookNotInList_returnsFalse() {","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(uniqueBookList.contains(HARRY_PORTER));","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"Nanxi-Huang"},"content":"    public void contains_bookInList_returnsTrue() {","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueBookList.addBook(HARRY_PORTER);","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(uniqueBookList.contains(HARRY_PORTER));","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"Nanxi-Huang"},"content":"    public void contains_bookWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueBookList.addBook(HARRY_PORTER);","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"Nanxi-Huang"},"content":"        Book editedBook \u003d new BookBuilder(HARRY_PORTER).withAuthor(VALID_AUTHOR_HARRY)","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"Nanxi-Huang"},"content":"                .withPublisher(VALID_PUBLISHER_HARRY).withGenre(VALID_GENRE_HARRY).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(uniqueBookList.contains(editedBook));","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"Nanxi-Huang"},"content":"    public void add_nullBook_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueBookList.addBook(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"Nanxi-Huang"},"content":"    public void add_duplicateBook_throwsDuplicateBookException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueBookList.addBook(HARRY_PORTER);","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(DuplicateBookException.class, () -\u003e uniqueBookList.addBook(HARRY_PORTER));","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"Nanxi-Huang"},"content":"    public void setBook_nullTargetBook_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueBookList.setBook(null, HARRY_PORTER));","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"Nanxi-Huang"},"content":"    public void setBook_nullEditedBook_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueBookList.setBook(HARRY_PORTER, null));","lastModifiedDate":"2021-03-23"},{"lineNumber":72,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"Nanxi-Huang"},"content":"    public void setBook_targetBookNotInList_throwsBookNotFoundException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(BookNotFoundException.class, () -\u003e uniqueBookList.setBook(HARRY_PORTER, HARRY_PORTER));","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"Nanxi-Huang"},"content":"    public void setBook_editedBookIsSameBook_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueBookList.addBook(HARRY_PORTER);","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueBookList.setBook(HARRY_PORTER, HARRY_PORTER);","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"Nanxi-Huang"},"content":"        UniqueBookList expectedUniqueBookList \u003d new UniqueBookList();","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"Nanxi-Huang"},"content":"        expectedUniqueBookList.addBook(HARRY_PORTER);","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"Nanxi-Huang"},"content":"        assertEquals(expectedUniqueBookList, uniqueBookList);","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"Nanxi-Huang"},"content":"    public void setBook_editedBookHasSameIdentity_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueBookList.addBook(HARRY_PORTER);","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"Nanxi-Huang"},"content":"        Book editedHarry \u003d new BookBuilder(HARRY_PORTER).withAuthor(VALID_AUTHOR_MAZE)","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"Nanxi-Huang"},"content":"                .withPublisher(VALID_PUBLISHER_HARRY).withGenre(VALID_GENRE_HARRY).build();","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueBookList.setBook(HARRY_PORTER, editedHarry);","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"Nanxi-Huang"},"content":"        UniqueBookList expectedUniqueBookList \u003d new UniqueBookList();","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"Nanxi-Huang"},"content":"        expectedUniqueBookList.addBook(editedHarry);","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"Nanxi-Huang"},"content":"        assertEquals(expectedUniqueBookList, uniqueBookList);","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"Nanxi-Huang"},"content":"    public void setBook_editedBookHasDifferentIdentity_success() {","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueBookList.addBook(HARRY_PORTER);","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueBookList.setBook(HARRY_PORTER, MAZE);","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"Nanxi-Huang"},"content":"        UniqueBookList expectedUniqueBookList \u003d new UniqueBookList();","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"Nanxi-Huang"},"content":"        expectedUniqueBookList.addBook(MAZE);","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"Nanxi-Huang"},"content":"        assertEquals(expectedUniqueBookList, uniqueBookList);","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"Nanxi-Huang"},"content":"    public void setBook_editedBookHasNonUniqueIdentity_throwsDuplicateBookException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueBookList.addBook(HARRY_PORTER);","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueBookList.addBook(MAZE);","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(DuplicateBookException.class, () -\u003e uniqueBookList.setBook(HARRY_PORTER, MAZE));","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"Nanxi-Huang"},"content":"    public void remove_nullBook_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueBookList.remove(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"Nanxi-Huang"},"content":"    public void remove_bookDoesNotExist_throwsBookNotFoundException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(BookNotFoundException.class, () -\u003e uniqueBookList.remove(HARRY_PORTER));","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"Nanxi-Huang"},"content":"    public void remove_existingBook_removesBook() {","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueBookList.addBook(HARRY_PORTER);","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueBookList.remove(HARRY_PORTER);","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"Nanxi-Huang"},"content":"        UniqueBookList expectedUniqueBookList \u003d new UniqueBookList();","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"Nanxi-Huang"},"content":"        assertEquals(expectedUniqueBookList, uniqueBookList);","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"Nanxi-Huang"},"content":"    public void setBooks_nullUniqueBookList_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueBookList.setBooks((UniqueBookList) null));","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"Nanxi-Huang"},"content":"    public void setBooks_uniqueBookList_replacesOwnListWithProvidedUniqueBookList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueBookList.addBook(HARRY_PORTER);","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"Nanxi-Huang"},"content":"        UniqueBookList expectedUniqueBookList \u003d new UniqueBookList();","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"Nanxi-Huang"},"content":"        expectedUniqueBookList.addBook(HARRY_PORTER);","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueBookList.setBooks(expectedUniqueBookList);","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"Nanxi-Huang"},"content":"        assertEquals(expectedUniqueBookList, uniqueBookList);","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":146,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":148,"author":{"gitId":"Nanxi-Huang"},"content":"    public void setBooks_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":149,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueBookList.setBooks((List\u003cBook\u003e) null));","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":151,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":152,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":153,"author":{"gitId":"Nanxi-Huang"},"content":"    public void setBooks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-23"},{"lineNumber":154,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueBookList.addBook(HARRY_PORTER);","lastModifiedDate":"2021-03-23"},{"lineNumber":155,"author":{"gitId":"Nanxi-Huang"},"content":"        List\u003cBook\u003e bookList \u003d Collections.singletonList(MAZE);","lastModifiedDate":"2021-03-23"},{"lineNumber":156,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueBookList.setBooks(bookList);","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"Nanxi-Huang"},"content":"        UniqueBookList expectedUniqueBookList \u003d new UniqueBookList();","lastModifiedDate":"2021-03-23"},{"lineNumber":158,"author":{"gitId":"Nanxi-Huang"},"content":"        expectedUniqueBookList.addBook(MAZE);","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"Nanxi-Huang"},"content":"        assertEquals(expectedUniqueBookList, uniqueBookList);","lastModifiedDate":"2021-03-23"},{"lineNumber":160,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":161,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"Nanxi-Huang"},"content":"    public void setBooks_listWithDuplicateBooks_throwsDuplicateBookException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":164,"author":{"gitId":"Nanxi-Huang"},"content":"        List\u003cBook\u003e listWithDuplicateBooks \u003d Arrays.asList(HARRY_PORTER, HARRY_PORTER);","lastModifiedDate":"2021-03-23"},{"lineNumber":165,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(DuplicateBookException.class, () -\u003e uniqueBookList.setBooks(listWithDuplicateBooks));","lastModifiedDate":"2021-03-23"},{"lineNumber":166,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":167,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":168,"author":{"gitId":"Nanxi-Huang"},"content":"    @Test","lastModifiedDate":"2021-03-23"},{"lineNumber":169,"author":{"gitId":"Nanxi-Huang"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":170,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-03-23"},{"lineNumber":171,"author":{"gitId":"Nanxi-Huang"},"content":"            -\u003e uniqueBookList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-03-23"},{"lineNumber":172,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":173,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":174,"author":{"gitId":"Nanxi-Huang"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"Nanxi-Huang":174}},{"path":"src/test/java/seedu/smartlib/model/reader/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"gycc7253":2,"-":34}},{"path":"src/test/java/seedu/smartlib/model/reader/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\"));","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"!#$%\u0026\u0027*+/\u003d?`{|}~^.-@example.org\")); // special characters local part","lastModifiedDate":"2018-02-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be!@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"gycc7253":2,"-":59}},{"path":"src/test/java/seedu/smartlib/model/reader/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.testutil.ReaderBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"        // different reader -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"        assertTrue(predicate.test(new ReaderBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"        assertTrue(predicate.test(new ReaderBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"        assertTrue(predicate.test(new ReaderBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"        assertTrue(predicate.test(new ReaderBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"        assertFalse(predicate.test(new ReaderBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"        assertFalse(predicate.test(new ReaderBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"        assertFalse(predicate.test(new ReaderBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"arsatis":9,"gycc7253":1,"-":65}},{"path":"src/test/java/seedu/smartlib/model/reader/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"gycc7253":2,"-":38}},{"path":"src/test/java/seedu/smartlib/model/reader/ReaderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.ALICE;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.testutil.ReaderBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"public class ReaderTest {","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"        Reader reader \u003d new ReaderBuilder().build();","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"gycc7253"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e reader.getTags().remove(0));","lastModifiedDate":"2021-02-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    public void isSameReader() {","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(ALICE.isSameReader(ALICE));","lastModifiedDate":"2021-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(ALICE.isSameReader(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"        Reader editedAlice \u003d new ReaderBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(ALICE.isSameReader(editedAlice));","lastModifiedDate":"2021-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"        editedAlice \u003d new ReaderBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":41,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(ALICE.isSameReader(editedAlice));","lastModifiedDate":"2021-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"        Reader editedBob \u003d new ReaderBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(BOB.isSameReader(editedBob));","lastModifiedDate":"2021-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"        editedBob \u003d new ReaderBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":50,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(BOB.isSameReader(editedBob));","lastModifiedDate":"2021-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"        Reader aliceCopy \u003d new ReaderBuilder(ALICE).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"        // different reader -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"        Reader editedAlice \u003d new ReaderBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"        editedAlice \u003d new ReaderBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"        editedAlice \u003d new ReaderBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"        editedAlice \u003d new ReaderBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"        editedAlice \u003d new ReaderBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"arsatis":14,"Nanxi-Huang":6,"GJ0407790":2,"gycc7253":9,"-":60}},{"path":"src/test/java/seedu/smartlib/model/reader/UniqueReaderListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.ALICE;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.exceptions.DuplicateReaderException;","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.exceptions.ReaderNotFoundException;","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.testutil.ReaderBuilder;","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"public class UniqueReaderListTest {","lastModifiedDate":"2021-02-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"Nanxi-Huang"},"content":"    private final UniqueReaderList uniqueReaderList \u003d new UniqueReaderList();","lastModifiedDate":"2021-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    public void contains_nullReader_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueReaderList.contains(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"    public void contains_readerNotInList_returnsFalse() {","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"Nanxi-Huang"},"content":"        assertFalse(uniqueReaderList.contains(ALICE));","lastModifiedDate":"2021-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    public void contains_readerInList_returnsTrue() {","lastModifiedDate":"2021-03-07"},{"lineNumber":38,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueReaderList.addReader(ALICE);","lastModifiedDate":"2021-03-06"},{"lineNumber":39,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(uniqueReaderList.contains(ALICE));","lastModifiedDate":"2021-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"    public void contains_readerWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueReaderList.addReader(ALICE);","lastModifiedDate":"2021-03-06"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"        Reader editedAlice \u003d new ReaderBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"Nanxi-Huang"},"content":"        assertTrue(uniqueReaderList.contains(editedAlice));","lastModifiedDate":"2021-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"    public void add_nullReader_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueReaderList.addReader(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"    public void add_duplicateReader_throwsDuplicateReaderException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueReaderList.addReader(ALICE);","lastModifiedDate":"2021-03-06"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"        assertThrows(DuplicateReaderException.class, () -\u003e uniqueReaderList.addReader(ALICE));","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"    public void setReader_nullTargetReader_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueReaderList.setReader(null, ALICE));","lastModifiedDate":"2021-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"    public void setReader_nullEditedReader_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueReaderList.setReader(ALICE, null));","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"    public void setReader_targetReaderNotInList_throwsReaderNotFoundException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"        assertThrows(ReaderNotFoundException.class, () -\u003e uniqueReaderList.setReader(ALICE, ALICE));","lastModifiedDate":"2021-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"    public void setReader_editedReaderIsSameReader_success() {","lastModifiedDate":"2021-03-07"},{"lineNumber":78,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueReaderList.addReader(ALICE);","lastModifiedDate":"2021-03-06"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"        uniqueReaderList.setReader(ALICE, ALICE);","lastModifiedDate":"2021-03-07"},{"lineNumber":80,"author":{"gitId":"Nanxi-Huang"},"content":"        UniqueReaderList expectedUniqueReaderList \u003d new UniqueReaderList();","lastModifiedDate":"2021-03-06"},{"lineNumber":81,"author":{"gitId":"Nanxi-Huang"},"content":"        expectedUniqueReaderList.addReader(ALICE);","lastModifiedDate":"2021-03-06"},{"lineNumber":82,"author":{"gitId":"Nanxi-Huang"},"content":"        assertEquals(expectedUniqueReaderList, uniqueReaderList);","lastModifiedDate":"2021-03-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"    public void setReader_editedReaderHasSameIdentity_success() {","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueReaderList.addReader(ALICE);","lastModifiedDate":"2021-03-06"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"        Reader editedAlice \u003d new ReaderBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"        uniqueReaderList.setReader(ALICE, editedAlice);","lastModifiedDate":"2021-03-07"},{"lineNumber":91,"author":{"gitId":"Nanxi-Huang"},"content":"        UniqueReaderList expectedUniqueReaderList \u003d new UniqueReaderList();","lastModifiedDate":"2021-03-06"},{"lineNumber":92,"author":{"gitId":"Nanxi-Huang"},"content":"        expectedUniqueReaderList.addReader(editedAlice);","lastModifiedDate":"2021-03-06"},{"lineNumber":93,"author":{"gitId":"Nanxi-Huang"},"content":"        assertEquals(expectedUniqueReaderList, uniqueReaderList);","lastModifiedDate":"2021-03-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"    public void setReader_editedReaderHasDifferentIdentity_success() {","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueReaderList.addReader(ALICE);","lastModifiedDate":"2021-03-06"},{"lineNumber":99,"author":{"gitId":"arsatis"},"content":"        uniqueReaderList.setReader(ALICE, BOB);","lastModifiedDate":"2021-03-07"},{"lineNumber":100,"author":{"gitId":"Nanxi-Huang"},"content":"        UniqueReaderList expectedUniqueReaderList \u003d new UniqueReaderList();","lastModifiedDate":"2021-03-06"},{"lineNumber":101,"author":{"gitId":"Nanxi-Huang"},"content":"        expectedUniqueReaderList.addReader(BOB);","lastModifiedDate":"2021-03-06"},{"lineNumber":102,"author":{"gitId":"Nanxi-Huang"},"content":"        assertEquals(expectedUniqueReaderList, uniqueReaderList);","lastModifiedDate":"2021-03-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"arsatis"},"content":"    public void setReader_editedReaderHasNonUniqueIdentity_throwsDuplicateReaderException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":107,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueReaderList.addReader(ALICE);","lastModifiedDate":"2021-03-06"},{"lineNumber":108,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueReaderList.addReader(BOB);","lastModifiedDate":"2021-03-06"},{"lineNumber":109,"author":{"gitId":"arsatis"},"content":"        assertThrows(DuplicateReaderException.class, () -\u003e uniqueReaderList.setReader(ALICE, BOB));","lastModifiedDate":"2021-03-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"arsatis"},"content":"    public void remove_nullReader_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":114,"author":{"gitId":"Nanxi-Huang"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueReaderList.remove(null));","lastModifiedDate":"2021-03-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"arsatis"},"content":"    public void remove_readerDoesNotExist_throwsReaderNotFoundException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":119,"author":{"gitId":"arsatis"},"content":"        assertThrows(ReaderNotFoundException.class, () -\u003e uniqueReaderList.remove(ALICE));","lastModifiedDate":"2021-03-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"arsatis"},"content":"    public void remove_existingReader_removesReader() {","lastModifiedDate":"2021-03-07"},{"lineNumber":124,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueReaderList.addReader(ALICE);","lastModifiedDate":"2021-03-06"},{"lineNumber":125,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueReaderList.remove(ALICE);","lastModifiedDate":"2021-03-06"},{"lineNumber":126,"author":{"gitId":"Nanxi-Huang"},"content":"        UniqueReaderList expectedUniqueReaderList \u003d new UniqueReaderList();","lastModifiedDate":"2021-03-06"},{"lineNumber":127,"author":{"gitId":"Nanxi-Huang"},"content":"        assertEquals(expectedUniqueReaderList, uniqueReaderList);","lastModifiedDate":"2021-03-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"arsatis"},"content":"    public void setReaders_nullUniqueReaderList_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":132,"author":{"gitId":"arsatis"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueReaderList.setReaders((UniqueReaderList) null));","lastModifiedDate":"2021-03-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"arsatis"},"content":"    public void setReaders_uniqueReaderList_replacesOwnListWithProvidedUniqueReaderList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":137,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueReaderList.addReader(ALICE);","lastModifiedDate":"2021-03-06"},{"lineNumber":138,"author":{"gitId":"Nanxi-Huang"},"content":"        UniqueReaderList expectedUniqueReaderList \u003d new UniqueReaderList();","lastModifiedDate":"2021-03-06"},{"lineNumber":139,"author":{"gitId":"Nanxi-Huang"},"content":"        expectedUniqueReaderList.addReader(BOB);","lastModifiedDate":"2021-03-06"},{"lineNumber":140,"author":{"gitId":"arsatis"},"content":"        uniqueReaderList.setReaders(expectedUniqueReaderList);","lastModifiedDate":"2021-03-07"},{"lineNumber":141,"author":{"gitId":"Nanxi-Huang"},"content":"        assertEquals(expectedUniqueReaderList, uniqueReaderList);","lastModifiedDate":"2021-03-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"arsatis"},"content":"    public void setReaders_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":146,"author":{"gitId":"arsatis"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueReaderList.setReaders((List\u003cReader\u003e) null));","lastModifiedDate":"2021-03-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"arsatis"},"content":"    public void setReaders_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-07"},{"lineNumber":151,"author":{"gitId":"Nanxi-Huang"},"content":"        uniqueReaderList.addReader(ALICE);","lastModifiedDate":"2021-03-06"},{"lineNumber":152,"author":{"gitId":"gycc7253"},"content":"        List\u003cReader\u003e readerList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-02-19"},{"lineNumber":153,"author":{"gitId":"arsatis"},"content":"        uniqueReaderList.setReaders(readerList);","lastModifiedDate":"2021-03-07"},{"lineNumber":154,"author":{"gitId":"Nanxi-Huang"},"content":"        UniqueReaderList expectedUniqueReaderList \u003d new UniqueReaderList();","lastModifiedDate":"2021-03-06"},{"lineNumber":155,"author":{"gitId":"Nanxi-Huang"},"content":"        expectedUniqueReaderList.addReader(BOB);","lastModifiedDate":"2021-03-06"},{"lineNumber":156,"author":{"gitId":"Nanxi-Huang"},"content":"        assertEquals(expectedUniqueReaderList, uniqueReaderList);","lastModifiedDate":"2021-03-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"arsatis"},"content":"    public void setReaders_listWithDuplicateReaders_throwsDuplicateReaderException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":161,"author":{"gitId":"gycc7253"},"content":"        List\u003cReader\u003e listWithDuplicateReaders \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-02-19"},{"lineNumber":162,"author":{"gitId":"arsatis"},"content":"        assertThrows(DuplicateReaderException.class, () -\u003e uniqueReaderList.setReaders(listWithDuplicateReaders));","lastModifiedDate":"2021-03-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"Nanxi-Huang"},"content":"            -\u003e uniqueReaderList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-03-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"arsatis":40,"Nanxi-Huang":37,"GJ0407790":2,"gycc7253":7,"-":84}},{"path":"src/test/java/seedu/smartlib/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.model.tag;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"gycc7253":2,"-":24}},{"path":"src/test/java/seedu/smartlib/storage/JsonAdaptedReaderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.storage;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import static seedu.smartlib.storage.JsonAdaptedReader.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.BENSON;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-05"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-02-19"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Address;","lastModifiedDate":"2021-02-19"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Email;","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Phone;","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"public class JsonAdaptedReaderTest {","lastModifiedDate":"2021-02-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"gycc7253"},"content":"    private static final String INVALID_BOOKNAME \u003d \"\";","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"    private static final String VALID_BOOKNAME \u003d \"bookName\";","lastModifiedDate":"2021-03-21"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"    private static final List\u003cJsonAdaptedBookDateBorrowedPair\u003e VALID_BORROWS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"    public void toModelType_validReaderDetails_returnsReader() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"Andrewzhang217"},"content":"        JsonAdaptedReader reader \u003d new JsonAdaptedReader(BENSON);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"Andrewzhang217"},"content":"        assertEquals(BENSON, reader.toModelType());","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Andrewzhang217"},"content":"        JsonAdaptedReader reader \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"                new JsonAdaptedReader(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-21"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"                        VALID_TAGS, VALID_BORROWS);","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"Andrewzhang217"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, reader::toModelType);","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"gycc7253"},"content":"        JsonAdaptedReader reader \u003d new JsonAdaptedReader(null, VALID_PHONE,","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"gycc7253"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_BORROWS);","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"Andrewzhang217"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, reader::toModelType);","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"Andrewzhang217"},"content":"        JsonAdaptedReader reader \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"gycc7253"},"content":"                new JsonAdaptedReader(VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-21"},{"lineNumber":65,"author":{"gitId":"gycc7253"},"content":"                        VALID_ADDRESS, VALID_TAGS, VALID_BORROWS);","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"Andrewzhang217"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, reader::toModelType);","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"gycc7253"},"content":"        JsonAdaptedReader reader \u003d new JsonAdaptedReader(VALID_NAME, null,","lastModifiedDate":"2021-03-21"},{"lineNumber":73,"author":{"gitId":"gycc7253"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_BORROWS);","lastModifiedDate":"2021-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"Andrewzhang217"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, reader::toModelType);","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"Andrewzhang217"},"content":"        JsonAdaptedReader reader \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"gycc7253"},"content":"                new JsonAdaptedReader(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2021-03-21"},{"lineNumber":82,"author":{"gitId":"gycc7253"},"content":"                        VALID_ADDRESS, VALID_TAGS, VALID_BORROWS);","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"Andrewzhang217"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, reader::toModelType);","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"gycc7253"},"content":"        JsonAdaptedReader reader \u003d new JsonAdaptedReader(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2021-03-21"},{"lineNumber":90,"author":{"gitId":"gycc7253"},"content":"                null, VALID_ADDRESS, VALID_TAGS, VALID_BORROWS);","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"Andrewzhang217"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, reader::toModelType);","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"Andrewzhang217"},"content":"        JsonAdaptedReader reader \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"gycc7253"},"content":"                new JsonAdaptedReader(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-21"},{"lineNumber":99,"author":{"gitId":"gycc7253"},"content":"                        INVALID_ADDRESS, VALID_TAGS, VALID_BORROWS);","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"Andrewzhang217"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, reader::toModelType);","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"gycc7253"},"content":"        JsonAdaptedReader reader \u003d new JsonAdaptedReader(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2021-03-21"},{"lineNumber":107,"author":{"gitId":"gycc7253"},"content":"                VALID_EMAIL, null, VALID_TAGS, VALID_BORROWS);","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"Andrewzhang217"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, reader::toModelType);","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"Andrewzhang217"},"content":"        JsonAdaptedReader reader \u003d","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"gycc7253"},"content":"                new JsonAdaptedReader(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-21"},{"lineNumber":118,"author":{"gitId":"gycc7253"},"content":"                        VALID_ADDRESS, invalidTags, VALID_BORROWS);","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"Andrewzhang217"},"content":"        assertThrows(IllegalValueException.class, reader::toModelType);","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"arsatis":3,"GJ0407790":2,"gycc7253":27,"-":74,"Andrewzhang217":16}},{"path":"src/test/java/seedu/smartlib/storage/JsonSerializableSmartLibTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.storage;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"public class JsonSerializableSmartLibTest {","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"            .get(\"src\", \"test\", \"data\", \"JsonSerializableSmartLibTest\");","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"    private static final Path TYPICAL_READERS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalReaderSmartLib.json\");","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    private static final Path INVALID_READER_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidReaderSmartLib.json\");","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"    private static final Path DUPLICATE_READER_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateReaderSmartLib.json\");","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    public void toModelType_typicalReadersFile_success() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"        //JsonSerializableSmartLib dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_READERS_FILE,","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"        //        JsonSerializableSmartLib.class).get();","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"gycc7253"},"content":"        //SmartLib smartLibFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"        //SmartLib typicalPersonsSmartLib \u003d TypicalReaders.getTypicalSmartLib();","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"        //assertEquals(smartLibFromFile, typicalPersonsSmartLib);","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    public void toModelType_invalidReaderFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"        //JsonSerializableSmartLib dataFromFile \u003d JsonUtil.readJsonFile(INVALID_READER_FILE,","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"        //        JsonSerializableSmartLib.class).get();","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"        //assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"    public void toModelType_duplicateReaders_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"        // JsonSerializableSmartLib dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_READER_FILE,","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"gycc7253"},"content":"        //        JsonSerializableSmartLib.class).get();","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"        //assertThrows(IllegalValueException.class, JsonSerializableSmartLib.MESSAGE_DUPLICATE_READER,","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"        //        dataFromFile::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"arsatis":8,"gycc7253":14,"-":18}},{"path":"src/test/java/seedu/smartlib/storage/JsonSmartLibStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.storage;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.ALICE;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.HOON;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.IDA;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.getTypicalSmartLib;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ReadOnlySmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.SmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"public class JsonSmartLibStorageTest {","lastModifiedDate":"2021-02-19"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSmartLibStorageTest\");","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    public void readSmartLib_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"        assertThrows(NullPointerException.class, () -\u003e readSmartLib(null));","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"    private java.util.Optional\u003cReadOnlySmartLib\u003e readSmartLib(String filePath) throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"        return new JsonSmartLibStorage(Paths.get(filePath)).readSmartLib(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"        assertFalse(readSmartLib(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSmartLib(\"notJsonFormatSmartLib.json\"));","lastModifiedDate":"2021-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"    public void readSmartLib_invalidReaderSmartLib_throwDataConversionException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSmartLib(\"invalidReaderSmartLib.json\"));","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"    public void readSmartLib_invalidAndValidReaderSmartLib_throwDataConversionException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSmartLib(\"invalidAndValidReaderSmartLib.json\"));","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"    public void readAndSaveSmartLib_allInOrder_success() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"        SmartLib original \u003d getTypicalSmartLib();","lastModifiedDate":"2021-03-07"},{"lineNumber":67,"author":{"gitId":"gycc7253"},"content":"        JsonSmartLibStorage jsonAddressBookStorage \u003d new JsonSmartLibStorage(filePath);","lastModifiedDate":"2021-02-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"        jsonAddressBookStorage.saveSmartLib(original, filePath);","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"        ReadOnlySmartLib readBack \u003d jsonAddressBookStorage.readSmartLib(filePath).get();","lastModifiedDate":"2021-03-07"},{"lineNumber":72,"author":{"gitId":"gycc7253"},"content":"        assertEquals(original, new SmartLib(readBack));","lastModifiedDate":"2021-02-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"Nanxi-Huang"},"content":"        original.addReader(HOON);","lastModifiedDate":"2021-03-06"},{"lineNumber":76,"author":{"gitId":"Nanxi-Huang"},"content":"        original.removeReader(ALICE);","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"        jsonAddressBookStorage.saveSmartLib(original, filePath);","lastModifiedDate":"2021-03-07"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"        readBack \u003d jsonAddressBookStorage.readSmartLib(filePath).get();","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"gycc7253"},"content":"        assertEquals(original, new SmartLib(readBack));","lastModifiedDate":"2021-02-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"Nanxi-Huang"},"content":"        original.addReader(IDA);","lastModifiedDate":"2021-03-06"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"        jsonAddressBookStorage.saveSmartLib(original); // file path not specified","lastModifiedDate":"2021-03-07"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"        readBack \u003d jsonAddressBookStorage.readSmartLib().get(); // file path not specified","lastModifiedDate":"2021-03-07"},{"lineNumber":85,"author":{"gitId":"gycc7253"},"content":"        assertEquals(original, new SmartLib(readBack));","lastModifiedDate":"2021-02-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"    public void saveSmartLib_nullSmartLib_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveSmartLib(null, \"SomeFile.json\"));","lastModifiedDate":"2021-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"     * Saves {@code smartLib} at the specified {@code filePath}.","lastModifiedDate":"2021-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"    private void saveSmartLib(ReadOnlySmartLib smartLib, String filePath) {","lastModifiedDate":"2021-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"gycc7253"},"content":"            new JsonSmartLibStorage(Paths.get(filePath))","lastModifiedDate":"2021-02-19"},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"                    .saveSmartLib(smartLib, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"arsatis"},"content":"    public void saveSmartLib_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"arsatis"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveSmartLib(new SmartLib(), null));","lastModifiedDate":"2021-03-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"arsatis":27,"Nanxi-Huang":3,"GJ0407790":4,"gycc7253":10,"-":66}},{"path":"src/test/java/seedu/smartlib/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.storage;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.GuiSettings;","lastModifiedDate":"2021-02-19"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-02-19"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.UserPrefs;","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"        userPrefs.setSmartLibFilePath(Paths.get(\"smartlib.json\"));","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"arsatis":1,"gycc7253":5,"-":117}},{"path":"src/test/java/seedu/smartlib/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.storage;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.testutil.TypicalModels.getTypicalSmartLib;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.GuiSettings;","lastModifiedDate":"2021-02-19"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.ReadOnlySmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.SmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":16,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.UserPrefs;","lastModifiedDate":"2021-02-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"gycc7253"},"content":"        JsonSmartLibStorage addressBookStorage \u003d new JsonSmartLibStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-02-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"    public void smartLibReadSave() throws Exception {","lastModifiedDate":"2021-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"         * {@link JsonSmartLibStorage} class.","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonSmartLibStorageTest} class.","lastModifiedDate":"2021-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"        SmartLib original \u003d getTypicalSmartLib();","lastModifiedDate":"2021-03-07"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"        storageManager.saveSmartLib(original);","lastModifiedDate":"2021-03-07"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"        ReadOnlySmartLib retrieved \u003d storageManager.readSmartLib().get();","lastModifiedDate":"2021-03-07"},{"lineNumber":60,"author":{"gitId":"gycc7253"},"content":"        assertEquals(original, new SmartLib(retrieved));","lastModifiedDate":"2021-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"    public void getSmartLibFilePath() {","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"        assertNotNull(storageManager.getSmartLibFilePath());","lastModifiedDate":"2021-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"arsatis":9,"GJ0407790":1,"gycc7253":6,"-":52}},{"path":"src/test/java/seedu/smartlib/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.testutil;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"gycc7253":1,"-":33}},{"path":"src/test/java/seedu/smartlib/testutil/BookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"GJ0407790"},"content":"package seedu.smartlib.testutil;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Author;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Barcode;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.model.book.Genre;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Isbn;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Publisher;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":" * A utility class to help with building Book objects.","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"public class BookBuilder {","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"    public static final String DEFAULT_NAME \u003d \"Harry Potter and the Sorcerer Stone\";","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"GJ0407790"},"content":"    public static final String DEFAULT_AUTHOR \u003d \"JK Rowling\";","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"GJ0407790"},"content":"    public static final String DEFAULT_PUBLISHER \u003d \"Scholastic\";","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"    public static final String DEFAULT_ISBN \u003d \"9780439708180\";","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    public static final String DEFAULT_BARCODE \u003d \"1234567890\";","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"Nanxi-Huang"},"content":"    public static final String DEFAULT_GENRE \u003d \"Fantasy\";","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"GJ0407790"},"content":"    private Name name;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"GJ0407790"},"content":"    private Author author;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"GJ0407790"},"content":"    private Publisher publisher;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"GJ0407790"},"content":"    private Isbn isbn;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    private Barcode barcode;","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"Nanxi-Huang"},"content":"    private Genre genre;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"     * Creates a {@code BookBuilder} with the default details.","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"GJ0407790"},"content":"    public BookBuilder() {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"GJ0407790"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"GJ0407790"},"content":"        author \u003d new Author(new Name(DEFAULT_AUTHOR));","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"GJ0407790"},"content":"        publisher \u003d new Publisher(new Name(DEFAULT_PUBLISHER));","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"GJ0407790"},"content":"        isbn \u003d new Isbn(DEFAULT_ISBN);","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"        barcode \u003d new Barcode(Integer.parseInt(DEFAULT_BARCODE));","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"Nanxi-Huang"},"content":"        genre \u003d new Genre(new Name(DEFAULT_GENRE));","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"GJ0407790"},"content":"     * Initializes the BookBuilder with the data of {@code bookToCopy}.","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"GJ0407790"},"content":"    public BookBuilder(Book bookToCopy) {","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"GJ0407790"},"content":"        name \u003d bookToCopy.getName();","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"GJ0407790"},"content":"        author \u003d bookToCopy.getAuthor();","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"GJ0407790"},"content":"        publisher \u003d bookToCopy.getPublisher();","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"GJ0407790"},"content":"        isbn \u003d bookToCopy.getIsbn();","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"        barcode \u003d bookToCopy.getBarcode();","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"Nanxi-Huang"},"content":"        genre \u003d bookToCopy.getGenre();","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"GJ0407790"},"content":"     * Sets the {@code Name} of the {@code Book} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"GJ0407790"},"content":"    public BookBuilder withName(String name) {","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"GJ0407790"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"GJ0407790"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"GJ0407790"},"content":"     * Sets the {@code Author} of the {@code Book} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"GJ0407790"},"content":"    public BookBuilder withAuthor(String author) {","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"GJ0407790"},"content":"        this.author \u003d new Author(new Name(author));","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"GJ0407790"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"GJ0407790"},"content":"     * Sets the {@code Publisher} of the {@code Book} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"GJ0407790"},"content":"    public BookBuilder withPublisher(String publisher) {","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"GJ0407790"},"content":"        this.publisher \u003d new Publisher(new Name(publisher));","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"GJ0407790"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"GJ0407790"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"GJ0407790"},"content":"     * Sets the {@code Isbn} of the {@code Book} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"GJ0407790"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"GJ0407790"},"content":"    public BookBuilder withIsbn(String isbn) {","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"GJ0407790"},"content":"        this.isbn \u003d new Isbn(isbn);","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"GJ0407790"},"content":"        return this;","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"     * Sets the {@code Barcode} of the {@code Book} that we are building.","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"    public BookBuilder withBarcode(String barcode) {","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"        this.barcode \u003d new Barcode(Integer.parseInt(barcode));","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"        return this;","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"Nanxi-Huang"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"Nanxi-Huang"},"content":"     * Sets the {@code Genre} of the {@code Book} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"Nanxi-Huang"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"Nanxi-Huang"},"content":"    public BookBuilder withGenre(String genre) {","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"Nanxi-Huang"},"content":"        this.genre \u003d new Genre(new Name(genre));","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"Nanxi-Huang"},"content":"        return this;","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"Nanxi-Huang"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"Nanxi-Huang"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"GJ0407790"},"content":"    public Book build() {","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"arsatis"},"content":"        return new BookStub(name, author, publisher, isbn, barcode, genre);","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"GJ0407790"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"arsatis":14,"Nanxi-Huang":13,"GJ0407790":79}},{"path":"src/test/java/seedu/smartlib/testutil/BookStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package seedu.smartlib.testutil;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Author;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Barcode;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Genre;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Isbn;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Publisher;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"public class BookStub extends Book {","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     * @param name Name of the book","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     * @param author Author of the book","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     * @param publisher Publisher of the book","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     * @param isbn ISBN of the book","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * @param barcode Barcode of the book","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     * @param genre Genre of the book","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    public BookStub(Name name, Author author, Publisher publisher, Isbn isbn, Barcode barcode, Genre genre) {","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"        super(name, author, publisher, isbn, barcode, genre);","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * @param name Name of the book","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     * @param author Author of the book","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * @param publisher Publisher of the book","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     * @param isbn ISBN of the book","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * @param barcode Barcode of the book","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * @param genre Genre of the book","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     * @param borrowerName Reader who borrowed the book","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    public BookStub(Name name, Author author, Publisher publisher, Isbn isbn, Barcode barcode, Genre genre,","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"                    Name borrowerName) {","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"        super(name, author, publisher, isbn, barcode, genre, borrowerName);","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"            return true;","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"        if (!(other instanceof Book)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"            return false;","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"        Book otherBook \u003d (Book) other;","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"        return otherBook.getName().equals(getName())","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"                \u0026\u0026 otherBook.getAuthor().equals(getAuthor())","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"                \u0026\u0026 otherBook.getPublisher().equals(getPublisher())","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"                \u0026\u0026 otherBook.getIsbn().equals(getIsbn())","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"                \u0026\u0026 otherBook.getGenre().equals(getGenre());","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"arsatis":61}},{"path":"src/test/java/seedu/smartlib/testutil/EditReaderDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.testutil;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.logic.commands.EditCommand;","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.logic.commands.EditCommand.EditReaderDescriptor;","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.Address;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.Email;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.Phone;","lastModifiedDate":"2021-02-19"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.tag.Tag;","lastModifiedDate":"2021-02-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":" * A utility class to help with building EditReaderDescriptor objects.","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"public class EditReaderDescriptorBuilder {","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    private EditCommand.EditReaderDescriptor descriptor;","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    public EditReaderDescriptorBuilder() {","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"        descriptor \u003d new EditCommand.EditReaderDescriptor();","lastModifiedDate":"2021-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    public EditReaderDescriptorBuilder(EditCommand.EditReaderDescriptor descriptor) {","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"        this.descriptor \u003d new EditReaderDescriptor(descriptor);","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * Returns an {@code EditReaderDescriptor} with fields containing {@code reader}\u0027s details","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"    public EditReaderDescriptorBuilder(Reader reader) {","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"        descriptor \u003d new EditCommand.EditReaderDescriptor();","lastModifiedDate":"2021-03-07"},{"lineNumber":36,"author":{"gitId":"gycc7253"},"content":"        descriptor.setName(reader.getName());","lastModifiedDate":"2021-02-19"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"        descriptor.setPhone(reader.getPhone());","lastModifiedDate":"2021-02-19"},{"lineNumber":38,"author":{"gitId":"gycc7253"},"content":"        descriptor.setEmail(reader.getEmail());","lastModifiedDate":"2021-02-19"},{"lineNumber":39,"author":{"gitId":"gycc7253"},"content":"        descriptor.setAddress(reader.getAddress());","lastModifiedDate":"2021-02-19"},{"lineNumber":40,"author":{"gitId":"gycc7253"},"content":"        descriptor.setTags(reader.getTags());","lastModifiedDate":"2021-02-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     * Sets the {@code Name} of the {@code EditReaderDescriptor} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"    public EditReaderDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     * Sets the {@code Phone} of the {@code EditReaderDescriptor} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"    public EditReaderDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"     * Sets the {@code Email} of the {@code EditReaderDescriptor} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"    public EditReaderDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"     * Sets the {@code Address} of the {@code EditReaderDescriptor} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"    public EditReaderDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditReaderDescriptor}","lastModifiedDate":"2021-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"    public EditReaderDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"    public EditCommand.EditReaderDescriptor build() {","lastModifiedDate":"2021-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"arsatis":26,"GJ0407790":1,"gycc7253":8,"-":53}},{"path":"src/test/java/seedu/smartlib/testutil/ReaderBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.testutil;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.Address;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.Email;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.Phone;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":12,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.tag.Tag;","lastModifiedDate":"2021-02-19"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.util.SampleDataUtil;","lastModifiedDate":"2021-02-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":" * A utility class to help with building Reader objects.","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"public class ReaderBuilder {","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * Creates a {@code ReaderBuilder} with the default details.","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"    public ReaderBuilder() {","lastModifiedDate":"2021-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     * Initializes the ReaderBuilder with the data of {@code readerToCopy}.","lastModifiedDate":"2021-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"    public ReaderBuilder(Reader readerToCopy) {","lastModifiedDate":"2021-03-07"},{"lineNumber":46,"author":{"gitId":"gycc7253"},"content":"        name \u003d readerToCopy.getName();","lastModifiedDate":"2021-02-19"},{"lineNumber":47,"author":{"gitId":"gycc7253"},"content":"        phone \u003d readerToCopy.getPhone();","lastModifiedDate":"2021-02-19"},{"lineNumber":48,"author":{"gitId":"gycc7253"},"content":"        email \u003d readerToCopy.getEmail();","lastModifiedDate":"2021-02-19"},{"lineNumber":49,"author":{"gitId":"gycc7253"},"content":"        address \u003d readerToCopy.getAddress();","lastModifiedDate":"2021-02-19"},{"lineNumber":50,"author":{"gitId":"gycc7253"},"content":"        tags \u003d new HashSet\u003c\u003e(readerToCopy.getTags());","lastModifiedDate":"2021-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     * Sets the {@code Name} of the {@code Reader} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"    public ReaderBuilder withName(String name) {","lastModifiedDate":"2021-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Reader} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"    public ReaderBuilder withTags(String ... tags) {","lastModifiedDate":"2021-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"     * Sets the {@code Address} of the {@code Reader} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"    public ReaderBuilder withAddress(String address) {","lastModifiedDate":"2021-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"     * Sets the {@code Phone} of the {@code Reader} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"    public ReaderBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"     * Sets the {@code Email} of the {@code Reader} that we are building.","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"    public ReaderBuilder withEmail(String email) {","lastModifiedDate":"2021-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"gycc7253"},"content":"    public Reader build() {","lastModifiedDate":"2021-02-19"},{"lineNumber":94,"author":{"gitId":"gycc7253"},"content":"        return new Reader(name, phone, email, address, tags, new HashMap\u003c\u003e());","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"arsatis":19,"GJ0407790":1,"gycc7253":12,"-":65}},{"path":"src/test/java/seedu/smartlib/testutil/ReaderUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.testutil;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_READER;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"Nanxi-Huang"},"content":"import seedu.smartlib.logic.commands.AddReaderCommand;","lastModifiedDate":"2021-03-06"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.logic.commands.EditCommand.EditReaderDescriptor;","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.tag.Tag;","lastModifiedDate":"2021-02-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":" * A utility class for Reader.","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"public class ReaderUtil {","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     * Returns an add command string for adding the {@code reader}.","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"gycc7253"},"content":"    public static String getAddCommand(Reader reader) {","lastModifiedDate":"2021-02-19"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"        return AddReaderCommand.COMMAND_WORD + \" \" + getReaderDetails(reader);","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     * Returns the part of command string for the given {@code reader}\u0027s details.","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"    public static String getReaderDetails(Reader reader) {","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"        sb.append(PREFIX_READER + reader.getName().toString() + \" \");","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"        sb.append(PREFIX_PHONE + reader.getPhone().toString() + \" \");","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"        sb.append(PREFIX_EMAIL + reader.getEmail().toString() + \" \");","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"        sb.append(PREFIX_ADDRESS + reader.getAddress().toString() + \" \");","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"gycc7253"},"content":"        reader.getTags().stream().forEach(","lastModifiedDate":"2021-02-19"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.getTagName() + \" \")","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     * Returns the part of command string for the given {@code EditReaderDescriptor}\u0027s details.","lastModifiedDate":"2021-03-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"    public static String getEditReaderDescriptorDetails(EditReaderDescriptor descriptor) {","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_READER).append(name.toString()).append(\" \"));","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.toString()).append(\" \"));","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.toString()).append(\" \"));","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.toString()).append(\" \"));","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.getTagName()).append(\" \"));","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"arsatis":19,"Nanxi-Huang":2,"gycc7253":9,"-":32}},{"path":"src/test/java/seedu/smartlib/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.testutil;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gycc7253":1,"-":71}},{"path":"src/test/java/seedu/smartlib/testutil/SmartLibBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package seedu.smartlib.testutil;","lastModifiedDate":"2021-03-07"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.SmartLib;","lastModifiedDate":"2021-03-07"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-03-07"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"/**","lastModifiedDate":"2021-03-07"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * A utility class to help with building SmartLib objects.","lastModifiedDate":"2021-03-07"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-03-07"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" *     {@code SmartLib sl \u003d new SmartLibBuilder().withReader(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" */","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"public class SmartLibBuilder {","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    private SmartLib smartLib;","lastModifiedDate":"2021-03-07"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"    public SmartLibBuilder() {","lastModifiedDate":"2021-03-07"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"        smartLib \u003d new SmartLib();","lastModifiedDate":"2021-03-07"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"    public SmartLibBuilder(SmartLib smartLib) {","lastModifiedDate":"2021-03-07"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"        this.smartLib \u003d smartLib;","lastModifiedDate":"2021-03-07"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    /**","lastModifiedDate":"2021-03-07"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     * Adds a new {@code Reader} to the {@code SmartLib} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     */","lastModifiedDate":"2021-03-07"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    public SmartLibBuilder withReader(Reader reader) {","lastModifiedDate":"2021-03-07"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"        smartLib.addReader(reader);","lastModifiedDate":"2021-03-07"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"        return this;","lastModifiedDate":"2021-03-07"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"    public SmartLib build() {","lastModifiedDate":"2021-03-07"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"        return smartLib;","lastModifiedDate":"2021-03-07"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"    }","lastModifiedDate":"2021-03-07"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"}","lastModifiedDate":"2021-03-07"}],"authorContributionMap":{"arsatis":34}},{"path":"src/test/java/seedu/smartlib/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.testutil;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.index.Index;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.Model;","lastModifiedDate":"2021-02-19"},{"lineNumber":10,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     * Returns the middle index of the reader in the {@code model}\u0027s reader list.","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"Nanxi-Huang"},"content":"        return Index.fromOneBased(model.getFilteredReaderList().size() / 2);","lastModifiedDate":"2021-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     * Returns the last index of the reader in the {@code model}\u0027s reader list.","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"Nanxi-Huang"},"content":"        return Index.fromOneBased(model.getFilteredReaderList().size());","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     * Returns the reader in the {@code model}\u0027s reader list at {@code index}.","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"    public static Reader getReader(Model model, Index index) {","lastModifiedDate":"2021-03-07"},{"lineNumber":53,"author":{"gitId":"Nanxi-Huang"},"content":"        return model.getFilteredReaderList().get(index.getZeroBased());","lastModifiedDate":"2021-03-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"arsatis":4,"Nanxi-Huang":3,"gycc7253":4,"-":44}},{"path":"src/test/java/seedu/smartlib/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.testutil;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.index.Index;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"    public static final Index INDEX_FIRST_READER \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-07"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"    public static final Index INDEX_SECOND_READER \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-07"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"    public static final Index INDEX_THIRD_READER \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-07"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"GJ0407790"},"content":"    public static final Index INDEX_FIRST_BOOK \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"GJ0407790"},"content":"    public static final Index INDEX_SECOND_BOOK \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"    public static final Index INDEX_THIRD_BOOK \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Andrewzhang217"},"content":"    public static final Index INDEX_FIRST_RECORD \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Andrewzhang217"},"content":"    public static final Index INDEX_SECOND_RECORD \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Andrewzhang217"},"content":"    public static final Index INDEX_THIRD_RECORD \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Andrewzhang217"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"arsatis":3,"GJ0407790":4,"gycc7253":2,"-":7,"Andrewzhang217":5}},{"path":"src/test/java/seedu/smartlib/testutil/TypicalModels.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.testutil;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":5,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_AUTHOR_HARRY;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_AUTHOR_MAZE;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-02-19"},{"lineNumber":8,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":9,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_GENRE_HARRY;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"Nanxi-Huang"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_GENRE_MAZE;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_ISBN_HARRY;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_ISBN_MAZE;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-02-19"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":15,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_NAME_HARRY;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_NAME_MAZE;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-02-19"},{"lineNumber":18,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-02-19"},{"lineNumber":19,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_PUBLISHER_HARRY;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"GJ0407790"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_PUBLISHER_MAZE;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-02-19"},{"lineNumber":22,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-02-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":28,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.commons.core.name.Name;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.SmartLib;","lastModifiedDate":"2021-02-19"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"import seedu.smartlib.model.book.Barcode;","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"GJ0407790"},"content":"import seedu.smartlib.model.book.Book;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.reader.Reader;","lastModifiedDate":"2021-02-19"},{"lineNumber":33,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.DateBorrowed;","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.model.record.Record;","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":37,"author":{"gitId":"GJ0407790"},"content":" * A utility class containing a list of {@code Book}, {@code Reader} and {@code Record} objects to be used in tests.","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":39,"author":{"gitId":"GJ0407790"},"content":"public class TypicalModels {","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":41,"author":{"gitId":"GJ0407790"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Books \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"    public static final Book HARRY_PORTER \u003d new BookBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"            .withName(\"Harry Potter and the Sorcerers Stone\")","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"            .withAuthor(\"JK Rowling\")","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"            .withPublisher(\"Scholastic\")","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"            .withIsbn(\"9780439708180\")","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"            .withGenre(\"Fantasy\")","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"            .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"    public static final Book PROMISE_LAND \u003d new BookBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"            .withName(\"A Promised Land\")","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"            .withAuthor(\"Barack Obama\")","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"            .withPublisher(\"Crown Publishing Group\")","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"            .withIsbn(\"9781524763169\")","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"            .withGenre(\"Novel\")","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"            .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"    public static final Book LEGACY \u003d new BookBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"            .withName(\"Legacy\")","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"            .withAuthor(\"James Kerr\")","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"            .withPublisher(\"Brown Book Group\")","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"            .withIsbn(\"9781472103536\")","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"            .withGenre(\"Novel\")","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"            .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"    public static final Book HABIT \u003d new BookBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"            .withName(\"Atomic Habits\")","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"            .withAuthor(\"James Clear\")","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"            .withPublisher(\"Cornerstone\")","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"            .withIsbn(\"9781847941831\")","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"            .withGenre(\"Education\")","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"            .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"    public static final Book POWER \u003d new BookBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"            .withName(\"The Power of Now\")","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"            .withAuthor(\"Eckhart Tolle\")","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"            .withPublisher(\"Hodder and Stoughton\")","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"            .withIsbn(\"9780340733509\")","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"            .withGenre(\"Education\")","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"            .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"    public static final Book LIFE \u003d new BookBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"            .withName(\"Good Vibes Good Life\")","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"            .withAuthor(\"Vex King\")","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"            .withPublisher(\"Hay House UK Ltd\")","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"            .withIsbn(\"9781788171823\")","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"            .withGenre(\"Fiction\")","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"            .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"    public static final Book SECRET \u003d new BookBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"            .withName(\"The Secret\")","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"            .withAuthor(\"Rhonda Byrne\")","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"            .withPublisher(\"Simon and Schuster Ltd\")","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"            .withIsbn(\"9781847370297\")","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"            .withGenre(\"Mystery\")","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"            .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"GJ0407790"},"content":"    // Manually added - Book\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"arsatis"},"content":"    public static final Book HARRY \u003d new BookBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"arsatis"},"content":"            .withName(VALID_NAME_HARRY)","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"arsatis"},"content":"            .withAuthor(VALID_AUTHOR_HARRY)","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"arsatis"},"content":"            .withPublisher(VALID_PUBLISHER_HARRY)","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"arsatis"},"content":"            .withIsbn(VALID_ISBN_HARRY)","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"arsatis"},"content":"            .withGenre(VALID_GENRE_HARRY)","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"arsatis"},"content":"            .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"arsatis"},"content":"    public static final Book MAZE \u003d new BookBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"arsatis"},"content":"            .withName(VALID_NAME_MAZE)","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"arsatis"},"content":"            .withAuthor(VALID_AUTHOR_MAZE)","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"arsatis"},"content":"            .withPublisher(VALID_PUBLISHER_MAZE)","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"arsatis"},"content":"            .withIsbn(VALID_ISBN_MAZE)","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"arsatis"},"content":"            .withGenre(VALID_GENRE_MAZE)","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"arsatis"},"content":"            .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"GJ0407790"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Readers \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"arsatis"},"content":"    public static final Reader ALICE \u003d new ReaderBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"arsatis"},"content":"            .withName(\"Alice Pauline\")","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"arsatis"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"arsatis"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"arsatis"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"arsatis"},"content":"            .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"arsatis"},"content":"    public static final Reader BENSON \u003d new ReaderBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"arsatis"},"content":"            .withName(\"Benson Meier\")","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":130,"author":{"gitId":"arsatis"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"arsatis"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"arsatis"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"arsatis"},"content":"            .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"arsatis"},"content":"    public static final Reader CARL \u003d new ReaderBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"arsatis"},"content":"            .withName(\"Carl Kurz\")","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"arsatis"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"arsatis"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"arsatis"},"content":"            .withAddress(\"wall street\")","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"arsatis"},"content":"            .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":142,"author":{"gitId":"arsatis"},"content":"    public static final Reader DANIEL \u003d new ReaderBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":143,"author":{"gitId":"arsatis"},"content":"            .withName(\"Daniel Meier\")","lastModifiedDate":"2021-03-27"},{"lineNumber":144,"author":{"gitId":"arsatis"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2021-03-27"},{"lineNumber":145,"author":{"gitId":"arsatis"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2021-03-27"},{"lineNumber":146,"author":{"gitId":"arsatis"},"content":"            .withAddress(\"10th street\")","lastModifiedDate":"2021-03-27"},{"lineNumber":147,"author":{"gitId":"arsatis"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2021-03-27"},{"lineNumber":148,"author":{"gitId":"arsatis"},"content":"            .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":149,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":150,"author":{"gitId":"arsatis"},"content":"    public static final Reader ELLE \u003d new ReaderBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":151,"author":{"gitId":"arsatis"},"content":"            .withName(\"Elle Meyer\")","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"arsatis"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2021-03-27"},{"lineNumber":153,"author":{"gitId":"arsatis"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"arsatis"},"content":"            .withAddress(\"michegan ave\")","lastModifiedDate":"2021-03-27"},{"lineNumber":155,"author":{"gitId":"arsatis"},"content":"            .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":156,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":157,"author":{"gitId":"arsatis"},"content":"    public static final Reader FIONA \u003d new ReaderBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":158,"author":{"gitId":"arsatis"},"content":"            .withName(\"Fiona Kunz\")","lastModifiedDate":"2021-03-27"},{"lineNumber":159,"author":{"gitId":"arsatis"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2021-03-27"},{"lineNumber":160,"author":{"gitId":"arsatis"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2021-03-27"},{"lineNumber":161,"author":{"gitId":"arsatis"},"content":"            .withAddress(\"little tokyo\")","lastModifiedDate":"2021-03-27"},{"lineNumber":162,"author":{"gitId":"arsatis"},"content":"            .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":163,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"arsatis"},"content":"    public static final Reader GEORGE \u003d new ReaderBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":165,"author":{"gitId":"arsatis"},"content":"            .withName(\"George Best\")","lastModifiedDate":"2021-03-27"},{"lineNumber":166,"author":{"gitId":"arsatis"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"arsatis"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"arsatis"},"content":"            .withAddress(\"4th street\")","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"arsatis"},"content":"            .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":170,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":171,"author":{"gitId":"arsatis"},"content":"    // Manually added readers","lastModifiedDate":"2021-03-27"},{"lineNumber":172,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":173,"author":{"gitId":"arsatis"},"content":"    public static final Reader HOON \u003d new ReaderBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":174,"author":{"gitId":"arsatis"},"content":"            .withName(\"Hoon Meier\")","lastModifiedDate":"2021-03-27"},{"lineNumber":175,"author":{"gitId":"arsatis"},"content":"            .withPhone(\"8482424\")","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"arsatis"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"arsatis"},"content":"            .withAddress(\"little india\")","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"arsatis"},"content":"            .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"arsatis"},"content":"    public static final Reader IDA \u003d new ReaderBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":181,"author":{"gitId":"arsatis"},"content":"            .withName(\"Ida Mueller\")","lastModifiedDate":"2021-03-27"},{"lineNumber":182,"author":{"gitId":"arsatis"},"content":"            .withPhone(\"8482131\")","lastModifiedDate":"2021-03-27"},{"lineNumber":183,"author":{"gitId":"arsatis"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"arsatis"},"content":"            .withAddress(\"chicago ave\")","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"arsatis"},"content":"            .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":187,"author":{"gitId":"arsatis"},"content":"    // Manually added - Reader\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-03-07"},{"lineNumber":188,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":189,"author":{"gitId":"arsatis"},"content":"    public static final Reader AMY \u003d new ReaderBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":190,"author":{"gitId":"arsatis"},"content":"            .withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-27"},{"lineNumber":191,"author":{"gitId":"arsatis"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-03-27"},{"lineNumber":192,"author":{"gitId":"arsatis"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-03-27"},{"lineNumber":193,"author":{"gitId":"arsatis"},"content":"            .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-03-27"},{"lineNumber":194,"author":{"gitId":"arsatis"},"content":"            .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-03-27"},{"lineNumber":195,"author":{"gitId":"arsatis"},"content":"            .build();","lastModifiedDate":"2021-03-27"},{"lineNumber":196,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":197,"author":{"gitId":"arsatis"},"content":"    public static final Reader BOB \u003d new ReaderBuilder()","lastModifiedDate":"2021-03-27"},{"lineNumber":198,"author":{"gitId":"arsatis"},"content":"            .withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-27"},{"lineNumber":199,"author":{"gitId":"arsatis"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-27"},{"lineNumber":200,"author":{"gitId":"arsatis"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-27"},{"lineNumber":201,"author":{"gitId":"arsatis"},"content":"            .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-03-27"},{"lineNumber":202,"author":{"gitId":"arsatis"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-03-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":205,"author":{"gitId":"GJ0407790"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Records \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":207,"author":{"gitId":"arsatis"},"content":"    public static final Record RECORD_A \u003d new Record(","lastModifiedDate":"2021-03-27"},{"lineNumber":208,"author":{"gitId":"GJ0407790"},"content":"            new Barcode(Barcode.MAX_VALUE), new Name(\"Alex Yeoh\"), new DateBorrowed(\"2020-11-23T08:30:00\")","lastModifiedDate":"2021-03-29"},{"lineNumber":209,"author":{"gitId":"arsatis"},"content":"    );","lastModifiedDate":"2021-03-27"},{"lineNumber":210,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":211,"author":{"gitId":"arsatis"},"content":"    public static final Record RECORD_B \u003d new Record(","lastModifiedDate":"2021-03-27"},{"lineNumber":212,"author":{"gitId":"GJ0407790"},"content":"            new Barcode(Barcode.MAX_VALUE - 2), new Name(\"Bernice Yu\"), new DateBorrowed(\"2021-01-22T23:30:00\")","lastModifiedDate":"2021-03-29"},{"lineNumber":213,"author":{"gitId":"arsatis"},"content":"    );","lastModifiedDate":"2021-03-27"},{"lineNumber":214,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":217,"author":{"gitId":"GJ0407790"},"content":"    private TypicalModels() {} // prevents instantiation","lastModifiedDate":"2021-03-17"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":220,"author":{"gitId":"GJ0407790"},"content":"     * Returns an {@code SmartLib} with all the typical books, readers and records.","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":222,"author":{"gitId":"arsatis"},"content":"    public static SmartLib getTypicalSmartLib() {","lastModifiedDate":"2021-03-07"},{"lineNumber":223,"author":{"gitId":"GJ0407790"},"content":"        SmartLib sl \u003d new SmartLib();","lastModifiedDate":"2021-03-17"},{"lineNumber":224,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":225,"author":{"gitId":"GJ0407790"},"content":"        for (Book book : getTypicalBooks()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":226,"author":{"gitId":"GJ0407790"},"content":"            sl.addBook(book);","lastModifiedDate":"2021-03-17"},{"lineNumber":227,"author":{"gitId":"GJ0407790"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":228,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":229,"author":{"gitId":"arsatis"},"content":"        for (Reader reader : getTypicalReaders()) {","lastModifiedDate":"2021-03-07"},{"lineNumber":230,"author":{"gitId":"GJ0407790"},"content":"            sl.addReader(reader);","lastModifiedDate":"2021-03-17"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":232,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":233,"author":{"gitId":"gycc7253"},"content":"        for (Record record : getTypicalRecords()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":234,"author":{"gitId":"GJ0407790"},"content":"            sl.addRecord(record);","lastModifiedDate":"2021-03-17"},{"lineNumber":235,"author":{"gitId":"gycc7253"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":236,"author":{"gitId":"arsatis"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":237,"author":{"gitId":"GJ0407790"},"content":"        return sl;","lastModifiedDate":"2021-03-17"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":240,"author":{"gitId":"gycc7253"},"content":"    private static List\u003cRecord\u003e getTypicalRecords() {","lastModifiedDate":"2021-03-14"},{"lineNumber":241,"author":{"gitId":"arsatis"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(RECORD_A, RECORD_B));","lastModifiedDate":"2021-03-27"},{"lineNumber":242,"author":{"gitId":"gycc7253"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":243,"author":{"gitId":"gycc7253"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":244,"author":{"gitId":"arsatis"},"content":"    public static List\u003cReader\u003e getTypicalReaders() {","lastModifiedDate":"2021-03-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":247,"author":{"gitId":"GJ0407790"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":248,"author":{"gitId":"GJ0407790"},"content":"    public static List\u003cBook\u003e getTypicalBooks() {","lastModifiedDate":"2021-03-17"},{"lineNumber":249,"author":{"gitId":"GJ0407790"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(HARRY_PORTER, PROMISE_LAND, LEGACY, HABIT, POWER, LIFE, SECRET));","lastModifiedDate":"2021-03-17"},{"lineNumber":250,"author":{"gitId":"GJ0407790"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"arsatis":164,"Nanxi-Huang":2,"GJ0407790":37,"gycc7253":22,"-":26}},{"path":"src/test/java/seedu/smartlib/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.ui;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"gycc7253":1,"-":34}},{"path":"src/test/java/seedu/smartlib/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gycc7253"},"content":"package seedu.smartlib.ui;","lastModifiedDate":"2021-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gycc7253"},"content":"import static seedu.smartlib.testutil.Assert.assertThrows;","lastModifiedDate":"2021-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"gycc7253"},"content":"import seedu.smartlib.MainApp;","lastModifiedDate":"2021-02-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"gycc7253":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"\u003c?import seedu.smartlib.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"gycc7253":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"gycc7253"},"content":"\u003cfx:root type\u003d\"seedu.smartlib.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-02-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"gycc7253":1,"-":5}}]
