[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"[![Java CI](https://github.com/AY2021S2-CS2103T-T10-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2021S2-CS2103T-T10-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-02-22"},{"lineNumber":2,"author":{"gitId":"kaixiangtay"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-T10-2/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103T-T10-2/tp)","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"Team project name: **PlanIT**","lastModifiedDate":"2021-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"**PlanIT** is a todo list, calendar application for NUS computer science","lastModifiedDate":"2021-02-26"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"students with a busy schedule to quickly and efficiently add classes","lastModifiedDate":"2021-02-26"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"for modules and easily view their tasks.","lastModifiedDate":"2021-02-26"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"It is optimised for users who prefer typing.","lastModifiedDate":"2021-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-09"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"This project is based on the AddressBook-Level3 project created by the","lastModifiedDate":"2021-02-26"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"[SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-02-26"}],"authorContributionMap":{"LimJunxue":8,"kaixiangtay":1,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"    archiveName \u003d \u0027planit.jar\u0027","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"maxxng"},"content":"run {","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"maxxng"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"LimJunxue"},"content":"run {","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"LimJunxue"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"kaixiangtay"},"content":"compileJava {","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"kaixiangtay"},"content":"    options.compilerArgs \u003c\u003c \"-Xlint:unchecked\" \u003c\u003c \"-Xlint:deprecation\"","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"kaixiangtay"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"LimJunxue":5,"maxxng":2,"kaixiangtay":4,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"### Max Ng","lastModifiedDate":"2021-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"\u003cimg src\u003d\"images/maxxng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"[[github](https://github.com/maxxng)]","lastModifiedDate":"2021-02-24"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"[[portfolio](team/maxxng.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"* Role: Developer","lastModifiedDate":"2021-02-26"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"* Responsibilities: Integration / Code Quality / Testing","lastModifiedDate":"2021-02-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":22,"author":{"gitId":"maxxng"},"content":"### Lee Han Bin","lastModifiedDate":"2021-02-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"habi39"},"content":"\u003cimg src\u003d\"images/habi39.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"habi39"},"content":"[[homepage](http://www.comp.nus.edu.sg/~habi39)]","lastModifiedDate":"2021-02-24"},{"lineNumber":27,"author":{"gitId":"habi39"},"content":"[[github](https://github.com/habi39)]","lastModifiedDate":"2021-02-24"},{"lineNumber":28,"author":{"gitId":"habi39"},"content":"[[portfolio](team/habi39.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"* Role: Team Lead / Developer","lastModifiedDate":"2021-02-26"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"* Responsibilities: Integration / Testing","lastModifiedDate":"2021-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"kaixiangtay"},"content":"### Tay Kai Xiang","lastModifiedDate":"2021-02-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"kaixiangtay"},"content":"\u003cimg src\u003d\"images/kaixiangtay.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"kaixiangtay"},"content":"[[github](http://github.com/kaixiangtay)]","lastModifiedDate":"2021-02-24"},{"lineNumber":37,"author":{"gitId":"kaixiangtay"},"content":"[[portfolio](team/kaixiangtay.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-02-24"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"* Responsibilities: Code Quality / Deliverables and Deadline / Scheduling and Tracking","lastModifiedDate":"2021-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"### Lau Cheuk Ying","lastModifiedDate":"2021-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"\u003cimg src\u003d\"images/mesyeux.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"[[github](http://github.com/mesyeux/ip)]","lastModifiedDate":"2021-02-24"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"[[portfolio](team/mesyeux.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-02-26"},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"* Responsibilities: Documentation / Testing","lastModifiedDate":"2021-02-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"### Lim Junxue","lastModifiedDate":"2021-02-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"\u003cimg src\u003d\"images/limjunxue.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"[[github](http://github.com/LimJunxue)]","lastModifiedDate":"2021-02-24"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"[[portfolio](team/limjunxue.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"mesyeux"},"content":"* Responsibilities: Testing / Code Quality","lastModifiedDate":"2021-02-26"}],"authorContributionMap":{"maxxng":5,"LimJunxue":4,"mesyeux":11,"kaixiangtay":4,"habi39":4,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"habi39"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete-task 1`.","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"LimJunxue"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `TaskListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"LimJunxue"},"content":"1. `Logic` uses the `PlannerParser` class to parse the user command.","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"LimJunxue"},"content":"1. The command execution can affect the `Model` (e.g. adding a task).","lastModifiedDate":"2021-03-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"habi39"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete-task 1\")` API call.","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"habi39"},"content":"![Interactions Inside the Logic Component for the `delete-task 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"habi39"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteTaskCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"LimJunxue"},"content":"* stores the planner data.","lastModifiedDate":"2021-03-11"},{"lineNumber":106,"author":{"gitId":"LimJunxue"},"content":"* exposes an unmodifiable `ObservableList\u003cTask\u003e` and `ObservableList\u003cTag\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to these lists so that the UI automatically updates when the data in the lists change.","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"LimJunxue"},"content":"* exposes an unmodifiable `ObservableCalendarDate` for the calendar to observe.","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"LimJunxue"},"content":"* can save the planner data in json format and read it back.","lastModifiedDate":"2021-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"habi39"},"content":"Step 2. The user executes `delete-task 5` command to delete the 5th task in the address book. The `delete-task` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete-task 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"LimJunxue"},"content":"Step 3. The user executes `add n/David …​` to add a new task. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"LimJunxue"},"content":"Step 4. The user now decides that adding the task was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-03-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"#### Design consideration:","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"habi39"},"content":"  * Pros: Will use less memory (e.g. for `delete-task`, just save the task being deleted).","lastModifiedDate":"2021-03-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"LimJunxue"},"content":"### Viewing list of tags in the tags panel","lastModifiedDate":"2021-03-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":211,"author":{"gitId":"LimJunxue"},"content":"Each task may be associated with 0 or more tags that are stored in the `UniqueTagList`. The `UniqueTagList` ensures that","lastModifiedDate":"2021-03-24"},{"lineNumber":212,"author":{"gitId":"LimJunxue"},"content":"no 2 tags are duplicate in the program at 1 time, emphasizing the abstraction of tags as an Object.","lastModifiedDate":"2021-03-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":214,"author":{"gitId":"LimJunxue"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":215,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":216,"author":{"gitId":"LimJunxue"},"content":"The `UniqueTagList` then exposes an unmodifiable `ObservableList\u003cTag\u003e` to be observed by the `UI`, much like how the","lastModifiedDate":"2021-03-24"},{"lineNumber":217,"author":{"gitId":"LimJunxue"},"content":"list of tasks is being observed by the `UI`. This tag list is presented visually using `TagListPanel` in `UI`. Below is","lastModifiedDate":"2021-03-25"},{"lineNumber":218,"author":{"gitId":"LimJunxue"},"content":"an activity diagram illustrating how a command will trigger a change in the `UniqueTagList`, in continuation from the","lastModifiedDate":"2021-03-25"},{"lineNumber":219,"author":{"gitId":"LimJunxue"},"content":"delete command activity diagram in the","lastModifiedDate":"2021-03-25"},{"lineNumber":220,"author":{"gitId":"LimJunxue"},"content":"[`Logic`](#logic-component) section:","lastModifiedDate":"2021-03-24"},{"lineNumber":221,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":222,"author":{"gitId":"LimJunxue"},"content":"![UniqueTagListSequenceDiagram](images/UniqueTagListSequenceDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":223,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":224,"author":{"gitId":"LimJunxue"},"content":"The `UniqueTagList` class encapsulates the data and related behavior of a unique tag list, which removes the given tag","lastModifiedDate":"2021-03-24"},{"lineNumber":225,"author":{"gitId":"LimJunxue"},"content":"from its internal list in the diagram above. The `ModelManager` provides access to the list for the `UI` as shown","lastModifiedDate":"2021-03-24"},{"lineNumber":226,"author":{"gitId":"LimJunxue"},"content":"below:","lastModifiedDate":"2021-03-24"},{"lineNumber":227,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":228,"author":{"gitId":"LimJunxue"},"content":"![UniqueTagListSequenceDiagram2](images/UniqueTagListSequenceDiagram2.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":229,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":230,"author":{"gitId":"LimJunxue"},"content":"As seen, there is a clear separation of responsibilities between the `UI`, `Logic` and `Model`, which complies with","lastModifiedDate":"2021-03-24"},{"lineNumber":231,"author":{"gitId":"LimJunxue"},"content":"the Observer pattern where the view in `UI` communicates with the `UniqueTagList` in `Model` through an","lastModifiedDate":"2021-03-24"},{"lineNumber":232,"author":{"gitId":"LimJunxue"},"content":"interface, subscribing to the changes in the list. Thus, coupling is reduced.","lastModifiedDate":"2021-03-31"},{"lineNumber":233,"author":{"gitId":"LimJunxue"},"content":"This interface is actually `\u003c\u003cLogic\u003e\u003e` and `\u003c\u003cModel\u003e\u003e`, implemented by `LogicManager` and `ModelManager`, which are","lastModifiedDate":"2021-03-24"},{"lineNumber":234,"author":{"gitId":"LimJunxue"},"content":"abstracted out of the diagram for more concrete representation.","lastModifiedDate":"2021-03-24"},{"lineNumber":235,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":236,"author":{"gitId":"LimJunxue"},"content":"### Viewing tasks on a date and changing the calendar\u0027s date","lastModifiedDate":"2021-04-07"},{"lineNumber":237,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":238,"author":{"gitId":"LimJunxue"},"content":"The `view` command can get and list all tasks with dates and their recurring schedule\u0027s dates on a particular date. The","lastModifiedDate":"2021-03-31"},{"lineNumber":239,"author":{"gitId":"LimJunxue"},"content":"next argument for the command is taken as the `DATE` and used in the predicate that filters the task list stored. The","lastModifiedDate":"2021-03-31"},{"lineNumber":240,"author":{"gitId":"LimJunxue"},"content":"resulting filtered task list is displayed on the `TaskListPanel` in the app. The following activity diagram illustrates","lastModifiedDate":"2021-03-31"},{"lineNumber":241,"author":{"gitId":"LimJunxue"},"content":"the workflow when a user uses the `view` command:","lastModifiedDate":"2021-03-31"},{"lineNumber":242,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":243,"author":{"gitId":"LimJunxue"},"content":"![ViewDateActivityDiagram](images/ViewDateActivityDiagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":244,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":245,"author":{"gitId":"LimJunxue"},"content":"The given date argument is used in `TaskOnDatePredicate` which is an aggregation of 2 other predicates:","lastModifiedDate":"2021-03-31"},{"lineNumber":246,"author":{"gitId":"LimJunxue"},"content":"`TaskDateOnDatePredicate` and `TaskScheduledOnDatePredicate`. The sequence diagram below shows how the command is parsed","lastModifiedDate":"2021-03-31"},{"lineNumber":247,"author":{"gitId":"LimJunxue"},"content":"and executed:","lastModifiedDate":"2021-03-31"},{"lineNumber":248,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":249,"author":{"gitId":"LimJunxue"},"content":"![ViewDateSequenceDiagram](images/ViewDateSequenceDiagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":250,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":251,"author":{"gitId":"LimJunxue"},"content":"Updating the filtered task list causes a change in the `ObservableTaskList` encapsulated in a `UniqueTaskList`, in turn","lastModifiedDate":"2021-03-31"},{"lineNumber":252,"author":{"gitId":"LimJunxue"},"content":"encapsulated within the model and planner. The `ObservableTaskList` then propagates the changes to the `TaskListPanel`","lastModifiedDate":"2021-03-31"},{"lineNumber":253,"author":{"gitId":"LimJunxue"},"content":"to be viewed.","lastModifiedDate":"2021-03-31"},{"lineNumber":254,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":255,"author":{"gitId":"LimJunxue"},"content":"#### Changing the calendar\u0027s viewing date","lastModifiedDate":"2021-03-31"},{"lineNumber":256,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":257,"author":{"gitId":"LimJunxue"},"content":"The date given in the view command is also used to update the calendar. This is implemented as an `Observable` object","lastModifiedDate":"2021-03-31"},{"lineNumber":258,"author":{"gitId":"LimJunxue"},"content":"called `ObservableCalendarDate`, stored within the model encapsulated by the planner. It is passed to the","lastModifiedDate":"2021-03-31"},{"lineNumber":259,"author":{"gitId":"LimJunxue"},"content":"`CalendarPanel` upon instantiation in the `MainWindow` view. The `CalendarPanel` implements an `Observer` interface,","lastModifiedDate":"2021-03-31"},{"lineNumber":260,"author":{"gitId":"LimJunxue"},"content":"which subscribes to the `Observable` for notifications whenever there is a change in date caused by the `view` command.","lastModifiedDate":"2021-03-31"},{"lineNumber":261,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":262,"author":{"gitId":"LimJunxue"},"content":"![ObservableCalendarDateDiagram](images/ObservableCalendarDateClassDiagram.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":263,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":264,"author":{"gitId":"LimJunxue"},"content":"Thus, `CalendarPanel` and `ObservableCalendarDate` conforms to the observer pattern, reducing coupling.","lastModifiedDate":"2021-03-31"},{"lineNumber":265,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":266,"author":{"gitId":"maxxng"},"content":"### Mark task as done","lastModifiedDate":"2021-03-16"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"maxxng"},"content":"A task has a Status attribute which can be marked as done, using the Done command.","lastModifiedDate":"2021-03-16"},{"lineNumber":269,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":270,"author":{"gitId":"maxxng"},"content":"  * The Status attribute is a data field belonging to Task, and only has 2 valid values: \u0027done\u0027 and \u0027not done\u0027.","lastModifiedDate":"2021-03-16"},{"lineNumber":271,"author":{"gitId":"maxxng"},"content":"  * The doneCommand only takes in a single parameter, INDEX, which must be a valid positive integer.","lastModifiedDate":"2021-03-16"},{"lineNumber":272,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":273,"author":{"gitId":"maxxng"},"content":"The following activity diagram illustrates how a user might utilise this feature:","lastModifiedDate":"2021-03-16"},{"lineNumber":274,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":275,"author":{"gitId":"maxxng"},"content":"![DoneCommandActivityDiagram](images/DoneCommandActivityDiagram.png)","lastModifiedDate":"2021-03-16"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"maxxng"},"content":"The following sequence diagram has been simplified to show the main processes called during the execution of","lastModifiedDate":"2021-03-22"},{"lineNumber":278,"author":{"gitId":"maxxng"},"content":"DoneCommand.","lastModifiedDate":"2021-03-22"},{"lineNumber":279,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":280,"author":{"gitId":"maxxng"},"content":"![DoneSequenceDiagram](images/DoneSequenceDiagram.png)","lastModifiedDate":"2021-03-22"},{"lineNumber":281,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":282,"author":{"gitId":"maxxng"},"content":"As seen from the sequence diagram above, the Done Command makes use of the setTask() function to update the model","lastModifiedDate":"2021-03-22"},{"lineNumber":283,"author":{"gitId":"maxxng"},"content":"since this process is equivalent to updating the status attribute from \u0027not done\u0027 to \u0027done\u0027. This abides by the DRY","lastModifiedDate":"2021-03-22"},{"lineNumber":284,"author":{"gitId":"maxxng"},"content":"principle to avoid writing functions with similar logical processes.","lastModifiedDate":"2021-03-22"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":287,"author":{"gitId":"kaixiangtay"},"content":"### Find matching task using keyword(s)","lastModifiedDate":"2021-03-24"},{"lineNumber":288,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":289,"author":{"gitId":"kaixiangtay"},"content":"The `find` command is applicable to **all tasks** within PlanIT. There are 3 different methods of `find` implementations:","lastModifiedDate":"2021-03-24"},{"lineNumber":290,"author":{"gitId":"kaixiangtay"},"content":"1. Find by title : Find all matching task(s) using any matching full keyword(s) from title of task using `find [KEYWORDS]`","lastModifiedDate":"2021-03-24"},{"lineNumber":291,"author":{"gitId":"kaixiangtay"},"content":"2. First by tag : Find all matching task(s) with exact matching full keyword(s) from tag(s) of task using `find t/[TAG]`","lastModifiedDate":"2021-03-24"},{"lineNumber":292,"author":{"gitId":"kaixiangtay"},"content":"   Only this method can be used to search matching task(s) with full keyword(s) from multiple tags like `find t/ t/`","lastModifiedDate":"2021-03-24"},{"lineNumber":293,"author":{"gitId":"kaixiangtay"},"content":"3. Find by description : Find all matching task(s) using any matching full keyword(s) from description of task using `find d/[DESCRIPTION]`","lastModifiedDate":"2021-03-24"},{"lineNumber":294,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":295,"author":{"gitId":"kaixiangtay"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** All 3 methods cannot be mixed with each other.\u003c/div\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":296,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":297,"author":{"gitId":"kaixiangtay"},"content":"Below is an activity diagram of the above 3 methods which illustrates the general process applicable for the 3 different find implementation queries.","lastModifiedDate":"2021-03-24"},{"lineNumber":298,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":299,"author":{"gitId":"kaixiangtay"},"content":"![FindActivityDiagram](images/FindActivityDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":300,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":301,"author":{"gitId":"kaixiangtay"},"content":"Below is also an example of the default method of find by title general process description followed by the sequence diagram illustration.","lastModifiedDate":"2021-03-24"},{"lineNumber":302,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":303,"author":{"gitId":"kaixiangtay"},"content":"##### Find by title","lastModifiedDate":"2021-03-24"},{"lineNumber":304,"author":{"gitId":"kaixiangtay"},"content":"1. After the `find` command is entered by the user, the input argument is passed to `LogicManager`.","lastModifiedDate":"2021-03-24"},{"lineNumber":305,"author":{"gitId":"kaixiangtay"},"content":"2. The same argument will then be parsed into `PlannerParser`.","lastModifiedDate":"2021-03-24"},{"lineNumber":306,"author":{"gitId":"kaixiangtay"},"content":"2. `FindCommandParser` will be generated when the command word `find` is detected by the `PlannerParser`.","lastModifiedDate":"2021-03-24"},{"lineNumber":307,"author":{"gitId":"kaixiangtay"},"content":"3. `FindCommandParser` will then parses the keywords to `TitleContainsKeywordsPredicate`.","lastModifiedDate":"2021-03-24"},{"lineNumber":308,"author":{"gitId":"kaixiangtay"},"content":"4. `TitleContainsKeywordsPredicate` will be generated and a predicate value will be returned to `FindCommandParser`.","lastModifiedDate":"2021-03-24"},{"lineNumber":309,"author":{"gitId":"kaixiangtay"},"content":"5. `FindCommandParser` will send the predicate value to `FindCommand`.","lastModifiedDate":"2021-03-24"},{"lineNumber":310,"author":{"gitId":"kaixiangtay"},"content":"6. `FindCommand` will be generated and returns the command to the `LogicManager`.","lastModifiedDate":"2021-03-24"},{"lineNumber":311,"author":{"gitId":"kaixiangtay"},"content":"7. `FindCommand` will call `execute(model)` function and it will pass predicate value into the `Model` through `updateFilteredTaskList`.","lastModifiedDate":"2021-03-24"},{"lineNumber":312,"author":{"gitId":"kaixiangtay"},"content":"8. `filteredTasks` list will be updated accordingly in `ModelManager` and the filtered list display in PlanIT will be updated.","lastModifiedDate":"2021-03-24"},{"lineNumber":313,"author":{"gitId":"kaixiangtay"},"content":"9. `CommandResult` will eventually be returned to the `LogicManager` and feedback will be given to the user.","lastModifiedDate":"2021-03-24"},{"lineNumber":314,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":315,"author":{"gitId":"kaixiangtay"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:**For find by tag and find by description,","lastModifiedDate":"2021-03-24"},{"lineNumber":316,"author":{"gitId":"LimJunxue"},"content":"the steps are similar except for step 3 and 4 where it will be TagContainsKeywordsPredicate and","lastModifiedDate":"2021-03-24"},{"lineNumber":317,"author":{"gitId":"LimJunxue"},"content":"DescriptionContainsKeywordsPredicate ","lastModifiedDate":"2021-03-24"},{"lineNumber":318,"author":{"gitId":"kaixiangtay"},"content":"respectively in place of TitleContainsKeywordsPredicate \u003c/div\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":319,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":320,"author":{"gitId":"kaixiangtay"},"content":"\u003cimg src\u003d\"images/FindSequenceDiagram.png\" width\u003d\"1800\" /\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":321,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":322,"author":{"gitId":"kaixiangtay"},"content":"##### Design Considerations","lastModifiedDate":"2021-03-24"},{"lineNumber":323,"author":{"gitId":"LimJunxue"},"content":"For the `find` command, there are 2 design choices being considered in whether to split the 3 implementation methods","lastModifiedDate":"2021-03-24"},{"lineNumber":324,"author":{"gitId":"LimJunxue"},"content":"like `findTag`,","lastModifiedDate":"2021-03-24"},{"lineNumber":325,"author":{"gitId":"kaixiangtay"},"content":"`findTitle`, `findDescription`  into three different commands separately ","lastModifiedDate":"2021-03-24"},{"lineNumber":326,"author":{"gitId":"kaixiangtay"},"content":"or just use a single command `find` in addition with command line prefix to perform 3 different implementations. ","lastModifiedDate":"2021-03-24"},{"lineNumber":327,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":328,"author":{"gitId":"kaixiangtay"},"content":"1. **Current design**: Having a single command `find` to perform 3 different implementations.","lastModifiedDate":"2021-03-24"},{"lineNumber":329,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":330,"author":{"gitId":"kaixiangtay"},"content":"    - Advantages:","lastModifiedDate":"2021-03-24"},{"lineNumber":331,"author":{"gitId":"LimJunxue"},"content":"        - From the user point of view, they do not have to remember extra commands since there are a lot of commands","lastModifiedDate":"2021-03-24"},{"lineNumber":332,"author":{"gitId":"LimJunxue"},"content":"          within PlanIT","lastModifiedDate":"2021-03-24"},{"lineNumber":333,"author":{"gitId":"kaixiangtay"},"content":"          and it is quite intuitive to remember the command line prefix like `t/` `d/`since these prefix will be used for most commands in the PlanIT.","lastModifiedDate":"2021-03-24"},{"lineNumber":334,"author":{"gitId":"kaixiangtay"},"content":"        - The problem of duplicate codes will be minimised since the general process from LogicManager -\u003e PlannerParser ","lastModifiedDate":"2021-03-24"},{"lineNumber":335,"author":{"gitId":"kaixiangtay"},"content":"          -\u003e FindCommandParser -\u003e FindCommand to Model and CommandResult are similar for the 3 different methods. The place where they differ","lastModifiedDate":"2021-03-24"},{"lineNumber":336,"author":{"gitId":"kaixiangtay"},"content":"          is only from FindCommand Parser to TitleContainsKeyWordsPredicate, DescriptionContainsKeywordsPredicate and TagContainsKeywordsPredicate.","lastModifiedDate":"2021-03-24"},{"lineNumber":337,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":338,"author":{"gitId":"kaixiangtay"},"content":"    - Disadvantages:","lastModifiedDate":"2021-03-24"},{"lineNumber":339,"author":{"gitId":"kaixiangtay"},"content":"        - The code will be cluttered in a FindCommandParser for the 3 different implementation methods.","lastModifiedDate":"2021-03-24"},{"lineNumber":340,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":341,"author":{"gitId":"kaixiangtay"},"content":"2. **Alternative design**: Having 3 different commands `findTag`, `findTitle`, `findDescription`","lastModifiedDate":"2021-03-24"},{"lineNumber":342,"author":{"gitId":"kaixiangtay"},"content":"   to perform 3 different implementations.","lastModifiedDate":"2021-03-24"},{"lineNumber":343,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":344,"author":{"gitId":"kaixiangtay"},"content":"    - Advantages:","lastModifiedDate":"2021-03-24"},{"lineNumber":345,"author":{"gitId":"kaixiangtay"},"content":"        - Code will be segregated out and parser for each implementation will not be so complex.","lastModifiedDate":"2021-03-24"},{"lineNumber":346,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":347,"author":{"gitId":"kaixiangtay"},"content":"    - Disadvantages:","lastModifiedDate":"2021-03-24"},{"lineNumber":348,"author":{"gitId":"LimJunxue"},"content":"        - There is a need to use 3 parser and 3 commands in code implementation which increase the likelihood of code","lastModifiedDate":"2021-03-24"},{"lineNumber":349,"author":{"gitId":"LimJunxue"},"content":"          duplication.","lastModifiedDate":"2021-03-24"},{"lineNumber":350,"author":{"gitId":"kaixiangtay"},"content":"        - Since there are more commands for the user to remember, it is highly likely for the user to keep referring to the user guide ","lastModifiedDate":"2021-03-24"},{"lineNumber":351,"author":{"gitId":"kaixiangtay"},"content":"          if the user keeps forgetting the various commands.","lastModifiedDate":"2021-03-24"},{"lineNumber":352,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":353,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":354,"author":{"gitId":"mesyeux"},"content":"### Deleting a field from a task","lastModifiedDate":"2021-03-24"},{"lineNumber":355,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":356,"author":{"gitId":"mesyeux"},"content":"A task in the planner\u0027s task list can contain multiple fields. Some of these fields can be deleted without deleting","lastModifiedDate":"2021-03-24"},{"lineNumber":357,"author":{"gitId":"mesyeux"},"content":"the entire task, while other fields are compulsory and cannot be deleted. ","lastModifiedDate":"2021-03-24"},{"lineNumber":358,"author":{"gitId":"mesyeux"},"content":"- Deletable fields: `Deadline`, `RecurringSchedule`, `Description`, `Tag`, `Duration`","lastModifiedDate":"2021-03-24"},{"lineNumber":359,"author":{"gitId":"mesyeux"},"content":"- Non-deletable fields: `Title`, `Status` ","lastModifiedDate":"2021-03-24"},{"lineNumber":360,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":361,"author":{"gitId":"mesyeux"},"content":"An example of how a user might use this command is shown in the activity diagram below.","lastModifiedDate":"2021-03-24"},{"lineNumber":362,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":363,"author":{"gitId":"mesyeux"},"content":"![DeleteFieldActivityDiagram](images/DeleteFieldActivityDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":364,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":365,"author":{"gitId":"mesyeux"},"content":"The following sequence diagram shows how the delete field command works internally.","lastModifiedDate":"2021-03-24"},{"lineNumber":366,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":367,"author":{"gitId":"mesyeux"},"content":"![DeleteFieldSequenceDiagram](images/DeleteFieldSequenceDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":368,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":369,"author":{"gitId":"mesyeux"},"content":"Alternatives: ","lastModifiedDate":"2021-03-24"},{"lineNumber":370,"author":{"gitId":"mesyeux"},"content":"1) Delete field by setting it to an empty string. (Current choice) ","lastModifiedDate":"2021-03-24"},{"lineNumber":371,"author":{"gitId":"mesyeux"},"content":"This approach was chosen as it is easy to implement, and not too much of refactoring of code is needed.","lastModifiedDate":"2021-03-24"},{"lineNumber":372,"author":{"gitId":"mesyeux"},"content":"   ","lastModifiedDate":"2021-03-24"},{"lineNumber":373,"author":{"gitId":"mesyeux"},"content":"2) Delete field by setting it to null.","lastModifiedDate":"2021-03-24"},{"lineNumber":374,"author":{"gitId":"mesyeux"},"content":"    ","lastModifiedDate":"2021-03-24"},{"lineNumber":375,"author":{"gitId":"mesyeux"},"content":"    This approach was not chosen as it would require more refactoring of code - if anything is missed out,","lastModifiedDate":"2021-03-24"},{"lineNumber":376,"author":{"gitId":"mesyeux"},"content":"    it will result in undesirable runtime exceptions.","lastModifiedDate":"2021-03-24"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":382,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":383,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":384,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":385,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"habi39"},"content":"* Mainly NUS computing students","lastModifiedDate":"2021-02-28"},{"lineNumber":394,"author":{"gitId":"habi39"},"content":"* has a need to manage a significant number of task, most of which has deadlines","lastModifiedDate":"2021-02-28"},{"lineNumber":395,"author":{"gitId":"habi39"},"content":"* For computing students, task at hand may take longer than expected","lastModifiedDate":"2021-02-28"},{"lineNumber":396,"author":{"gitId":"habi39"},"content":"* Might have many last minute task.","lastModifiedDate":"2021-02-28"},{"lineNumber":397,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":400,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"habi39"},"content":"**Value proposition**:","lastModifiedDate":"2021-02-28"},{"lineNumber":403,"author":{"gitId":"habi39"},"content":"* Manage tasks faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-02-28"},{"lineNumber":404,"author":{"gitId":"habi39"},"content":"* A quick way to view all tasks due on a specified day","lastModifiedDate":"2021-02-28"},{"lineNumber":405,"author":{"gitId":"habi39"},"content":"* Able to quickly search for an available timing for a particular task","lastModifiedDate":"2021-02-28"},{"lineNumber":406,"author":{"gitId":"habi39"},"content":"* Organising tasks according to projects/modules/date so that users can view these tasks with different filters","lastModifiedDate":"2021-03-30"},{"lineNumber":407,"author":{"gitId":"habi39"},"content":"* Able to adjust and edit task according to user needs","lastModifiedDate":"2021-02-28"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"| Priority | As a …​ | I want to …​ | So that I can…​ |","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"maxxng"},"content":"| -------- | ---------- | --------------- | ------------------ |","lastModifiedDate":"2021-02-28"},{"lineNumber":416,"author":{"gitId":"kaixiangtay"},"content":"| `* * *`  | new user | see usage instructions | refer to instructions when I forget how to use the App  |","lastModifiedDate":"2021-03-16"},{"lineNumber":417,"author":{"gitId":"habi39"},"content":"| `* * *`  | user | add a date to a task | know when to complete it by |","lastModifiedDate":"2021-03-30"},{"lineNumber":418,"author":{"gitId":"maxxng"},"content":"| `* * *`  | user | mark a task as done | remove tasks from the list after completing them |","lastModifiedDate":"2021-02-28"},{"lineNumber":419,"author":{"gitId":"maxxng"},"content":"| `* * *`  | user | view when a task is due | understand how much time I have to complete it |","lastModifiedDate":"2021-02-28"},{"lineNumber":420,"author":{"gitId":"maxxng"},"content":"| `* * *`  | returning user | view all the tasks previously set | avoid resetting all the tasks |","lastModifiedDate":"2021-02-28"},{"lineNumber":421,"author":{"gitId":"kaixiangtay"},"content":"| `* * *`  | user | search using keywords from the task title | find matching tasks quickly when I only can remember the title|","lastModifiedDate":"2021-03-16"},{"lineNumber":422,"author":{"gitId":"kaixiangtay"},"content":"| `* * *`  | user | search using keywords from the tag(s) of task|  find matching tasks from the same category quickly when I only can remember the tag(s).|","lastModifiedDate":"2021-03-17"},{"lineNumber":423,"author":{"gitId":"kaixiangtay"},"content":"| `* * *`  | user | search using keywords from the task description | find matching tasks quickly when I only can remember the description |","lastModifiedDate":"2021-03-16"},{"lineNumber":424,"author":{"gitId":"maxxng"},"content":"| `* * *`  | user | view all my tasks in a list | track tasks I have not done |","lastModifiedDate":"2021-02-28"},{"lineNumber":425,"author":{"gitId":"mesyeux"},"content":"| `* * *`  | user | remove tasks from the list | reduce clutter or remove a mistakenly added task |","lastModifiedDate":"2021-03-30"},{"lineNumber":426,"author":{"gitId":"mesyeux"},"content":"| `* * *`  | user | remove specific fields from a task in the list | manage the details in a task |","lastModifiedDate":"2021-03-30"},{"lineNumber":427,"author":{"gitId":"mesyeux"},"content":"| `* * *`  | user | schedule recurring tasks at a specified frequency | easily set tasks for the future at one go |","lastModifiedDate":"2021-03-30"},{"lineNumber":428,"author":{"gitId":"mesyeux"},"content":"| `* * *`  | user | see how many days I have left until a specific task is due/happening | know how much time I have left to work on the task |","lastModifiedDate":"2021-03-30"},{"lineNumber":429,"author":{"gitId":"mesyeux"},"content":"| `* * *`  | user | see all the statistics for the tasks | track my progress |","lastModifiedDate":"2021-03-30"},{"lineNumber":430,"author":{"gitId":"LimJunxue"},"content":"| `* * *`  | user | see a list of tags currently used | keep track of all my tags |","lastModifiedDate":"2021-04-07"},{"lineNumber":431,"author":{"gitId":"LimJunxue"},"content":"| `* * *`  | user | view all the tasks on a specific date | schedule new tasks during the free time on that day |","lastModifiedDate":"2021-04-07"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"mesyeux"},"content":"(For all use cases below, the **System** is the `PlanIT` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-03-01"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"maxxng"},"content":"#### **Use case: Adding a task**","lastModifiedDate":"2021-03-16"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"LimJunxue"},"content":"1. User enters command to add a task with optional fields to the list.","lastModifiedDate":"2021-04-07"},{"lineNumber":442,"author":{"gitId":"mesyeux"},"content":"2. PlanIT shows the resulting list after adding task to it.","lastModifiedDate":"2021-03-01"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"mesyeux"},"content":"* 1a. PlanIT detects a command of the wrong format.","lastModifiedDate":"2021-03-01"},{"lineNumber":448,"author":{"gitId":"mesyeux"},"content":"    * 1a1. PlanIT requests for user to input command in correct format.","lastModifiedDate":"2021-03-01"},{"lineNumber":449,"author":{"gitId":"mesyeux"},"content":"    * 1a2. User enters command in correct format.","lastModifiedDate":"2021-03-01"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":451,"author":{"gitId":"mesyeux"},"content":"    Steps 1a1-1a2 are repeated until the data entered is correct.","lastModifiedDate":"2021-03-01"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":453,"author":{"gitId":"mesyeux"},"content":"    Use case resumes from step 2.","lastModifiedDate":"2021-03-01"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":455,"author":{"gitId":"maxxng"},"content":"#### **Use case: Viewing all possible commands**","lastModifiedDate":"2021-03-16"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":457,"author":{"gitId":"mesyeux"},"content":"**MSS**","lastModifiedDate":"2021-03-01"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":459,"author":{"gitId":"mesyeux"},"content":"1. User enters command to view all possible commands.","lastModifiedDate":"2021-03-01"},{"lineNumber":460,"author":{"gitId":"mesyeux"},"content":"2. PlanIT displays all possible commands to user.","lastModifiedDate":"2021-03-01"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"LimJunxue"},"content":"#### **Use case: Listing all tasks**","lastModifiedDate":"2021-03-31"},{"lineNumber":465,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":466,"author":{"gitId":"mesyeux"},"content":"**MSS**","lastModifiedDate":"2021-03-01"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"mesyeux"},"content":"1. User enters command to view the list of tasks.","lastModifiedDate":"2021-03-01"},{"lineNumber":469,"author":{"gitId":"mesyeux"},"content":"2. PlanIT displays the complete list of tasks.","lastModifiedDate":"2021-03-01"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"mesyeux"},"content":"   Use case ends.","lastModifiedDate":"2021-03-01"},{"lineNumber":472,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":473,"author":{"gitId":"mesyeux"},"content":"**Extensions**","lastModifiedDate":"2021-03-01"},{"lineNumber":474,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":475,"author":{"gitId":"mesyeux"},"content":"* 1a. PlanIT detects a command to view only uncompleted tasks.","lastModifiedDate":"2021-03-01"},{"lineNumber":476,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":477,"author":{"gitId":"mesyeux"},"content":"    * 1a1. PlanIT displays only uncompleted tasks.","lastModifiedDate":"2021-03-01"},{"lineNumber":478,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":479,"author":{"gitId":"mesyeux"},"content":"    Use case ends.","lastModifiedDate":"2021-03-01"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"habi39"},"content":"#### **Use case: Add a date to a task**","lastModifiedDate":"2021-03-30"},{"lineNumber":482,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":483,"author":{"gitId":"LimJunxue"},"content":"**MSS**","lastModifiedDate":"2021-02-27"},{"lineNumber":484,"author":{"gitId":"LimJunxue"},"content":"1. User \u003cu\u003eadds a task\u003c/u\u003e to the list.","lastModifiedDate":"2021-04-07"},{"lineNumber":485,"author":{"gitId":"LimJunxue"},"content":"2. PlanIt shows task added to the list and updates list.","lastModifiedDate":"2021-02-27"},{"lineNumber":486,"author":{"gitId":"habi39"},"content":"3. User enters command to add a date to a specified task.","lastModifiedDate":"2021-03-30"},{"lineNumber":487,"author":{"gitId":"habi39"},"content":"4. PlanIt shows task with updated date and updates list.","lastModifiedDate":"2021-03-30"},{"lineNumber":488,"author":{"gitId":"habi39"},"content":"5. This task can be viewed in the Calendar User Interface on the day of the date.","lastModifiedDate":"2021-03-30"},{"lineNumber":489,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":490,"author":{"gitId":"LimJunxue"},"content":"**Extensions**","lastModifiedDate":"2021-02-27"},{"lineNumber":491,"author":{"gitId":"LimJunxue"},"content":"* 4a. The given index is invalid.","lastModifiedDate":"2021-02-27"},{"lineNumber":492,"author":{"gitId":"LimJunxue"},"content":"    * 4a1. PlanIt shows error message.","lastModifiedDate":"2021-02-27"},{"lineNumber":493,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":494,"author":{"gitId":"LimJunxue"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-02-27"},{"lineNumber":495,"author":{"gitId":"LimJunxue"},"content":"    ","lastModifiedDate":"2021-02-27"},{"lineNumber":496,"author":{"gitId":"habi39"},"content":"#### **Use case: Add a start time to a task**","lastModifiedDate":"2021-03-22"},{"lineNumber":497,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":498,"author":{"gitId":"habi39"},"content":"**MSS**","lastModifiedDate":"2021-03-22"},{"lineNumber":499,"author":{"gitId":"LimJunxue"},"content":"1. User \u003cu\u003eadds a task\u003c/u\u003e with deadline to the list.","lastModifiedDate":"2021-04-07"},{"lineNumber":500,"author":{"gitId":"habi39"},"content":"2. PlanIt shows task added to the list and updates list.","lastModifiedDate":"2021-03-22"},{"lineNumber":501,"author":{"gitId":"habi39"},"content":"3. User enters command to add a start time to a specified task.","lastModifiedDate":"2021-03-22"},{"lineNumber":502,"author":{"gitId":"habi39"},"content":"4. PlanIt shows task with updated start time and updates list.","lastModifiedDate":"2021-03-22"},{"lineNumber":503,"author":{"gitId":"habi39"},"content":"5. The start time details can be viewed in the Calendar User Interface on the day of the task.","lastModifiedDate":"2021-03-22"},{"lineNumber":504,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":505,"author":{"gitId":"habi39"},"content":"**Extensions**","lastModifiedDate":"2021-03-22"},{"lineNumber":506,"author":{"gitId":"habi39"},"content":"* 4a. The given timeslot on that date is already taken.","lastModifiedDate":"2021-03-22"},{"lineNumber":507,"author":{"gitId":"habi39"},"content":"    * 4a1. PlanIt shows error message.","lastModifiedDate":"2021-03-22"},{"lineNumber":508,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":509,"author":{"gitId":"habi39"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-03-22"},{"lineNumber":510,"author":{"gitId":"habi39"},"content":"    ","lastModifiedDate":"2021-03-22"},{"lineNumber":511,"author":{"gitId":"kaixiangtay"},"content":"#### **Use case: Add a recurring schedule to the task**","lastModifiedDate":"2021-03-23"},{"lineNumber":512,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":513,"author":{"gitId":"habi39"},"content":"**Precondition: The task does not have a date, only repeats in weekly or biweekly basis.**","lastModifiedDate":"2021-03-30"},{"lineNumber":514,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":515,"author":{"gitId":"kaixiangtay"},"content":"**MSS**","lastModifiedDate":"2021-03-23"},{"lineNumber":516,"author":{"gitId":"LimJunxue"},"content":"1. User enters command to \u003cu\u003eadds a task\u003c/u\u003e with recurring schedule to the list.","lastModifiedDate":"2021-04-07"},{"lineNumber":517,"author":{"gitId":"kaixiangtay"},"content":"2. PlanIt shows task with the recurring dates based on the conditions specified by th the user.","lastModifiedDate":"2021-03-24"},{"lineNumber":518,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":519,"author":{"gitId":"kaixiangtay"},"content":"**Extensions**","lastModifiedDate":"2021-03-23"},{"lineNumber":520,"author":{"gitId":"kaixiangtay"},"content":"* 1a. User enters an invalid input format.","lastModifiedDate":"2021-03-24"},{"lineNumber":521,"author":{"gitId":"kaixiangtay"},"content":"    * 1a1. PlanIt display an error message.","lastModifiedDate":"2021-03-24"},{"lineNumber":522,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":523,"author":{"gitId":"kaixiangtay"},"content":"* 1b. User enters a date that has expired or less than a week from current system date.","lastModifiedDate":"2021-03-24"},{"lineNumber":524,"author":{"gitId":"kaixiangtay"},"content":"    * 1b1. PlanIt display an error message.","lastModifiedDate":"2021-03-24"},{"lineNumber":525,"author":{"gitId":"kaixiangtay"},"content":"      ","lastModifiedDate":"2021-03-23"},{"lineNumber":526,"author":{"gitId":"kaixiangtay"},"content":"      Use case ends.   ","lastModifiedDate":"2021-03-23"},{"lineNumber":527,"author":{"gitId":"habi39"},"content":"    ","lastModifiedDate":"2021-03-22"},{"lineNumber":528,"author":{"gitId":"mesyeux"},"content":"#### **Use case: Remove a task**","lastModifiedDate":"2021-03-30"},{"lineNumber":529,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":530,"author":{"gitId":"LimJunxue"},"content":"**MSS**","lastModifiedDate":"2021-02-27"},{"lineNumber":531,"author":{"gitId":"LimJunxue"},"content":"1. User \u003cu\u003eadds a task\u003c/u\u003e to the list.","lastModifiedDate":"2021-04-07"},{"lineNumber":532,"author":{"gitId":"LimJunxue"},"content":"2. PlanIt shows task added to the list and updates list.","lastModifiedDate":"2021-02-27"},{"lineNumber":533,"author":{"gitId":"mesyeux"},"content":"3. User enters command to remove a specified task.","lastModifiedDate":"2021-03-30"},{"lineNumber":534,"author":{"gitId":"mesyeux"},"content":"4. PlanIt shows task that was removed and updates list.","lastModifiedDate":"2021-03-30"},{"lineNumber":535,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":536,"author":{"gitId":"LimJunxue"},"content":"**Extensions**","lastModifiedDate":"2021-02-27"},{"lineNumber":537,"author":{"gitId":"LimJunxue"},"content":"* 4a. The given index is invalid.","lastModifiedDate":"2021-02-27"},{"lineNumber":538,"author":{"gitId":"LimJunxue"},"content":"    * 4a1. PlanIt shows error message.","lastModifiedDate":"2021-02-27"},{"lineNumber":539,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":540,"author":{"gitId":"LimJunxue"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-02-27"},{"lineNumber":541,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":542,"author":{"gitId":"habi39"},"content":"#### **Use case: Sort tasks according to date**","lastModifiedDate":"2021-03-30"},{"lineNumber":543,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":544,"author":{"gitId":"habi39"},"content":"**MSS**","lastModifiedDate":"2021-03-23"},{"lineNumber":545,"author":{"gitId":"LimJunxue"},"content":"1. User \u003cu\u003eadds a task\u003c/u\u003e with a deadline to the list.","lastModifiedDate":"2021-04-07"},{"lineNumber":546,"author":{"gitId":"habi39"},"content":"2. PlanIt shows task added to the list and updates list.","lastModifiedDate":"2021-03-23"},{"lineNumber":547,"author":{"gitId":"habi39"},"content":"3. User enters command to sort tasks either in ascending or descending deadlines with tasks that have ","lastModifiedDate":"2021-03-23"},{"lineNumber":548,"author":{"gitId":"habi39"},"content":"   no deadlines considered to be the latest.","lastModifiedDate":"2021-03-23"},{"lineNumber":549,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":550,"author":{"gitId":"habi39"},"content":"**Extensions**","lastModifiedDate":"2021-03-23"},{"lineNumber":551,"author":{"gitId":"habi39"},"content":"* 4a. There are no deadlines to all tasks.","lastModifiedDate":"2021-03-23"},{"lineNumber":552,"author":{"gitId":"habi39"},"content":"    * 4a1. PlanIt shows tasks to have no change in terms of order.","lastModifiedDate":"2021-03-23"},{"lineNumber":553,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":554,"author":{"gitId":"habi39"},"content":"      Use case ends.","lastModifiedDate":"2021-03-23"},{"lineNumber":555,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":556,"author":{"gitId":"kaixiangtay"},"content":"#### **Use case: Find matching tasks by title**","lastModifiedDate":"2021-03-23"},{"lineNumber":557,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":558,"author":{"gitId":"LimJunxue"},"content":"**MSS**","lastModifiedDate":"2021-02-27"},{"lineNumber":559,"author":{"gitId":"LimJunxue"},"content":"1. User \u003cu\u003eadds a task\u003c/u\u003e with title to the list.","lastModifiedDate":"2021-04-07"},{"lineNumber":560,"author":{"gitId":"kaixiangtay"},"content":"2. PlanIt shows task added to the list and updates list.","lastModifiedDate":"2021-03-23"},{"lineNumber":561,"author":{"gitId":"kaixiangtay"},"content":"3. User enters command to find tasks with given keywords from the task title.","lastModifiedDate":"2021-03-23"},{"lineNumber":562,"author":{"gitId":"kaixiangtay"},"content":"4. PlanIt shows all tasks that matches any full word from the given keywords.","lastModifiedDate":"2021-03-23"},{"lineNumber":563,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":564,"author":{"gitId":"kaixiangtay"},"content":"**Extensions**","lastModifiedDate":"2021-03-23"},{"lineNumber":565,"author":{"gitId":"kaixiangtay"},"content":"* 4a. There are no matching tasks.","lastModifiedDate":"2021-03-23"},{"lineNumber":566,"author":{"gitId":"kaixiangtay"},"content":"    * 4a1. PlanIt shows no matching tasks.","lastModifiedDate":"2021-03-23"},{"lineNumber":567,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":568,"author":{"gitId":"kaixiangtay"},"content":"      Use case ends.","lastModifiedDate":"2021-03-23"},{"lineNumber":569,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":570,"author":{"gitId":"kaixiangtay"},"content":"#### **Use case: Find matching tasks by tag(s)**","lastModifiedDate":"2021-03-23"},{"lineNumber":571,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":572,"author":{"gitId":"kaixiangtay"},"content":"**MSS**","lastModifiedDate":"2021-03-23"},{"lineNumber":573,"author":{"gitId":"LimJunxue"},"content":"1. User \u003cu\u003eadds a task\u003c/u\u003e with tag(s) to the list.","lastModifiedDate":"2021-04-07"},{"lineNumber":574,"author":{"gitId":"kaixiangtay"},"content":"2. PlanIt shows task added to the list and updates list.","lastModifiedDate":"2021-03-23"},{"lineNumber":575,"author":{"gitId":"kaixiangtay"},"content":"3. User enters command to find tasks with given keyword(s) from the task tag(s).","lastModifiedDate":"2021-03-23"},{"lineNumber":576,"author":{"gitId":"kaixiangtay"},"content":"4. PlanIt shows all tasks that matches the full keyword for the tag.","lastModifiedDate":"2021-03-23"},{"lineNumber":577,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":578,"author":{"gitId":"kaixiangtay"},"content":"**Extensions**","lastModifiedDate":"2021-03-23"},{"lineNumber":579,"author":{"gitId":"kaixiangtay"},"content":"* 4a. There are no matching tasks.","lastModifiedDate":"2021-03-23"},{"lineNumber":580,"author":{"gitId":"kaixiangtay"},"content":"    * 4a1. PlanIt shows no matching tasks.","lastModifiedDate":"2021-03-23"},{"lineNumber":581,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":582,"author":{"gitId":"kaixiangtay"},"content":"      Use case ends.","lastModifiedDate":"2021-03-23"},{"lineNumber":583,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":584,"author":{"gitId":"kaixiangtay"},"content":"#### **Use case: Find matching tasks by multi-line description**","lastModifiedDate":"2021-03-23"},{"lineNumber":585,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":586,"author":{"gitId":"kaixiangtay"},"content":"**MSS**","lastModifiedDate":"2021-03-23"},{"lineNumber":587,"author":{"gitId":"LimJunxue"},"content":"1. User \u003cu\u003eadds a task\u003c/u\u003e with multi-line description to the list.","lastModifiedDate":"2021-04-07"},{"lineNumber":588,"author":{"gitId":"LimJunxue"},"content":"2. PlanIt shows task added to the list and updates list.","lastModifiedDate":"2021-02-27"},{"lineNumber":589,"author":{"gitId":"kaixiangtay"},"content":"3. User enters command to find tasks with given keyword(s) from the task description.","lastModifiedDate":"2021-03-23"},{"lineNumber":590,"author":{"gitId":"kaixiangtay"},"content":"4. PlanIt shows all tasks that matches any keyword from the description.","lastModifiedDate":"2021-03-23"},{"lineNumber":591,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":592,"author":{"gitId":"LimJunxue"},"content":"**Extensions**","lastModifiedDate":"2021-02-27"},{"lineNumber":593,"author":{"gitId":"LimJunxue"},"content":"* 4a. There are no matching tasks.","lastModifiedDate":"2021-02-27"},{"lineNumber":594,"author":{"gitId":"LimJunxue"},"content":"    * 4a1. PlanIt shows no matching tasks.","lastModifiedDate":"2021-02-27"},{"lineNumber":595,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":596,"author":{"gitId":"LimJunxue"},"content":"      Use case ends.","lastModifiedDate":"2021-02-27"},{"lineNumber":597,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":598,"author":{"gitId":"maxxng"},"content":"#### **Use case: Mark task as done**","lastModifiedDate":"2021-03-16"},{"lineNumber":599,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":600,"author":{"gitId":"maxxng"},"content":"**MSS**","lastModifiedDate":"2021-03-16"},{"lineNumber":601,"author":{"gitId":"LimJunxue"},"content":"1. User \u003cu\u003eadds a task\u003c/u\u003e to the list.","lastModifiedDate":"2021-04-07"},{"lineNumber":602,"author":{"gitId":"maxxng"},"content":"2. PlanIt shows task added to the list and updates list.","lastModifiedDate":"2021-03-16"},{"lineNumber":603,"author":{"gitId":"maxxng"},"content":"3. User enters command to mark a task as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":604,"author":{"gitId":"maxxng"},"content":"4. PlanIt updates Task in the model with Status updated to \u0027done\u0027.","lastModifiedDate":"2021-03-16"},{"lineNumber":605,"author":{"gitId":"maxxng"},"content":"5. PlanIt displays doneCommand success message.","lastModifiedDate":"2021-03-16"},{"lineNumber":606,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":607,"author":{"gitId":"maxxng"},"content":"**Extensions**","lastModifiedDate":"2021-03-16"},{"lineNumber":608,"author":{"gitId":"maxxng"},"content":"* 3a. The task selected already has a Status: \u0027done\u0027","lastModifiedDate":"2021-03-16"},{"lineNumber":609,"author":{"gitId":"maxxng"},"content":"    * 4a1. PlanIt displays task already done message.","lastModifiedDate":"2021-03-16"},{"lineNumber":610,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":611,"author":{"gitId":"maxxng"},"content":"      Use case ends.","lastModifiedDate":"2021-03-16"},{"lineNumber":612,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":613,"author":{"gitId":"LimJunxue"},"content":"#### **Use case: View tasks on a date**","lastModifiedDate":"2021-04-07"},{"lineNumber":614,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":615,"author":{"gitId":"LimJunxue"},"content":"**MSS**","lastModifiedDate":"2021-04-07"},{"lineNumber":616,"author":{"gitId":"LimJunxue"},"content":"1. User enters command to view the tasks on a given date.","lastModifiedDate":"2021-04-07"},{"lineNumber":617,"author":{"gitId":"LimJunxue"},"content":"2. PlanIt shows all the tasks that have their dates on the given date, if any.","lastModifiedDate":"2021-04-07"},{"lineNumber":618,"author":{"gitId":"LimJunxue"},"content":"3. PlanIt changes the calendar\u0027s date to the given date.","lastModifiedDate":"2021-04-07"},{"lineNumber":619,"author":{"gitId":"LimJunxue"},"content":"4. PlanIt displays a success message.","lastModifiedDate":"2021-04-07"},{"lineNumber":620,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":621,"author":{"gitId":"LimJunxue"},"content":"**Extensions**","lastModifiedDate":"2021-04-07"},{"lineNumber":622,"author":{"gitId":"LimJunxue"},"content":"* 1a. PlanIt detects an error in the entered command.","lastModifiedDate":"2021-04-07"},{"lineNumber":623,"author":{"gitId":"LimJunxue"},"content":"    * 1a1. PlanIt requests for the correct command.","lastModifiedDate":"2021-04-07"},{"lineNumber":624,"author":{"gitId":"LimJunxue"},"content":"    * 1a2. User enters new data. ","lastModifiedDate":"2021-04-07"},{"lineNumber":625,"author":{"gitId":"LimJunxue"},"content":"      ","lastModifiedDate":"2021-04-07"},{"lineNumber":626,"author":{"gitId":"LimJunxue"},"content":"    Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2021-04-07"},{"lineNumber":627,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":628,"author":{"gitId":"LimJunxue"},"content":"    Use case resumes from step 2.","lastModifiedDate":"2021-04-07"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"kaixiangtay"},"content":"Non-functional requirements specify the constraints under which the system for PlanIT is developed and operated.","lastModifiedDate":"2021-02-27"},{"lineNumber":634,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":635,"author":{"gitId":"kaixiangtay"},"content":"#### Technical requirements:","lastModifiedDate":"2021-02-27"},{"lineNumber":636,"author":{"gitId":"LimJunxue"},"content":"* The system should be compatible on mainstream OS, with only version Java 11","lastModifiedDate":"2021-03-01"},{"lineNumber":637,"author":{"gitId":"kaixiangtay"},"content":"(no other version) installed.","lastModifiedDate":"2021-02-27"},{"lineNumber":638,"author":{"gitId":"kaixiangtay"},"content":"* The system should work on both 32-bit and 64-bit environments.","lastModifiedDate":"2021-02-27"},{"lineNumber":639,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":640,"author":{"gitId":"kaixiangtay"},"content":"#### Performance requirements:","lastModifiedDate":"2021-02-27"},{"lineNumber":641,"author":{"gitId":"kaixiangtay"},"content":"* The system should be loaded up within 2 seconds or less.","lastModifiedDate":"2021-02-27"},{"lineNumber":642,"author":{"gitId":"kaixiangtay"},"content":"* The User Interface should be responsive to user input and loaded up within 2 seconds.","lastModifiedDate":"2021-02-27"},{"lineNumber":643,"author":{"gitId":"kaixiangtay"},"content":"* The system should be able to handle 1,000 or more task data entries without noticeable sluggishness","lastModifiedDate":"2021-02-27"},{"lineNumber":644,"author":{"gitId":"kaixiangtay"},"content":"in performance for typical usage.","lastModifiedDate":"2021-02-27"},{"lineNumber":645,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":646,"author":{"gitId":"kaixiangtay"},"content":"#### Usability requirements:","lastModifiedDate":"2021-02-27"},{"lineNumber":647,"author":{"gitId":"kaixiangtay"},"content":"* The user should have a keyboard and well-verse in typing alphanumeric keys on the keyboard.","lastModifiedDate":"2021-02-27"},{"lineNumber":648,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":649,"author":{"gitId":"kaixiangtay"},"content":"#### Testability requirements:","lastModifiedDate":"2021-02-27"},{"lineNumber":650,"author":{"gitId":"kaixiangtay"},"content":"* The system is not dependent on any remote servers so that it can be tested by anyone at any time without restrictions.","lastModifiedDate":"2021-02-27"},{"lineNumber":651,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":652,"author":{"gitId":"kaixiangtay"},"content":"#### Scalability requirements:","lastModifiedDate":"2021-02-27"},{"lineNumber":653,"author":{"gitId":"kaixiangtay"},"content":"* The program is easily extendable for addition of features.","lastModifiedDate":"2021-02-27"},{"lineNumber":654,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":655,"author":{"gitId":"kaixiangtay"},"content":"#### Data requirements:","lastModifiedDate":"2021-02-27"},{"lineNumber":656,"author":{"gitId":"kaixiangtay"},"content":"* The system file size should not exceed 100 MB.","lastModifiedDate":"2021-02-27"},{"lineNumber":657,"author":{"gitId":"kaixiangtay"},"content":"* The system should save data entered by the user in a human editable file without any use","lastModifiedDate":"2021-02-27"},{"lineNumber":658,"author":{"gitId":"kaixiangtay"},"content":"of external database management system.","lastModifiedDate":"2021-02-27"},{"lineNumber":659,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-02-27"},{"lineNumber":660,"author":{"gitId":"kaixiangtay"},"content":"#### Project scope:","lastModifiedDate":"2021-02-27"},{"lineNumber":661,"author":{"gitId":"kaixiangtay"},"content":"* The features within the system is only catered to a single user.","lastModifiedDate":"2021-02-27"},{"lineNumber":662,"author":{"gitId":"kaixiangtay"},"content":"* The system is catered to user who can type fast and prefer typing over any other means.","lastModifiedDate":"2021-02-27"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"kaixiangtay"},"content":"* **Recurring Schedule**: A type of task that repeats itself within the same period interval","lastModifiedDate":"2021-03-24"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"LimJunxue"},"content":"### Deleting a task","lastModifiedDate":"2021-03-02"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"LimJunxue"},"content":"1. Deleting a task while all tasks are being shown","lastModifiedDate":"2021-03-02"},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"LimJunxue"},"content":"   1. Prerequisites: List all existing tasks using the `ls` command. Multiple tasks in the list.","lastModifiedDate":"2021-04-07"},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"LimJunxue"},"content":"   1. Test case: `rmt 1`\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":704,"author":{"gitId":"LimJunxue"},"content":"      Expected: First task is deleted from the list. Details of the deleted task shown in the status message.","lastModifiedDate":"2021-03-22"},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"LimJunxue"},"content":"   1. Test case: `rmt 0`\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":707,"author":{"gitId":"LimJunxue"},"content":"      Expected: No task is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-03-02"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"LimJunxue"},"content":"   1. Other incorrect delete commands to try: `delete`, `rmt x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":710,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"LimJunxue"},"content":"   1. Test case: Delete the data file which is saved at the same folder as the jar file.","lastModifiedDate":"2021-04-07"},{"lineNumber":717,"author":{"gitId":"LimJunxue"},"content":"      Expected: PlanIt launches with sample data loaded, and creates a new data file.","lastModifiedDate":"2021-04-07"},{"lineNumber":718,"author":{"gitId":"-"},"content":"      ","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"LimJunxue"},"content":"   1. Test case: Remove an attribute of a task, or fill in an attribute with the wrong format.","lastModifiedDate":"2021-04-07"},{"lineNumber":720,"author":{"gitId":"LimJunxue"},"content":"      Expected: PlanIt launches with an empty list.","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"LimJunxue":144,"maxxng":38,"mesyeux":54,"kaixiangtay":136,"habi39":51,"-":297}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"**PlanIT** is a task managing application made specially for NUS computing students like you, from computing students","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"like us. Forgot to submit your lab worksheet, or too many assignments and you don\u0027t know where to get started? PlanIT","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"gives you the confidence that your busy schedule is organized and accounted for. Quickly and efficiently make and edit","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"various tasks, mark dates, take note of remaining tasks, and more.","lastModifiedDate":"2021-04-06"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"PlanIt also includes a calendar and a countdown feature to better manage your deadlines. It is even optimised for all of","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"you who prefer typing, so that bookkeeping can be done faster. Now you can make progress on the things that are","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"more important to you.","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"#### Objective:","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"habi39"},"content":"PlanIT\u0027s objective is to improve productivity for students with features and tools to help","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"habi39"},"content":"students manage their workload. These features significantly reduces the trouble of having to keep track of tasks,","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"habi39"},"content":"especially those that are essential yet repetitive. Features such as recurring schedule and date allows students to","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"habi39"},"content":"keep track of weekly task and due dates for tutorial homework, projects and much more. More importantly, the functionalities","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"habi39"},"content":"of PlanIt\u0027s simple overview allows students to see upcoming deadlines or events.","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"habi39"},"content":"Let\u0027s dive deeper into these features to see how these features can assist students","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"habi39"},"content":"in workload management.","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-03-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-03-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"maxxng"},"content":"# Quick start","lastModifiedDate":"2021-04-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"2. Download the latest `planit.jar` from [here](https://github.com/AY2021S2-CS2103T-T10-2/tp/releases).","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your planner.","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"kaixiangtay"},"content":"   Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-02-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"   Here is a layout guide to the app.\u003cbr\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"   ![UiGuide](images/UiGuide.png)","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"maxxng"},"content":"   pressing Enter will display a list of commonly used commands for first time users.\u003cbr\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"   * **`ls`** : Lists all tasks.","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"kaixiangtay"},"content":"   * **`mk`**`n/eat dinner` : Makes a task titled `eat dinner` to the planner.","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"kaixiangtay"},"content":"   * **`rmt`**`3` : Deletes the 3rd task shown in the current planner.","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"maxxng"},"content":"# How to use this guide","lastModifiedDate":"2021-04-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":63,"author":{"gitId":"maxxng"},"content":"Here are some symbols you might need to know:","lastModifiedDate":"2021-04-02"},{"lineNumber":64,"author":{"gitId":"maxxng"},"content":" * :information_source: : Helpful information you should take note of.","lastModifiedDate":"2021-04-02"},{"lineNumber":65,"author":{"gitId":"maxxng"},"content":" * :bulb: : Useful tips that might help you.","lastModifiedDate":"2021-04-02"},{"lineNumber":66,"author":{"gitId":"maxxng"},"content":" * :exclamation: : Important information that might affect your usage of PlanIT.","lastModifiedDate":"2021-04-02"},{"lineNumber":67,"author":{"gitId":"maxxng"},"content":" ","lastModifiedDate":"2021-04-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":70,"author":{"gitId":"maxxng"},"content":"# Features","lastModifiedDate":"2021-04-02"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"## Glossary of attributes","lastModifiedDate":"2021-04-07"},{"lineNumber":72,"author":{"gitId":"maxxng"},"content":"PlanIT contains a list of tasks.","lastModifiedDate":"2021-04-02"},{"lineNumber":73,"author":{"gitId":"maxxng"},"content":"Tasks can have the following attributes:","lastModifiedDate":"2021-04-02"},{"lineNumber":74,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":75,"author":{"gitId":"LimJunxue"},"content":"| Attribute | Prefix | Description |","lastModifiedDate":"2021-04-07"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"|---|---|---|","lastModifiedDate":"2021-04-07"},{"lineNumber":77,"author":{"gitId":"maxxng"},"content":"| Title | `t/` | A short description or name for the task. Titles can only contain alphanumeric values. \u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e\u003cbr\u003e:information_source:  Every task must have a title. \u003c/div\u003e|","lastModifiedDate":"2021-04-09"},{"lineNumber":78,"author":{"gitId":"maxxng"},"content":"| Date | `set/` | A date to represent the deadline of a Task or to represent the day that the task will be carried out. \u003cbr\u003e Dates should be of the format dd/mm/yyyy e.g 02/06/2021|","lastModifiedDate":"2021-04-09"},{"lineNumber":79,"author":{"gitId":"maxxng"},"content":"| Duration | `s/` | The start and end time of a task. You should specify start time and end time in the 24-hour clock format. \u003cbr\u003e Duration should be of the format hh:mm-hh:mm e.g 12:30-13:30|","lastModifiedDate":"2021-04-09"},{"lineNumber":80,"author":{"gitId":"maxxng"},"content":"| Recurring Schedule | `r/` | Represents a task that might repeat weekly or biweekly. \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: You can use this to quickly add weekly tutorials or biweekly lab session for the entire semester. \u003c/div\u003e\u003cbr\u003eRecurring Schedule should be of the format [END DATE][DAY][FREQUENCY] e.g [23/10/2021][mon][weekly] \u003cbr\u003e\u003cbr\u003e**Recurring dates that is of the upcoming day of week up till the [END DATE] will be generated for the task.** \u003cbr\u003e\u003cbr\u003e**Note: Suppose today is 06/04/2021 which falls on a Tuesday, user enters [30/06/2021][tue][weekly] for the recurring schedule field. The date of 06/04/2021 will not be included in the recurring dates and only recurring dates from the following tuesday will be included up till 30th June 2021 on a weekly basis.** \u003cbr\u003e\u003cbr\u003e**Note: Existing recurring dates that has passed the current system date will be removed automatically from the existing task upon application startup.** \u003cul\u003e\u003cli\u003eEND DATE should be in the format dd/mm/yyyy, any number greater than 31 is invalid for the day and any number greater than 12 is invalid for the month.\u003c/li\u003e\u003cli\u003eDAY should be either: mon, tue, wed, thu, fri, sat, sun and is case-insensitive.\u003c/li\u003e \u003cli\u003eFREQUENCY should be either: weekly or biweekly and is also case-insensitive.\u003c/li\u003e|","lastModifiedDate":"2021-04-09"},{"lineNumber":81,"author":{"gitId":"LimJunxue"},"content":"| Description | `d/` | A text description of the task. Your description can be any value.|","lastModifiedDate":"2021-04-07"},{"lineNumber":82,"author":{"gitId":"maxxng"},"content":"| Tag | `t/` | A label attached to a task for easy grouping and searching of tasks. Your tag should only contain alphanumeric values.\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: You can use this to group tasks by modules e.g adding a `CS2103` tag to a task. \u003c/div\u003e|","lastModifiedDate":"2021-04-09"},{"lineNumber":83,"author":{"gitId":"maxxng"},"content":"| Status | `s/` | Reflects the current status of your task. Status can only be either \u0027done\u0027 or \u0027not done\u0027.\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e\u003cbr\u003e:information_source:   Your task\u0027s status will be set to \u0027not done\u0027 by default. Status is compulsory and cannot be removed. \u003c/div\u003e|","lastModifiedDate":"2021-04-09"},{"lineNumber":84,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":85,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":86,"author":{"gitId":"maxxng"},"content":"## Constraints","lastModifiedDate":"2021-04-02"},{"lineNumber":87,"author":{"gitId":"maxxng"},"content":"In order to maximise the efficiency of adding tasks and ensuring that there are no unnecessary attributes, there are","lastModifiedDate":"2021-04-02"},{"lineNumber":88,"author":{"gitId":"maxxng"},"content":"two constraints to the attributes that can exist on the tasks that you create or edit.","lastModifiedDate":"2021-04-02"},{"lineNumber":89,"author":{"gitId":"maxxng"},"content":"1. Tasks cannot have Date and Recurring Schedule at the same time.","lastModifiedDate":"2021-04-02"},{"lineNumber":90,"author":{"gitId":"maxxng"},"content":"2. Tasks cannot have Duration on its own without a Date or Recurring Schedule.","lastModifiedDate":"2021-04-02"},{"lineNumber":91,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":92,"author":{"gitId":"maxxng"},"content":"When it comes to Dates and Recurring Schedules, the main purpose of a Date attribute is to give a task a deadline or","lastModifiedDate":"2021-04-02"},{"lineNumber":93,"author":{"gitId":"maxxng"},"content":"a single day to carry out the task itself. This should not co-exist with a Recurring Schedule, which can also indicate","lastModifiedDate":"2021-04-02"},{"lineNumber":94,"author":{"gitId":"maxxng"},"content":"a task\u0027s deadline or day to carry out the event, except it is being repeated on a weekly or biweekly basis.","lastModifiedDate":"2021-04-02"},{"lineNumber":95,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":96,"author":{"gitId":"maxxng"},"content":"As for the Duration of a task, it will be confusing to you as a user when you have multiple tasks with durations but no","lastModifiedDate":"2021-04-02"},{"lineNumber":97,"author":{"gitId":"maxxng"},"content":"date specified. As such, this might cause you to miss your task or lower the efficiency of utilizing PlanIT when ","lastModifiedDate":"2021-04-02"},{"lineNumber":98,"author":{"gitId":"maxxng"},"content":"searching for tasks.","lastModifiedDate":"2021-04-02"},{"lineNumber":99,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":100,"author":{"gitId":"maxxng"},"content":"## List of Commands","lastModifiedDate":"2021-04-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"LimJunxue"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user. Type in the prefixes along with the ","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"LimJunxue"},"content":"  parameters.\u003cbr\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"mesyeux"},"content":"  e.g. in `mk n/TITLE`, `n/TITLE` is a parameter which can be used as `n/eat dinner`.","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"LimJunxue"},"content":"* Some commands might not require prefixes as written in their formats.\u003cbr\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"LimJunxue"},"content":"  e.g. in `rmt INDEX`, it can be used as `rmt 4`.","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"LimJunxue"},"content":"  e.g `n/TITLE [t/TAG]` can be used as `n/Join Dance t/leisure` or as `n/Join Dance`.","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"maxxng"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), etc.","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"habi39"},"content":"  e.g. if the command specifies `n/TITLE set/DATE`, `set/DATE n/TITLE` is also acceptable.","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"kaixiangtay"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last","lastModifiedDate":"2021-02-28"},{"lineNumber":123,"author":{"gitId":"kaixiangtay"},"content":"  occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":124,"author":{"gitId":"LimJunxue"},"content":"  e.g. if you specify `n/first task n/second task`, only `n/second task` will be taken.","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":126,"author":{"gitId":"mesyeux"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `exit` and `clear`)","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"kaixiangtay"},"content":"  will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"maxxng"},"content":"### View Commands : `help`","lastModifiedDate":"2021-02-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"kaixiangtay"},"content":"Displays a list of commonly used possible commands along with each of their formats respectively ","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"kaixiangtay"},"content":"so that you can refer to commands conveniently whenever you forgot about these commands.","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"kaixiangtay"},"content":"  * Only a few main commands will be displayed to avoid information overload for first time and forgetful users.","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"maxxng"},"content":"  * Users can read the User Guide for detailed information on all the commands.","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"LimJunxue"},"content":"### Making a task: `mk`","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"LimJunxue"},"content":"Adds a task to the planner. \u003cbr\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":144,"author":{"gitId":"kaixiangtay"},"content":"Task with the same title cannot be added to the planner","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"kaixiangtay"},"content":"so that you will not have to worry about adding duplicate task by accident.","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"LimJunxue"},"content":"Format: `mk n/TITLE [set/DATE] [s/DURATION] [d/DESCRIPTION]","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"LimJunxue"},"content":"[r/RECURRING SCHEDULE] [st/STATUS] [t/TAG]…`","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"mesyeux"},"content":"* Only title is compulsory.","lastModifiedDate":"2021-03-28"},{"lineNumber":151,"author":{"gitId":"habi39"},"content":"* Date should be in the format dd/mm/yyyy. For example, 1 July 2021","lastModifiedDate":"2021-04-08"},{"lineNumber":152,"author":{"gitId":"habi39"},"content":"  should be expressed as `01/07/2021`, not 1/7/2021.","lastModifiedDate":"2021-04-08"},{"lineNumber":153,"author":{"gitId":"LimJunxue"},"content":"* Duration should be numeric, contain 2 timings, and should be in 24 hours format with a colon, like `22:30-22:45`.","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"LimJunxue"},"content":"  Duration can only exist when there is date or recurring schedule. ","lastModifiedDate":"2021-04-06"},{"lineNumber":155,"author":{"gitId":"LimJunxue"},"content":"* Description can have multiple lines by adding a line break using \u003ckbd\u003eshift\u003c/kbd\u003e+\u003ckbd\u003eenter\u003c/kbd\u003e.","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"LimJunxue"},"content":"* Recurring schedule should have 3 conditions which consist of:","lastModifiedDate":"2021-04-06"},{"lineNumber":157,"author":{"gitId":"kaixiangtay"},"content":"    * An end date when the task stops recurring.","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"kaixiangtay"},"content":"    * A day of the week that the task recurs on.","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"kaixiangtay"},"content":"    * Frequency of the recurring task.","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"kaixiangtay"},"content":"    * E.g. `[23/10/2021][Mon][weekly]`","lastModifiedDate":"2021-03-23"},{"lineNumber":161,"author":{"gitId":"LimJunxue"},"content":"* Status can only be `done` or `not done`, and is by default `not done`.","lastModifiedDate":"2021-03-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-03-15"},{"lineNumber":164,"author":{"gitId":"LimJunxue"},"content":"A task can have any number of tags (including 0)","lastModifiedDate":"2021-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"LimJunxue"},"content":"* `mk n/eat dinner`\u003cbr\u003eMakes a task titled \u0027eat dinner\u0027.","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"kaixiangtay"},"content":"* `mk n/do project r/[29/06/2021][thu][Biweekly]` \u003cbr\u003eMakes a task titled \u0027do project\u0027 and will ","lastModifiedDate":"2021-04-06"},{"lineNumber":170,"author":{"gitId":"kaixiangtay"},"content":"  generate recurring dates that is on thursday, biweekly until 29th Jun 2021.","lastModifiedDate":"2021-04-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"LimJunxue"},"content":"Example of making a task with multiple lines of description:","lastModifiedDate":"2021-04-06"},{"lineNumber":173,"author":{"gitId":"LimJunxue"},"content":"```","lastModifiedDate":"2021-03-25"},{"lineNumber":174,"author":{"gitId":"mesyeux"},"content":"mk n/take a break d/","lastModifiedDate":"2021-03-28"},{"lineNumber":175,"author":{"gitId":"LimJunxue"},"content":"- do 1","lastModifiedDate":"2021-03-25"},{"lineNumber":176,"author":{"gitId":"LimJunxue"},"content":"- do 2 t/trying","lastModifiedDate":"2021-03-25"},{"lineNumber":177,"author":{"gitId":"LimJunxue"},"content":"```","lastModifiedDate":"2021-03-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":179,"author":{"gitId":"kaixiangtay"},"content":"### Editing a task : `edit`","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":181,"author":{"gitId":"kaixiangtay"},"content":"Edits an existing task in the planner","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"LimJunxue"},"content":"so that you can have the flexibility in making changes to a certain task","lastModifiedDate":"2021-04-06"},{"lineNumber":183,"author":{"gitId":"LimJunxue"},"content":"if there is a change in your task or schedule.","lastModifiedDate":"2021-04-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":185,"author":{"gitId":"kaixiangtay"},"content":"Format: `edit INDEX [n/TITLE] [set/DATE] [s/DURATION] [d/DESCRIPTION]","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"kaixiangtay"},"content":"[r/RECURRING SCHEDULE] [st/STATUS] [t/TAG]…​`","lastModifiedDate":"2021-03-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":188,"author":{"gitId":"kaixiangtay"},"content":"* Edits the task at the specified `INDEX`. The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"kaixiangtay"},"content":"  The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-02-28"},{"lineNumber":192,"author":{"gitId":"kaixiangtay"},"content":"* When editing tags, the existing tags of the task will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-03-31"},{"lineNumber":193,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":194,"author":{"gitId":"habi39"},"content":"Examples:","lastModifiedDate":"2021-02-28"},{"lineNumber":195,"author":{"gitId":"kaixiangtay"},"content":"*  `edit 1 set/10/10/2021 d/Remember to update User Guide` Edits the date and description of the 1st task to be","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"kaixiangtay"},"content":"   `10/10/2021` and `Remember to update User Guide` respectively.","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"kaixiangtay"},"content":"*  `edit 2 n/Buy textbook t/ set/` Edits the title of the 2nd task to be `Buy textbook` and clears all existing tags","lastModifiedDate":"2021-03-31"},{"lineNumber":198,"author":{"gitId":"kaixiangtay"},"content":"   and the date.","lastModifiedDate":"2021-03-31"},{"lineNumber":199,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":200,"author":{"gitId":"kaixiangtay"},"content":"   ","lastModifiedDate":"2021-03-31"},{"lineNumber":201,"author":{"gitId":"kaixiangtay"},"content":"Examples:","lastModifiedDate":"2021-03-31"},{"lineNumber":202,"author":{"gitId":"kaixiangtay"},"content":"*  `mk n/CS2103 team meeting r/[31/05/2021][mon][weekly]` Adds the task with the title `CS2103 team meeting` to the","lastModifiedDate":"2021-04-01"},{"lineNumber":203,"author":{"gitId":"kaixiangtay"},"content":"   planner and generate upcoming recurring dates that is on `mon` `weekly` up to `31/05/2021`.","lastModifiedDate":"2021-04-06"},{"lineNumber":204,"author":{"gitId":"kaixiangtay"},"content":"   ","lastModifiedDate":"2021-04-06"},{"lineNumber":205,"author":{"gitId":"maxxng"},"content":"### Postpone a task\u0027s date : `snooze`","lastModifiedDate":"2021-04-02"},{"lineNumber":206,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":207,"author":{"gitId":"maxxng"},"content":"Postpones your task\u0027s date by a specified number of days.","lastModifiedDate":"2021-04-02"},{"lineNumber":208,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":209,"author":{"gitId":"maxxng"},"content":"Format: `snooze INDEX [DAYS]`","lastModifiedDate":"2021-04-02"},{"lineNumber":210,"author":{"gitId":"maxxng"},"content":"* Edits the task at the specified `INDEX`. The index refers to the index number shown in the displayed list.","lastModifiedDate":"2021-04-02"},{"lineNumber":211,"author":{"gitId":"maxxng"},"content":" The index **must be a positive integer** e.g 1, 2, 3, …​","lastModifiedDate":"2021-04-02"},{"lineNumber":212,"author":{"gitId":"maxxng"},"content":"* The DAYS is optional and it\u0027s default value will be 1 if no number is specified in your command.","lastModifiedDate":"2021-04-02"},{"lineNumber":213,"author":{"gitId":"maxxng"},"content":"* The snooze command will only successfully update the date of the task if the task contains a date.","lastModifiedDate":"2021-04-02"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-04-02"},{"lineNumber":216,"author":{"gitId":"maxxng"},"content":"* `snooze 2` Postpones the date of the task at index 2 in the list by 1 day.","lastModifiedDate":"2021-04-02"},{"lineNumber":217,"author":{"gitId":"maxxng"},"content":"* `snooze 3 4 ` Postpones the date of the task at index 3 in the list by 4 days.","lastModifiedDate":"2021-04-02"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":219,"author":{"gitId":"kaixiangtay"},"content":"### Listing all tasks : `ls`","lastModifiedDate":"2021-03-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":221,"author":{"gitId":"kaixiangtay"},"content":"Shows a list of all tasks in the planner","lastModifiedDate":"2021-03-31"},{"lineNumber":222,"author":{"gitId":"kaixiangtay"},"content":"so that you can view all the tasks easily in one place. \u003cbr\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":223,"author":{"gitId":"kaixiangtay"},"content":"Automatically brings your calendar back to the current date.","lastModifiedDate":"2021-03-31"},{"lineNumber":224,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":225,"author":{"gitId":"kaixiangtay"},"content":"Format: `ls`","lastModifiedDate":"2021-03-31"},{"lineNumber":226,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":227,"author":{"gitId":"kaixiangtay"},"content":"### Listing all tasks : `ls not done`","lastModifiedDate":"2021-03-31"},{"lineNumber":228,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":229,"author":{"gitId":"kaixiangtay"},"content":"Shows a list of all uncompleted tasks in the planner","lastModifiedDate":"2021-03-31"},{"lineNumber":230,"author":{"gitId":"kaixiangtay"},"content":"so that you can view all the uncompleted tasks easily.","lastModifiedDate":"2021-03-31"},{"lineNumber":231,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":232,"author":{"gitId":"kaixiangtay"},"content":"Format: `ls not done`","lastModifiedDate":"2021-03-31"},{"lineNumber":233,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":234,"author":{"gitId":"kaixiangtay"},"content":"**Note: The keyword `not done` is case-insensitive.**","lastModifiedDate":"2021-03-31"},{"lineNumber":235,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":236,"author":{"gitId":"habi39"},"content":"### Sort task by date: `sort by a` or `sort by d`","lastModifiedDate":"2021-03-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"habi39"},"content":"Sort tasks in the displayed list either in ascending dates or descending dates so that users would","lastModifiedDate":"2021-04-08"},{"lineNumber":239,"author":{"gitId":"habi39"},"content":"be able to see the task or event nearest to current date or furthest away from current date.","lastModifiedDate":"2021-03-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"habi39"},"content":"Format: `sort by a` or `sort by d`","lastModifiedDate":"2021-03-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"habi39"},"content":"* Sorts the displayed list. If `find` command is used before sorting, `sort by a` or `sort by d`","lastModifiedDate":"2021-04-08"},{"lineNumber":244,"author":{"gitId":"habi39"},"content":"  will sort the displayed list only. To sort the entire list, make sure to use `ls` before sorting.","lastModifiedDate":"2021-04-08"},{"lineNumber":245,"author":{"gitId":"habi39"},"content":"* If `sort by a`, task with no dates would appear last, ","lastModifiedDate":"2021-04-08"},{"lineNumber":246,"author":{"gitId":"habi39"},"content":"    subsequently task will be ordered in increasing dates. ","lastModifiedDate":"2021-03-31"},{"lineNumber":247,"author":{"gitId":"habi39"},"content":"* If `sort by d`, task with no dates would appear first, ","lastModifiedDate":"2021-04-08"},{"lineNumber":248,"author":{"gitId":"habi39"},"content":"    subsequently task will be ordered in decreasing dates.","lastModifiedDate":"2021-03-31"},{"lineNumber":249,"author":{"gitId":"habi39"},"content":"* If two tasks have the same dates, they will be ordered in equal priority.","lastModifiedDate":"2021-03-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"kaixiangtay"},"content":"### Searching a task by title: `find`","lastModifiedDate":"2021-04-06"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"kaixiangtay"},"content":"Find matching tasks based on the title keyword(s) provided ","lastModifiedDate":"2021-03-31"},{"lineNumber":255,"author":{"gitId":"kaixiangtay"},"content":"so that you can find matching tasks quickly when only certain words from the title of the task can be remembered.","lastModifiedDate":"2021-03-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-04-06"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":259,"author":{"gitId":"kaixiangtay"},"content":"* The search is **case-insensitive**. e.g `project` will match `Project`","lastModifiedDate":"2021-04-06"},{"lineNumber":260,"author":{"gitId":"kaixiangtay"},"content":"* The order of the keywords does not matter. e.g. `CS2103 Project` will match `Project CS2103`","lastModifiedDate":"2021-04-06"},{"lineNumber":261,"author":{"gitId":"kaixiangtay"},"content":"* Only full keywords will be matched. e.g. `proj` will not match `projects`","lastModifiedDate":"2021-04-06"},{"lineNumber":262,"author":{"gitId":"kaixiangtay"},"content":"* No prefix (i.e.`t/`, `d/`)  should be in the search task by title query.","lastModifiedDate":"2021-04-06"},{"lineNumber":263,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":264,"author":{"gitId":"kaixiangtay"},"content":"Examples:","lastModifiedDate":"2021-04-06"},{"lineNumber":265,"author":{"gitId":"kaixiangtay"},"content":"* `find CS2103 team project` returns matching tasks with title of following words `CS2103`, `team`, `project`","lastModifiedDate":"2021-04-06"},{"lineNumber":266,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":267,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":268,"author":{"gitId":"kaixiangtay"},"content":"### Searching a task by description: `find d/`","lastModifiedDate":"2021-04-06"},{"lineNumber":269,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":270,"author":{"gitId":"kaixiangtay"},"content":"Find matching tasks based on the description keywords provided","lastModifiedDate":"2021-04-01"},{"lineNumber":271,"author":{"gitId":"kaixiangtay"},"content":"so that you can find matching tasks quickly when only certain words from the multi-line description can be remembered.","lastModifiedDate":"2021-04-01"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"kaixiangtay"},"content":"Format: `find d/KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-04-06"},{"lineNumber":274,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":275,"author":{"gitId":"kaixiangtay"},"content":"* The search is **case-insensitive**. e.g `project` will match `Project`","lastModifiedDate":"2021-04-01"},{"lineNumber":276,"author":{"gitId":"kaixiangtay"},"content":"* The order of the keywords does not matter. e.g. `CS2103 Project` will match `Project CS2103`","lastModifiedDate":"2021-02-27"},{"lineNumber":277,"author":{"gitId":"kaixiangtay"},"content":"* Only full keywords will be matched. e.g. `proj` will not match `projects`","lastModifiedDate":"2021-04-06"},{"lineNumber":278,"author":{"gitId":"kaixiangtay"},"content":"* Only a single `d/` description prefix should be allowed.","lastModifiedDate":"2021-04-06"},{"lineNumber":279,"author":{"gitId":"kaixiangtay"},"content":"* No `t/` tag prefix should be in the search task by description query.","lastModifiedDate":"2021-04-06"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"kaixiangtay"},"content":"* `find d/write user guide` returns matching tasks with description of following words `user`, `guide`, `write`","lastModifiedDate":"2021-04-01"},{"lineNumber":283,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":285,"author":{"gitId":"kaixiangtay"},"content":"### Searching a task by tag: `find t/`","lastModifiedDate":"2021-03-11"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":287,"author":{"gitId":"kaixiangtay"},"content":"Find matching tasks based on the tag keyword provided ","lastModifiedDate":"2021-03-31"},{"lineNumber":288,"author":{"gitId":"kaixiangtay"},"content":"so that you can find matching tasks from the same category quickly when only the tag(s) can be remembered.","lastModifiedDate":"2021-03-31"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":290,"author":{"gitId":"kaixiangtay"},"content":"Format: `find t/KEYWORD`","lastModifiedDate":"2021-03-11"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":292,"author":{"gitId":"kaixiangtay"},"content":"* The search is **case-insensitive**. e.g `cs2103t` will match `CS2103T`","lastModifiedDate":"2021-04-01"},{"lineNumber":293,"author":{"gitId":"kaixiangtay"},"content":"* The keyword must be **single, alphanumeric and no spacing** allowed. e.g. `project CS2103` will not be allowed","lastModifiedDate":"2021-04-01"},{"lineNumber":294,"author":{"gitId":"kaixiangtay"},"content":"  but `projectCS2103` will be acceptable.","lastModifiedDate":"2021-03-11"},{"lineNumber":295,"author":{"gitId":"kaixiangtay"},"content":"* Only full keyword will be matched. e.g. `cs2103` will not match `cs2103t`","lastModifiedDate":"2021-04-06"},{"lineNumber":296,"author":{"gitId":"kaixiangtay"},"content":"* No `d/` description prefix should be in the search by tag query.","lastModifiedDate":"2021-04-06"},{"lineNumber":297,"author":{"gitId":"kaixiangtay"},"content":"* Multiple `t/` tag prefixes are allowed in the search task by tag query.","lastModifiedDate":"2021-04-06"},{"lineNumber":298,"author":{"gitId":"kaixiangtay"},"content":"* Suppose a task with **multiple tags** of `cs2103` and `cs2105`, it will be returned as a matching task","lastModifiedDate":"2021-04-01"},{"lineNumber":299,"author":{"gitId":"kaixiangtay"},"content":"  if the user inputs falls under the following cases:","lastModifiedDate":"2021-03-11"},{"lineNumber":300,"author":{"gitId":"kaixiangtay"},"content":"  1. `t/cs2103` only","lastModifiedDate":"2021-03-11"},{"lineNumber":301,"author":{"gitId":"kaixiangtay"},"content":"  2. `t/cs2105` only","lastModifiedDate":"2021-03-11"},{"lineNumber":302,"author":{"gitId":"kaixiangtay"},"content":"  3. `t/cs2103` and `t/cs2105`","lastModifiedDate":"2021-03-11"},{"lineNumber":303,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":304,"author":{"gitId":"kaixiangtay"},"content":"Examples:","lastModifiedDate":"2021-03-11"},{"lineNumber":305,"author":{"gitId":"kaixiangtay"},"content":"* `find t/CS2103` returns matching tasks with tag of `CS2103` or `cs2103`","lastModifiedDate":"2021-03-11"},{"lineNumber":306,"author":{"gitId":"kaixiangtay"},"content":"* Below is an illustration of searching matching tasks based on multiple tags:","lastModifiedDate":"2021-04-06"},{"lineNumber":307,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":308,"author":{"gitId":"kaixiangtay"},"content":"![Find Multiple Tags](images/FindMultipleTags.png)","lastModifiedDate":"2021-04-06"},{"lineNumber":309,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-04-06"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"mesyeux"},"content":"### Removing a task : `rmt`","lastModifiedDate":"2021-03-30"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"kaixiangtay"},"content":"Removes an existing task from the planner","lastModifiedDate":"2021-03-31"},{"lineNumber":314,"author":{"gitId":"kaixiangtay"},"content":"so that you can reduce clutter from the planner or remove a mistakenly added task easily.","lastModifiedDate":"2021-03-31"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"mesyeux"},"content":"Format: `rmt INDEX`","lastModifiedDate":"2021-03-28"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"mesyeux"},"content":"* Removes the task at the specified `INDEX`.","lastModifiedDate":"2021-03-30"},{"lineNumber":319,"author":{"gitId":"kaixiangtay"},"content":"* The index refers to the index number shown in the displayed planner.","lastModifiedDate":"2021-03-31"},{"lineNumber":320,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"kaixiangtay"},"content":"* `ls` followed by `rmt 2` removes the 2nd task in the planner.","lastModifiedDate":"2021-03-31"},{"lineNumber":324,"author":{"gitId":"mesyeux"},"content":"* `find Work` followed by `rmt 1` removes the 1st task in the result of the `find` command.","lastModifiedDate":"2021-03-30"},{"lineNumber":325,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":326,"author":{"gitId":"mesyeux"},"content":"### Removing a field from a task : `rmf`","lastModifiedDate":"2021-03-30"},{"lineNumber":327,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":328,"author":{"gitId":"kaixiangtay"},"content":"Removes an existing field from a task in the planner","lastModifiedDate":"2021-03-31"},{"lineNumber":329,"author":{"gitId":"kaixiangtay"},"content":"so that you can remove certain details from the task directly","lastModifiedDate":"2021-03-31"},{"lineNumber":330,"author":{"gitId":"kaixiangtay"},"content":"and not go through the hassle of removing the task and adding the same task with lesser fields again.","lastModifiedDate":"2021-03-31"},{"lineNumber":331,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":332,"author":{"gitId":"mesyeux"},"content":"Format: `rmf INDEX FIELD`","lastModifiedDate":"2021-03-28"},{"lineNumber":333,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":334,"author":{"gitId":"mesyeux"},"content":"* Removes the specified field of task at `INDEX`.","lastModifiedDate":"2021-03-30"},{"lineNumber":335,"author":{"gitId":"kaixiangtay"},"content":"* The index refers to the index number shown in the displayed planner.","lastModifiedDate":"2021-03-31"},{"lineNumber":336,"author":{"gitId":"habi39"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-15"},{"lineNumber":337,"author":{"gitId":"mesyeux"},"content":"* Fields are specified in the format of `d/` `t/`.","lastModifiedDate":"2021-03-16"},{"lineNumber":338,"author":{"gitId":"habi39"},"content":"* Exactly one field must be specified.","lastModifiedDate":"2021-03-15"},{"lineNumber":339,"author":{"gitId":"mesyeux"},"content":"* Title field cannot be removed.","lastModifiedDate":"2021-03-30"},{"lineNumber":340,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":341,"author":{"gitId":"habi39"},"content":"Examples:","lastModifiedDate":"2021-03-15"},{"lineNumber":342,"author":{"gitId":"kaixiangtay"},"content":"* `ls` followed by `rmf 2 d/` removes the description from the 2nd task in the planner.","lastModifiedDate":"2021-03-31"},{"lineNumber":343,"author":{"gitId":"mesyeux"},"content":"* `find Cat` followed by `rmf 1 t/` removes all the tags from the 1st task in the result of the","lastModifiedDate":"2021-03-30"},{"lineNumber":344,"author":{"gitId":"habi39"},"content":"  `find` command.","lastModifiedDate":"2021-03-15"},{"lineNumber":345,"author":{"gitId":"habi39"},"content":"  ","lastModifiedDate":"2021-03-15"},{"lineNumber":346,"author":{"gitId":"mesyeux"},"content":"### Counting down to a task : `count`","lastModifiedDate":"2021-03-30"},{"lineNumber":347,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":348,"author":{"gitId":"kaixiangtay"},"content":"Displays the number of days left to a task\u0027s date if it exists","lastModifiedDate":"2021-03-31"},{"lineNumber":349,"author":{"gitId":"kaixiangtay"},"content":"so that you can know how much time left to work on the task.","lastModifiedDate":"2021-03-31"},{"lineNumber":350,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":351,"author":{"gitId":"mesyeux"},"content":"Format: `count INDEX`","lastModifiedDate":"2021-03-30"},{"lineNumber":352,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":353,"author":{"gitId":"mesyeux"},"content":"* Counts the number of days until the date of the task at `INDEX`.","lastModifiedDate":"2021-03-30"},{"lineNumber":354,"author":{"gitId":"kaixiangtay"},"content":"* The index refers to the index number shown in the displayed planner.","lastModifiedDate":"2021-03-31"},{"lineNumber":355,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-30"},{"lineNumber":356,"author":{"gitId":"mesyeux"},"content":"* The task at index must have a date, otherwise countdown cannot be done.","lastModifiedDate":"2021-03-30"},{"lineNumber":357,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":358,"author":{"gitId":"mesyeux"},"content":"Examples: ","lastModifiedDate":"2021-03-30"},{"lineNumber":359,"author":{"gitId":"kaixiangtay"},"content":"* `ls` followed by `count 4` displays the number of days left to the 4th task in the planner.","lastModifiedDate":"2021-03-31"},{"lineNumber":360,"author":{"gitId":"mesyeux"},"content":"* `find Wool` followed by `count 1` displays the number of days left to the 1st task in the result","lastModifiedDate":"2021-03-30"},{"lineNumber":361,"author":{"gitId":"mesyeux"},"content":"of the `find` command.","lastModifiedDate":"2021-03-30"},{"lineNumber":362,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":363,"author":{"gitId":"mesyeux"},"content":"### Displaying statistics : `stat`","lastModifiedDate":"2021-03-30"},{"lineNumber":364,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":365,"author":{"gitId":"kaixiangtay"},"content":"Displays the statistics of the planner ","lastModifiedDate":"2021-03-31"},{"lineNumber":366,"author":{"gitId":"kaixiangtay"},"content":"so that you can check the current task progression and determine your own work efficiency conveniently. ","lastModifiedDate":"2021-03-31"},{"lineNumber":367,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":368,"author":{"gitId":"kaixiangtay"},"content":"Statistics include:","lastModifiedDate":"2021-03-31"},{"lineNumber":369,"author":{"gitId":"mesyeux"},"content":"1) The total number of tasks in the planner.","lastModifiedDate":"2021-03-30"},{"lineNumber":370,"author":{"gitId":"mesyeux"},"content":"2) The percentage of tasks completed (marked as done).","lastModifiedDate":"2021-03-30"},{"lineNumber":371,"author":{"gitId":"mesyeux"},"content":"3) The number of tasks due in the next 7 days from the system\u0027s current time.","lastModifiedDate":"2021-03-30"},{"lineNumber":372,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":373,"author":{"gitId":"mesyeux"},"content":"Format: `stat`","lastModifiedDate":"2021-03-30"},{"lineNumber":374,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":375,"author":{"gitId":"mesyeux"},"content":"* Planner must consist of at least one task.","lastModifiedDate":"2021-03-30"},{"lineNumber":376,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":377,"author":{"gitId":"LimJunxue"},"content":"### View tasks on a date : `view`","lastModifiedDate":"2021-03-31"},{"lineNumber":378,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":379,"author":{"gitId":"LimJunxue"},"content":"Displays the tasks happening on a particular date, including recurring tasks,","lastModifiedDate":"2021-04-06"},{"lineNumber":380,"author":{"gitId":"kaixiangtay"},"content":"and brings the calendar to the date specified","lastModifiedDate":"2021-03-31"},{"lineNumber":381,"author":{"gitId":"LimJunxue"},"content":"so that you may find free time on the day to schedule new activities.","lastModifiedDate":"2021-04-06"},{"lineNumber":382,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":383,"author":{"gitId":"LimJunxue"},"content":"Format: `view DATE`","lastModifiedDate":"2021-03-31"},{"lineNumber":384,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":385,"author":{"gitId":"LimJunxue"},"content":"* Date should be in the format of dd/mm/yyyy like 12/12/2021.","lastModifiedDate":"2021-03-31"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-31"},{"lineNumber":388,"author":{"gitId":"LimJunxue"},"content":"* `view 03/07/2021`\u003cbr\u003eLists all tasks with dates or recurring dates on 03/07/2021, and brings the calendar to July","lastModifiedDate":"2021-03-31"},{"lineNumber":389,"author":{"gitId":"LimJunxue"},"content":"2021.","lastModifiedDate":"2021-03-31"},{"lineNumber":390,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"kaixiangtay"},"content":"Clears all entries from the planner so that you can remove all tasks within the planner at once. ","lastModifiedDate":"2021-03-31"},{"lineNumber":395,"author":{"gitId":"kaixiangtay"},"content":"\u003cbr\u003e Automatically brings your calendar back to the current date.","lastModifiedDate":"2021-03-31"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"maxxng"},"content":"## Saving the data","lastModifiedDate":"2021-04-02"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"LimJunxue"},"content":"PlanIT data are saved in the hard disk automatically after any command that changes the data.","lastModifiedDate":"2021-03-22"},{"lineNumber":408,"author":{"gitId":"kaixiangtay"},"content":"There is no need to save manually.","lastModifiedDate":"2021-02-28"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"maxxng"},"content":"## Editing the data file","lastModifiedDate":"2021-04-02"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":412,"author":{"gitId":"LimJunxue"},"content":"PlanIT data are saved as a JSON file `[JAR file location]/data/planit.json`.","lastModifiedDate":"2021-03-22"},{"lineNumber":413,"author":{"gitId":"kaixiangtay"},"content":"Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-02-28"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":415,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":416,"author":{"gitId":"LimJunxue"},"content":"If your changes to the data file makes its format invalid, PlanIT will discard all data and","lastModifiedDate":"2021-03-22"},{"lineNumber":417,"author":{"gitId":"kaixiangtay"},"content":"start with an empty data file at the next run.","lastModifiedDate":"2021-02-28"},{"lineNumber":418,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":420,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"LimJunxue"},"content":"## Calendar Navigation","lastModifiedDate":"2021-03-31"},{"lineNumber":423,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":424,"author":{"gitId":"LimJunxue"},"content":"![Calendar](images/Calendar.png)","lastModifiedDate":"2021-04-07"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":426,"author":{"gitId":"LimJunxue"},"content":"You can click on the `prev` and `next` buttons on the calendar shown above, to move to the previous and next months respectively,","lastModifiedDate":"2021-04-07"},{"lineNumber":427,"author":{"gitId":"LimJunxue"},"content":"or you can simply type in the following commands, if you are more inclined to using the command line interface.","lastModifiedDate":"2021-03-31"},{"lineNumber":428,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":429,"author":{"gitId":"LimJunxue"},"content":"**Navigate to the previous month on the calendar :** `prev`","lastModifiedDate":"2021-04-07"},{"lineNumber":430,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":431,"author":{"gitId":"LimJunxue"},"content":"**Navigate to the next month on the calendar :** `next`","lastModifiedDate":"2021-04-07"},{"lineNumber":432,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":433,"author":{"gitId":"LimJunxue"},"content":"* These 2 commands do not take in parameters. Extraneous parameters will be ignored.","lastModifiedDate":"2021-04-07"},{"lineNumber":434,"author":{"gitId":"LimJunxue"},"content":"    ","lastModifiedDate":"2021-03-31"},{"lineNumber":435,"author":{"gitId":"LimJunxue"},"content":"    E.g. if the command specifies `prev 987`, it will be interpreted as `prev`.","lastModifiedDate":"2021-03-31"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":437,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-03-31"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":439,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2021-03-14"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"kaixiangtay"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file","lastModifiedDate":"2021-02-28"},{"lineNumber":443,"author":{"gitId":"LimJunxue"},"content":"that contains the data of your previous PlanIT home folder.","lastModifiedDate":"2021-03-22"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2021-03-14"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"LimJunxue"},"content":"**Make** | `mk n/TITLE [set/DATE] [s/DURATION] [d/DESCRIPTION] [r/RECURRING SCHEDULE] [st/STATUS] [t/TAG]…​`\u003cbr\u003e e.g.,`mk n/eat dinner t/important`","lastModifiedDate":"2021-03-31"},{"lineNumber":452,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"mesyeux"},"content":"**Delete Task** | `rmt INDEX`\u003cbr\u003e e.g., `rmt 3`","lastModifiedDate":"2021-03-28"},{"lineNumber":454,"author":{"gitId":"mesyeux"},"content":"**Delete Field** | `rmf INDEX FIELD`\u003cbr\u003e e.g., `rmf 1 d/`","lastModifiedDate":"2021-03-28"},{"lineNumber":455,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":456,"author":{"gitId":"LimJunxue"},"content":"**Edit** | `edit INDEX [n/TITLE] [set/DATE] [s/DURATION] [d/DESCRIPTION] [r/RECURRING SCHEDULE] [st/STATUS] [t/TAG]…​`\u003cbr\u003ee.g.,`edit 1 set/10/10/2021 d/Remember to update User Guide`","lastModifiedDate":"2021-04-06"},{"lineNumber":457,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":458,"author":{"gitId":"kaixiangtay"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003ee.g., `find CS2103 team project` \u003cbr\u003e\u003cbr\u003e`find [t/TAG] `\u003cbr\u003e  e.g., `find t/CS2103` \u003cbr\u003e\u003cbr\u003e `find [d/DESCRIPTION] ` \u003cbr\u003e e.g., `find d/CS2103 milestone postmortem`","lastModifiedDate":"2021-03-31"},{"lineNumber":459,"author":{"gitId":"mesyeux"},"content":"**Countdown** | `count INDEX` \u003cbr\u003e e.g., `count 2`","lastModifiedDate":"2021-03-30"},{"lineNumber":460,"author":{"gitId":"mesyeux"},"content":"**Statistics** | `stat`","lastModifiedDate":"2021-03-30"},{"lineNumber":461,"author":{"gitId":"LimJunxue"},"content":"**View** | `view DATE`\u003cbr\u003e e.g., `view 10/10/2021`","lastModifiedDate":"2021-03-31"},{"lineNumber":462,"author":{"gitId":"kaixiangtay"},"content":"**List** | `ls`\u003cbr\u003e `ls not done`","lastModifiedDate":"2021-03-31"},{"lineNumber":463,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"LimJunxue"},"content":"**Calendar Navigation** | `next` `prev`","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"LimJunxue":78,"maxxng":51,"mesyeux":40,"kaixiangtay":122,"habi39":37,"-":136}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"LimJunxue"},"content":"    content: \"PlanIT\";","lastModifiedDate":"2021-03-31"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"LimJunxue":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"habi39"},"content":"user -[USER_COLOR]\u003e ui : \"delete-task 1\"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"habi39"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete-task 1\")","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteTask(p)","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"logic -[LOGIC_COLOR]\u003e storage : savePlanner(planner)","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LimJunxue":2,"habi39":2,"-":34}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"Planner *-left\u003e \"1\" ObservableCalendarDate","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"Planner *-right-\u003e \"1\" UniqueTaskList","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"Planner *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"UniqueTagList -[hidden]down- UniqueTaskList","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"UniqueTagList -[hidden]down- UniqueTaskList","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"UniqueTagList o-right-\u003e \"*\" Tag","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"UniqueTaskList o-right-\u003e Task","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"Task o-up-\u003e \"*\" Tag","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"kaixiangtay"},"content":"Task *--\u003e Title","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"kaixiangtay"},"content":"Task *--\u003e Deadline","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"Task *--\u003e Duration","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"Task *--\u003e RecurringSchedule","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"kaixiangtay"},"content":"Task *--\u003e Description","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"kaixiangtay"},"content":"Task *--\u003e Status","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LimJunxue":10,"kaixiangtay":4,"-":10}},{"path":"docs/diagrams/DeleteFieldActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"start","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":":User executes command;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"if () then ([index is valid])","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"    if () then ([field is deletable])","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"        :Create new task with same attributes","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"                        but with field deleted;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"        :Update model with new task;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"        :Show success message to user;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"    else ([else])","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"        :Throw new CommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"        :Show user field cannot be deleted","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"                        error message;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"    endif","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"else ([else])","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":":Throw new CommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":":Show user invalid index error message;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"endif","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"stop","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"mesyeux":24}},{"path":"docs/diagrams/DeleteFieldSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"!include style.puml","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"participant \":PlannerParser\" as PlannerParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"participant \":DeleteFieldCommandParser\" as DeleteFieldCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"participant \"d:DeleteFieldCommand\" as DeleteFieldCommand LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"[-\u003e LogicManager : execute(\"delete-field 2 t/\")","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"activate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"LogicManager -\u003e PlannerParser : parseCommand(\"delete-field 2 t/\")","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"activate PlannerParser","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"create DeleteFieldCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"PlannerParser -\u003e DeleteFieldCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"activate DeleteFieldCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"DeleteFieldCommandParser --\u003e PlannerParser","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"deactivate DeleteFieldCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"PlannerParser -\u003e DeleteFieldCommandParser : parse(\"2\")","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"activate DeleteFieldCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"create DeleteFieldCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"DeleteFieldCommandParser -\u003e DeleteFieldCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"activate DeleteFieldCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"DeleteFieldCommand --\u003e DeleteFieldCommandParser : d","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"deactivate DeleteFieldCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"DeleteFieldCommandParser --\u003e PlannerParser : d","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"deactivate DeleteFieldCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"DeleteFieldCommandParser -[hidden]-\u003e PlannerParser","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"destroy DeleteFieldCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"PlannerParser --\u003e LogicManager : d","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"deactivate PlannerParser","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"LogicManager -\u003e DeleteFieldCommand : execute()","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":"activate DeleteFieldCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"mesyeux"},"content":"DeleteFieldCommand -\u003e DeleteFieldCommand : deleteFieldFromTask(taskToDeleteFieldFrom, targetField)","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"mesyeux"},"content":"activate DeleteFieldCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"mesyeux"},"content":"DeleteFieldCommand -\u003e DeleteFieldCommand : taskWithFieldDeleted","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"mesyeux"},"content":"deactivate DeleteFieldCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"mesyeux"},"content":"DeleteFieldCommand -\u003e Model : setTask(taskToDeleteFieldFrom, taskWithFieldDeleted)","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"mesyeux"},"content":"activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"mesyeux"},"content":"Model --\u003e DeleteFieldCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"mesyeux"},"content":"deactivate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"mesyeux"},"content":"create CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"mesyeux"},"content":"DeleteFieldCommand -\u003e CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"mesyeux"},"content":"activate CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"mesyeux"},"content":"CommandResult --\u003e DeleteFieldCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"mesyeux"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"mesyeux"},"content":"DeleteFieldCommand --\u003e LogicManager : result","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"mesyeux"},"content":"deactivate DeleteFieldCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"mesyeux"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"mesyeux"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"mesyeux"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"mesyeux":76}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"participant \":PlannerParser\" as PlannerParser LOGIC_COLOR","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"habi39"},"content":"participant \":DeleteTaskCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"habi39"},"content":"participant \"d:DeleteTaskCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"habi39"},"content":"[-\u003e LogicManager : execute(\"delete-task 1\")","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"habi39"},"content":"LogicManager -\u003e PlannerParser : parseCommand(\"delete-task 1\")","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"activate PlannerParser","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"PlannerParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"DeleteCommandParser --\u003e PlannerParser","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"PlannerParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"DeleteCommandParser --\u003e PlannerParser : d","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"DeleteCommandParser -[hidden]-\u003e PlannerParser","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"PlannerParser --\u003e LogicManager : d","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"deactivate PlannerParser","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"DeleteCommand -\u003e Model : deleteTask(1)","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LimJunxue":10,"habi39":4,"-":55}},{"path":"docs/diagrams/DoneCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"maxxng"},"content":"@startuml","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"maxxng"},"content":"start","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"maxxng"},"content":":User executes command;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"maxxng"},"content":"if () then ([is valid command])","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":"    if () then ([Status is \u0027done\u0027])","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"    :Throw new","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"    CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"    :Display task already","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"maxxng"},"content":"    done message;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":"    else ([Status is \u0027not done\u0027])","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"    :Create new Task with","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"    Status attibute set","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"    to \u0027done\u0027;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"    :Update model with the","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"maxxng"},"content":"    new Task;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"    :Return doneCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"    success message;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"maxxng"},"content":"    endif","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"maxxng"},"content":"else if () then ([invalid parameter])","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"maxxng"},"content":"    :Display invalid","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"    index message;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"maxxng"},"content":"else ([invalid command])","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"maxxng"},"content":"    :Display unknown","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"maxxng"},"content":"    command message;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"maxxng"},"content":"endif","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"maxxng"},"content":"stop","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"maxxng"},"content":"@enduml","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"maxxng":33}},{"path":"docs/diagrams/DoneSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"maxxng"},"content":"@startuml","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"maxxng"},"content":"!include style.puml","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"maxxng"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"maxxng"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"maxxng"},"content":"participant \":PlannerParser\" as PlannerParser LOGIC_COLOR","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":"participant \":DoneCommandParser\" as DoneCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"participant \"d:DoneCommand\" as DoneCommand LOGIC_COLOR","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"end box","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"maxxng"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":"end box","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"[-\u003e LogicManager : execute(done)","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"activate LogicManager","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"LogicManager -\u003e PlannerParser : parseCommand(done)","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"maxxng"},"content":"activate PlannerParser","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"PlannerParser -\u003e DoneCommandParser : parse(args)","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"maxxng"},"content":"activate DoneCommandParser","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"maxxng"},"content":"create DoneCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"maxxng"},"content":"DoneCommandParser -\u003e DoneCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"activate DoneCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"maxxng"},"content":"DoneCommand --\u003e DoneCommandParser","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"maxxng"},"content":"deactivate DoneCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"maxxng"},"content":"DoneCommandParser --\u003e PlannerParser : d","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"maxxng"},"content":"deactivate DoneCommandParser","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"maxxng"},"content":"PlannerParser --\u003e LogicManager : d","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"maxxng"},"content":"deactivate PlannerParser","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"maxxng"},"content":"LogicManager -\u003e DoneCommand : execute(model)","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"maxxng"},"content":"activate DoneCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"maxxng"},"content":"DoneCommand -\u003e Model : setTask(targetTask, updatedTask)","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"maxxng"},"content":"DoneCommand -\u003e Model : updateFilteredTaskList()","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"maxxng"},"content":"DoneCommand --\u003e LogicManager : result","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"maxxng"},"content":"deactivate DoneCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"maxxng"},"content":"DoneCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"maxxng"},"content":"destroy DoneCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"maxxng"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"maxxng"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"maxxng"},"content":"@enduml","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"maxxng":50}},{"path":"docs/diagrams/FindActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangtay"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"kaixiangtay"},"content":"start","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"kaixiangtay"},"content":":User executes find command;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"kaixiangtay"},"content":"if () then ([valid find command])","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"kaixiangtay"},"content":"    if () then ([blank or white space","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"kaixiangtay"},"content":"    only parameter])","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"kaixiangtay"},"content":"        :Display invalid command","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"kaixiangtay"},"content":"                format message;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"kaixiangtay"},"content":"        else ([else])","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"kaixiangtay"},"content":"          :Find tasks with matching keywords;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"kaixiangtay"},"content":"            :Update model with new filtered task list;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"kaixiangtay"},"content":"            :Display list of matching task(s) if any;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"kaixiangtay"},"content":"        endif","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"kaixiangtay"},"content":"else ([else])","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"kaixiangtay"},"content":"    :Display unknown","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"kaixiangtay"},"content":"    command message;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"kaixiangtay"},"content":"endif","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"kaixiangtay"},"content":"stop","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"kaixiangtay"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"kaixiangtay":23}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangtay"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"kaixiangtay"},"content":"!include style.puml","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"kaixiangtay"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"kaixiangtay"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"kaixiangtay"},"content":"participant \":PlannerParser\" as PlannerParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"kaixiangtay"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"kaixiangtay"},"content":"participant \":TitleContainsKeywordsPredicate\" as TitleContainsKeywordsPredicate LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"kaixiangtay"},"content":"participant \":FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"kaixiangtay"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"kaixiangtay"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"kaixiangtay"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"kaixiangtay"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"kaixiangtay"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"kaixiangtay"},"content":"[-\u003e LogicManager : execute(find [args])","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"kaixiangtay"},"content":"activate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"kaixiangtay"},"content":"LogicManager -\u003e PlannerParser : parseCommand(find [args])","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"kaixiangtay"},"content":"activate PlannerParser","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"kaixiangtay"},"content":"create FindCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"kaixiangtay"},"content":"PlannerParser -\u003e FindCommandParser : new FindCommandParser()","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"kaixiangtay"},"content":"activate FindCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"kaixiangtay"},"content":"FindCommandParser --\u003e PlannerParser : return","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"kaixiangtay"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"kaixiangtay"},"content":"PlannerParser -\u003e FindCommandParser : parse(args)","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"kaixiangtay"},"content":"activate FindCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"kaixiangtay"},"content":"create TitleContainsKeywordsPredicate","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"kaixiangtay"},"content":"FindCommandParser -\u003e TitleContainsKeywordsPredicate : new TitleContainsKeywordsPredicate(keywords)","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"kaixiangtay"},"content":"activate TitleContainsKeywordsPredicate","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"kaixiangtay"},"content":"TitleContainsKeywordsPredicate --\u003e FindCommandParser : predicate","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"kaixiangtay"},"content":"deactivate TitleContainsKeywordsPredicate","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"kaixiangtay"},"content":"create FindCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"kaixiangtay"},"content":"FindCommandParser -\u003e FindCommand : new FindCommand(predicate)","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"kaixiangtay"},"content":"activate FindCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"kaixiangtay"},"content":"FindCommand --\u003e FindCommandParser : command","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"kaixiangtay"},"content":"deactivate FindCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"kaixiangtay"},"content":"FindCommandParser --\u003e PlannerParser : command","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"kaixiangtay"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"kaixiangtay"},"content":"PlannerParser --\u003e LogicManager : command","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"kaixiangtay"},"content":"deactivate PlannerParser","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"kaixiangtay"},"content":"LogicManager -\u003e FindCommand : execute(model)","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"kaixiangtay"},"content":"activate FindCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"kaixiangtay"},"content":"FindCommand -\u003e Model : updateFilteredTaskList(predicate)","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"kaixiangtay"},"content":"activate Model","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"kaixiangtay"},"content":"create CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"kaixiangtay"},"content":"FindCommand -\u003e CommandResult : new CommandResult(feedbackToUser)","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"kaixiangtay"},"content":"activate CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"kaixiangtay"},"content":"CommandResult --\u003e FindCommand : result","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"kaixiangtay"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"kaixiangtay"},"content":"FindCommand --\u003e LogicManager : result","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"kaixiangtay"},"content":"deactivate FindCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"kaixiangtay"},"content":"FindCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"kaixiangtay"},"content":"destroy FindCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"kaixiangtay"},"content":"[\u003c--LogicManager : return","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"kaixiangtay"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"kaixiangtay"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"kaixiangtay":73}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package Parser {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"Class PlannerParser","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Command {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"LogicManager --\u003e\"1\" PlannerParser","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"PlannerParser .left.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"XYZCommandParser ..|\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult","lastModifiedDate":"2019-07-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult -[hidden]-\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LimJunxue":3,"-":59}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"Interface ReadOnlyPlanner \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface ObservableList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"Class Planner","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"Class ReadOnlyPlanner","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"Class ObservableCalendarDate","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"Package Task {","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"Class Task","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"kaixiangtay"},"content":"Class Deadline","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"Class RecurringSchedule","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"Class Title","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"kaixiangtay"},"content":"Class Status","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"Class Duration","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"kaixiangtay"},"content":"Class Description","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"Class UniqueTaskList","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Package Tag {","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"Class UniqueTagList","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"kaixiangtay"},"content":"HiddenOutside ...\u003e Model","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"Planner .up.|\u003e ReadOnlyPlanner","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Model .right.\u003e ObservableList","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"ModelManager o--\u003e \"1\" Planner","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ModelManager o-left-\u003e \"1\" UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"Planner *-left-\u003e \"1\" ObservableCalendarDate","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"Planner *--\u003e \"1\" UniqueTaskList","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"UniqueTaskList o--\u003e \"*\" Task","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"Planner *-left-\u003e \"1\" UniqueTagList","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"UniqueTagList o--\u003e \"*\" Tag","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"Task *--\u003e Title","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"habi39"},"content":"Task *--\u003e Deadline","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"Task *--\u003e Duration","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"Task *--\u003e RecurringSchedule","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"Task *--\u003e Description","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"kaixiangtay"},"content":"Task *--\u003e Status","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"Task o--\u003e \"*\" Tag","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"habi39"},"content":"Title -[hidden]right-\u003e Deadline","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"Deadline -[hidden]right-\u003e Duration","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"LimJunxue"},"content":"Duration -[hidden]right-\u003e RecurringSchedule","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"RecurringSchedule -[hidden]right-\u003e Description","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"kaixiangtay"},"content":"Description -[hidden]right-\u003e Status","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"LimJunxue"},"content":"ModelManager -----\u003e\" ~* filtered list\" Task","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LimJunxue":27,"kaixiangtay":6,"habi39":2,"-":33}},{"path":"docs/diagrams/ObservableCalendarDateClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"@startuml","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"!include style.puml","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"skinparam arrowColor #grey","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"skinparam classBackgroundColor #grey","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"interface Observable \u003c\u003cInterface\u003e\u003e #grey","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"interface Observer \u003c\u003cInterface\u003e\u003e #grey","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"class CalendarPanel UI_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"class ObservableCalendarDate MODEL_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"class Planner MODEL_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"Planner *-[MODEL_COLOR]\u003e \"1\" ObservableCalendarDate","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"ObservableCalendarDate .[MODEL_COLOR].|\u003e Observable","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"CalendarPanel .[UI_COLOR].|\u003e Observer","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"Observable -\u003e \"*\" Observer","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"@enduml","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"LimJunxue":18}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"Interface PlannerStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"Class JsonPlannerStorage","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"StorageManager .left.|\u003e Storage","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"StorageManager o-right-\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"StorageManager o--\u003e PlannerStorage","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .left.|\u003e UserPrefsStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"JsonPlannerStorage .left.|\u003e PlannerStorage","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"JsonPlannerStorage .down.\u003e JsonSerializablePlannerStorage","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"JsonSerializablePlannerStorage .right.\u003e JsonSerializableTask","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"JsonSerializableTask .right.\u003e JsonAdaptedTag","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LimJunxue":7,"-":17}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"Class TaskListPanel","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"Class TaskCard","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"Class TaskCardDetails","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"Class TagListPanel","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"Class CalendarPanel","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UiManager -down-\u003e MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"MainWindow -down-\u003e HelpWindow","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"MainWindow *-down-\u003e TagListPanel","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"MainWindow *-down-\u003e CalendarPanel","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"MainWindow *-left-\u003e TaskListPanel","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"TaskListPanel --\u003e TaskCard","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"TaskCard --\u003e TaskCardDetails","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"TaskListPanel --|\u003e UiPart","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"TaskCard --|\u003e UiPart","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"TaskCardDetails --|\u003e UiPart","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -down-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"TagListPanel --|\u003e UiPart","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"CalendarPanel --|\u003e UiPart","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"TaskListPanel ..\u003e Model","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"TaskListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LimJunxue":18,"-":51}},{"path":"docs/diagrams/UniqueTagListSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"!include style.puml","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"participant \":DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"participant \":Planner\" as Planner MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"participant \":UniqueTagList\" as UniqueTagList MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"[-\u003e DeleteCommand : execute()","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"activate DeleteCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"DeleteCommand -\u003e ModelManager : deleteTag(tag)","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"activate ModelManager","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"ModelManager -\u003e Planner : removeTag(tag)","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"activate Planner","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"Planner -\u003e UniqueTagList : removeTag(tag)","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"activate UniqueTagList","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"UniqueTagList --\u003e Planner","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"deactivate UniqueTagList","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"Planner --\u003e ModelManager","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"deactivate Planner","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"ModelManager --\u003e DeleteCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"deactivate ModelManager","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"[\u003c-- DeleteCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"deactivate DeleteCommand","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"LimJunxue":37}},{"path":"docs/diagrams/UniqueTagListSequenceDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"!include style.puml","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"end box","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"[-\u003e MainWindow : fillInnerParts()","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"activate MainWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"MainWindow -\u003e LogicManager : getSortedTagList()","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"activate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"LogicManager -\u003e ModelManager : getSortedTagList()","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"activate ModelManager","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"ModelManager --\u003e LogicManager : ObservableList\u003cTag\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"deactivate ModelManager","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"LogicManager --\u003e MainWindow : ObservableList\u003cTag\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"deactivate LogicManager","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"[\u003c-- MainWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"deactivate MainWindow","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"LimJunxue":33}},{"path":"docs/diagrams/ViewDateActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"@startuml","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"start","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":":User executes view command;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"if () then ([valid view command])","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"    :Filter task list by dates","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"     and recurring schedule dates","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"     with the given date;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"     :Update model using the filtered task list;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"     :Update calendar to given date;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"     :Display view command success message;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"else ([invalid command])","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"    if () then ([view command but with","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"    invalid date parameter])","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"        :Display invalid","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"        command format","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"        message;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"    else ([else])","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"        :Display unknown","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"        command message;","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"    endif","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"endif","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"stop","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"@enduml","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"LimJunxue":29}},{"path":"docs/diagrams/ViewDateSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"@startuml","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"!include style.puml","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"participant \":ViewDayCommandParser\" as ViewDayCommandParser LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"participant \":TaskOnDatePredicate\" as TaskOnDatePredicate LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"participant \":TaskDateOnDatePredicate\" as TaskDateOnDatePredicate LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"participant \":TaskScheduledOnDatePredicate\" as TaskScheduledOnDatePredicate LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"participant \":ViewDayCommand\" as ViewDayCommand LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"end box","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"end box","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"[-\u003e ViewDayCommandParser : parse(args)","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"activate ViewDayCommandParser","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"create TaskOnDatePredicate","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"ViewDayCommandParser -\u003e TaskOnDatePredicate","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"activate TaskOnDatePredicate","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"create TaskDateOnDatePredicate","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"TaskOnDatePredicate -\u003e TaskDateOnDatePredicate","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"activate TaskDateOnDatePredicate","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"TaskDateOnDatePredicate --\u003e TaskOnDatePredicate","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"deactivate TaskDateOnDatePredicate","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"create TaskScheduledOnDatePredicate","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"TaskOnDatePredicate -\u003e TaskScheduledOnDatePredicate","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"activate TaskScheduledOnDatePredicate","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"TaskScheduledOnDatePredicate --\u003e TaskOnDatePredicate","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"deactivate TaskScheduledOnDatePredicate","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"TaskOnDatePredicate --\u003e ViewDayCommandParser : predicate","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"deactivate TaskOnDatePredicate","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"create ViewDayCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"ViewDayCommandParser -\u003e ViewDayCommand : new ViewDayCommand(predicate)","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"activate ViewDayCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"ViewDayCommand --\u003e ViewDayCommandParser : command","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"deactivate ViewDayCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"[\u003c-- ViewDayCommandParser : command","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"deactivate ViewDayCommandParser","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"[-\u003e ViewDayCommand : execute(model)","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"activate ViewDayCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"ViewDayCommand -\u003e Model : updateFilteredTaskList(predicate)","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"activate Model","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"Model -\u003e ViewDayCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"deactivate Model","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"ViewDayCommand -\u003e Model : setCalendarDate(date)","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"activate Model","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"Model -\u003e ViewDayCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"deactivate Model","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"LimJunxue"},"content":"create CommandResult","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"LimJunxue"},"content":"ViewDayCommand -\u003e CommandResult","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"LimJunxue"},"content":"activate CommandResult","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"LimJunxue"},"content":"CommandResult --\u003e ViewDayCommand : result","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"deactivate CommandResult","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"LimJunxue"},"content":"[\u003c--ViewDayCommand : result","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"LimJunxue"},"content":"deactivate ViewDayCommand","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"LimJunxue"},"content":"@enduml","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"LimJunxue":75}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"Participant \":PlannerParser\" as abp LOGIC_COLOR","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"ecp -\u003e ec ++: index, editTaskDescriptor","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"LimJunxue":2,"-":19}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"title: PlanIT","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"[![Java CI](https://github.com/AY2021S2-CS2103T-T10-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2021S2-CS2103T-T10-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-T10-2/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103T-T10-2/tp)","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"**PlanIT is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"* If you are interested in using PlanIT, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"* If you are interested about developing PlanIT, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"LimJunxue":6,"-":12}},{"path":"docs/team/habi39.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"habi39"},"content":"---","lastModifiedDate":"2021-02-26"},{"lineNumber":2,"author":{"gitId":"habi39"},"content":"layout: page","lastModifiedDate":"2021-02-26"},{"lineNumber":3,"author":{"gitId":"habi39"},"content":"title: Lee Han Bin\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-26"},{"lineNumber":4,"author":{"gitId":"habi39"},"content":"---","lastModifiedDate":"2021-02-26"},{"lineNumber":5,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":6,"author":{"gitId":"habi39"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2021-02-26"},{"lineNumber":7,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":8,"author":{"gitId":"habi39"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-02-26"},{"lineNumber":9,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":10,"author":{"gitId":"habi39"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-26"},{"lineNumber":11,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":12,"author":{"gitId":"habi39"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-02-26"},{"lineNumber":13,"author":{"gitId":"habi39"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-02-26"},{"lineNumber":14,"author":{"gitId":"habi39"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-02-26"},{"lineNumber":15,"author":{"gitId":"habi39"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-02-26"},{"lineNumber":16,"author":{"gitId":"habi39"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-02-26"},{"lineNumber":17,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":18,"author":{"gitId":"habi39"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-02-26"},{"lineNumber":19,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":20,"author":{"gitId":"habi39"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-02-26"},{"lineNumber":21,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":22,"author":{"gitId":"habi39"},"content":"* **Project management**:","lastModifiedDate":"2021-02-26"},{"lineNumber":23,"author":{"gitId":"habi39"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-02-26"},{"lineNumber":24,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":25,"author":{"gitId":"habi39"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-26"},{"lineNumber":26,"author":{"gitId":"habi39"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-02-26"},{"lineNumber":27,"author":{"gitId":"habi39"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-02-26"},{"lineNumber":28,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":29,"author":{"gitId":"habi39"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-26"},{"lineNumber":30,"author":{"gitId":"habi39"},"content":"    * User Guide:","lastModifiedDate":"2021-02-26"},{"lineNumber":31,"author":{"gitId":"habi39"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-02-26"},{"lineNumber":32,"author":{"gitId":"habi39"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-02-26"},{"lineNumber":33,"author":{"gitId":"habi39"},"content":"    * Developer Guide:","lastModifiedDate":"2021-02-26"},{"lineNumber":34,"author":{"gitId":"habi39"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-02-26"},{"lineNumber":35,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":36,"author":{"gitId":"habi39"},"content":"* **Community**:","lastModifiedDate":"2021-02-26"},{"lineNumber":37,"author":{"gitId":"habi39"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-02-26"},{"lineNumber":38,"author":{"gitId":"habi39"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-02-26"},{"lineNumber":39,"author":{"gitId":"habi39"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-02-26"},{"lineNumber":40,"author":{"gitId":"habi39"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-02-26"},{"lineNumber":41,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":42,"author":{"gitId":"habi39"},"content":"* **Tools**:","lastModifiedDate":"2021-02-26"},{"lineNumber":43,"author":{"gitId":"habi39"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-02-26"},{"lineNumber":44,"author":{"gitId":"habi39"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-02-26"},{"lineNumber":45,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":46,"author":{"gitId":"habi39"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-02-26"}],"authorContributionMap":{"habi39":46}},{"path":"docs/team/kaixiangtay.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangtay"},"content":"---","lastModifiedDate":"2021-02-24"},{"lineNumber":2,"author":{"gitId":"kaixiangtay"},"content":"layout: page","lastModifiedDate":"2021-02-24"},{"lineNumber":3,"author":{"gitId":"kaixiangtay"},"content":"title: Tay Kai Xiang\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-24"},{"lineNumber":4,"author":{"gitId":"kaixiangtay"},"content":"---","lastModifiedDate":"2021-02-24"},{"lineNumber":5,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":6,"author":{"gitId":"kaixiangtay"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2021-02-24"},{"lineNumber":7,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":8,"author":{"gitId":"kaixiangtay"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-02-24"},{"lineNumber":9,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":10,"author":{"gitId":"kaixiangtay"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":12,"author":{"gitId":"kaixiangtay"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-02-24"},{"lineNumber":13,"author":{"gitId":"kaixiangtay"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-02-24"},{"lineNumber":14,"author":{"gitId":"kaixiangtay"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-02-24"},{"lineNumber":15,"author":{"gitId":"kaixiangtay"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-02-24"},{"lineNumber":16,"author":{"gitId":"kaixiangtay"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-02-24"},{"lineNumber":17,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":18,"author":{"gitId":"kaixiangtay"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-02-24"},{"lineNumber":19,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":20,"author":{"gitId":"kaixiangtay"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-02-24"},{"lineNumber":21,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":22,"author":{"gitId":"kaixiangtay"},"content":"* **Project management**:","lastModifiedDate":"2021-02-24"},{"lineNumber":23,"author":{"gitId":"kaixiangtay"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-02-24"},{"lineNumber":24,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":25,"author":{"gitId":"kaixiangtay"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-24"},{"lineNumber":26,"author":{"gitId":"kaixiangtay"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-02-24"},{"lineNumber":27,"author":{"gitId":"kaixiangtay"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-02-24"},{"lineNumber":28,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":29,"author":{"gitId":"kaixiangtay"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-24"},{"lineNumber":30,"author":{"gitId":"kaixiangtay"},"content":"    * User Guide:","lastModifiedDate":"2021-02-24"},{"lineNumber":31,"author":{"gitId":"kaixiangtay"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-02-24"},{"lineNumber":32,"author":{"gitId":"kaixiangtay"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-02-24"},{"lineNumber":33,"author":{"gitId":"kaixiangtay"},"content":"    * Developer Guide:","lastModifiedDate":"2021-02-24"},{"lineNumber":34,"author":{"gitId":"kaixiangtay"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-02-24"},{"lineNumber":35,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":36,"author":{"gitId":"kaixiangtay"},"content":"* **Community**:","lastModifiedDate":"2021-02-24"},{"lineNumber":37,"author":{"gitId":"kaixiangtay"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-02-24"},{"lineNumber":38,"author":{"gitId":"kaixiangtay"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-02-24"},{"lineNumber":39,"author":{"gitId":"kaixiangtay"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-02-24"},{"lineNumber":40,"author":{"gitId":"kaixiangtay"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-02-24"},{"lineNumber":41,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":42,"author":{"gitId":"kaixiangtay"},"content":"* **Tools**:","lastModifiedDate":"2021-02-24"},{"lineNumber":43,"author":{"gitId":"kaixiangtay"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-02-24"},{"lineNumber":44,"author":{"gitId":"kaixiangtay"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-02-24"},{"lineNumber":45,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":46,"author":{"gitId":"kaixiangtay"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-02-24"}],"authorContributionMap":{"kaixiangtay":46}},{"path":"docs/team/limjunxue.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"---","lastModifiedDate":"2021-02-24"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"layout: page title: Lim Junxue\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-07"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"---","lastModifiedDate":"2021-02-24"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"## Project: PlanIT","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"**PlanIT** is a task managing application made specially for NUS computing students. Our goal is to improve students\u0027","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"productivity with features and tools to help them manage their schedules. It features a calendar to provide a clear","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"perspective of the user\u0027s schedule and common commands that are enhanced for fast typists.","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"### Summary of Contributions:","lastModifiedDate":"2021-04-07"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"#### Code contributed: [RepoSense Link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003dlimjunxue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-02-19\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse)","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"* **New Feature**: Added the ability to type multiline descriptions in tasks.","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"    * What it does: allows users to add descriptions to describe their tasks, and use keys to create multiple lines.","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"    * Justification: This feature improves the use case of adding tasks to the planner because users may want to add","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"      long descriptions, and it provides a way to format their text better.","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"* **New Feature**: Created a visual tag list.","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"    * What it does: Keeps track of the current tags used in the task list.","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"    * Justification: This feature is important in saving time spent looking for tags to reuse, because tags help to organise","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"      tasks and the user should not need to scroll through the entire task list to find a tag to reuse.","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"    * Highlights: This feature required a seperate `UniqueTagList` similar to `UniqueTaskList` stored in the planner of","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"      the `Model` because many commands can change tags. This is implemented with the Observer\u0027s pattern such that the UI","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"      is able to track its changes through the `Model`.","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"* **New Feature**: Added a view date command.","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"    * What it does: allows users to view the tasks that fall on a specific date. Brings the calendar to that date.","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"    * Justification: This feature is essential in helping users get their schedules for the day, and enables further","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"      task management and tracking.","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"* **New Feature**: Created a calendar, and `prev` and `next` commands for navigation.","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"    * Justification: This feature complements the view day command in providing a clear picture of the tasks on the day","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"      and aid the user in scheduling for the upcoming days.","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"    * Highlights: The calendar also uses the Observer\u0027s pattern as it implements an `Observer` interface that","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"      communicates with an `Observable` date that the view day command provides. Thus, the calendar can react to changes","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"      in this date, or otherwise remain in the same state.","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"    * Made the rendering of fields to task cards dynamic, and refactored `TaskCard` (Pull","lastModifiedDate":"2021-04-07"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"      requests [\\#68](https://github.com/AY2021S2-CS2103T-T10-2/tp/pull/68)","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"      , [\\#89](https://github.com/AY2021S2-CS2103T-T10-2/tp/pull/89))","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"    * Wrote additional tests for existing features to increase coverage from 69% to 92% (Pull requests )","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"* **Documentation**:","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"    * User Guide:","lastModifiedDate":"2021-04-07"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"        * Added documentation for the features `mk`, `edit`, `view` and calendar controls.","lastModifiedDate":"2021-04-07"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"        * Repackaged the attributes of `Task` into a neater table.","lastModifiedDate":"2021-04-07"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"    * Developer Guide:","lastModifiedDate":"2021-04-07"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"        * Updated all class diagrams under \"Design\" to correspond to PlanIT.","lastModifiedDate":"2021-04-07"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"        * Added implementation details of the tag list, and the `view` feature coupled with the calendar.","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"* **Contribution to team-based tasks**:","lastModifiedDate":"2021-04-07"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"    * Renamed all of `AddressBook`/AB3 to `Planner`/PlanIT. (Pull","lastModifiedDate":"2021-04-07"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"      request: [\\#39](https://github.com/AY2021S2-CS2103T-T10-2/tp/pull/39))","lastModifiedDate":"2021-04-07"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"    * Renamed `Person` to `Task`, its `Name` field to `Title`, and disabled most fields to get the team started. (Pull","lastModifiedDate":"2021-04-07"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"      requests: [\\#34](https://github.com/AY2021S2-CS2103T-T10-2/tp/pull/35)","lastModifiedDate":"2021-04-07"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"      , [\\#59](https://github.com/AY2021S2-CS2103T-T10-2/tp/pull/59))","lastModifiedDate":"2021-04-07"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"    * Made and delivered the v1.2 and v1.3 feature demos for tutorials.","lastModifiedDate":"2021-04-07"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":62,"author":{"gitId":"LimJunxue"},"content":"* **Community**:","lastModifiedDate":"2021-04-07"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#117](https://github.com/AY2021S2-CS2103T-T10-2/tp/pull/117)","lastModifiedDate":"2021-04-07"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"      , [\\#88](https://github.com/AY2021S2-CS2103T-T10-2/tp/pull/88)","lastModifiedDate":"2021-04-07"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"    * Contributed to forum discussions (examples: [1](https://github.com/nus-cs2103-AY2021S2/forum/issues/247))","lastModifiedDate":"2021-04-07"},{"lineNumber":66,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-02-24"}],"authorContributionMap":{"LimJunxue":66}},{"path":"docs/team/maxxng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"maxxng"},"content":"title: Max Ng\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"maxxng":1,"-":45}},{"path":"docs/team/mesyeux.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"---","lastModifiedDate":"2021-02-26"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"layout: page","lastModifiedDate":"2021-02-26"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"title: Lau Cheuk Ying\u0027s Project Portfolio Page","lastModifiedDate":"2021-02-26"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"---","lastModifiedDate":"2021-02-26"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"## Project: AddressBook Level 3","lastModifiedDate":"2021-02-26"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-02-26"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-02-26"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-02-26"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-02-26"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-02-26"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-02-26"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-02-26"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-02-26"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-02-26"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"* **Project management**:","lastModifiedDate":"2021-02-26"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-02-26"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-02-26"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-02-26"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-02-26"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"* **Documentation**:","lastModifiedDate":"2021-02-26"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"    * User Guide:","lastModifiedDate":"2021-02-26"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-02-26"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-02-26"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"    * Developer Guide:","lastModifiedDate":"2021-02-26"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-02-26"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"* **Community**:","lastModifiedDate":"2021-02-26"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-02-26"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-02-26"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-02-26"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-02-26"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"* **Tools**:","lastModifiedDate":"2021-02-26"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-02-26"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-02-26"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-02-26"}],"authorContributionMap":{"mesyeux":46}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":" * Changes the remark of an existing task in the address book.","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"LimJunxue"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the task identified \"","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"LimJunxue"},"content":"            + \"by the index number used in the last task listing. \"","lastModifiedDate":"2021-03-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"LimJunxue"},"content":"     * @param index of the task in the filtered task list to edit the remark","lastModifiedDate":"2021-03-02"},{"lineNumber":103,"author":{"gitId":"LimJunxue"},"content":"     * @param remark of the task to be updated to","lastModifiedDate":"2021-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"LimJunxue"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of task data. We achieve that by working with the `Task` model. Each field in a Task is implemented as a separate class (e.g. a `Title` object represents the task’s title). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a task.","lastModifiedDate":"2021-03-03"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"LimJunxue"},"content":"Create a new `Remark` in `seedu.address.model.task`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-03-02"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"LimJunxue"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each task.","lastModifiedDate":"2021-03-02"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"LimJunxue"},"content":"Simply add the following to [`seedu.address.ui.TaskCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-03-02"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"LimJunxue"},"content":"**`TaskCard.java`:**","lastModifiedDate":"2021-03-02"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"LimJunxue"},"content":"Then insert the following into [`main/resources/view/TaskListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2021-03-02"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"LimJunxue"},"content":"**`TaskListCard.fxml`:**","lastModifiedDate":"2021-03-02"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"LimJunxue"},"content":"## Modify `Task` to support a `Remark` field","lastModifiedDate":"2021-03-02"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"LimJunxue"},"content":"Since `TaskCard` displays data from a `Task`, we need to update `Task` to get our `Remark` displayed!","lastModifiedDate":"2021-03-02"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"LimJunxue"},"content":"### Modify `Task`","lastModifiedDate":"2021-03-02"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"LimJunxue"},"content":"We change the constructor of `Task` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2021-03-02"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"LimJunxue"},"content":"### Update other usages of `Task`","lastModifiedDate":"2021-03-02"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"LimJunxue"},"content":"Unfortunately, a change to `Task` will cause other commands to break, you will have to modify these commands to use the updated `Task`!","lastModifiedDate":"2021-03-02"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"LimJunxue"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Task` class to find these commands.","lastModifiedDate":"2021-03-02"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"LimJunxue"},"content":"AddressBook stores data by serializing `JsonAdaptedTask` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedTask` to work with our new `Task`!","lastModifiedDate":"2021-03-02"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"LimJunxue"},"content":"Now that we have finalized the `Task` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2021-03-02"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"LimJunxue"},"content":"**`TaskCard.java`:**","lastModifiedDate":"2021-03-02"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"LimJunxue"},"content":"public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2021-03-02"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"LimJunxue"},"content":"    remark.setText(task.getRemark().value);","lastModifiedDate":"2021-03-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"LimJunxue"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Task`. Since all fields in a `Task` are immutable, we create a new instance of a `Task` with the values that we want and","lastModifiedDate":"2021-03-02"},{"lineNumber":326,"author":{"gitId":"LimJunxue"},"content":"save it with `Model#setTask()`.","lastModifiedDate":"2021-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"LimJunxue"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Task: %1$s\";","lastModifiedDate":"2021-03-02"},{"lineNumber":333,"author":{"gitId":"LimJunxue"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Task: %1$s\";","lastModifiedDate":"2021-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"LimJunxue"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"LimJunxue"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"LimJunxue"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-02"},{"lineNumber":344,"author":{"gitId":"LimJunxue"},"content":"        Task editedTask \u003d new Task(taskToEdit.getTitle(), taskToEdit.getPhone(), taskToEdit.getEmail(),","lastModifiedDate":"2021-03-03"},{"lineNumber":345,"author":{"gitId":"LimJunxue"},"content":"                taskToEdit.getAddress(), remark, taskToEdit.getTags());","lastModifiedDate":"2021-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"LimJunxue"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":348,"author":{"gitId":"LimJunxue"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"LimJunxue"},"content":"        return new CommandResult(generateSuccessMessage(editedTask));","lastModifiedDate":"2021-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"LimJunxue"},"content":"     * {@code taskToEdit}.","lastModifiedDate":"2021-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"LimJunxue"},"content":"    private String generateSuccessMessage(Task taskToEdit) {","lastModifiedDate":"2021-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"LimJunxue"},"content":"        return String.format(message, taskToEdit);","lastModifiedDate":"2021-03-02"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"LimJunxue":39,"-":355}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"When working on AddressBook, you will most likely find that some features and fields that are no longer necessary. In scenarios like this, you can consider refactoring the existing `Task` model to suit your use case.","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"In this tutorial, we’ll do exactly just that and remove the `address` field from `Task`.","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Fortunately, IntelliJ IDEA provides a robust refactoring tool that can identify *most* usages. Let’s try to use it as much as we can.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"The `address` field in `Task` is actually an instance of the `seedu.address.model.task.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry. You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditTaskDescriptor` may require more careful inspection.","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"Let’s try removing references to `Address` in `EditTaskDescriptor`.","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"1. Safe delete the field `address` in `EditTaskDescriptor`.","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Task` class will require you to modify its constructor.","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `TaskCard` that has not been removed nor identified.","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"A quick look at the `TaskCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"**`TaskCard.java`**","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"**`TaskCard.fxml`**","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"habi39"},"content":"\u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"LimJunxue"},"content":"**`invalidTaskAddressBook.json`:**","lastModifiedDate":"2021-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"LimJunxue"},"content":"  \"tasks\": [","lastModifiedDate":"2021-03-11"},{"lineNumber":95,"author":{"gitId":"LimJunxue"},"content":"    {","lastModifiedDate":"2021-03-11"},{"lineNumber":96,"author":{"gitId":"LimJunxue"},"content":"      \"title\": \"Task with invalid title field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-03-03"},{"lineNumber":97,"author":{"gitId":"habi39"},"content":"      \"date\": \"9482424\",","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"LimJunxue"},"content":"      \"description\": \"4th street\"","lastModifiedDate":"2021-03-11"},{"lineNumber":100,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":101,"author":{"gitId":"LimJunxue"},"content":"  ]","lastModifiedDate":"2021-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"LimJunxue":18,"habi39":2,"-":85}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"![Architecture sequence diagram from the developer","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"guide](../images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Note how the diagram shows only how the execution flows *between* the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram succeeds in informing the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of the code base.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Setting a break point","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method. In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the UI transfers control to the Logic component. According to the sequence diagram, the UI component yields control to the Logic component through a method named `execute`. Searching through the code base for `execute()` yields a promising candidate in `seedu.address.ui.CommandBox.CommandExecutor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"![Using the `Search for target by title` feature. `Navigate` \\\u003e `Symbol`.](../images/tracing/Execute.png)","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"A quick look at the class confirms that this is indeed close to what we’re looking for. However, it is just an `Interface`. Let’s delve further and find the implementation of the interface by using the `Find Usages` feature in IntelliJ IDEA.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to jot down what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and look something like this:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Use the `Show execution point` feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s `Step in` into that method call:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()`. Let’s take a look at the body of the method and annotate what we can deduce.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. `Step over` the logging code since it is of no interest to us now. ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. `Step into` the line where user input in parsed from a String to a Command.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    **`AddressBookParser\\#parseCommand()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. `Step over` until you reach the `switch` statement. The `Variables` window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. Stepping into the `switch`, we obviously stop at **`AddressBookParser\\#parseCommand()`.**","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** Sometimes you might end up stepping into functions that are not of interest. Simply `step out` of them\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"LimJunxue"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditTaskDescriptor`. Recall that we can verify the contents of `editTaskDesciptor` through the `Variable` tool window.\u003cbr\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far matches with the diagram?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"1. Now let’s see what happens when we call `command#execute()`\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   **`EditCommand\\#execute()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"LimJunxue"},"content":"       Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-02"},{"lineNumber":156,"author":{"gitId":"LimJunxue"},"content":"       Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2021-03-02"},{"lineNumber":157,"author":{"gitId":"LimJunxue"},"content":"       if (!taskToEdit.isSameTask(editedTask) \u0026\u0026 model.hasTask(editedTask)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":158,"author":{"gitId":"LimJunxue"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"LimJunxue"},"content":"       model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":161,"author":{"gitId":"LimJunxue"},"content":"       model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-02"},{"lineNumber":162,"author":{"gitId":"LimJunxue"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2021-03-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to `model`.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"1. We can a closer look at how storage works by repeatedly stepping into the code until we arrive at","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    `JsonAddressBook#saveAddressBook()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Again, it appears that the heavy lifting is delegated. Let’s take a look at `JsonSerializableAddressBook`\u0027s constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook\\#JsonSerializableAddressBook()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   /**","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    *","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"   public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"LimJunxue"},"content":"       tasks.addAll(","lastModifiedDate":"2021-03-02"},{"lineNumber":184,"author":{"gitId":"LimJunxue"},"content":"           source.getTaskList()","lastModifiedDate":"2021-03-02"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                 .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"LimJunxue"},"content":"                 .map(JsonAdaptedTask::new)","lastModifiedDate":"2021-03-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                 .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"LimJunxue"},"content":"1. It appears that a `JsonAdaptedTask` is created for each `Task` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2021-03-02"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"1. We can continue to step through until we return to `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    **`ResultDisplay\\#setFeedbackToUser()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"1. Finally, we step through until we reach the end of","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"the result being displayed to the user. From this tutorial, you learned","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"more about the inner workings of AddressBook and how the various","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"components mesh together to form one cohesive product.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"execution path tracing. In some cases, you can do further tracing for","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"the given commands to find exactly what happens.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown(if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"LimJunxue"},"content":"    5.  Add a new field to `Task`","lastModifiedDate":"2021-03-02"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"LimJunxue":14,"-":236}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.Planner;","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.ReadOnlyPlanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.storage.JsonPlannerStorage;","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.storage.PlannerStorage;","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Planner ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"        PlannerStorage plannerStorage \u003d new JsonPlannerStorage(userPrefs.getPlannerFilePath());","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"        storage \u003d new StorageManager(plannerStorage, userPrefsStorage);","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s planner and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"LimJunxue"},"content":"     * The data from the sample planner will be used instead if {@code storage}\u0027s planner is not found,","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"LimJunxue"},"content":"     * or an empty planner will be used instead if errors occur when reading {@code storage}\u0027s planner.","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"        Optional\u003cReadOnlyPlanner\u003e plannerOptional;","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"LimJunxue"},"content":"        ReadOnlyPlanner initialData;","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"            plannerOptional \u003d storage.readPlanner();","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"LimJunxue"},"content":"            if (!plannerOptional.isPresent()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"LimJunxue"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Planner\");","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"LimJunxue"},"content":"            initialData \u003d plannerOptional.orElseGet(SampleDataUtil::getSamplePlanner);","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"LimJunxue"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Planner\");","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"LimJunxue"},"content":"            initialData \u003d new Planner();","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"LimJunxue"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Planner\");","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"LimJunxue"},"content":"            initialData \u003d new Planner();","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"LimJunxue"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Planner\");","lastModifiedDate":"2021-03-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"LimJunxue"},"content":"        logger.info(\"Starting Planner \" + MainApp.VERSION);","lastModifiedDate":"2021-03-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"LimJunxue"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Planner ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimJunxue":24,"-":159}},{"path":"src/main/java/seedu/address/commons/CalendarDirection.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.commons;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"public enum CalendarDirection {","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"    NONE,","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"    NEXT,","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"    PREV","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"LimJunxue":7}},{"path":"src/main/java/seedu/address/commons/Observable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.commons;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"public interface Observable\u003cT\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"    void set(T t);","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"    void addObserver(Observer observer);","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"LimJunxue":7}},{"path":"src/main/java/seedu/address/commons/Observer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.commons;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"public interface Observer {","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"    void update();","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"LimJunxue":5}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"    private static final String LOG_FILE \u003d \"planit.log\";","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimJunxue":1,"-":111}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid.\\n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"%1$d tasks listed!\\n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"    public static final String MESSAGE_CALENDAR_SHOWING_CURRENT_MONTH \u003d \"Calendar is now showing this month.\\n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimJunxue":3,"-":11}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1,","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"                \"Word parameter should be a single word\");","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"     * Converts a string to sentence case, where the first letter is in upper case","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"     * and the rest of the string is lower case. Does not expect or convert multiple snetences.","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"LimJunxue"},"content":"     * @param s String to convert to sentence case.","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"LimJunxue"},"content":"     * @return Sentence case string s.","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"    public static String toSentenceCase(String s) {","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(s);","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"        if (s.length() \u003c 2) {","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"LimJunxue"},"content":"            return s.toUpperCase();","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"LimJunxue"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"LimJunxue"},"content":"            return s.charAt(0) + s.substring(1).toLowerCase();","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimJunxue":19,"-":67}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.ObservableCalendarDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.ReadOnlyPlanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"     * Returns the Planner.","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"     * @see seedu.address.model.Model#getPlanner()","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"    ReadOnlyPlanner getPlanner();","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"    /** Returns an unmodifiable view of the sorted list of tags */","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"    ObservableList\u003cTag\u003e getSortedTagList();","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"    /** Returns an unmodifiable view of the day requested to be viewed on the calendar */","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"    ObservableCalendarDate getCalendarDate();","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"     * Returns the user prefs\u0027 planner file path.","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"    Path getPlannerFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"LimJunxue":16,"-":42}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.logic.parser.PlannerParser;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.ObservableCalendarDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.ReadOnlyPlanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"    private final PlannerParser plannerParser;","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"        plannerParser \u003d new PlannerParser();","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"        Command command \u003d plannerParser.parseCommand(commandText);","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"            storage.savePlanner(model.getPlanner());","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"    public ReadOnlyPlanner getPlanner() {","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"        return model.getPlanner();","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"LimJunxue"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"LimJunxue"},"content":"    public ObservableList\u003cTag\u003e getSortedTagList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"        return model.getSortedTagList();","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"LimJunxue"},"content":"    public ObservableCalendarDate getCalendarDate() {","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"        return model.getCalendarDate();","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"    public Path getPlannerFilePath() {","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"LimJunxue"},"content":"        return model.getPlannerFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"LimJunxue":24,"-":69}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURRINGSCHEDULE;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"kaixiangtay"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.conditions.ConstraintManager;","lastModifiedDate":"2021-04-02"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.conditions.DateVerifier;","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":" * Adds a task to the planner.","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"    public static final String COMMAND_WORD \u003d \"mk\";","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the planner. \\n\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"            + PREFIX_TITLE + \"TITLE \"","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"habi39"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"            + \"[\" + PREFIX_DURATION + \"DURATION] \"","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"            + \"[\" + PREFIX_RECURRINGSCHEDULE + \"RECURRINGSCHEDULE] \"","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"            + PREFIX_TITLE + \"This is a task \"","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"habi39"},"content":"            + PREFIX_DATE + \"20/06/2021 \"","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"kaixiangtay"},"content":"            + PREFIX_RECURRINGSCHEDULE + \"[10/05/2021][Mon][weekly] \"","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"            + PREFIX_DESCRIPTION + \"This is the task\u0027s description \"","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"            + PREFIX_TAG + \"tag1 \"","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"            + PREFIX_TAG + \"tag2 \";","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"maxxng"},"content":"    public static final String SHORT_MESSAGE_USAGE \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"maxxng"},"content":"            + PREFIX_TITLE + \"TITLE \"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"habi39"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"            + \"[\" + PREFIX_DURATION + \"DURATION] \"","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":"            + \"[\" + PREFIX_RECURRINGSCHEDULE + \"RECURRINGSCHEDULE] \"","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \";","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the planner.\";","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"    private Task toAdd;","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"kaixiangtay"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"     * Creates an AddCommand to add the specified {@code Task}","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"        toAdd \u003d task;","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"maxxng"},"content":"        handleDuplicateTask(model);","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"maxxng"},"content":"        ConstraintManager.enforceAttributeConstraints(toAdd);","lastModifiedDate":"2021-04-02"},{"lineNumber":74,"author":{"gitId":"maxxng"},"content":"        DateVerifier.checkInvalidDateRange(toAdd);","lastModifiedDate":"2021-04-04"},{"lineNumber":75,"author":{"gitId":"maxxng"},"content":"        DateVerifier.checkForExpiredDate(toAdd);","lastModifiedDate":"2021-04-04"},{"lineNumber":76,"author":{"gitId":"maxxng"},"content":"        updateTags(model);","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"maxxng"},"content":"        updateModel(model);","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"maxxng"},"content":"    private void handleDuplicateTask(Model model) throws CommandException {","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"kaixiangtay"},"content":"        boolean isDuplicateTask \u003d model.hasTask(toAdd);","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"kaixiangtay"},"content":"        if (isDuplicateTask) {","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"maxxng"},"content":"            logger.info(\"Duplicate task detected: \" + MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"LimJunxue"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"maxxng"},"content":"    private void updateTags(Model model) {","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"LimJunxue"},"content":"        Set\u003cTag\u003e tagSet \u003d toAdd.getTags();","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"LimJunxue"},"content":"        Set\u003cTag\u003e newTagSet \u003d model.addTagsIfAbsent(tagSet);","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"LimJunxue"},"content":"        toAdd \u003d toAdd.setTags(newTagSet);","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"maxxng"},"content":"    private void updateModel(Model model) {","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"LimJunxue"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimJunxue":25,"maxxng":17,"mesyeux":9,"kaixiangtay":7,"habi39":5,"-":43}},{"path":"src/main/java/seedu/address/logic/commands/CalendarNextCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.commons.CalendarDirection;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":" * Navigates the calendar to the next month.","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"public class CalendarNextCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"    public static final String COMMAND_WORD \u003d \"next\";","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Calendar is showing the next month.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"    public static final String SHORT_MESSAGE_USAGE \u003d COMMAND_WORD + \"\\n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"        return new CommandResult(MESSAGE_SUCCESS, true, CalendarDirection.NEXT, false);","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"LimJunxue":22}},{"path":"src/main/java/seedu/address/logic/commands/CalendarPrevCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.commons.CalendarDirection;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":" * Navigates the calendar to the previous month.","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"public class CalendarPrevCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"    public static final String COMMAND_WORD \u003d \"prev\";","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Calendar is showing the previous month.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"    public static final String SHORT_MESSAGE_USAGE \u003d COMMAND_WORD + \"\\n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"        return new CommandResult(MESSAGE_SUCCESS, true, CalendarDirection.PREV, false);","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"LimJunxue":22}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.Planner;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":" * Clears the planner.","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"The planner has been cleared.\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"            + Messages.MESSAGE_CALENDAR_SHOWING_CURRENT_MONTH;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"    public static final String SHORT_MESSAGE_USAGE \u003d COMMAND_WORD + \"\\n\";","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"        model.setPlanner(new Planner());","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"        model.resetCalendarDate();","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimJunxue":7,"maxxng":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.commons.CalendarDirection;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"     * Calendar should be navigated.","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"    private final boolean isCalendarNavigation;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"     * Direction that calendar should be navigated.","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"    private final CalendarDirection calendarDirection;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"     * The application should exit.","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"    private final boolean isExit;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"    public CommandResult(String feedbackToUser, boolean isCalendarNavigation, CalendarDirection calendarDirection,","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"            boolean isExit) {","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"        this.isCalendarNavigation \u003d isCalendarNavigation;","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"        boolean isCalendarNavigationNone \u003d calendarDirection \u003d\u003d CalendarDirection.NONE;","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"        assert !(isCalendarNavigation \u0026\u0026 isCalendarNavigationNone)","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"                : \"Command result cannot be calendar navigation and have no calendar direction at the same time\";","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"        this.calendarDirection \u003d calendarDirection;","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"        this(feedbackToUser, false, CalendarDirection.NONE, false);","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"    public boolean isCalendarNavigation() {","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"        return isCalendarNavigation;","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"    public CalendarDirection getCalendarDirection() {","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"        return calendarDirection;","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"LimJunxue"},"content":"        return isExit;","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"LimJunxue"},"content":"                \u0026\u0026 isCalendarNavigation \u003d\u003d otherCommandResult.isCalendarNavigation","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"LimJunxue"},"content":"                \u0026\u0026 calendarDirection \u003d\u003d otherCommandResult.calendarDirection","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"LimJunxue"},"content":"                \u0026\u0026 isExit \u003d\u003d otherCommandResult.isExit;","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"LimJunxue"},"content":"        return Objects.hash(feedbackToUser, isCalendarNavigation, calendarDirection, isExit);","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimJunxue":37,"-":57}},{"path":"src/main/java/seedu/address/logic/commands/CountdownCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"import java.util.List;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.conditions.IndexManager;","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.AttributeManager;","lastModifiedDate":"2021-04-04"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":" *","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"public class CountdownCommand extends Command {","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"    public static final String COMMAND_WORD \u003d \"count\";","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows the number of days and hours left until \"","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"            + \"a deadline is due or an event is happening.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"            + \"Parameters: INDEX \\n\"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"    public static final String SHORT_MESSAGE_USAGE \u003d COMMAND_WORD + \" INDEX\\n\";","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"    public static final String MESSAGE_COUNTDOWN_TASK_SUCCESS \u003d \"There are %1$s day(s) left until \"","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"            + \"the deadline of this task:\\n%2$s\";","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"habi39"},"content":"    public static final String MESSAGE_DEADLINE_OVER \u003d \"Date is already over for this task.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"    public static final String MESSAGE_EMPTY_DEADLINE \u003d \"There is no deadline in this task.\";","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"    private final Index index;","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"     * @param index of the task in the filtered task list to find how much time is left before deadline","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"    public CountdownCommand(Index index) {","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"mesyeux"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"mesyeux"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"mesyeux"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"mesyeux"},"content":"        int targetIndexValue \u003d index.getZeroBased();","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"maxxng"},"content":"        IndexManager.verifyIndex(index, lastShownList);","lastModifiedDate":"2021-04-02"},{"lineNumber":60,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"mesyeux"},"content":"        Task taskToCountdown \u003d lastShownList.get(targetIndexValue);","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"maxxng"},"content":"        AttributeManager attributeManager \u003d new AttributeManager(taskToCountdown);","lastModifiedDate":"2021-04-04"},{"lineNumber":63,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"maxxng"},"content":"        if (attributeManager.isEmptyDate()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":65,"author":{"gitId":"mesyeux"},"content":"            throw new CommandException(MESSAGE_EMPTY_DEADLINE);","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"mesyeux"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"maxxng"},"content":"        if (attributeManager.dateOver()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":69,"author":{"gitId":"mesyeux"},"content":"            logger.info(\"User entered date that\u0027s already over.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"mesyeux"},"content":"            throw new CommandException(MESSAGE_DEADLINE_OVER);","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"mesyeux"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"mesyeux"},"content":"        String daysLeft \u003d model.countdownTask(taskToCountdown);","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"mesyeux"},"content":"        return new CommandResult(String.format(MESSAGE_COUNTDOWN_TASK_SUCCESS, daysLeft, taskToCountdown));","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"mesyeux"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"mesyeux"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"mesyeux"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"mesyeux"},"content":"                || (other instanceof CountdownCommand // instanceof handles nulls","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"mesyeux"},"content":"                \u0026\u0026 index.equals(((CountdownCommand) other).index)); // state check","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"mesyeux"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"maxxng":6,"mesyeux":79,"habi39":1}},{"path":"src/main/java/seedu/address/logic/commands/DeleteFieldCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"//@@author mesyeux","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURRINGSCHEDULE;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"import seedu.address.logic.conditions.ConstraintManager;","lastModifiedDate":"2021-04-02"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"import seedu.address.logic.conditions.IndexManager;","lastModifiedDate":"2021-04-02"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-04-04"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.task.attributes.Description;","lastModifiedDate":"2021-04-04"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.task.attributes.Duration;","lastModifiedDate":"2021-04-04"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.task.attributes.RecurringSchedule;","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.task.attributes.Status;","lastModifiedDate":"2021-04-04"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.task.attributes.Title;","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":" * Deletes a specific field in a task identified using it\u0027s displayed index from the planner.","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"public class DeleteFieldCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"    public static final String COMMAND_WORD \u003d \"rmf\";","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"            + \": Deletes a field from a task.\\n \"","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"            + \"Parameters: INDEX (must be a positive integer) FIELD\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"            + \"Field can be: \"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"            + PREFIX_DATE + \" , \"","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"            + PREFIX_DURATION + \" , \"","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"            + PREFIX_DESCRIPTION + \" , \"","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"            + PREFIX_RECURRINGSCHEDULE + \" or \"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":"            + PREFIX_TAG + \" \\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"            + \"Exactly one field is to be specified.\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + PREFIX_TAG;","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"mesyeux"},"content":"    public static final String SHORT_MESSAGE_USAGE \u003d COMMAND_WORD + \" INDEX FIELD\\n\";","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":55,"author":{"gitId":"mesyeux"},"content":"    public static final String MESSAGE_DELETE_FIELD_SUCCESS \u003d \"Deleted field in Task: %1$s\";","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"mesyeux"},"content":"    public static final String MESSAGE_INVALID_FIELD_STATUS \u003d \"Cannot delete status field.\";","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"mesyeux"},"content":"    public static final String MESSAGE_INVALID_FIELD_TITLE \u003d \"Cannot delete title field.\";","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"mesyeux"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"mesyeux"},"content":"    private final Prefix targetField;","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"mesyeux"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"mesyeux"},"content":"     * @param targetIndex of the task in the filtered task list to delete the field from","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"mesyeux"},"content":"     * @param targetField the field user wants to delete","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"mesyeux"},"content":"    public DeleteFieldCommand(Index targetIndex, String targetField) {","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"mesyeux"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"mesyeux"},"content":"        requireNonNull(targetField);","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"mesyeux"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"mesyeux"},"content":"        this.targetField \u003d new Prefix(targetField);","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"mesyeux"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"mesyeux"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"mesyeux"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"mesyeux"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"mesyeux"},"content":"        int targetIndexValue \u003d targetIndex.getZeroBased();","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"mesyeux"},"content":"        IndexManager.verifyIndex(targetIndex, lastShownList);","lastModifiedDate":"2021-04-02"},{"lineNumber":86,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"mesyeux"},"content":"        Task taskToDeleteFieldFrom \u003d lastShownList.get(targetIndexValue);","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"mesyeux"},"content":"        Task taskWithFieldDeleted \u003d deleteFieldFromTask(taskToDeleteFieldFrom, targetField);","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"mesyeux"},"content":"        ConstraintManager.enforceAttributeConstraints(taskWithFieldDeleted);","lastModifiedDate":"2021-04-02"},{"lineNumber":90,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"mesyeux"},"content":"        if (targetField.equals(PREFIX_TAG)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"mesyeux"},"content":"            taskToDeleteFieldFrom.getTags().forEach(model::deleteTag);","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"mesyeux"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"mesyeux"},"content":"        model.setTask(taskToDeleteFieldFrom, taskWithFieldDeleted);","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"mesyeux"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_FIELD_SUCCESS, taskWithFieldDeleted));","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"mesyeux"},"content":"     * Creates and returns a {@code Task} with the {@code field}","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"mesyeux"},"content":"     * deleted from {@code taskToDeleteFieldFrom}.","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"mesyeux"},"content":"    private Task deleteFieldFromTask(Task taskToDeleteFieldFrom, Prefix field) throws CommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"mesyeux"},"content":"        assert taskToDeleteFieldFrom !\u003d null;","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"mesyeux"},"content":"        Title title \u003d taskToDeleteFieldFrom.getTitle();","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"mesyeux"},"content":"        Date oldDate \u003d taskToDeleteFieldFrom.getDate();","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"mesyeux"},"content":"        Duration oldDuration \u003d taskToDeleteFieldFrom.getDuration();","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"mesyeux"},"content":"        RecurringSchedule oldRecurringSchedule \u003d taskToDeleteFieldFrom.getRecurringSchedule();","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"mesyeux"},"content":"        Description oldDescription \u003d taskToDeleteFieldFrom.getDescription();","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"mesyeux"},"content":"        Status oldStatus \u003d taskToDeleteFieldFrom.getStatus();","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"mesyeux"},"content":"        Set\u003cTag\u003e oldTags \u003d taskToDeleteFieldFrom.getTags();","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"mesyeux"},"content":"        boolean isTitleField \u003d field.equals(PREFIX_TITLE);","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"mesyeux"},"content":"        boolean isDateField \u003d field.equals(PREFIX_DATE);","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"mesyeux"},"content":"        boolean isRecurringScheduleField \u003d field.equals(PREFIX_RECURRINGSCHEDULE);","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"mesyeux"},"content":"        boolean isDurationField \u003d field.equals(PREFIX_DURATION);","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"mesyeux"},"content":"        boolean isDescriptionField \u003d field.equals(PREFIX_DESCRIPTION);","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"mesyeux"},"content":"        boolean isStatusField \u003d field.equals(PREFIX_STATUS);","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"mesyeux"},"content":"        boolean isTagField \u003d field.equals(PREFIX_TAG);","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"mesyeux"},"content":"        if (isTitleField) {","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"mesyeux"},"content":"            logger.info(\"User tried to delete title\");","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"mesyeux"},"content":"            throw new CommandException(MESSAGE_INVALID_FIELD_TITLE);","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"mesyeux"},"content":"        } else if (isDateField) {","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"mesyeux"},"content":"            Date updatedDate \u003d new Date(\"\");","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"mesyeux"},"content":"            return new Task(title, updatedDate, oldDuration, oldRecurringSchedule,","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"mesyeux"},"content":"                    oldDescription, oldStatus, oldTags);","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"mesyeux"},"content":"        } else if (isDurationField) {","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"mesyeux"},"content":"            Duration updatedDuration \u003d new Duration(\"\");","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"mesyeux"},"content":"            return new Task(title, oldDate, updatedDuration, oldRecurringSchedule,","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"mesyeux"},"content":"                    oldDescription, oldStatus, oldTags);","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"mesyeux"},"content":"        } else if (isRecurringScheduleField) {","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"mesyeux"},"content":"            RecurringSchedule updatedRecurring \u003d new RecurringSchedule(\"\");","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"mesyeux"},"content":"            return new Task(title, oldDate, oldDuration, updatedRecurring, oldDescription, oldStatus, oldTags);","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"mesyeux"},"content":"        } else if (isDescriptionField) {","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"mesyeux"},"content":"            Description updatedDescription \u003d new Description(\"\");","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"mesyeux"},"content":"            return new Task(title, oldDate, oldDuration, oldRecurringSchedule,","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"mesyeux"},"content":"                    updatedDescription, oldStatus, oldTags);","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"mesyeux"},"content":"        } else if (isStatusField) {","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"mesyeux"},"content":"            logger.info(\"User tried to delete status\");","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"mesyeux"},"content":"            throw new CommandException(MESSAGE_INVALID_FIELD_STATUS);","lastModifiedDate":"2021-03-28"},{"lineNumber":143,"author":{"gitId":"mesyeux"},"content":"        } else if (isTagField) {","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"mesyeux"},"content":"            Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"mesyeux"},"content":"            return new Task(title, oldDate, oldDuration, oldRecurringSchedule,","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"mesyeux"},"content":"                    oldDescription, oldStatus, updatedTags);","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"mesyeux"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":148,"author":{"gitId":"mesyeux"},"content":"            throw new CommandException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"mesyeux"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"mesyeux"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"mesyeux"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"mesyeux"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":155,"author":{"gitId":"mesyeux"},"content":"                || (other instanceof DeleteFieldCommand // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":156,"author":{"gitId":"mesyeux"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteFieldCommand) other).targetIndex)) // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":157,"author":{"gitId":"mesyeux"},"content":"                \u0026\u0026 targetField.equals(((DeleteFieldCommand) other).targetField);","lastModifiedDate":"2021-03-15"},{"lineNumber":158,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":159,"author":{"gitId":"mesyeux"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"mesyeux":159}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.conditions.IndexManager;","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":" * Deletes a task identified using it\u0027s displayed index from the planner.","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"habi39"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"    public static final String COMMAND_WORD \u003d \"rmt\";","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes a task from the planner.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"maxxng"},"content":"    public static final String SHORT_MESSAGE_USAGE \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"            + \"INDEX (must be a positive integer)\\n\";","lastModifiedDate":"2021-03-21"},{"lineNumber":26,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"    //@@author mesyeux","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"     * @param targetIndex of the task in the filtered task list to delete","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"    //@@author","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"kaixiangtay"},"content":"        int targetIndexValue \u003d targetIndex.getZeroBased();","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"maxxng"},"content":"        IndexManager.verifyIndex(targetIndex, lastShownList);","lastModifiedDate":"2021-04-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"kaixiangtay"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndexValue);","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"        taskToDelete.getTags().forEach(model::deleteTag);","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"mesyeux"},"content":"                //@@author mesyeux","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"mesyeux"},"content":"                || (other instanceof DeleteTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"mesyeux"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"mesyeux"},"content":"                //@@author","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"maxxng":5,"LimJunxue":7,"mesyeux":15,"kaixiangtay":3,"habi39":1,"-":33}},{"path":"src/main/java/seedu/address/logic/commands/DoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maxxng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"maxxng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"maxxng"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"maxxng"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.conditions.IndexManager;","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.AttributeManager;","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-04-04"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Description;","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Duration;","lastModifiedDate":"2021-04-04"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.RecurringSchedule;","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Status;","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Title;","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"maxxng"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"maxxng"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"maxxng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"            + \": Marks a task as done.\\n\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"maxxng"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"maxxng"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"maxxng"},"content":"    public static final String MESSAGE_DONE_TASK_SUCCESS \u003d \"Task: %1$s marked as done.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"maxxng"},"content":"    public static final String MESSAGE_TASK_ALREADY_DONE \u003d \"Task: %1$s is already done. Did you type the wrong index?\";","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"maxxng"},"content":"    private final Index index;","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"maxxng"},"content":"    public DoneCommand(Index index) {","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"maxxng"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"maxxng"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"maxxng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"maxxng"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"maxxng"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"maxxng"},"content":"        IndexManager.verifyIndex(index, lastShownList);","lastModifiedDate":"2021-04-02"},{"lineNumber":47,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"maxxng"},"content":"        Task taskToSetAsDone \u003d retrieveSelectedTask(lastShownList);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"maxxng"},"content":"        verifyTaskStatusNotDone(lastShownList);","lastModifiedDate":"2021-04-02"},{"lineNumber":50,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"maxxng"},"content":"        Task taskStatusSetToDone \u003d setTaskStatusAsDone(taskToSetAsDone);","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"maxxng"},"content":"        updateModel(model, taskToSetAsDone, taskStatusSetToDone);","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"maxxng"},"content":"        return new CommandResult(String.format(MESSAGE_DONE_TASK_SUCCESS, taskStatusSetToDone));","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"maxxng"},"content":"    private void verifyTaskStatusNotDone(List\u003cTask\u003e list) throws CommandException {","lastModifiedDate":"2021-04-02"},{"lineNumber":57,"author":{"gitId":"maxxng"},"content":"        Task taskToBeDone \u003d list.get(index.getZeroBased());","lastModifiedDate":"2021-04-02"},{"lineNumber":58,"author":{"gitId":"maxxng"},"content":"        String taskTitle \u003d taskToBeDone.getTitle().fullTitle;","lastModifiedDate":"2021-04-02"},{"lineNumber":59,"author":{"gitId":"maxxng"},"content":"        AttributeManager attributeManager \u003d new AttributeManager(taskToBeDone);","lastModifiedDate":"2021-04-04"},{"lineNumber":60,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"maxxng"},"content":"        if (attributeManager.isDone()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":62,"author":{"gitId":"maxxng"},"content":"            throw new CommandException(String.format(MESSAGE_TASK_ALREADY_DONE, taskTitle));","lastModifiedDate":"2021-04-02"},{"lineNumber":63,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":64,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"maxxng"},"content":"    private Task retrieveSelectedTask(List\u003cTask\u003e list) {","lastModifiedDate":"2021-04-02"},{"lineNumber":67,"author":{"gitId":"maxxng"},"content":"        return list.get(index.getZeroBased());","lastModifiedDate":"2021-04-02"},{"lineNumber":68,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"habi39"},"content":"    private void updateModel(Model model, Task taskToSetAsDone, Task taskStatusSetToDone) throws CommandException {","lastModifiedDate":"2021-03-23"},{"lineNumber":71,"author":{"gitId":"maxxng"},"content":"        model.setTask(taskToSetAsDone, taskStatusSetToDone);","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"maxxng"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"maxxng"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"maxxng"},"content":"     * Creates and returns a {@code Task} which retains all the values of the previous attributes","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"maxxng"},"content":"     * from {@code taskToBeDone} but only updating the Status attribute from \u0027not done\u0027 to \u0027done.","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"maxxng"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"maxxng"},"content":"    public static Task setTaskStatusAsDone(Task taskToBeDone) {","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"maxxng"},"content":"        assert taskToBeDone !\u003d null;","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"maxxng"},"content":"        Title previousTitle \u003d taskToBeDone.getTitle();","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"habi39"},"content":"        Date previousDate \u003d taskToBeDone.getDate();","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"kaixiangtay"},"content":"        RecurringSchedule previousRecurringSchedule \u003d taskToBeDone.getRecurringSchedule();","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"maxxng"},"content":"        Description previousDescription \u003d taskToBeDone.getDescription();","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"habi39"},"content":"        Duration previousDuration \u003d taskToBeDone.getDuration();","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"maxxng"},"content":"        Status doneStatus \u003d new Status(Status.DONE_STATE);","lastModifiedDate":"2021-04-02"},{"lineNumber":88,"author":{"gitId":"maxxng"},"content":"        Set\u003cTag\u003e previousTags \u003d taskToBeDone.getTags();","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"habi39"},"content":"        return new Task(previousTitle, previousDate, previousDuration, previousRecurringSchedule,","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"kaixiangtay"},"content":"                previousDescription, doneStatus, previousTags);","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"maxxng"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"maxxng"},"content":"    public boolean equals(Object otherCommand) {","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"maxxng"},"content":"        if (otherCommand \u003d\u003d this) {","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"maxxng"},"content":"            return true;","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"maxxng"},"content":"        return otherCommand instanceof DoneCommand \u0026\u0026 index.equals(((DoneCommand) otherCommand).index);","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"maxxng"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"maxxng":95,"mesyeux":1,"kaixiangtay":2,"habi39":4}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURRINGSCHEDULE;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.conditions.ConstraintManager;","lastModifiedDate":"2021-04-02"},{"lineNumber":24,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.conditions.DateVerifier;","lastModifiedDate":"2021-04-04"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.conditions.IndexManager;","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-04-04"},{"lineNumber":29,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":30,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Description;","lastModifiedDate":"2021-04-04"},{"lineNumber":31,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Duration;","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.RecurringSchedule;","lastModifiedDate":"2021-04-04"},{"lineNumber":33,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Status;","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Title;","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":" * Edits the details of an existing task in the planner.","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of a task. \\n\\n \"","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"            + \"[\" + PREFIX_TITLE + \"TITLE] \"","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"habi39"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"maxxng"},"content":"            + \"[\" + PREFIX_DURATION + \"DURATION] \"","lastModifiedDate":"2021-04-04"},{"lineNumber":49,"author":{"gitId":"kaixiangtay"},"content":"            + \"[\" + PREFIX_RECURRINGSCHEDULE + \"RECURRINGSCHEDULE] \"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"habi39"},"content":"            + PREFIX_DATE + \"15/08/2021 \";","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"maxxng"},"content":"    public static final String SHORT_MESSAGE_USAGE \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-21"},{"lineNumber":56,"author":{"gitId":"maxxng"},"content":"            + \"[\" + PREFIX_TITLE + \"TITLE] \"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"habi39"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"maxxng"},"content":"            + \"[\" + PREFIX_DURATION + \"DURATION] \"","lastModifiedDate":"2021-04-04"},{"lineNumber":59,"author":{"gitId":"mesyeux"},"content":"            + \"[\" + PREFIX_RECURRINGSCHEDULE + \"RECURRINGSCHEDULE] \"","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"maxxng"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"mesyeux"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\";","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the planner.\";","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"kaixiangtay"},"content":"    public static final String MESSAGE_INVALID_DATE_RANGE \u003d \"Task has invalid date input.\\n\\nNote: Months of Apr, Jun, \"","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"kaixiangtay"},"content":"            + \"Sep, Nov has only 30 days while Feb has only 28 days with leap years (mulitples of 4) having 29 days\";","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"maxxng"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"    private final EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"LimJunxue"},"content":"     * @param index of the task in the filtered task list to edit","lastModifiedDate":"2021-03-02"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"     * @param editTaskDescriptor details to edit the task with","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"LimJunxue"},"content":"    public EditCommand(Index index, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2021-03-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(editTaskDescriptor);","lastModifiedDate":"2021-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":83,"author":{"gitId":"LimJunxue"},"content":"        this.editTaskDescriptor \u003d new EditTaskDescriptor(editTaskDescriptor);","lastModifiedDate":"2021-03-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"LimJunxue"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-03-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"maxxng"},"content":"        IndexManager.verifyIndex(index, lastShownList);","lastModifiedDate":"2021-04-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"maxxng"},"content":"        Task taskToEdit \u003d getTaskToEdit(lastShownList);","lastModifiedDate":"2021-04-02"},{"lineNumber":94,"author":{"gitId":"maxxng"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"maxxng"},"content":"        checkForDuplicateTask(model, taskToEdit, editedTask);","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"maxxng"},"content":"        DateVerifier.checkInvalidDateRange(editedTask);","lastModifiedDate":"2021-04-04"},{"lineNumber":98,"author":{"gitId":"maxxng"},"content":"        DateVerifier.checkForExpiredDate(editedTask);","lastModifiedDate":"2021-04-04"},{"lineNumber":99,"author":{"gitId":"maxxng"},"content":"        ConstraintManager.enforceAttributeConstraints(editedTask);","lastModifiedDate":"2021-04-02"},{"lineNumber":100,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"maxxng"},"content":"        editedTask \u003d handleTagUpdates(model, taskToEdit, editedTask);","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"maxxng"},"content":"        updateModel(model, taskToEdit, editedTask);","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"maxxng"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"maxxng"},"content":"    private Task getTaskToEdit(List\u003cTask\u003e list) {","lastModifiedDate":"2021-04-02"},{"lineNumber":108,"author":{"gitId":"maxxng"},"content":"        int indexValue \u003d index.getZeroBased();","lastModifiedDate":"2021-04-02"},{"lineNumber":109,"author":{"gitId":"maxxng"},"content":"        return list.get(indexValue);","lastModifiedDate":"2021-04-02"},{"lineNumber":110,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"maxxng"},"content":"    private void checkForDuplicateTask(Model model, Task taskToEdit, Task editedTask) throws CommandException {","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"kaixiangtay"},"content":"        boolean isDuplicateTask \u003d !taskToEdit.isSameTask(editedTask) \u0026\u0026 model.hasTask(editedTask);","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"kaixiangtay"},"content":"        if (isDuplicateTask) {","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"maxxng"},"content":"            logger.info(\"Duplicate task detected: \" + MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"LimJunxue"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":120,"author":{"gitId":"maxxng"},"content":"    private Task handleTagUpdates(Model model, Task taskToEdit, Task editedTask) throws CommandException {","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"LimJunxue"},"content":"        Set\u003cTag\u003e oldTags \u003d taskToEdit.getTags();","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"LimJunxue"},"content":"        Set\u003cTag\u003e newTags \u003d editedTask.getTags();","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"LimJunxue"},"content":"        model.setTags(oldTags, newTags);","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"maxxng"},"content":"        return editedTask.setTags(newTags);","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"maxxng"},"content":"    private void updateModel(Model model, Task taskToEdit, Task editedTask) throws CommandException {","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"LimJunxue"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":129,"author":{"gitId":"LimJunxue"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"LimJunxue"},"content":"     * Creates and returns a {@code Task} with the details of {@code taskToEdit}","lastModifiedDate":"2021-03-02"},{"lineNumber":134,"author":{"gitId":"LimJunxue"},"content":"     * edited with {@code editTaskDescriptor}.","lastModifiedDate":"2021-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"LimJunxue"},"content":"    private static Task createEditedTask(Task taskToEdit, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2021-03-02"},{"lineNumber":137,"author":{"gitId":"LimJunxue"},"content":"        assert taskToEdit !\u003d null;","lastModifiedDate":"2021-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"LimJunxue"},"content":"        Title updatedTitle \u003d editTaskDescriptor.getTitle().orElse(taskToEdit.getTitle());","lastModifiedDate":"2021-03-03"},{"lineNumber":140,"author":{"gitId":"habi39"},"content":"        Date updatedDate \u003d editTaskDescriptor.getDate().orElse(taskToEdit.getDate());","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"habi39"},"content":"        Duration updatedDuration \u003d editTaskDescriptor.getDuration().orElse(taskToEdit.getDuration());","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"kaixiangtay"},"content":"        RecurringSchedule updatedRecurringSchedule \u003d editTaskDescriptor.getRecurringSchedule()","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"kaixiangtay"},"content":"                .orElse(taskToEdit.getRecurringSchedule());","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"LimJunxue"},"content":"        Description updatedDescription \u003d editTaskDescriptor.getDescription().orElse(taskToEdit.getDescription());","lastModifiedDate":"2021-03-11"},{"lineNumber":145,"author":{"gitId":"maxxng"},"content":"        Status updatedStatus \u003d editTaskDescriptor.getStatus().orElse(taskToEdit.getStatus());","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"LimJunxue"},"content":"        Set\u003cTag\u003e updatedTags \u003d editTaskDescriptor.getTags().orElse(taskToEdit.getTags());","lastModifiedDate":"2021-03-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"habi39"},"content":"        return new Task(updatedTitle, updatedDate, updatedDuration, updatedRecurringSchedule, updatedDescription,","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"maxxng"},"content":"                updatedStatus, updatedTags);","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"LimJunxue"},"content":"                \u0026\u0026 editTaskDescriptor.equals(e.editTaskDescriptor);","lastModifiedDate":"2021-03-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"LimJunxue"},"content":"     * Stores the details to edit the task with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-02"},{"lineNumber":172,"author":{"gitId":"LimJunxue"},"content":"     * corresponding field value of the task.","lastModifiedDate":"2021-03-02"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"LimJunxue"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2021-03-02"},{"lineNumber":175,"author":{"gitId":"LimJunxue"},"content":"        private Title title;","lastModifiedDate":"2021-03-03"},{"lineNumber":176,"author":{"gitId":"habi39"},"content":"        private Date date;","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"habi39"},"content":"        private Duration duration;","lastModifiedDate":"2021-03-23"},{"lineNumber":178,"author":{"gitId":"kaixiangtay"},"content":"        private RecurringSchedule recurringSchedule;","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"LimJunxue"},"content":"        private Description description;","lastModifiedDate":"2021-03-11"},{"lineNumber":180,"author":{"gitId":"maxxng"},"content":"        private Status status;","lastModifiedDate":"2021-03-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"LimJunxue"},"content":"        public EditTaskDescriptor() {}","lastModifiedDate":"2021-03-02"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"LimJunxue"},"content":"        public EditTaskDescriptor(EditTaskDescriptor toCopy) {","lastModifiedDate":"2021-03-02"},{"lineNumber":190,"author":{"gitId":"LimJunxue"},"content":"            setTitle(toCopy.title);","lastModifiedDate":"2021-03-03"},{"lineNumber":191,"author":{"gitId":"habi39"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2021-03-30"},{"lineNumber":192,"author":{"gitId":"habi39"},"content":"            setDuration(toCopy.duration);","lastModifiedDate":"2021-03-23"},{"lineNumber":193,"author":{"gitId":"kaixiangtay"},"content":"            setRecurringSchedule(toCopy.recurringSchedule);","lastModifiedDate":"2021-03-17"},{"lineNumber":194,"author":{"gitId":"LimJunxue"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2021-03-11"},{"lineNumber":195,"author":{"gitId":"maxxng"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2021-03-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"habi39"},"content":"            return CollectionUtil.isAnyNonNull(title, date, duration, recurringSchedule,","lastModifiedDate":"2021-03-30"},{"lineNumber":204,"author":{"gitId":"kaixiangtay"},"content":"                    description, status, tags);","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"LimJunxue"},"content":"        public void setTitle(Title title) {","lastModifiedDate":"2021-03-03"},{"lineNumber":208,"author":{"gitId":"LimJunxue"},"content":"            this.title \u003d title;","lastModifiedDate":"2021-03-03"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"LimJunxue"},"content":"        public Optional\u003cTitle\u003e getTitle() {","lastModifiedDate":"2021-03-03"},{"lineNumber":212,"author":{"gitId":"LimJunxue"},"content":"            return Optional.ofNullable(title);","lastModifiedDate":"2021-03-03"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"habi39"},"content":"        public void setDate(Date date) {","lastModifiedDate":"2021-03-30"},{"lineNumber":216,"author":{"gitId":"habi39"},"content":"            this.date \u003d date;","lastModifiedDate":"2021-03-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"habi39"},"content":"        public Optional\u003cDate\u003e getDate() {","lastModifiedDate":"2021-03-30"},{"lineNumber":220,"author":{"gitId":"habi39"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2021-03-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"habi39"},"content":"        public void setDuration(Duration duration) {","lastModifiedDate":"2021-03-23"},{"lineNumber":224,"author":{"gitId":"habi39"},"content":"            this.duration \u003d duration;","lastModifiedDate":"2021-03-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":227,"author":{"gitId":"habi39"},"content":"        public Optional\u003cDuration\u003e getDuration() {","lastModifiedDate":"2021-03-23"},{"lineNumber":228,"author":{"gitId":"habi39"},"content":"            return Optional.ofNullable(duration);","lastModifiedDate":"2021-03-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":231,"author":{"gitId":"kaixiangtay"},"content":"        public void setRecurringSchedule(RecurringSchedule recurringSchedule) {","lastModifiedDate":"2021-03-17"},{"lineNumber":232,"author":{"gitId":"kaixiangtay"},"content":"            this.recurringSchedule \u003d recurringSchedule;","lastModifiedDate":"2021-03-17"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"kaixiangtay"},"content":"        public Optional\u003cRecurringSchedule\u003e getRecurringSchedule() {","lastModifiedDate":"2021-03-17"},{"lineNumber":236,"author":{"gitId":"kaixiangtay"},"content":"            return Optional.ofNullable(recurringSchedule);","lastModifiedDate":"2021-03-17"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"LimJunxue"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2021-03-11"},{"lineNumber":240,"author":{"gitId":"LimJunxue"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-03-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"LimJunxue"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2021-03-11"},{"lineNumber":244,"author":{"gitId":"LimJunxue"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2021-03-11"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":247,"author":{"gitId":"maxxng"},"content":"        public void setStatus(Status status) {","lastModifiedDate":"2021-03-16"},{"lineNumber":248,"author":{"gitId":"maxxng"},"content":"            this.status \u003d status;","lastModifiedDate":"2021-03-16"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":251,"author":{"gitId":"maxxng"},"content":"        public Optional\u003cStatus\u003e getStatus() {","lastModifiedDate":"2021-03-16"},{"lineNumber":252,"author":{"gitId":"maxxng"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2021-03-16"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":256,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":264,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":266,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":267,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":280,"author":{"gitId":"LimJunxue"},"content":"            if (!(other instanceof EditTaskDescriptor)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":285,"author":{"gitId":"LimJunxue"},"content":"            EditTaskDescriptor e \u003d (EditTaskDescriptor) other;","lastModifiedDate":"2021-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":287,"author":{"gitId":"LimJunxue"},"content":"            return getTitle().equals(e.getTitle())","lastModifiedDate":"2021-03-03"},{"lineNumber":288,"author":{"gitId":"habi39"},"content":"                    \u0026\u0026 getDate().equals(e.getDate())","lastModifiedDate":"2021-03-30"},{"lineNumber":289,"author":{"gitId":"kaixiangtay"},"content":"                    \u0026\u0026 getRecurringSchedule().equals(e.getRecurringSchedule())","lastModifiedDate":"2021-03-17"},{"lineNumber":290,"author":{"gitId":"LimJunxue"},"content":"                    \u0026\u0026 getDescription().equals(e.getDescription())","lastModifiedDate":"2021-03-11"},{"lineNumber":291,"author":{"gitId":"maxxng"},"content":"                    \u0026\u0026 getStatus().equals(e.getStatus())","lastModifiedDate":"2021-03-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"LimJunxue":50,"maxxng":53,"mesyeux":3,"kaixiangtay":16,"habi39":22,"-":151}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.commons.CalendarDirection;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting PlanIT as requested ...\";","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"                MESSAGE_EXIT_ACKNOWLEDGEMENT, false, CalendarDirection.NONE, true);","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"LimJunxue":4,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"kaixiangtay"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":" * Finds and lists all tasks in planner whose title contains any of the argument keywords.","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"kaixiangtay"},"content":"    public static final String MESSAGE_USAGE \u003d \"\\n\" + COMMAND_WORD + \": Finds all tasks whose titles contain any of \"","lastModifiedDate":"2021-04-06"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"            + \"the specified keywords (case-insensitive).\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"kaixiangtay"},"content":"            + \"\\nParameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"kaixiangtay"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" quiz meeting task\";","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"maxxng"},"content":"    public static final String SHORT_MESSAGE_USAGE \u003d COMMAND_WORD + \" KEYWORD [MORE_KEYWORDS]...\\n\";","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"kaixiangtay"},"content":"    private final Predicate\u003cTask\u003e predicate;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"kaixiangtay"},"content":"     * Creates a FindCommand with a predicate to filter the tasks in the list","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"kaixiangtay"},"content":"     * @param predicate Predicate to determine whether a task contains the given keywords","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"kaixiangtay"},"content":"    public FindCommand(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()));","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"LimJunxue":3,"maxxng":1,"mesyeux":1,"kaixiangtay":13,"-":33}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"maxxng"},"content":" * Displays a list of commonly used commands.","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":" * For a full list of all commands, Users have to refer to the user guide.","lastModifiedDate":"2021-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"    public static final String HELP_MESSAGE_ADD \u003d AddCommand.SHORT_MESSAGE_USAGE;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"maxxng"},"content":"    public static final String HELP_MESSAGE_LIST \u003d ListCommand.SHORT_MESSAGE_USAGE;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"    public static final String HELP_MESSAGE_EDIT \u003d EditCommand.SHORT_MESSAGE_USAGE;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"maxxng"},"content":"    public static final String HELP_MESSAGE_FIND \u003d FindCommand.SHORT_MESSAGE_USAGE;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"maxxng"},"content":"    public static final String HELP_MESSAGE_DELETE_TASK \u003d DeleteTaskCommand.SHORT_MESSAGE_USAGE;","lastModifiedDate":"2021-03-21"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"maxxng"},"content":"    public static final String HELP_MESSAGE_DELETE_FIELD \u003d DeleteFieldCommand.SHORT_MESSAGE_USAGE;","lastModifiedDate":"2021-03-21"},{"lineNumber":27,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"maxxng"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Here are some frequently used commands:\\n\\n\"","lastModifiedDate":"2021-04-04"},{"lineNumber":29,"author":{"gitId":"maxxng"},"content":"            + \"1. Adding a task: \\n\" + HELP_MESSAGE_ADD + \"\\n\\n\"","lastModifiedDate":"2021-04-04"},{"lineNumber":30,"author":{"gitId":"maxxng"},"content":"            + \"2. Viewing all task:  \\n\" + HELP_MESSAGE_LIST + \"\\n\"","lastModifiedDate":"2021-04-04"},{"lineNumber":31,"author":{"gitId":"maxxng"},"content":"            + \"3. Editing a task: \\n\" + HELP_MESSAGE_EDIT + \"\\n\"","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"maxxng"},"content":"            + \"4. Finding tasks: \\n\" + HELP_MESSAGE_FIND + \"\\n\"","lastModifiedDate":"2021-04-04"},{"lineNumber":33,"author":{"gitId":"maxxng"},"content":"            + \"5. Deleting a task: \\n\" + HELP_MESSAGE_DELETE_TASK + \"\\n\"","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"maxxng"},"content":"            + \"6. Deleting a task\u0027s attribute: \\n\" + HELP_MESSAGE_DELETE_FIELD + \"\\n\"","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"maxxng"},"content":"            + \"For more commands, features and a detailed description of the above features, read our user guide.\\n\"","lastModifiedDate":"2021-04-09"},{"lineNumber":36,"author":{"gitId":"maxxng"},"content":"            + \"You may find the user guide here: https://ay2021s2-cs2103t-t10-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-04-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"maxxng":22,"LimJunxue":2,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_UNDONE_TASKS;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"kaixiangtay"},"content":" * Lists all tasks or tasks filtered by status in the planner to the user.","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    public static final String COMMAND_WORD \u003d \"ls\";","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"    public static final String MESSAGE_UNDONE_TASKS_SUCCESS \u003d \"Listed all uncompleted tasks. \"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"            + \"Better get to work soon!\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"            + Messages.MESSAGE_CALENDAR_SHOWING_CURRENT_MONTH;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"    public static final String MESSAGE_ALL_TASKS_SUCCESS \u003d \"Listed all tasks.\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"            + Messages.MESSAGE_CALENDAR_SHOWING_CURRENT_MONTH;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists out all tasks in the planner.\\n\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"kaixiangtay"},"content":"            + \"[not done]\";","lastModifiedDate":"2021-04-06"},{"lineNumber":27,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"kaixiangtay"},"content":"    public static final String INVALID_INPUT \u003d \"\\nInvalid List commands detected! \\n\\nThe only acceptable list command \"","lastModifiedDate":"2021-04-06"},{"lineNumber":29,"author":{"gitId":"kaixiangtay"},"content":"            + \"formats are ls, ls not done \";","lastModifiedDate":"2021-04-06"},{"lineNumber":30,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"maxxng"},"content":"    public static final String SHORT_MESSAGE_USAGE \u003d COMMAND_WORD + \" [not done]\\n\";","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"kaixiangtay"},"content":"    private final boolean isListEverything;","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"kaixiangtay"},"content":"     * Creates a ListCommmand with a boolean to determine whether to list out all tasks or just uncompleted tasks.","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"kaixiangtay"},"content":"    public ListCommand(boolean isListEverything) {","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"kaixiangtay"},"content":"        this.isListEverything \u003d isListEverything;","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"        model.resetCalendarDate();","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"kaixiangtay"},"content":"        if (this.isListEverything) {","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"            model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"            return new CommandResult(MESSAGE_ALL_TASKS_SUCCESS);","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"kaixiangtay"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"kaixiangtay"},"content":"            model.updateFilteredTaskList(PREDICATE_SHOW_UNDONE_TASKS);","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"            return new CommandResult(MESSAGE_UNDONE_TASKS_SUCCESS);","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"kaixiangtay"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimJunxue":11,"maxxng":2,"mesyeux":3,"kaixiangtay":20,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/SnoozeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maxxng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"maxxng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"maxxng"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"maxxng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.conditions.IndexManager;","lastModifiedDate":"2021-04-02"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.AttributeManager;","lastModifiedDate":"2021-04-04"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Description;","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Duration;","lastModifiedDate":"2021-04-04"},{"lineNumber":23,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.RecurringSchedule;","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Status;","lastModifiedDate":"2021-04-04"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Title;","lastModifiedDate":"2021-04-04"},{"lineNumber":26,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"maxxng"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"maxxng"},"content":" * Postpones the date of a task by a specified number of days, if the number is","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"maxxng"},"content":" * not specified, the default will be set to 1.","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"maxxng"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"maxxng"},"content":"public class SnoozeCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"maxxng"},"content":"    public static final String COMMAND_WORD \u003d \"snooze\";","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"maxxng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"maxxng"},"content":"            + \": Postpones the date of a task by a given number of days. \"","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"maxxng"},"content":"            + \"If no number of days is given, the default number of days is set to 1.\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"maxxng"},"content":"            + \"Parameters: INDEX [NUMBER] (both must be a positive integer)\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"maxxng"},"content":"            + \"Example: \" + COMMAND_WORD + \" 3\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"maxxng"},"content":"            + \"This postpones the task at index 3 by 1 day\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"maxxng"},"content":"            + \"Example: \" + COMMAND_WORD + \" 4 2\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"maxxng"},"content":"            + \"This postpones the task at index 4 by 2 days\";","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"maxxng"},"content":"    public static final String MESSAGE_SNOOZE_TASK_SUCCESS \u003d \"Task: %1$s Snoozed by %2$d days.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"maxxng"},"content":"    private final Index index;","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"maxxng"},"content":"    private final int snoozeAmount;","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"maxxng"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"maxxng"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"maxxng"},"content":"     * Constructor for the SnoozeCommand class.","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"maxxng"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"maxxng"},"content":"     * @param index of the task in the filtered task list to snooze","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"maxxng"},"content":"     * @param snoozeAmount number of days to snooze the task by","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"maxxng"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"maxxng"},"content":"    public SnoozeCommand(Index index, int snoozeAmount) {","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"maxxng"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"maxxng"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"maxxng"},"content":"        this.snoozeAmount \u003d snoozeAmount;","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"maxxng"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"maxxng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"maxxng"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"maxxng"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"maxxng"},"content":"        IndexManager.verifyIndex(index, lastShownList);","lastModifiedDate":"2021-04-02"},{"lineNumber":71,"author":{"gitId":"maxxng"},"content":"        Task taskToSnooze \u003d retrieveSelectedTask(lastShownList);","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"maxxng"},"content":"        enforceNonEmptyDate(taskToSnooze);","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"maxxng"},"content":"        Task snoozedTask \u003d updateTaskWithNewDate(taskToSnooze);","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"maxxng"},"content":"        String snoozedTaskTitle \u003d retrieveTaskTitle(snoozedTask);","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"maxxng"},"content":"        updateModel(model, taskToSnooze, snoozedTask);","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"maxxng"},"content":"        return new CommandResult(String.format(MESSAGE_SNOOZE_TASK_SUCCESS, snoozedTaskTitle, snoozeAmount));","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"maxxng"},"content":"    private Task retrieveSelectedTask(List\u003cTask\u003e list) {","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"maxxng"},"content":"        return list.get(index.getZeroBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"maxxng"},"content":"    private void enforceNonEmptyDate(Task taskToSnooze) throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"maxxng"},"content":"        AttributeManager attributeManager \u003d new AttributeManager(taskToSnooze);","lastModifiedDate":"2021-04-04"},{"lineNumber":87,"author":{"gitId":"maxxng"},"content":"        if (attributeManager.isEmptyDate()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":88,"author":{"gitId":"maxxng"},"content":"            logger.log(Level.INFO, \"The task selected has no date attribute.\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"maxxng"},"content":"            throw new CommandException(\"The task selected has no date attribute.\\n\" + MESSAGE_USAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"maxxng"},"content":"    private Task updateTaskWithNewDate(Task taskToSnooze) {","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"maxxng"},"content":"        Date date \u003d taskToSnooze.getDate();","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"maxxng"},"content":"        LocalDate localDate \u003d date.getDate();","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"maxxng"},"content":"        LocalDate newLocalDate \u003d localDate.plusDays(snoozeAmount);","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"maxxng"},"content":"        Title previousTitle \u003d taskToSnooze.getTitle();","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"maxxng"},"content":"        Date newDate \u003d new Date(newLocalDate);","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"maxxng"},"content":"        RecurringSchedule previousRecurringSchedule \u003d taskToSnooze.getRecurringSchedule();","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"maxxng"},"content":"        Description previousDescription \u003d taskToSnooze.getDescription();","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"maxxng"},"content":"        Duration previousDuration \u003d taskToSnooze.getDuration();","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"maxxng"},"content":"        Status previousStatus \u003d taskToSnooze.getStatus();","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"maxxng"},"content":"        Set\u003cTag\u003e previousTags \u003d taskToSnooze.getTags();","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"maxxng"},"content":"        return new Task(previousTitle, newDate, previousDuration, previousRecurringSchedule,","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"maxxng"},"content":"                previousDescription, previousStatus, previousTags);","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"maxxng"},"content":"    private void updateModel(Model model, Task taskToSetAsDone, Task taskStatusSetToDone) throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"maxxng"},"content":"        model.setTask(taskToSetAsDone, taskStatusSetToDone);","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"maxxng"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"maxxng"},"content":"    private String retrieveTaskTitle(Task task) {","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"maxxng"},"content":"        return task.getTitle().fullTitle;","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"maxxng"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"maxxng"},"content":"    public boolean equals(Object otherCommand) {","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"maxxng"},"content":"        if (otherCommand \u003d\u003d this) {","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"maxxng"},"content":"            return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"maxxng"},"content":"        return otherCommand instanceof SnoozeCommand \u0026\u0026 index.equals(((SnoozeCommand) otherCommand).index)","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"maxxng"},"content":"                \u0026\u0026 snoozeAmount \u003d\u003d (((SnoozeCommand) otherCommand).snoozeAmount);","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"maxxng"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"maxxng":128}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"habi39"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"habi39"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"habi39"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"habi39"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"habi39"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"habi39"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"habi39"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"habi39"},"content":" * Sorts the meetings using the specified comparator.","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"habi39"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"habi39"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"habi39"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts the task in the planner.\\n\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"habi39"},"content":"            + \"by a/ by d\";","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully sorted.\";","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"    public static final String MESSAGE_SORT_TYPE_INVALID \u003d \"Invalid sort type\";","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"habi39"},"content":"    private final Comparator\u003cTask\u003e comparator;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"habi39"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"habi39"},"content":"     * Constructor for SortMeetingCommand. Checks the order of sort required","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"habi39"},"content":"     * and producers the appropriate comparator.","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"habi39"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"habi39"},"content":"    public SortCommand(Comparator\u003cTask\u003e comparator, Boolean isAscending) {","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"habi39"},"content":"        assert (comparator !\u003d null);","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"habi39"},"content":"        if (!isAscending) {","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"habi39"},"content":"            this.comparator \u003d comparator.reversed();","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"habi39"},"content":"        } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"habi39"},"content":"            this.comparator \u003d comparator;","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"habi39"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"habi39"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"habi39"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"habi39"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"habi39"},"content":"        model.updateSortedTaskList(comparator);","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"habi39"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"habi39"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"mesyeux":4,"habi39":44}},{"path":"src/main/java/seedu/address/logic/commands/StatsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":" * Shows statistics of the planner.","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"public class StatsCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"    public static final String COMMAND_WORD \u003d \"stat\";","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows the total number of tasks\"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"            + \"in the planner, percentage of tasks completed, and the number of tasks happening/due in the \"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"            + \"next 7 days.\\n\\n\";","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"    public static final String SHORT_MESSAGE_USAGE \u003d COMMAND_WORD + \"\\n\";","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Total number of tasks: %1$s\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"            + \"Percentage of tasks completed: %2$.2f%%\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"            + \"Number of tasks due in the next 7 days: %3$s\\n\";","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"    public static final String MESSAGE_NO_TASKS \u003d \"There are no tasks in the planner to obtain statistics from.\";","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"        if (model.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"            throw new CommandException(MESSAGE_NO_TASKS);","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"        int totalTasks \u003d getTotalTasks(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"        double percentageOfTasksCompleted \u003d getPercentage(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"        int numberDueNextWeek \u003d getNumberDue(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, totalTasks, percentageOfTasksCompleted,","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"                numberDueNextWeek));","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"    private int getTotalTasks(Model model) {","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"        return model.size();","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"    private double getPercentage(Model model) {","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"        return model.getPercentage();","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"    private int getNumberDue(Model model) {","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"mesyeux"},"content":"        return model.getNumberDue();","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"mesyeux":54}},{"path":"src/main/java/seedu/address/logic/commands/ViewDayCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":" * A ViewDayCommand with a predicate to filter the task list with, and a date to update the calendar with.","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"public class ViewDayCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": View all tasks for the day.\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"            + \"Parameters: DATE\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"            + \"Example: \" + COMMAND_WORD + \" 01/01/2022\";","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"    public static final String MESSAGE_CALENDAR_SHOWING_DATE \u003d \"Calendar is now showing %2$s %3$s.\\n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"    public static final String MESSAGE_VIEW_DAY_SUCCESS \u003d Messages.MESSAGE_TASKS_LISTED_OVERVIEW","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"            + MESSAGE_CALENDAR_SHOWING_DATE;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"    private final Predicate\u003cTask\u003e predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"     * Creates a ViewDayCommand with a predicate to filter the task list with, and a date to update the calendar with.","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"habi39"},"content":"     * @param predicate Predicate determining whether a task\u0027s date or schedule falls on the given date.","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"     * @param date      LocalDate object to update the calendar with.","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"    public ViewDayCommand(Predicate\u003cTask\u003e predicate, LocalDate date) {","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"        this.date \u003d Objects.requireNonNullElseGet(date, LocalDate::now);","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"        model.setCalendarDate(date);","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"        String calendarMonthText \u003d StringUtil.toSentenceCase(date.getMonth().toString());","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"        return new CommandResult(String.format(","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"                MESSAGE_VIEW_DAY_SUCCESS, model.getFilteredTaskList().size(), calendarMonthText, date.getYear()));","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"LimJunxue":53,"habi39":1}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"LimJunxue":2,"-":17}},{"path":"src/main/java/seedu/address/logic/conditions/ConstraintManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maxxng"},"content":"package seedu.address.logic.conditions;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"maxxng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"maxxng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Attribute;","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"maxxng"},"content":" * ConstraintManager checks that the necessary constraints on the attributes of Tasks are abided by.","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":" * Current constraints:","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":" * - Duration cannot exist on its own without Deadline or RecurringSchedule.","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":" * - Deadline cannot exist together with RecurringSchedule.","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":" * - Title is compulsory.","lastModifiedDate":"2021-04-04"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"public class ConstraintManager {","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"    public static final String MESSAGE_DURATION_STANDALONE_ERROR \u003d \"Task cannot have Duration on its own.\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"            + \"Duration must have a Date or RecurringSchedule.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"habi39"},"content":"    public static final String MESSAGE_DATE_RECURRING_SCHEDULE_CONFLICT \u003d \"Task cannot have (Date) as well as \"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"maxxng"},"content":"            + \"(RecurringSchedule) at the same time!\\nPlease choose either when adding a task.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"maxxng"},"content":"    public static final String MESSAGE_EMPTY_TITLE \u003d \"Title is compulsory for all tasks and cannot be empty.\";","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"    private static final Logger logger \u003d Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"maxxng"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"maxxng"},"content":"     * Check that the given task abides by the necessary constraints on its attributes.","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"maxxng"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"maxxng"},"content":"     * @param task The task to be checked.","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"habi39"},"content":"     * @throws CommandException If a task has both Date as well as Duration or RecurringSchedule.","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"maxxng"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"maxxng"},"content":"    public static void enforceAttributeConstraints(Task task) throws CommandException {","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"maxxng"},"content":"        Attribute date \u003d task.getDate();","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"maxxng"},"content":"        Attribute duration \u003d task.getDuration();","lastModifiedDate":"2021-04-04"},{"lineNumber":36,"author":{"gitId":"maxxng"},"content":"        Attribute recurringSchedule \u003d task.getRecurringSchedule();","lastModifiedDate":"2021-04-04"},{"lineNumber":37,"author":{"gitId":"maxxng"},"content":"        Attribute title \u003d task.getTitle();","lastModifiedDate":"2021-04-04"},{"lineNumber":38,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":39,"author":{"gitId":"maxxng"},"content":"        boolean hasDateValue \u003d !date.isEmptyValue();","lastModifiedDate":"2021-04-04"},{"lineNumber":40,"author":{"gitId":"maxxng"},"content":"        boolean hasDurationValue \u003d !duration.isEmptyValue();","lastModifiedDate":"2021-04-04"},{"lineNumber":41,"author":{"gitId":"maxxng"},"content":"        boolean hasRecurringScheduleValue \u003d !recurringSchedule.isEmptyValue();","lastModifiedDate":"2021-04-04"},{"lineNumber":42,"author":{"gitId":"maxxng"},"content":"        boolean hasNoTitle \u003d title.isEmptyValue();","lastModifiedDate":"2021-04-04"},{"lineNumber":43,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"maxxng"},"content":"        // Duration cannot exist on its own without Deadline or RecurringSchedule.","lastModifiedDate":"2021-04-04"},{"lineNumber":45,"author":{"gitId":"habi39"},"content":"        if (hasDurationValue \u0026\u0026 !(hasRecurringScheduleValue || hasDateValue)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"maxxng"},"content":"            logger.log(Level.INFO, MESSAGE_DURATION_STANDALONE_ERROR);","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"maxxng"},"content":"            throw new CommandException(MESSAGE_DURATION_STANDALONE_ERROR);","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"habi39"},"content":"        if (hasDateValue \u0026\u0026 hasRecurringScheduleValue) {","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"habi39"},"content":"            logger.log(Level.INFO, MESSAGE_DATE_RECURRING_SCHEDULE_CONFLICT);","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"habi39"},"content":"            throw new CommandException(MESSAGE_DATE_RECURRING_SCHEDULE_CONFLICT);","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":55,"author":{"gitId":"maxxng"},"content":"        if (hasNoTitle) {","lastModifiedDate":"2021-04-04"},{"lineNumber":56,"author":{"gitId":"maxxng"},"content":"            logger.log(Level.INFO, MESSAGE_EMPTY_TITLE);","lastModifiedDate":"2021-04-04"},{"lineNumber":57,"author":{"gitId":"maxxng"},"content":"            throw new CommandException(MESSAGE_EMPTY_TITLE);","lastModifiedDate":"2021-04-04"},{"lineNumber":58,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":59,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"maxxng"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"maxxng":56,"habi39":6}},{"path":"src/main/java/seedu/address/logic/conditions/DateVerifier.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maxxng"},"content":"package seedu.address.logic.conditions;","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"maxxng"},"content":"import static seedu.address.model.task.attributes.RecurringSchedule.INVALID_END_DATE;","lastModifiedDate":"2021-04-04"},{"lineNumber":4,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":5,"author":{"gitId":"maxxng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.AttributeManager;","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"public class DateVerifier {","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":"    public static final String MESSAGE_INVALID_DATE_RANGE \u003d \"Task has invalid date input.\\n\\nNote: Months of Apr, Jun, \"","lastModifiedDate":"2021-04-04"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"            + \"Sep, Nov has only 30 days while Feb has only 28 days with leap years (mulitples of 4) having 29 days\";","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(DateVerifier.class);","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"maxxng"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"     * Checks if the given date is within a valid range.","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"     *","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"maxxng"},"content":"     * @param task The task added or edited by the user.","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"maxxng"},"content":"     * @throws CommandException","lastModifiedDate":"2021-04-04"},{"lineNumber":23,"author":{"gitId":"maxxng"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"maxxng"},"content":"    public static void checkInvalidDateRange(Task task) throws CommandException {","lastModifiedDate":"2021-04-04"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"        if (new AttributeManager(task).hasInvalidDateRange()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":26,"author":{"gitId":"maxxng"},"content":"            logger.info(\"Invalid date detected: \" + MESSAGE_INVALID_DATE_RANGE);","lastModifiedDate":"2021-04-04"},{"lineNumber":27,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":28,"author":{"gitId":"maxxng"},"content":"            throw new CommandException(MESSAGE_INVALID_DATE_RANGE);","lastModifiedDate":"2021-04-04"},{"lineNumber":29,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":30,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":31,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"maxxng"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":33,"author":{"gitId":"maxxng"},"content":"     * Checks if the task is already over the current date.","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"maxxng"},"content":"     *","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"maxxng"},"content":"     * @param task The task added or edited by the user.","lastModifiedDate":"2021-04-04"},{"lineNumber":36,"author":{"gitId":"maxxng"},"content":"     * @throws CommandException","lastModifiedDate":"2021-04-04"},{"lineNumber":37,"author":{"gitId":"maxxng"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":38,"author":{"gitId":"maxxng"},"content":"    public static void checkForExpiredDate(Task task) throws CommandException {","lastModifiedDate":"2021-04-04"},{"lineNumber":39,"author":{"gitId":"maxxng"},"content":"        if (new AttributeManager(task).hasExpired()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":40,"author":{"gitId":"maxxng"},"content":"            logger.info(\"Invalid date detected: \" + INVALID_END_DATE);","lastModifiedDate":"2021-04-04"},{"lineNumber":41,"author":{"gitId":"maxxng"},"content":"            throw new CommandException(INVALID_END_DATE);","lastModifiedDate":"2021-04-04"},{"lineNumber":42,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":43,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":44,"author":{"gitId":"maxxng"},"content":"}","lastModifiedDate":"2021-04-02"}],"authorContributionMap":{"maxxng":44}},{"path":"src/main/java/seedu/address/logic/conditions/IndexManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maxxng"},"content":"package seedu.address.logic.conditions;","lastModifiedDate":"2021-04-02"},{"lineNumber":2,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"maxxng"},"content":"import java.util.List;","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"maxxng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"maxxng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-04-02"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-02"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-04-02"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"public class IndexManager {","lastModifiedDate":"2021-04-02"},{"lineNumber":11,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":"     * Verifies that the given index is not out of bounds.","lastModifiedDate":"2021-04-04"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"     *","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"     * @param index Index given by a user input.","lastModifiedDate":"2021-04-04"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"     * @param lastShownList the last shown list on the user\u0027s screen.","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"     * @throws CommandException","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"maxxng"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"    public static void verifyIndex(Index index, List\u003cTask\u003e lastShownList) throws CommandException {","lastModifiedDate":"2021-04-02"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"        int indexValue \u003d index.getZeroBased();","lastModifiedDate":"2021-04-02"},{"lineNumber":21,"author":{"gitId":"maxxng"},"content":"        int listSize \u003d lastShownList.size();","lastModifiedDate":"2021-04-02"},{"lineNumber":22,"author":{"gitId":"maxxng"},"content":"        boolean isInvalidIndex \u003d indexValue \u003e\u003d listSize || indexValue \u003c 0;","lastModifiedDate":"2021-04-04"},{"lineNumber":23,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":24,"author":{"gitId":"maxxng"},"content":"        if (isInvalidIndex) {","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"maxxng"},"content":"}","lastModifiedDate":"2021-04-02"}],"authorContributionMap":{"maxxng":28}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURRINGSCHEDULE;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.conditions.ConstraintManager;","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Description;","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Duration;","lastModifiedDate":"2021-04-04"},{"lineNumber":23,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.RecurringSchedule;","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Status;","lastModifiedDate":"2021-04-04"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Title;","lastModifiedDate":"2021-04-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"habi39"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_DATE, PREFIX_DURATION,","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"kaixiangtay"},"content":"                        PREFIX_RECURRINGSCHEDULE, PREFIX_DESCRIPTION, PREFIX_STATUS, PREFIX_TAG);","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"maxxng"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"maxxng"},"content":"            handleMissingCompulsoryFields(argMultimap);","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"maxxng"},"content":"            Task task \u003d createTaskWithGivenArguments(argMultimap);","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"maxxng"},"content":"            return new AddCommand(task);","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"maxxng"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"maxxng"},"content":"            throw pe;","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"maxxng"},"content":"    private void handleMissingCompulsoryFields(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"maxxng"},"content":"        boolean hasPrefixesMissing \u003d !arePrefixesPresent(argumentMultimap, PREFIX_TITLE);","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"maxxng"},"content":"        boolean hasInvalidPreamble \u003d !argumentMultimap.getPreamble().isEmpty();","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"maxxng"},"content":"        if (hasInvalidPreamble) {","lastModifiedDate":"2021-04-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"maxxng"},"content":"        if (hasPrefixesMissing) {","lastModifiedDate":"2021-04-04"},{"lineNumber":60,"author":{"gitId":"maxxng"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-04-04"},{"lineNumber":61,"author":{"gitId":"maxxng"},"content":"                ConstraintManager.MESSAGE_EMPTY_TITLE));","lastModifiedDate":"2021-04-04"},{"lineNumber":62,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":63,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"maxxng"},"content":"    private Task createTaskWithGivenArguments(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"maxxng"},"content":"        assert argMultimap.getValue(PREFIX_TITLE).isPresent();","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"LimJunxue"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get());","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"habi39"},"content":"        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).orElse(\"\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"kaixiangtay"},"content":"        RecurringSchedule recurringSchedule \u003d ParserUtil.parseRecurringSchedule(","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"kaixiangtay"},"content":"                argMultimap.getValue(PREFIX_RECURRINGSCHEDULE).orElse(\"\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"habi39"},"content":"        Duration duration \u003d ParserUtil.parseDuration(argMultimap","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"kaixiangtay"},"content":"                .getValue(PREFIX_DURATION).orElse(\"\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":74,"author":{"gitId":"LimJunxue"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).orElse(\"\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"maxxng"},"content":"        Status status \u003d ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).orElse(\"not done\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"habi39"},"content":"        return new Task(title, date, duration, recurringSchedule, description, status, tagList);","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"LimJunxue":5,"maxxng":31,"kaixiangtay":5,"habi39":6,"-":42}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"    public static final Prefix PREFIX_TITLE \u003d new Prefix(\"n/\");","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"habi39"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"set/\");","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"kaixiangtay"},"content":"    public static final Prefix PREFIX_RECURRINGSCHEDULE \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"st/\");","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"habi39"},"content":"    public static final Prefix PREFIX_DURATION \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"habi39"},"content":"    public static final Prefix PREFIX_SORT \u003d new Prefix(\"by\");","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"LimJunxue":2,"maxxng":1,"kaixiangtay":1,"habi39":3,"-":11}},{"path":"src/main/java/seedu/address/logic/parser/CountdownCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"import seedu.address.logic.commands.CountdownCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":" * Parses input arguments and creates a new CountdownCommand object","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"public class CountdownCommandParser implements Parser\u003cCountdownCommand\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"     * Parses the given {@code String} of arguments in the context of the CountdownCommand","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"     * and returns a CountdownCommand object for execution.","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"    public CountdownCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"        try {","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"            return new CountdownCommand(index);","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CountdownCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"mesyeux":27}},{"path":"src/main/java/seedu/address/logic/parser/DeleteFieldCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"//@@author mesyeux","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"import seedu.address.logic.commands.DeleteFieldCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":" * Parses input arguments and creates a new DeleteFieldCommand object","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"public class DeleteFieldCommandParser implements Parser\u003cDeleteFieldCommand\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteFieldCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"     * and returns a DeleteFieldCommand object for execution.","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"    public DeleteFieldCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"            String[] splitArgs \u003d args.split(\" \");","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"            if (splitArgs.length \u003e 3) {","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"                logger.info(\"Too many arguments detected: \" + args);","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"                throw new ParseException(","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, \" Only one field can be deleted\"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"                                + \" at any one time.\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"            } else if (splitArgs.length \u003c 3) {","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"                logger.info(\"Not enough arguments detected: \" + args);","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"                throw new ParseException(","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, \" Please specify a field to delete.\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"            }","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"            assert splitArgs.length \u003d\u003d 3;","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"            String indexToParse \u003d splitArgs[1];","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"            String field \u003d splitArgs[2];","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"            Index index \u003d ParserUtil.parseIndex(indexToParse);","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"            return new DeleteFieldCommand(index, field);","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteFieldCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"mesyeux":48}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"//@@author mesyeux","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"//@@author","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"habi39"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"//@@author mesyeux","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"    //@@author","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"habi39"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"habi39"},"content":"     * and returns a DeleteTaskCommand object for execution.","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"    //@@author mesyeux","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"        //@@author","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"            //@@author mesyeux","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"            //@@author","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"                    //@@author mesyeux","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"            //@@author","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"mesyeux":15,"habi39":3,"-":21}},{"path":"src/main/java/seedu/address/logic/parser/DoneCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.commands.DoneCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":" * Parses input arguments and creates a new DoneCommand object.","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"public class DoneCommandParser implements Parser\u003cDoneCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"     * Parses the given {@code String} of arguments in the context of the DoneCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"     * and returns a DoneCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"    public DoneCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"maxxng"},"content":"            return new DoneCommand(index);","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"maxxng":8,"-":21}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURRINGSCHEDULE;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"habi39"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_DATE, PREFIX_DURATION,","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"kaixiangtay"},"content":"                        PREFIX_RECURRINGSCHEDULE, PREFIX_DESCRIPTION, PREFIX_STATUS, PREFIX_TAG);","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"        EditTaskDescriptor editTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"        if (argMultimap.getValue(PREFIX_TITLE).isPresent()) {","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"            editTaskDescriptor.setTitle(ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get()));","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"habi39"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"habi39"},"content":"            editTaskDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).orElse(\"\")));","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"habi39"},"content":"        if (argMultimap.getValue(PREFIX_DURATION).isPresent()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"habi39"},"content":"            editTaskDescriptor.setDuration(ParserUtil.parseDuration(argMultimap.getValue(PREFIX_DURATION).get()));","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"kaixiangtay"},"content":"        if (argMultimap.getValue(PREFIX_RECURRINGSCHEDULE).isPresent()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"kaixiangtay"},"content":"            editTaskDescriptor.setRecurringSchedule(ParserUtil.parseRecurringSchedule(","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"kaixiangtay"},"content":"                    argMultimap.getValue(PREFIX_RECURRINGSCHEDULE).get()));","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"            editTaskDescriptor.setDescription(","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"                    ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"maxxng"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"maxxng"},"content":"            editTaskDescriptor.setStatus(ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get()));","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"LimJunxue"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editTaskDescriptor::setTags);","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"        return new EditCommand(index, editTaskDescriptor);","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"LimJunxue":13,"maxxng":4,"kaixiangtay":5,"habi39":7,"-":65}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"kaixiangtay"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"kaixiangtay"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"kaixiangtay"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.model.task.predicates.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.model.task.predicates.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.model.task.predicates.TitleContainsKeywordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"kaixiangtay"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(FindCommandParser.class);","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"kaixiangtay"},"content":"     * Parses the given arguments in the context of the FindCommand","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"kaixiangtay"},"content":"     * @param args String argument parse in from Find command","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"kaixiangtay"},"content":"     * @return FindCommand object for execution","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":32,"author":{"gitId":"kaixiangtay"},"content":"        FindCommandParserUtil.checkEmptyInputField(trimmedArgs, \"input\");","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"kaixiangtay"},"content":"        String[] keywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"kaixiangtay"},"content":"        boolean isTagWord \u003d Arrays.toString(keywords).contains(\"t/\");","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"kaixiangtay"},"content":"        boolean isDescription \u003d Arrays.toString(keywords).contains(\"d/\");","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"kaixiangtay"},"content":"        if (isTagWord) {","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"kaixiangtay"},"content":"            checkMultiplePrefix(keywords, \"tag\");","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"kaixiangtay"},"content":"            Set\u003cString\u003e tagWords \u003d FindCommandParserUtil.handleSearchByTag(keywords);","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"kaixiangtay"},"content":"            return new FindCommand(new TagContainsKeywordsPredicate(tagWords));","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"kaixiangtay"},"content":"        } else if (isDescription) {","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"kaixiangtay"},"content":"            checkMultiplePrefix(keywords, \"description\");","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"kaixiangtay"},"content":"            List\u003cString\u003e descriptionWords \u003d FindCommandParserUtil.handleSearchByDescription(keywords);","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"kaixiangtay"},"content":"            return new FindCommand(new DescriptionContainsKeywordsPredicate(descriptionWords));","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"kaixiangtay"},"content":"        } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"kaixiangtay"},"content":"            checkMultiplePrefix(keywords, \"title\");","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"kaixiangtay"},"content":"            return new FindCommand(new TitleContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"kaixiangtay"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"kaixiangtay"},"content":"     * Check for mixed parse format prefixes within the keyword(s) of find query","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"kaixiangtay"},"content":"     * @param keywords Keyword(s) which is within the find query","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"kaixiangtay"},"content":"     * @param findType Type of find queries can be description, tag, title","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"kaixiangtay"},"content":"     * @throws ParseException if a find query has multiple parse format prefixes","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"kaixiangtay"},"content":"     * Like d/ t/ being detected from the keywords","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"kaixiangtay"},"content":"    private static void checkMultiplePrefix(String[] keywords, String findType) throws ParseException {","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"kaixiangtay"},"content":"        int numDescriptionPrefix \u003d 0;","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"kaixiangtay"},"content":"        int numTagPrefix \u003d 0;","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"kaixiangtay"},"content":"        checkMultiplePrefixInTitle(keywords, findType);","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"kaixiangtay"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"kaixiangtay"},"content":"            boolean isTagPrefix \u003d keyword.contains(\"t/\");","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"kaixiangtay"},"content":"            boolean isDescriptionPrefix \u003d keyword.contains(\"d/\");","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"kaixiangtay"},"content":"            if (isTagPrefix) {","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"kaixiangtay"},"content":"                numTagPrefix++;","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"kaixiangtay"},"content":"            } else if (isDescriptionPrefix) {","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"kaixiangtay"},"content":"                numDescriptionPrefix++;","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"kaixiangtay"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"kaixiangtay"},"content":"        checkMultiplePrefixInDescriptionTag(numDescriptionPrefix, numTagPrefix, findType);","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"kaixiangtay"},"content":"     * Checks the mixed find query prefixes within keyword(s) in find by title query only","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"kaixiangtay"},"content":"     * @param keywords Keyword(s) which is within the find by title query","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"kaixiangtay"},"content":"     * @param findPrefix Type of find prefixes can be description, tag hidden in find by title query","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"kaixiangtay"},"content":"     * @throws ParseException if a find query by title has multiple parse formats prefixes","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"kaixiangtay"},"content":"     * Like d/ t/ being detected from the keywords","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"kaixiangtay"},"content":"    private static void checkMultiplePrefixInTitle(String[] keywords, String findPrefix) throws ParseException {","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"kaixiangtay"},"content":"        boolean isDescriptionPrefixInTitle \u003d findPrefix.equals(\"description\") \u0026\u0026 !(keywords[0].contains(\"d/\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":88,"author":{"gitId":"kaixiangtay"},"content":"        boolean isTagPrefixInTitle \u003d findPrefix.equals(\"tag\") \u0026\u0026 !(keywords[0].contains(\"t/\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"kaixiangtay"},"content":"        if (isDescriptionPrefixInTitle) {","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"kaixiangtay"},"content":"            logger.info(\"Description Prefix mixed in find by title query detected: \"","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"kaixiangtay"},"content":"                    + FindCommandParserUtil.MULTIPLE_COMMANDS);","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"kaixiangtay"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"kaixiangtay"},"content":"                    FindCommandParserUtil.MULTIPLE_COMMANDS));","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"kaixiangtay"},"content":"        } else if (isTagPrefixInTitle) {","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"kaixiangtay"},"content":"            logger.info(\"Tag Prefix mixed in find by title query detected: \"","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"kaixiangtay"},"content":"                    + FindCommandParserUtil.MULTIPLE_COMMANDS);","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"kaixiangtay"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"kaixiangtay"},"content":"                    FindCommandParserUtil.MULTIPLE_COMMANDS));","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"kaixiangtay"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"kaixiangtay"},"content":"     * Checks the given keyword(s) and find query type of description or tag(s)","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":106,"author":{"gitId":"kaixiangtay"},"content":"     * @param numDescriptionPrefix Number of description prefix in keyword(s)","lastModifiedDate":"2021-03-18"},{"lineNumber":107,"author":{"gitId":"kaixiangtay"},"content":"     * @param numTagPrefix Number of tag prefix in keyword(s)","lastModifiedDate":"2021-03-18"},{"lineNumber":108,"author":{"gitId":"kaixiangtay"},"content":"     * @param findType Type of find query which is either find by description or find by tag only","lastModifiedDate":"2021-03-18"},{"lineNumber":109,"author":{"gitId":"kaixiangtay"},"content":"     * @throws ParseException if a find query by description or tag(s) has multiple parse format prefixes","lastModifiedDate":"2021-03-18"},{"lineNumber":110,"author":{"gitId":"kaixiangtay"},"content":"     * Like d/ t/ being detected from the keywords","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"kaixiangtay"},"content":"    private static void checkMultiplePrefixInDescriptionTag(int numDescriptionPrefix, int numTagPrefix, String findType)","lastModifiedDate":"2021-03-18"},{"lineNumber":113,"author":{"gitId":"kaixiangtay"},"content":"            throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"kaixiangtay"},"content":"        boolean isMultipleCommands;","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":116,"author":{"gitId":"kaixiangtay"},"content":"        switch (findType) {","lastModifiedDate":"2021-03-14"},{"lineNumber":117,"author":{"gitId":"kaixiangtay"},"content":"        case \"description\":","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"kaixiangtay"},"content":"            isMultipleCommands \u003d numTagPrefix \u003e 0 || numDescriptionPrefix \u003e 1;","lastModifiedDate":"2021-03-18"},{"lineNumber":119,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":120,"author":{"gitId":"kaixiangtay"},"content":"            if (isMultipleCommands) {","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"kaixiangtay"},"content":"                logger.info(\"Multiple command prefix detected in find by description query: \"","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"kaixiangtay"},"content":"                        + FindCommandParserUtil.MULTIPLE_COMMANDS);","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"kaixiangtay"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-22"},{"lineNumber":124,"author":{"gitId":"kaixiangtay"},"content":"                        FindCommandParserUtil.MULTIPLE_COMMANDS));","lastModifiedDate":"2021-03-22"},{"lineNumber":125,"author":{"gitId":"kaixiangtay"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":126,"author":{"gitId":"kaixiangtay"},"content":"            break;","lastModifiedDate":"2021-03-14"},{"lineNumber":127,"author":{"gitId":"kaixiangtay"},"content":"        case \"tag\":","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"kaixiangtay"},"content":"            isMultipleCommands \u003d numDescriptionPrefix \u003e 0;","lastModifiedDate":"2021-03-18"},{"lineNumber":129,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"kaixiangtay"},"content":"            if (isMultipleCommands) {","lastModifiedDate":"2021-03-14"},{"lineNumber":131,"author":{"gitId":"kaixiangtay"},"content":"                logger.info(\"Multiple command prefix detected in find by tag query: \"","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"kaixiangtay"},"content":"                        + FindCommandParserUtil.MULTIPLE_COMMANDS);","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"kaixiangtay"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-22"},{"lineNumber":134,"author":{"gitId":"kaixiangtay"},"content":"                        FindCommandParserUtil.MULTIPLE_COMMANDS));","lastModifiedDate":"2021-03-22"},{"lineNumber":135,"author":{"gitId":"kaixiangtay"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"kaixiangtay"},"content":"            break;","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"kaixiangtay"},"content":"        default:","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"kaixiangtay"},"content":"            break;","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"kaixiangtay"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kaixiangtay":115,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangtay"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"kaixiangtay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"kaixiangtay"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"kaixiangtay"},"content":"import java.util.List;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"kaixiangtay"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"kaixiangtay"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"kaixiangtay"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"kaixiangtay"},"content":" * Contains utility methods used for parsing strings into FindCommandParser class.","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"kaixiangtay"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"kaixiangtay"},"content":"public class FindCommandParserUtil {","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"kaixiangtay"},"content":"    public static final String TAG_USAGE \u003d \"\\n\" + FindCommand.COMMAND_WORD + \" t/: Finds all \"","lastModifiedDate":"2021-04-06"},{"lineNumber":21,"author":{"gitId":"kaixiangtay"},"content":"            + \"tasks whose tag contain the exact keyword (case-insensitive).\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"kaixiangtay"},"content":"            + \"\\nParameter: TAG_NAME\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"kaixiangtay"},"content":"            + \"\\nExample: \" + FindCommand.COMMAND_WORD + \" t/CS2103\";","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"kaixiangtay"},"content":"    public static final String DESCRIPTION_USAGE \u003d \"\\n\" + FindCommand.COMMAND_WORD + \" d/: Finds all \"","lastModifiedDate":"2021-04-06"},{"lineNumber":26,"author":{"gitId":"kaixiangtay"},"content":"            + \"tasks whose description contain any of the specified keywords (case-insensitive).\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":27,"author":{"gitId":"kaixiangtay"},"content":"            + \"\\nParameter: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-04-06"},{"lineNumber":28,"author":{"gitId":"kaixiangtay"},"content":"            + \"\\nExample: \" + FindCommand.COMMAND_WORD + \" d/Fix bugs in PE dry run\";","lastModifiedDate":"2021-04-06"},{"lineNumber":29,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"kaixiangtay"},"content":"    public static final String MULTIPLE_COMMANDS \u003d \"Multiple commands detected !!! For find by title query, \"","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"kaixiangtay"},"content":"            + \"please do not include search by tag (t/) or description (d/). For find by description (d/), \"","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"kaixiangtay"},"content":"            + \"please do not include any tag search (t/) and only one description search is allowed. \"","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"kaixiangtay"},"content":"            + \"For find by tag (t/), multiple tags search are allowed but do not include any description search (d/).\";","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"kaixiangtay"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(FindCommandParserUtil.class);","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"kaixiangtay"},"content":"     * Check for empty input field within the parse input from find command","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"kaixiangtay"},"content":"     * @param input Parse input from find command","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"kaixiangtay"},"content":"     * @param findType Type of find queries can be description, tag, title","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"kaixiangtay"},"content":"     * @throws ParseException if an empty user input excluding parse format prefix such as d/, t/ is detected","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"kaixiangtay"},"content":"    public static void checkEmptyInputField(String input, String findType) throws ParseException {","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"kaixiangtay"},"content":"        boolean isEmptyInput \u003d input.isEmpty();","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"kaixiangtay"},"content":"        if (isEmptyInput) {","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"kaixiangtay"},"content":"            boolean isEmptyTagInput \u003d findType.equals(\"t/\"); // t/(empty input)","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"kaixiangtay"},"content":"            boolean isEmptyDescriptionInput \u003d findType.equals(\"d/\"); // d/(empty input)","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"kaixiangtay"},"content":"            if (isEmptyTagInput) {","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"kaixiangtay"},"content":"                logger.info(\"Empty input in find by tag query detected: \"","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"kaixiangtay"},"content":"                        + TAG_USAGE);","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"kaixiangtay"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TAG_USAGE));","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"kaixiangtay"},"content":"            } else if (isEmptyDescriptionInput) {","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"kaixiangtay"},"content":"                logger.info(\"Empty input in find by description query detected: \"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"kaixiangtay"},"content":"                        + DESCRIPTION_USAGE);","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"kaixiangtay"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DESCRIPTION_USAGE));","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"kaixiangtay"},"content":"            } else { // default condition is empty input","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"kaixiangtay"},"content":"                logger.info(\"Empty input in find by title query detected: \"","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"kaixiangtay"},"content":"                        + FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"kaixiangtay"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"kaixiangtay"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"kaixiangtay"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"kaixiangtay"},"content":"     * Manages the given arguments to search matching tasks by tag","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"kaixiangtay"},"content":"     * @param keywords Keyword(s) which is within the find by tag query","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"kaixiangtay"},"content":"     * @return Set object that contains the list of tag keywords for execution","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"kaixiangtay"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"kaixiangtay"},"content":"    public static Set\u003cString\u003e handleSearchByTag(String[] keywords) throws ParseException {","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"kaixiangtay"},"content":"        Set\u003cString\u003e tagWords \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"kaixiangtay"},"content":"        for (String word : keywords) {","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"kaixiangtay"},"content":"            String tagKeyword \u003d word.replaceFirst(\"t/\", \"\");","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"kaixiangtay"},"content":"            checkEmptyInputField(tagKeyword, \"t/\");","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"kaixiangtay"},"content":"            tagWords.add(tagKeyword);","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"kaixiangtay"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"kaixiangtay"},"content":"        return tagWords;","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"kaixiangtay"},"content":"     * Manages the given arguments to search matching tasks by description","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"kaixiangtay"},"content":"     * @param keywords Keyword(s) which is within the find by description query","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"kaixiangtay"},"content":"     * @return List object that contains the list of tag keywords for execution","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"kaixiangtay"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"kaixiangtay"},"content":"    public static List\u003cString\u003e handleSearchByDescription(String[] keywords) throws ParseException {","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"kaixiangtay"},"content":"        List\u003cString\u003e descriptionWords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"kaixiangtay"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2021-03-22"},{"lineNumber":96,"author":{"gitId":"kaixiangtay"},"content":"            String currStr \u003d formatDescription(keyword);","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"kaixiangtay"},"content":"            checkEmptyInputField(currStr, \"d/\");","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"kaixiangtay"},"content":"            descriptionWords.add(currStr);","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"kaixiangtay"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"kaixiangtay"},"content":"        return descriptionWords;","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":104,"author":{"gitId":"kaixiangtay"},"content":"     * Manages the given keyword to remove the parse format prefix d/ in description","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":106,"author":{"gitId":"kaixiangtay"},"content":"     * @param keyword Keyword which is within the find by description query","lastModifiedDate":"2021-03-22"},{"lineNumber":107,"author":{"gitId":"kaixiangtay"},"content":"     * @return String object that contains only the description keywords for execution","lastModifiedDate":"2021-03-22"},{"lineNumber":108,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":109,"author":{"gitId":"kaixiangtay"},"content":"    private static String formatDescription(String keyword) {","lastModifiedDate":"2021-03-22"},{"lineNumber":110,"author":{"gitId":"kaixiangtay"},"content":"        assert keyword !\u003d null : \"Find by description do not have any keyword(s) !!!\";","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"kaixiangtay"},"content":"        String currStr \u003d keyword;","lastModifiedDate":"2021-03-22"},{"lineNumber":112,"author":{"gitId":"kaixiangtay"},"content":"        boolean isDescriptionFormat \u003d currStr.contains(\"d/\");","lastModifiedDate":"2021-03-22"},{"lineNumber":113,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":114,"author":{"gitId":"kaixiangtay"},"content":"        if (isDescriptionFormat) {","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"kaixiangtay"},"content":"            currStr \u003d currStr.replaceFirst(\"d/\", \"\");","lastModifiedDate":"2021-03-22"},{"lineNumber":116,"author":{"gitId":"kaixiangtay"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"kaixiangtay"},"content":"        return currStr;","lastModifiedDate":"2021-03-22"},{"lineNumber":118,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":119,"author":{"gitId":"kaixiangtay"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"kaixiangtay":119}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangtay"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"kaixiangtay"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"kaixiangtay"},"content":" * Parses input arguments and creates a new ListCommand object","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"kaixiangtay"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"kaixiangtay"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"kaixiangtay"},"content":"     * Parses the given arguments in the context of the ListCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"kaixiangtay"},"content":"     * @param args String argument parse in from List command","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"kaixiangtay"},"content":"     * @return ListCommand object for execution","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"kaixiangtay"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"kaixiangtay"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"kaixiangtay"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"kaixiangtay"},"content":"        boolean isListNotDoneTask \u003d trimmedArgs.equalsIgnoreCase(\"not done\");","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"kaixiangtay"},"content":"        boolean isListEverything \u003d trimmedArgs.equals(\"\");","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"kaixiangtay"},"content":"        if (isListNotDoneTask) {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"kaixiangtay"},"content":"            return new ListCommand(false);","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"kaixiangtay"},"content":"        } else if (isListEverything) {","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"kaixiangtay"},"content":"            return new ListCommand(true);","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"kaixiangtay"},"content":"        } else {","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"kaixiangtay"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.INVALID_INPUT));","lastModifiedDate":"2021-04-06"},{"lineNumber":32,"author":{"gitId":"kaixiangtay"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"kaixiangtay"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"kaixiangtay":34}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Description;","lastModifiedDate":"2021-04-04"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Duration;","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.RecurringSchedule;","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Status;","lastModifiedDate":"2021-04-04"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Title;","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"     * Parses a {@code String title} into a {@code Title}.","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"     * @throws ParseException if the given {@code title} is invalid.","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"    public static Title parseTitle(String title) throws ParseException {","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(title);","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"        if (!Title.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"        return new Title(trimmedTitle);","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"habi39"},"content":"     * Parses a {@code String date} into a {@code Date}.","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"habi39"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"habi39"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"habi39"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"habi39"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"mesyeux"},"content":"        try {","lastModifiedDate":"2021-03-21"},{"lineNumber":68,"author":{"gitId":"habi39"},"content":"            return new Date(trimmedDate);","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"mesyeux"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-21"},{"lineNumber":70,"author":{"gitId":"habi39"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"mesyeux"},"content":"        }","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"habi39"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"habi39"},"content":"     * Parses a {@code String duration} into a {@code Duration}.","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"habi39"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"habi39"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"habi39"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"habi39"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"habi39"},"content":"    public static Duration parseDuration(String duration) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"habi39"},"content":"        requireNonNull(duration);","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"habi39"},"content":"        String trimmedDuration \u003d duration.trim();","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"habi39"},"content":"        if (!Duration.isValidDuration(trimmedDuration)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"habi39"},"content":"            throw new ParseException(Duration.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"habi39"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"habi39"},"content":"        return new Duration(trimmedDuration);","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"LimJunxue"},"content":"     * Parses a {@code String description} into an {@code Description}.","lastModifiedDate":"2021-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"LimJunxue"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2021-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"LimJunxue"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2021-03-11"},{"lineNumber":96,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-11"},{"lineNumber":97,"author":{"gitId":"LimJunxue"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2021-03-11"},{"lineNumber":98,"author":{"gitId":"LimJunxue"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":99,"author":{"gitId":"LimJunxue"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"LimJunxue"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2021-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"maxxng"},"content":"     * Parses a {@code String status} into an {@code Status}.","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"maxxng"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"maxxng"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"maxxng"},"content":"        requireNonNull(status);","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"maxxng"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"maxxng"},"content":"        if (!Status.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"maxxng"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"maxxng"},"content":"        return new Status(trimmedStatus);","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"kaixiangtay"},"content":"     * Parses a {@code String recurringSchedule} into an {@code RecurringSchedule}.","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"kaixiangtay"},"content":"     * @throws ParseException if the given {@code recurringSchedule} is invalid.","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"kaixiangtay"},"content":"    public static RecurringSchedule parseRecurringSchedule(String recurringSchedule) throws ParseException {","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"kaixiangtay"},"content":"        requireNonNull(recurringSchedule);","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"kaixiangtay"},"content":"        String trimmedRecurringSchedule \u003d recurringSchedule.trim();","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"kaixiangtay"},"content":"        if (!RecurringSchedule.isValidRecurringScheduleInput(trimmedRecurringSchedule)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":129,"author":{"gitId":"kaixiangtay"},"content":"            throw new ParseException(RecurringSchedule.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"kaixiangtay"},"content":"        return new RecurringSchedule(trimmedRecurringSchedule);","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":160,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":161,"author":{"gitId":"habi39"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":162,"author":{"gitId":"habi39"},"content":"     * Parses a {@code String order} into a boolean option.","lastModifiedDate":"2021-03-23"},{"lineNumber":163,"author":{"gitId":"habi39"},"content":"     * True is returned when order is ascending.","lastModifiedDate":"2021-03-23"},{"lineNumber":164,"author":{"gitId":"habi39"},"content":"     * False is returned when order is descending or null","lastModifiedDate":"2021-03-23"},{"lineNumber":165,"author":{"gitId":"habi39"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":166,"author":{"gitId":"habi39"},"content":"     * @throws ParseException if the given {@code order} is invalid.","lastModifiedDate":"2021-03-23"},{"lineNumber":167,"author":{"gitId":"habi39"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":168,"author":{"gitId":"habi39"},"content":"    public static Boolean parseSort(String order) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":169,"author":{"gitId":"habi39"},"content":"        if (order \u003d\u003d null || order.trim().equalsIgnoreCase(\"d\")) {","lastModifiedDate":"2021-03-23"},{"lineNumber":170,"author":{"gitId":"habi39"},"content":"            return false;","lastModifiedDate":"2021-03-23"},{"lineNumber":171,"author":{"gitId":"habi39"},"content":"        } else if (order.trim().equalsIgnoreCase(\"a\")) {","lastModifiedDate":"2021-03-23"},{"lineNumber":172,"author":{"gitId":"habi39"},"content":"            return true;","lastModifiedDate":"2021-03-23"},{"lineNumber":173,"author":{"gitId":"habi39"},"content":"        } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":174,"author":{"gitId":"habi39"},"content":"            throw new ParseException(\"Order can only be \u0027a\u0027 or \u0027d\u0027\");","lastModifiedDate":"2021-03-23"},{"lineNumber":175,"author":{"gitId":"habi39"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":176,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"maxxng":14,"LimJunxue":16,"mesyeux":4,"kaixiangtay":8,"habi39":39,"-":96}},{"path":"src/main/java/seedu/address/logic/parser/PlannerParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.logic.commands.CalendarNextCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.logic.commands.CalendarPrevCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"habi39"},"content":"import seedu.address.logic.commands.CountdownCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"habi39"},"content":"import seedu.address.logic.commands.DeleteFieldCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"habi39"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"habi39"},"content":"import seedu.address.logic.commands.DoneCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.commands.SnoozeCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"habi39"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"import seedu.address.logic.commands.StatsCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.logic.commands.ViewDayCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"public class PlannerParser {","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e[\\\\S\\\\s]*)\");","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"kaixiangtay"},"content":"        boolean isInvalidFormat \u003d !matcher.matches();","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"kaixiangtay"},"content":"        if (isInvalidFormat) {","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"        case CalendarNextCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"            return new CalendarNextCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"        case CalendarPrevCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"LimJunxue"},"content":"            return new CalendarPrevCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"mesyeux"},"content":"        //@@author mesyeux","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"mesyeux"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"mesyeux"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"mesyeux"},"content":"        case DeleteFieldCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"mesyeux"},"content":"            return new DeleteFieldCommandParser().parse(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"mesyeux"},"content":"        //@@author","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"mesyeux"},"content":"        case StatsCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"mesyeux"},"content":"            return new StatsCommand();","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"mesyeux"},"content":"        case CountdownCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"mesyeux"},"content":"            return new CountdownCommandParser().parse(arguments);","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"kaixiangtay"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"habi39"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"habi39"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"LimJunxue"},"content":"        case ViewDayCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"LimJunxue"},"content":"            return new ViewDayCommandParser().parse(arguments);","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"maxxng"},"content":"        case DoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"maxxng"},"content":"            return new DoneCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"maxxng"},"content":"        case SnoozeCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"maxxng"},"content":"            return new SnoozeCommandParser().parse(arguments);","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimJunxue":11,"maxxng":5,"mesyeux":11,"kaixiangtay":3,"habi39":7,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/SnoozeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maxxng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"maxxng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"maxxng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.commands.SnoozeCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":" * Parses input arguments and creates a new SnoozeCommand object.","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"maxxng"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"public class SnoozeCommandParser implements Parser\u003cSnoozeCommand\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"    public static final String MESSAGE_INVALID_ARGUMENT \u003d \"Snooze Command must have a compulsory INDEX\"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"            + \" and an optional NUMBER argument, both of which are positive integers.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"    private static final String SNOOZE_COMMAND_REGEX \u003d \"[0-9]+\\\\s?[0-9]*\";","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"     * Parses the given {@code String} of arguments in the context of the SnoozeCommand","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"maxxng"},"content":"     * and returns an SnoozeCommand object for execution.","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"maxxng"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"maxxng"},"content":"     * @param args the user\u0027s inputted arguments in string form.","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"maxxng"},"content":"     * @return SnoozeCommand object.","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"     * @throws ParseException","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"maxxng"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"maxxng"},"content":"    public SnoozeCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"maxxng"},"content":"        validateParameter(args);","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"maxxng"},"content":"        Index index \u003d getIndex(args);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"maxxng"},"content":"        int days \u003d getDays(args);","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"maxxng"},"content":"        return new SnoozeCommand(index, days);","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"maxxng"},"content":"    private void validateParameter(String parameter) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"maxxng"},"content":"        String trimmedArgs \u003d parameter.trim();","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"maxxng"},"content":"        if (trimmedArgs \u003d\u003d \"\" || !(Pattern.matches(SNOOZE_COMMAND_REGEX, trimmedArgs))) {","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"maxxng"},"content":"            throw new ParseException(MESSAGE_INVALID_ARGUMENT);","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"maxxng"},"content":"    private Index getIndex(String args) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"maxxng"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"maxxng"},"content":"        String[] argValues \u003d trimmedArgs.split(\" \");","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"maxxng"},"content":"        assert(argValues.length \u003d\u003d 1 || argValues.length \u003d\u003d 2);","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"maxxng"},"content":"        if (Integer.valueOf(argValues[0]) \u003c 1) {","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"maxxng"},"content":"            throw new ParseException(MESSAGE_INVALID_ARGUMENT);","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"maxxng"},"content":"        return ParserUtil.parseIndex(argValues[0]);","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"maxxng"},"content":"    private int getDays(String args) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"maxxng"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"maxxng"},"content":"        String[] argValues \u003d trimmedArgs.split(\" \");","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"maxxng"},"content":"        if (argValues.length \u003d\u003d 2) {","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"maxxng"},"content":"            if (Integer.valueOf(argValues[1]) \u003c 1) {","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"maxxng"},"content":"                throw new ParseException(MESSAGE_INVALID_ARGUMENT);","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"maxxng"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"maxxng"},"content":"            return Integer.parseInt(argValues[1]);","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"maxxng"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"maxxng"},"content":"            return 1;","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"maxxng"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"maxxng":68}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"habi39"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"habi39"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"habi39"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"habi39"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"habi39"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"habi39"},"content":"import seedu.address.model.task.TaskDateComparator;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"habi39"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"habi39"},"content":" * Parses input arguments and creates a new SortMeetingCommand object","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"habi39"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"habi39"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"habi39"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"habi39"},"content":"     * Parses the given string of arguments in the context of the SortMeetingCommand","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"habi39"},"content":"     * and returns a SortMeetingCommand object for execution.","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"habi39"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"habi39"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"habi39"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"habi39"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_SORT);","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"habi39"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_SORT)","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"habi39"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"habi39"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"habi39"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"habi39"},"content":"        Boolean isAscending \u003d ParserUtil.parseSort(argMultimap.getValue(PREFIX_SORT).orElse(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"habi39"},"content":"        TaskDateComparator comparator \u003d new TaskDateComparator();","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"habi39"},"content":"        return new SortCommand(comparator, isAscending);","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"habi39"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"habi39"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"habi39"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"habi39"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"habi39"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"habi39"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"habi39"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"habi39":43}},{"path":"src/main/java/seedu/address/logic/parser/ViewDayCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.logic.commands.ViewDayCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.predicates.TaskOnDatePredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":" * Parses input arguments and creates a new ViewDayCommand object","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"public class ViewDayCommandParser implements Parser\u003cViewDayCommand\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewDayCommand","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"     * and returns an ViewDayCommand object for execution.","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"     * @param userInput Provided user input for the ViewDayCommand.","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"     * @return ViewDayCommand with the predicate of the date constructed with the userInput.","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"habi39"},"content":"     * @throws ParseException if the userInput does not conform to the expected format of a date.","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"    public ViewDayCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"        String trimmedInput \u003d userInput.trim();","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"        if (userInput.isBlank()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewDayCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"habi39"},"content":"            Date date \u003d ParserUtil.parseDate(trimmedInput);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"habi39"},"content":"            return new ViewDayCommand(new TaskOnDatePredicate(date), date.getDate());","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"        } catch (ParseException parseException) {","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"            throw parseException;","lastModifiedDate":"2021-04-06"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"LimJunxue":31,"maxxng":1,"habi39":3}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"habi39"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"habi39"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"kaixiangtay"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_UNDONE_TASKS \u003d task -\u003e !task.getStatus().isDone();","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"     * Returns the user prefs\u0027 planner file path.","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"    Path getPlannerFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"     * Sets the user prefs\u0027 planner file path.","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"    void setPlannerFilePath(Path plannerFilePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"     * Replaces planner data with the data in {@code planner}.","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"    void setPlanner(ReadOnlyPlanner planner);","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"LimJunxue"},"content":"     * Returns the Planner","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"    ReadOnlyPlanner getPlanner();","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"LimJunxue"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the planner.","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"mesyeux"},"content":"     * Returns true if a task\u0027s deadline is already over.","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"mesyeux"},"content":"    boolean dateOver(Task task);","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"     * Deletes the given task.","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"LimJunxue"},"content":"     * The task must exist in the planner.","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2021-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"LimJunxue"},"content":"     * Adds the given task.","lastModifiedDate":"2021-03-02"},{"lineNumber":84,"author":{"gitId":"LimJunxue"},"content":"     * {@code task} must not already exist in the planner.","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"LimJunxue"},"content":"    void addTask(Task task);","lastModifiedDate":"2021-03-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"LimJunxue"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2021-03-02"},{"lineNumber":90,"author":{"gitId":"LimJunxue"},"content":"     * {@code target} must exist in the planner.","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"LimJunxue"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the planner.","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"habi39"},"content":"    void setTask(Task target, Task editedTask) throws CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"LimJunxue"},"content":"     * Returns true if a tag with the same identity as {@code tag} exists in the planner.","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"LimJunxue"},"content":"    boolean hasTag(Tag tag);","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"LimJunxue"},"content":"     * Gets a Tag that has the same identity as an existing tag.","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"LimJunxue"},"content":"    Tag getTag(Tag tag);","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"LimJunxue"},"content":"     * Calls Planner to delete the given tag. Might not remove if there are other tasks with this tag.","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"LimJunxue"},"content":"     * The tag must exist in the planner.","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"LimJunxue"},"content":"    void deleteTag(Tag target);","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"LimJunxue"},"content":"     * Adds the given tag.","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"LimJunxue"},"content":"     * {@code tag} must not already exist in the planner.","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"LimJunxue"},"content":"    void addTag(Tag tag);","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"LimJunxue"},"content":"     * Adds tags that are not in the planner from the set of tags and returns a set containing those originally in the","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"LimJunxue"},"content":"     * planner and new tags that are now added. Responsibility is with UniqueTagList to check for the tag\u0027s uniqueness.","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"LimJunxue"},"content":"    Set\u003cTag\u003e addTagsIfAbsent(Set\u003cTag\u003e tags);","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"LimJunxue"},"content":"     * Replaces the given set of tags {@code target} with {@code editedTags}.","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"LimJunxue"},"content":"     * {@code target} must exist in the planner.","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"LimJunxue"},"content":"     * The tag identities of {@code editedTags} must not be the same as other existing tags in the planner.","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"LimJunxue"},"content":"    void setTags(Set\u003cTag\u003e target, Set\u003cTag\u003e editedTags) throws CommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":131,"author":{"gitId":"mesyeux"},"content":"     * Finds the time left until the deadline of {@code task}.","lastModifiedDate":"2021-03-22"},{"lineNumber":132,"author":{"gitId":"mesyeux"},"content":"     * The task must already exist in the planner.","lastModifiedDate":"2021-03-22"},{"lineNumber":133,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"mesyeux"},"content":"     * @return the time left in the form of a {code String}.","lastModifiedDate":"2021-03-22"},{"lineNumber":135,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":136,"author":{"gitId":"mesyeux"},"content":"    String countdownTask(Task task);","lastModifiedDate":"2021-03-22"},{"lineNumber":137,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":138,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"mesyeux"},"content":"     * Returns true if the planner has no tasks.","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"mesyeux"},"content":"    boolean isEmpty();","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"mesyeux"},"content":"     * Returns the number of tasks in the planner.","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"mesyeux"},"content":"    int size();","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"mesyeux"},"content":"     * Returns the percentage of tasks completed.","lastModifiedDate":"2021-03-29"},{"lineNumber":150,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":151,"author":{"gitId":"mesyeux"},"content":"    double getPercentage();","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"mesyeux"},"content":"     * Returns the number of tasks due in the next 7 days.","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"mesyeux"},"content":"    int getNumberDue();","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"LimJunxue"},"content":"     * Returns an unmodifiable view of the filtered task list","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"LimJunxue"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2021-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":163,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"LimJunxue"},"content":"     * Returns an unmodifiable view of the sorted tag list","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":166,"author":{"gitId":"LimJunxue"},"content":"    ObservableList\u003cTag\u003e getSortedTagList();","lastModifiedDate":"2021-03-24"},{"lineNumber":167,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":169,"author":{"gitId":"LimJunxue"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-02"},{"lineNumber":170,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":173,"author":{"gitId":"LimJunxue"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":174,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":175,"author":{"gitId":"habi39"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":176,"author":{"gitId":"LimJunxue"},"content":"     * Updates the comparator of the sorted task list to sort by the given {@code comparator}.","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"LimJunxue"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"habi39"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":180,"author":{"gitId":"habi39"},"content":"    void updateSortedTaskList(Comparator\u003cTask\u003e comparator);","lastModifiedDate":"2021-03-23"},{"lineNumber":181,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":182,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":183,"author":{"gitId":"LimJunxue"},"content":"     * Updates the comparator of the sorted tag list to sort by the given {@code comparator}.","lastModifiedDate":"2021-03-24"},{"lineNumber":184,"author":{"gitId":"LimJunxue"},"content":"     * Implies that tag list has already been loaded.","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"LimJunxue"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2021-03-24"},{"lineNumber":187,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"LimJunxue"},"content":"    void updateSortedTagList(Comparator\u003cTag\u003e comparator);","lastModifiedDate":"2021-03-24"},{"lineNumber":189,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"LimJunxue"},"content":"     * Gets the ObservableCalendarDate to update the calendar with.","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"LimJunxue"},"content":"     * @return The ObservableCalendarDate object that cannot be modified.","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"LimJunxue"},"content":"    ObservableCalendarDate getCalendarDate();","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":197,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"LimJunxue"},"content":"     * Sets the calendar date in the ObservableCalendarDate object.","lastModifiedDate":"2021-03-29"},{"lineNumber":199,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":200,"author":{"gitId":"LimJunxue"},"content":"     * @param date Date to be set.","lastModifiedDate":"2021-03-29"},{"lineNumber":201,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":202,"author":{"gitId":"LimJunxue"},"content":"    void setCalendarDate(LocalDate date);","lastModifiedDate":"2021-03-29"},{"lineNumber":203,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":204,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":205,"author":{"gitId":"LimJunxue"},"content":"     * Resets the calendar date","lastModifiedDate":"2021-03-29"},{"lineNumber":206,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":207,"author":{"gitId":"LimJunxue"},"content":"    void resetCalendarDate();","lastModifiedDate":"2021-03-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"LimJunxue":99,"mesyeux":27,"kaixiangtay":1,"habi39":8,"-":73}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"habi39"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"habi39"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":" * Represents the in-memory model of the planner data.","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"    private final Planner planner;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"habi39"},"content":"    private final SortedList\u003cTask\u003e sortedTask;","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"    private final SortedList\u003cTag\u003e sortedTags;","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"     * Initializes a ModelManager with the given planner and userPrefs.","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"    public ModelManager(ReadOnlyPlanner planner, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"        requireAllNonNull(planner, userPrefs);","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"        logger.fine(\"Initializing with planner: \" + planner + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"        this.planner \u003d new Planner(planner);","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.planner.getTaskList());","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"habi39"},"content":"        sortedTask \u003d new SortedList\u003c\u003e(this.planner.getTaskList());","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"        sortedTags \u003d new SortedList\u003c\u003e(this.planner.getTagList());","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"        this(new Planner(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"    public Path getPlannerFilePath() {","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"LimJunxue"},"content":"        return userPrefs.getPlannerFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"LimJunxue"},"content":"    public void setPlannerFilePath(Path plannerFilePath) {","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(plannerFilePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"LimJunxue"},"content":"        userPrefs.setPlannerFilePath(plannerFilePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"LimJunxue"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Planner \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"LimJunxue"},"content":"    public void setPlanner(ReadOnlyPlanner planner) {","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"LimJunxue"},"content":"        this.planner.resetData(planner);","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"LimJunxue"},"content":"    public ReadOnlyPlanner getPlanner() {","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"LimJunxue"},"content":"        return planner;","lastModifiedDate":"2021-03-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"LimJunxue"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2021-03-02"},{"lineNumber":104,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-03-02"},{"lineNumber":105,"author":{"gitId":"LimJunxue"},"content":"        return planner.hasTask(task);","lastModifiedDate":"2021-03-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"mesyeux"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":109,"author":{"gitId":"mesyeux"},"content":"    public boolean dateOver(Task task) {","lastModifiedDate":"2021-03-22"},{"lineNumber":110,"author":{"gitId":"mesyeux"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-03-22"},{"lineNumber":111,"author":{"gitId":"mesyeux"},"content":"        return planner.dateOver(task);","lastModifiedDate":"2021-03-22"},{"lineNumber":112,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":113,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":115,"author":{"gitId":"LimJunxue"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2021-03-02"},{"lineNumber":116,"author":{"gitId":"LimJunxue"},"content":"        planner.removeTask(target);","lastModifiedDate":"2021-03-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":120,"author":{"gitId":"LimJunxue"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-03-02"},{"lineNumber":121,"author":{"gitId":"LimJunxue"},"content":"        planner.addTask(task);","lastModifiedDate":"2021-03-09"},{"lineNumber":122,"author":{"gitId":"LimJunxue"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"LimJunxue"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-03-02"},{"lineNumber":127,"author":{"gitId":"LimJunxue"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"LimJunxue"},"content":"        planner.setTask(target, editedTask);","lastModifiedDate":"2021-03-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"mesyeux"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":133,"author":{"gitId":"mesyeux"},"content":"    public String countdownTask(Task task) {","lastModifiedDate":"2021-03-22"},{"lineNumber":134,"author":{"gitId":"mesyeux"},"content":"        return planner.countdown(task);","lastModifiedDate":"2021-03-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"LimJunxue"},"content":"    public boolean hasTag(Tag tag) {","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(tag);","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"LimJunxue"},"content":"        return planner.hasTag(tag);","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"LimJunxue"},"content":"    public Tag getTag(Tag tag) {","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(tag);","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"LimJunxue"},"content":"        return planner.getTag(tag);","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"LimJunxue"},"content":"    public void deleteTag(Tag target) {","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"LimJunxue"},"content":"        planner.removeTag(target);","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":155,"author":{"gitId":"LimJunxue"},"content":"    public void addTag(Tag tag) {","lastModifiedDate":"2021-03-24"},{"lineNumber":156,"author":{"gitId":"LimJunxue"},"content":"        planner.addTag(tag);","lastModifiedDate":"2021-03-24"},{"lineNumber":157,"author":{"gitId":"LimJunxue"},"content":"        updateSortedTagList(planner.getTagComparator());","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"LimJunxue"},"content":"    public Set\u003cTag\u003e addTagsIfAbsent(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"LimJunxue"},"content":"        Set\u003cTag\u003e uniqueTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"LimJunxue"},"content":"        tags.forEach(tag -\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"LimJunxue"},"content":"            if (hasTag(tag)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"LimJunxue"},"content":"                uniqueTags.add(getTag(tag));","lastModifiedDate":"2021-03-24"},{"lineNumber":166,"author":{"gitId":"LimJunxue"},"content":"            } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":167,"author":{"gitId":"LimJunxue"},"content":"                uniqueTags.add(tag);","lastModifiedDate":"2021-03-24"},{"lineNumber":168,"author":{"gitId":"LimJunxue"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":169,"author":{"gitId":"LimJunxue"},"content":"            addTag(tag);","lastModifiedDate":"2021-03-24"},{"lineNumber":170,"author":{"gitId":"LimJunxue"},"content":"        });","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"LimJunxue"},"content":"        return uniqueTags;","lastModifiedDate":"2021-03-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":175,"author":{"gitId":"LimJunxue"},"content":"    public void setTags(Set\u003cTag\u003e target, Set\u003cTag\u003e editedTags) {","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"LimJunxue"},"content":"        requireAllNonNull(target, editedTags);","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"LimJunxue"},"content":"        planner.setTags(target, editedTags);","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"LimJunxue"},"content":"        updateSortedTagList(planner.getTagComparator());","lastModifiedDate":"2021-04-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":183,"author":{"gitId":"mesyeux"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"mesyeux"},"content":"        return planner.isEmpty();","lastModifiedDate":"2021-03-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"mesyeux"},"content":"    public int size() {","lastModifiedDate":"2021-03-29"},{"lineNumber":189,"author":{"gitId":"mesyeux"},"content":"        return planner.size();","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"mesyeux"},"content":"    public double getPercentage() {","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"mesyeux"},"content":"        return planner.getPercentage();","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":197,"author":{"gitId":"mesyeux"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"mesyeux"},"content":"    public int getNumberDue() {","lastModifiedDate":"2021-03-29"},{"lineNumber":199,"author":{"gitId":"mesyeux"},"content":"        return planner.getNumberDue();","lastModifiedDate":"2021-03-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":202,"author":{"gitId":"LimJunxue"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":205,"author":{"gitId":"LimJunxue"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2021-03-02"},{"lineNumber":206,"author":{"gitId":"LimJunxue"},"content":"     * {@code versionedPlanner}","lastModifiedDate":"2021-03-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":209,"author":{"gitId":"LimJunxue"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-03-02"},{"lineNumber":210,"author":{"gitId":"LimJunxue"},"content":"        return filteredTasks;","lastModifiedDate":"2021-03-02"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":213,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":214,"author":{"gitId":"LimJunxue"},"content":"     * Returns an unmodifiable view of the list of {@code Tag} backed by the internal list of","lastModifiedDate":"2021-03-24"},{"lineNumber":215,"author":{"gitId":"LimJunxue"},"content":"     * {@code versionedPlanner}","lastModifiedDate":"2021-03-24"},{"lineNumber":216,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":218,"author":{"gitId":"LimJunxue"},"content":"    public ObservableList\u003cTag\u003e getSortedTagList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":219,"author":{"gitId":"LimJunxue"},"content":"        updateSortedTagList(planner.getTagComparator());","lastModifiedDate":"2021-04-07"},{"lineNumber":220,"author":{"gitId":"LimJunxue"},"content":"        return sortedTags;","lastModifiedDate":"2021-03-24"},{"lineNumber":221,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":222,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":224,"author":{"gitId":"LimJunxue"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-03-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":226,"author":{"gitId":"LimJunxue"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":229,"author":{"gitId":"habi39"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":230,"author":{"gitId":"habi39"},"content":"    public void updateSortedTaskList(Comparator\u003cTask\u003e comparator) {","lastModifiedDate":"2021-03-23"},{"lineNumber":231,"author":{"gitId":"habi39"},"content":"        requireAllNonNull(comparator);","lastModifiedDate":"2021-03-23"},{"lineNumber":232,"author":{"gitId":"habi39"},"content":"        sortedTask.setComparator(comparator);","lastModifiedDate":"2021-03-23"},{"lineNumber":233,"author":{"gitId":"habi39"},"content":"        planner.setTask(sortedTask);","lastModifiedDate":"2021-03-23"},{"lineNumber":234,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":235,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":236,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":237,"author":{"gitId":"LimJunxue"},"content":"    public void updateSortedTagList(Comparator\u003cTag\u003e comparator) {","lastModifiedDate":"2021-03-24"},{"lineNumber":238,"author":{"gitId":"LimJunxue"},"content":"        requireAllNonNull(comparator);","lastModifiedDate":"2021-03-24"},{"lineNumber":239,"author":{"gitId":"LimJunxue"},"content":"        sortedTags.setComparator(comparator);","lastModifiedDate":"2021-03-24"},{"lineNumber":240,"author":{"gitId":"LimJunxue"},"content":"        planner.setTags(sortedTags);","lastModifiedDate":"2021-03-24"},{"lineNumber":241,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":242,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":243,"author":{"gitId":"LimJunxue"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Viewing day methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":244,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":245,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":246,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":247,"author":{"gitId":"LimJunxue"},"content":"    public ObservableCalendarDate getCalendarDate() {","lastModifiedDate":"2021-03-29"},{"lineNumber":248,"author":{"gitId":"LimJunxue"},"content":"        return planner.getCalendarDate();","lastModifiedDate":"2021-03-29"},{"lineNumber":249,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":250,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":251,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":252,"author":{"gitId":"LimJunxue"},"content":"    public void setCalendarDate(LocalDate date) {","lastModifiedDate":"2021-03-29"},{"lineNumber":253,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-29"},{"lineNumber":254,"author":{"gitId":"LimJunxue"},"content":"        planner.setCalendarDate(date);","lastModifiedDate":"2021-03-29"},{"lineNumber":255,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":256,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":257,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":258,"author":{"gitId":"LimJunxue"},"content":"    public void resetCalendarDate() {","lastModifiedDate":"2021-03-29"},{"lineNumber":259,"author":{"gitId":"LimJunxue"},"content":"        planner.resetCalendarDate();","lastModifiedDate":"2021-03-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":276,"author":{"gitId":"LimJunxue"},"content":"        return planner.equals(other.planner)","lastModifiedDate":"2021-03-09"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":278,"author":{"gitId":"LimJunxue"},"content":"                \u0026\u0026 filteredTasks.equals(other.filteredTasks)","lastModifiedDate":"2021-03-24"},{"lineNumber":279,"author":{"gitId":"LimJunxue"},"content":"                \u0026\u0026 sortedTags.equals(other.sortedTags);","lastModifiedDate":"2021-03-24"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimJunxue":114,"mesyeux":19,"habi39":11,"-":138}},{"path":"src/main/java/seedu/address/model/ObservableCalendarDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.commons.Observable;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.commons.Observer;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":" * An observable class encompassing a LocalDate object and notifies its obervers whenever there is a change.","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"public class ObservableCalendarDate implements Observable\u003cLocalDate\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"    private LocalDate date;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"    private List\u003cObserver\u003e observers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"     * Creates an observable date that notifies its observers on changes.","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"     * @param date Date to be set.","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"    public ObservableCalendarDate(LocalDate date) {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"     * Sets the observable value and notifies all its observers. Cannot be set with a null value.","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"     * @param date Date to update the observable value with.","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"    public void set(LocalDate date) {","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"        assert date !\u003d null : \"Cannot set observable viewing date with null\";","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"        notifyAllObservers();","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"     * Resets the observable date to today\u0027s date, and notifies all its observers.","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"    public void reset() {","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"        this.date \u003d LocalDate.now();","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"        notifyAllObservers();","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"        return date;","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"    public void addObserver(Observer observer) {","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"        observers.add(observer);","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"    private void notifyAllObservers() {","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"        for (Observer observer : observers) {","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"            observer.update();","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"LimJunxue":58}},{"path":"src/main/java/seedu/address/model/Planner.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.tag.UniqueTagList;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.AttributeManager;","lastModifiedDate":"2021-04-04"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.UniqueTaskList;","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":" * Duplicates are not allowed (by .isSameTask comparison and tag equality)","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"public class Planner implements ReadOnlyPlanner {","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"    private final UniqueTagList tags;","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"    private final ObservableCalendarDate calendarDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"        tags \u003d new UniqueTagList();","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"        calendarDate \u003d new ObservableCalendarDate(LocalDate.now());","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"    public Planner() {","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"     * Creates an Planner using the Tasks in the {@code toBeCopied}","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"    public Planner(ReadOnlyPlanner toBeCopied) {","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"     * Replaces the contents of the tag list with {@code tags}.","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"     * {@code tags} must not contain duplicate tags.","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"LimJunxue"},"content":"    public void setTags(List\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"LimJunxue"},"content":"        this.tags.setTags(tags);","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"     * Replaces the given set of tags {@code target} in the list with {@code editedTags}.","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"LimJunxue"},"content":"     * {@code target} must exist in the planner.","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"LimJunxue"},"content":"     * The tag identities of {@code editedTags} must not be the same as other existing tags in the planner.","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"    public void setTags(Set\u003cTag\u003e target, Set\u003cTag\u003e editedTag) {","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(editedTag);","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"LimJunxue"},"content":"        tags.setTags(target, editedTag);","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"LimJunxue"},"content":"     * Replaces the contents of the UniqueTagList object with the one provided.","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"LimJunxue"},"content":"     * {@code tags} must not contain duplicate tags.","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"LimJunxue"},"content":"    public void setTags(UniqueTagList utl) {","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"LimJunxue"},"content":"        this.tags.setTags(utl);","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"LimJunxue"},"content":"     * Resets the existing data of this {@code Planner} with {@code newData}.","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"LimJunxue"},"content":"    public void resetData(ReadOnlyPlanner newData) {","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"LimJunxue"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2021-03-02"},{"lineNumber":97,"author":{"gitId":"LimJunxue"},"content":"        setTags(newData.getUniqueTagListObject());","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"LimJunxue"},"content":"    //// task-level operations","lastModifiedDate":"2021-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"LimJunxue"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the planner.","lastModifiedDate":"2021-03-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"LimJunxue"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2021-03-02"},{"lineNumber":106,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-03-02"},{"lineNumber":107,"author":{"gitId":"LimJunxue"},"content":"        return tasks.contains(task);","lastModifiedDate":"2021-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":111,"author":{"gitId":"mesyeux"},"content":"     * Returns true if the deadline of a task is already over.","lastModifiedDate":"2021-03-22"},{"lineNumber":112,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":113,"author":{"gitId":"mesyeux"},"content":"    public boolean dateOver(Task task) {","lastModifiedDate":"2021-03-22"},{"lineNumber":114,"author":{"gitId":"mesyeux"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"maxxng"},"content":"        return new AttributeManager(task).dateOver();","lastModifiedDate":"2021-04-04"},{"lineNumber":116,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"LimJunxue"},"content":"     * Adds a task to the planner.","lastModifiedDate":"2021-03-09"},{"lineNumber":120,"author":{"gitId":"LimJunxue"},"content":"     * The task must not already exist in the planner.","lastModifiedDate":"2021-03-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"LimJunxue"},"content":"    public void addTask(Task p) {","lastModifiedDate":"2021-03-02"},{"lineNumber":123,"author":{"gitId":"LimJunxue"},"content":"        tasks.add(p);","lastModifiedDate":"2021-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"LimJunxue"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2021-03-02"},{"lineNumber":128,"author":{"gitId":"LimJunxue"},"content":"     * {@code target} must exist in the planner.","lastModifiedDate":"2021-03-09"},{"lineNumber":129,"author":{"gitId":"LimJunxue"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the planner.","lastModifiedDate":"2021-03-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"LimJunxue"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-03-02"},{"lineNumber":132,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"LimJunxue"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"habi39"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"LimJunxue"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"LimJunxue"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"habi39"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"habi39"},"content":"    public void setTask(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"habi39"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"LimJunxue"},"content":"     * Removes {@code key} from this {@code Planner}.","lastModifiedDate":"2021-03-09"},{"lineNumber":147,"author":{"gitId":"LimJunxue"},"content":"     * {@code key} must exist in the planner.","lastModifiedDate":"2021-03-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"LimJunxue"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2021-03-02"},{"lineNumber":150,"author":{"gitId":"LimJunxue"},"content":"        tasks.remove(key);","lastModifiedDate":"2021-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":154,"author":{"gitId":"mesyeux"},"content":"     * Returns number of days left until the deadline of {@code Task}.","lastModifiedDate":"2021-03-22"},{"lineNumber":155,"author":{"gitId":"mesyeux"},"content":"     * Task must already exist in the planner.","lastModifiedDate":"2021-03-22"},{"lineNumber":156,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":157,"author":{"gitId":"mesyeux"},"content":"     * @return a {code String} representing the number of days left until the deadline of the task.","lastModifiedDate":"2021-03-22"},{"lineNumber":158,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":159,"author":{"gitId":"mesyeux"},"content":"    public String countdown(Task task) {","lastModifiedDate":"2021-03-22"},{"lineNumber":160,"author":{"gitId":"mesyeux"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-03-22"},{"lineNumber":161,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":162,"author":{"gitId":"mesyeux"},"content":"        long numberOfDaysLeft \u003d tasks.countdown(task);","lastModifiedDate":"2021-03-22"},{"lineNumber":163,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":164,"author":{"gitId":"mesyeux"},"content":"        return Long.toString(numberOfDaysLeft);","lastModifiedDate":"2021-03-22"},{"lineNumber":165,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":166,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":167,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"mesyeux"},"content":"     * Returns true if the planner has no tasks.","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"mesyeux"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"mesyeux"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2021-03-29"},{"lineNumber":172,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":173,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":174,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":175,"author":{"gitId":"mesyeux"},"content":"     * Returns the number of tasks in the planner.","lastModifiedDate":"2021-03-29"},{"lineNumber":176,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":177,"author":{"gitId":"mesyeux"},"content":"    public int size() {","lastModifiedDate":"2021-03-29"},{"lineNumber":178,"author":{"gitId":"mesyeux"},"content":"        return tasks.size();","lastModifiedDate":"2021-03-29"},{"lineNumber":179,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":181,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":182,"author":{"gitId":"mesyeux"},"content":"     * Returns the percentage of tasks done.","lastModifiedDate":"2021-03-29"},{"lineNumber":183,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"mesyeux"},"content":"    public double getPercentage() {","lastModifiedDate":"2021-03-29"},{"lineNumber":185,"author":{"gitId":"mesyeux"},"content":"        return tasks.getPercentage();","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":189,"author":{"gitId":"mesyeux"},"content":"     * Returns the number of tasks due in the next 7 days.","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"mesyeux"},"content":"    public int getNumberDue() {","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"mesyeux"},"content":"        return tasks.getNumberDue();","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"LimJunxue"},"content":"    //// tag-level operations","lastModifiedDate":"2021-03-24"},{"lineNumber":196,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":198,"author":{"gitId":"LimJunxue"},"content":"     * Returns true if a tag with the same identity as {@code tag} exists in the planner.","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":200,"author":{"gitId":"LimJunxue"},"content":"    public boolean hasTag(Tag tag) {","lastModifiedDate":"2021-03-24"},{"lineNumber":201,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(tag);","lastModifiedDate":"2021-03-24"},{"lineNumber":202,"author":{"gitId":"LimJunxue"},"content":"        return tags.contains(tag);","lastModifiedDate":"2021-03-24"},{"lineNumber":203,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":204,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":205,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":206,"author":{"gitId":"LimJunxue"},"content":"     * Adds a tag to the planner.","lastModifiedDate":"2021-03-24"},{"lineNumber":207,"author":{"gitId":"LimJunxue"},"content":"     * The tag may already exist in the planner. Responsibility is with UniqueTagList to check for the tag\u0027s uniqueness.","lastModifiedDate":"2021-03-24"},{"lineNumber":208,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":209,"author":{"gitId":"LimJunxue"},"content":"    public void addTag(Tag p) {","lastModifiedDate":"2021-03-24"},{"lineNumber":210,"author":{"gitId":"LimJunxue"},"content":"        tags.add(p);","lastModifiedDate":"2021-03-24"},{"lineNumber":211,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":212,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":213,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":214,"author":{"gitId":"LimJunxue"},"content":"     * Adds tags that are not in the planner from the set of tags and returns a set containing those originally in the","lastModifiedDate":"2021-03-24"},{"lineNumber":215,"author":{"gitId":"LimJunxue"},"content":"     * planner and new tags that are now added.","lastModifiedDate":"2021-03-24"},{"lineNumber":216,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":217,"author":{"gitId":"LimJunxue"},"content":"    public Set\u003cTag\u003e addTagsIfAbsent(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-24"},{"lineNumber":218,"author":{"gitId":"LimJunxue"},"content":"        Set\u003cTag\u003e uniqueTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":219,"author":{"gitId":"LimJunxue"},"content":"        tags.forEach(tag -\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":220,"author":{"gitId":"LimJunxue"},"content":"            if (hasTag(tag)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":221,"author":{"gitId":"LimJunxue"},"content":"                uniqueTags.add(getTag(tag));","lastModifiedDate":"2021-03-24"},{"lineNumber":222,"author":{"gitId":"LimJunxue"},"content":"            } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":223,"author":{"gitId":"LimJunxue"},"content":"                uniqueTags.add(tag);","lastModifiedDate":"2021-03-24"},{"lineNumber":224,"author":{"gitId":"LimJunxue"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":225,"author":{"gitId":"LimJunxue"},"content":"            addTag(tag);","lastModifiedDate":"2021-03-24"},{"lineNumber":226,"author":{"gitId":"LimJunxue"},"content":"        });","lastModifiedDate":"2021-03-24"},{"lineNumber":227,"author":{"gitId":"LimJunxue"},"content":"        return uniqueTags;","lastModifiedDate":"2021-03-24"},{"lineNumber":228,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":229,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":230,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":231,"author":{"gitId":"LimJunxue"},"content":"     * Gets a tag from the planner.","lastModifiedDate":"2021-03-24"},{"lineNumber":232,"author":{"gitId":"LimJunxue"},"content":"     * The tag must already exist in the planner.","lastModifiedDate":"2021-03-24"},{"lineNumber":233,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":234,"author":{"gitId":"LimJunxue"},"content":"    public Tag getTag(Tag p) {","lastModifiedDate":"2021-03-24"},{"lineNumber":235,"author":{"gitId":"LimJunxue"},"content":"        return tags.get(p);","lastModifiedDate":"2021-03-24"},{"lineNumber":236,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":237,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":238,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":239,"author":{"gitId":"LimJunxue"},"content":"     * Calls the UniqueTaskList to remove {@code key} from this {@code Planner}. Might not remove if there are other","lastModifiedDate":"2021-03-24"},{"lineNumber":240,"author":{"gitId":"LimJunxue"},"content":"     * tasks with this tag.","lastModifiedDate":"2021-03-24"},{"lineNumber":241,"author":{"gitId":"LimJunxue"},"content":"     * {@code key} must exist in the planner.","lastModifiedDate":"2021-03-24"},{"lineNumber":242,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":243,"author":{"gitId":"LimJunxue"},"content":"    public void removeTag(Tag key) {","lastModifiedDate":"2021-03-24"},{"lineNumber":244,"author":{"gitId":"LimJunxue"},"content":"        tags.remove(key);","lastModifiedDate":"2021-03-24"},{"lineNumber":245,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":246,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":247,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":248,"author":{"gitId":"LimJunxue"},"content":"     * Returns the comparator that specifies how Tags are being sorted in the TagList.","lastModifiedDate":"2021-03-24"},{"lineNumber":249,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":250,"author":{"gitId":"LimJunxue"},"content":"     * @return Comparator that is used to sort the Tags.","lastModifiedDate":"2021-03-24"},{"lineNumber":251,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":252,"author":{"gitId":"LimJunxue"},"content":"    public Comparator\u003cTag\u003e getTagComparator() {","lastModifiedDate":"2021-03-24"},{"lineNumber":253,"author":{"gitId":"LimJunxue"},"content":"        return tags.getTagComparator();","lastModifiedDate":"2021-03-24"},{"lineNumber":254,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":255,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":256,"author":{"gitId":"LimJunxue"},"content":"    //// viewing date operations","lastModifiedDate":"2021-03-29"},{"lineNumber":257,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":258,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":259,"author":{"gitId":"LimJunxue"},"content":"     * Returns the ObservableCalendarDate tagged to this planner.","lastModifiedDate":"2021-03-29"},{"lineNumber":260,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":261,"author":{"gitId":"LimJunxue"},"content":"     * @return The ObservableCalendarDate object that cannot be modified","lastModifiedDate":"2021-03-29"},{"lineNumber":262,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":263,"author":{"gitId":"LimJunxue"},"content":"    public ObservableCalendarDate getCalendarDate() {","lastModifiedDate":"2021-03-29"},{"lineNumber":264,"author":{"gitId":"LimJunxue"},"content":"        return calendarDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":265,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":266,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":267,"author":{"gitId":"LimJunxue"},"content":"    public void setCalendarDate(LocalDate date) {","lastModifiedDate":"2021-03-29"},{"lineNumber":268,"author":{"gitId":"LimJunxue"},"content":"        calendarDate.set(date);","lastModifiedDate":"2021-03-29"},{"lineNumber":269,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":270,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":271,"author":{"gitId":"LimJunxue"},"content":"    public void resetCalendarDate() {","lastModifiedDate":"2021-03-29"},{"lineNumber":272,"author":{"gitId":"LimJunxue"},"content":"        calendarDate.reset();","lastModifiedDate":"2021-03-29"},{"lineNumber":273,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":274,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"LimJunxue"},"content":"        return tasks.asUnmodifiableObservableList().size() + \" tasks; \"","lastModifiedDate":"2021-03-24"},{"lineNumber":280,"author":{"gitId":"LimJunxue"},"content":"                + tags.asUnmodifiableObservableList().size() + \" tags;\";","lastModifiedDate":"2021-03-24"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"LimJunxue"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-03-02"},{"lineNumber":285,"author":{"gitId":"LimJunxue"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":288,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":289,"author":{"gitId":"LimJunxue"},"content":"    public ObservableList\u003cTag\u003e getTagList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":290,"author":{"gitId":"LimJunxue"},"content":"        return tags.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-24"},{"lineNumber":291,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":292,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":293,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":294,"author":{"gitId":"LimJunxue"},"content":"    public UniqueTagList getUniqueTagListObject() {","lastModifiedDate":"2021-03-24"},{"lineNumber":295,"author":{"gitId":"LimJunxue"},"content":"        return tags;","lastModifiedDate":"2021-03-24"},{"lineNumber":296,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":297,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":301,"author":{"gitId":"LimJunxue"},"content":"                || (other instanceof Planner // instanceof handles nulls","lastModifiedDate":"2021-03-09"},{"lineNumber":302,"author":{"gitId":"LimJunxue"},"content":"                \u0026\u0026 tasks.equals(((Planner) other).tasks)","lastModifiedDate":"2021-03-24"},{"lineNumber":303,"author":{"gitId":"LimJunxue"},"content":"                \u0026\u0026 tags.equals(((Planner) other).tags));","lastModifiedDate":"2021-03-24"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":308,"author":{"gitId":"LimJunxue"},"content":"        return Objects.hash(tasks, tags);","lastModifiedDate":"2021-03-24"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimJunxue":176,"maxxng":2,"mesyeux":48,"habi39":6,"-":78}},{"path":"src/main/java/seedu/address/model/ReadOnlyPlanner.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.tag.UniqueTagList;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":" * Unmodifiable view of an planner","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"public interface ReadOnlyPlanner {","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"     * Returns an unmodifiable view of the tasks list.","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"     * Returns an unmodifiable view of the tags list.","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"     * This list will not contain any duplicate tags.","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"    ObservableList\u003cTag\u003e getTagList();","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"     * Returns the UniqueTagList object so that the internal list and map of counts can be copied.","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"     * This list will not contain any duplicate tags.","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"    UniqueTagList getUniqueTagListObject();","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimJunxue":19,"-":11}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"    Path getPlannerFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"LimJunxue":1,"-":15}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"    private Path plannerFilePath \u003d Paths.get(\"data\" , \"planit.json\");","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"        setPlannerFilePath(newUserPrefs.getPlannerFilePath());","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"    public Path getPlannerFilePath() {","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"        return plannerFilePath;","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"    public void setPlannerFilePath(Path plannerFilePath) {","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(plannerFilePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"        this.plannerFilePath \u003d plannerFilePath;","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"                \u0026\u0026 plannerFilePath.equals(o.plannerFilePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"        return Objects.hash(guiSettings, plannerFilePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"LimJunxue"},"content":"        sb.append(\"\\nLocal data file location : \" + plannerFilePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimJunxue":10,"-":77}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":" * Represents a Tag in the planner.","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"public class Tag implements Comparable\u003cTag\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"    public static final String FIELD_NAME \u003d \"Tag\";","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"    public int compareTo(Tag o) {","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"        return this.tagName.compareTo(o.tagName);","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimJunxue":7,"-":52}},{"path":"src/main/java/seedu/address/model/tag/UniqueTagList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"import java.util.List;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"import java.util.Map;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.tag.exceptions.DuplicateTagException;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.tag.exceptions.TagNotFoundException;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":" * A list of tags that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":" * A tag is considered unique by comparing using {@code Tag#equals(Object)}. As such, adding and updating of","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":" * tag uses Tag#equals(Object) for equality so as to ensure that the tag being added or updated is","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":" * unique in terms of identity in the UniqueTagList. Also will be sorted in natural sort order.","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":" *","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":" * @see Tag#equals(Object)","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"public class UniqueTagList implements Iterable\u003cTag\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UniqueTagList.class);","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"    private final ObservableList\u003cTag\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"    private final ObservableList\u003cTag\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"    private final Map\u003cTag, Integer\u003e mapOfTagCount \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"     * Returns true if the list contains an equivalent tag as the given argument.","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"     * @param toCheck Tag to check.","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"     * @return Boolean indicating whether the list contains the tag.","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"    public boolean contains(Tag toCheck) {","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"     * Adds a tag to the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"     * Checks if the tag is already in the list and add to map that counts the tags.","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"     * @param toAdd Tag to add.","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"    public void add(Tag toAdd) {","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"        if (!contains(toAdd)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"            internalList.add(toAdd);","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"        mapOfTagCount.merge(toAdd, 1, Integer::sum);","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"     * Gets a tag from the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"     * The tag must already exist in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"LimJunxue"},"content":"     * @param toGet Tag to find.","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"LimJunxue"},"content":"     * @return Tag to return.","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"LimJunxue"},"content":"    public Tag get(Tag toGet) {","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(toGet);","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"        if (!contains(toGet)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"LimJunxue"},"content":"            throw new TagNotFoundException();","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"LimJunxue"},"content":"        return internalList.get(internalList.indexOf(toGet));","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"LimJunxue"},"content":"     * Checks if there are tasks with the tag and removes the equivalent tag from the list if there are no more tasks","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"     * with this tag.","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"LimJunxue"},"content":"     * The tag must exist in the list. Map that counts tags is updated.","lastModifiedDate":"2021-04-07"},{"lineNumber":82,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"LimJunxue"},"content":"     * @param toRemove Tag to remove.","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"LimJunxue"},"content":"    public void remove(Tag toRemove) {","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"LimJunxue"},"content":"        Integer countOfTag \u003d mapOfTagCount.get(toRemove);","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"LimJunxue"},"content":"        if (countOfTag \u003d\u003d null) {","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"LimJunxue"},"content":"            throw new TagNotFoundException();","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"LimJunxue"},"content":"        } else if (countOfTag \u003d\u003d 1) {","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"LimJunxue"},"content":"            if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"LimJunxue"},"content":"                throw new TagNotFoundException();","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"LimJunxue"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"LimJunxue"},"content":"            mapOfTagCount.remove(toRemove);","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"LimJunxue"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"LimJunxue"},"content":"            mapOfTagCount.put(toRemove, countOfTag - 1);","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"LimJunxue"},"content":"     * Sets the tags from the provided replacement into this list, and record the tag counts in the map.","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"LimJunxue"},"content":"     * @param replacement UniqueTagList that is used to replace the data in this list.","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"LimJunxue"},"content":"    public void setTags(UniqueTagList replacement) {","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"LimJunxue"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"LimJunxue"},"content":"        mapOfTagCount.clear();","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"LimJunxue"},"content":"        replacement.mapOfTagCount.forEach(mapOfTagCount::put);","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"LimJunxue"},"content":"     * Replaces the set of tags {@code target} in the list with {@code editedTags}.","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"LimJunxue"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"LimJunxue"},"content":"     * The tag identities of {@code editedTags} must not be the same as other existing tags in the list.","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"LimJunxue"},"content":"     * If any target and editedTag are equal, there will be no change.","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"LimJunxue"},"content":"     * Map that counts tags is updated.","lastModifiedDate":"2021-04-07"},{"lineNumber":119,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"LimJunxue"},"content":"     * @param target    Set of Tags to be replaced.","lastModifiedDate":"2021-03-24"},{"lineNumber":121,"author":{"gitId":"LimJunxue"},"content":"     * @param editedTag Set of Tags to replace.","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"LimJunxue"},"content":"    public void setTags(Set\u003cTag\u003e target, Set\u003cTag\u003e editedTag) {","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"LimJunxue"},"content":"        requireAllNonNull(target, editedTag);","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"LimJunxue"},"content":"        for (Tag oldTag : target) {","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"LimJunxue"},"content":"            int index \u003d internalList.indexOf(oldTag);","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"LimJunxue"},"content":"            if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"LimJunxue"},"content":"                throw new TagNotFoundException();","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"LimJunxue"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"LimJunxue"},"content":"            remove(oldTag);","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"LimJunxue"},"content":"        for (Tag newTag : editedTag) {","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"LimJunxue"},"content":"            add(newTag);","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"LimJunxue"},"content":"     * Replaces the contents of this list with {@code tags}.","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"LimJunxue"},"content":"     * {@code tags} must not contain duplicate tags.","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"LimJunxue"},"content":"     * Map that counts tags is not updated.","lastModifiedDate":"2021-04-07"},{"lineNumber":143,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"LimJunxue"},"content":"     * @param tags List of tags that is to be set in this internal list.","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"LimJunxue"},"content":"    public void setTags(List\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"LimJunxue"},"content":"        requireAllNonNull(tags);","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"LimJunxue"},"content":"        if (!tagsAreUnique(tags)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"LimJunxue"},"content":"            throw new DuplicateTagException();","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"LimJunxue"},"content":"        internalList.setAll(tags);","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"LimJunxue"},"content":"        //logger.info(\"Tag Count: \" + mapOfTagCount);","lastModifiedDate":"2021-04-07"},{"lineNumber":155,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":156,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":157,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"LimJunxue"},"content":"     * Provides the comparator which Tags in this list are being sorted with.","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"LimJunxue"},"content":"     * @return Comparator that is used to sort the Tags.","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"LimJunxue"},"content":"    public Comparator\u003cTag\u003e getTagComparator() {","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"LimJunxue"},"content":"        return Comparator.naturalOrder();","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":166,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":167,"author":{"gitId":"LimJunxue"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-24"},{"lineNumber":168,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":169,"author":{"gitId":"LimJunxue"},"content":"    public ObservableList\u003cTag\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":170,"author":{"gitId":"LimJunxue"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":172,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":173,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"LimJunxue"},"content":"    public Iterator\u003cTag\u003e iterator() {","lastModifiedDate":"2021-03-24"},{"lineNumber":175,"author":{"gitId":"LimJunxue"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"LimJunxue"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"LimJunxue"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"LimJunxue"},"content":"                || (other instanceof UniqueTagList // instanceof handles nulls","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"LimJunxue"},"content":"                \u0026\u0026 internalList.equals(((UniqueTagList) other).internalList));","lastModifiedDate":"2021-03-24"},{"lineNumber":183,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":184,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"LimJunxue"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-24"},{"lineNumber":187,"author":{"gitId":"LimJunxue"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":189,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":191,"author":{"gitId":"LimJunxue"},"content":"     * Returns true if {@code tags} contains only unique tags.","lastModifiedDate":"2021-03-24"},{"lineNumber":192,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":193,"author":{"gitId":"LimJunxue"},"content":"     * @param tags List of tags to check if all are unique.","lastModifiedDate":"2021-03-24"},{"lineNumber":194,"author":{"gitId":"LimJunxue"},"content":"     * @return Boolean indicating if the list of tags are unique.","lastModifiedDate":"2021-03-24"},{"lineNumber":195,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":196,"author":{"gitId":"LimJunxue"},"content":"    private boolean tagsAreUnique(List\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"LimJunxue"},"content":"        for (int i \u003d 0; i \u003c tags.size() - 1; i++) {","lastModifiedDate":"2021-03-24"},{"lineNumber":198,"author":{"gitId":"LimJunxue"},"content":"            for (int j \u003d i + 1; j \u003c tags.size(); j++) {","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"LimJunxue"},"content":"                if (tags.get(i).equals(tags.get(j))) {","lastModifiedDate":"2021-03-24"},{"lineNumber":200,"author":{"gitId":"LimJunxue"},"content":"                    return false;","lastModifiedDate":"2021-03-24"},{"lineNumber":201,"author":{"gitId":"LimJunxue"},"content":"                }","lastModifiedDate":"2021-03-24"},{"lineNumber":202,"author":{"gitId":"LimJunxue"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":203,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":204,"author":{"gitId":"LimJunxue"},"content":"        return true;","lastModifiedDate":"2021-03-24"},{"lineNumber":205,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":206,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":207,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"LimJunxue":207}},{"path":"src/main/java/seedu/address/model/tag/exceptions/DuplicateTagException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.model.tag.exceptions;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":" * Signals that the operation will result in duplicate Tags (Tags are considered duplicates if they have the same","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":" * identity).","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"public class DuplicateTagException extends RuntimeException {","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"    public DuplicateTagException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"        super(\"Operation would result in duplicate tags\");","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"LimJunxue":11}},{"path":"src/main/java/seedu/address/model/tag/exceptions/TagNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.model.tag.exceptions;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":" * Signals that the operation is unable to find the specified tag.","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"public class TagNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"LimJunxue":6}},{"path":"src/main/java/seedu/address/model/task/AttributeManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maxxng"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":3,"author":{"gitId":"maxxng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-04-04"},{"lineNumber":4,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":5,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Description;","lastModifiedDate":"2021-04-04"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Duration;","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.RecurringSchedule;","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Status;","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Title;","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"public class AttributeManager {","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":"    private final Task task;","lastModifiedDate":"2021-04-04"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"    private final Date date;","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"    private final Description description;","lastModifiedDate":"2021-04-04"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"    private final Duration duration;","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"    private final RecurringSchedule recurringSchedule;","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"maxxng"},"content":"    private final Status status;","lastModifiedDate":"2021-04-04"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"    private final Title title;","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"maxxng"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"maxxng"},"content":"     * AttributeManager provides access to the Task\u0027s attributes functionalities.","lastModifiedDate":"2021-04-04"},{"lineNumber":23,"author":{"gitId":"maxxng"},"content":"     *","lastModifiedDate":"2021-04-04"},{"lineNumber":24,"author":{"gitId":"maxxng"},"content":"     * @param task The task\u0027s attribute we are interested to access.","lastModifiedDate":"2021-04-04"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":26,"author":{"gitId":"maxxng"},"content":"    public AttributeManager(Task task) {","lastModifiedDate":"2021-04-04"},{"lineNumber":27,"author":{"gitId":"maxxng"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-04-04"},{"lineNumber":28,"author":{"gitId":"maxxng"},"content":"        this.date \u003d task.getDate();","lastModifiedDate":"2021-04-04"},{"lineNumber":29,"author":{"gitId":"maxxng"},"content":"        this.description \u003d task.getDescription();","lastModifiedDate":"2021-04-04"},{"lineNumber":30,"author":{"gitId":"maxxng"},"content":"        this.duration \u003d task.getDuration();","lastModifiedDate":"2021-04-04"},{"lineNumber":31,"author":{"gitId":"maxxng"},"content":"        this.recurringSchedule \u003d task.getRecurringSchedule();","lastModifiedDate":"2021-04-04"},{"lineNumber":32,"author":{"gitId":"maxxng"},"content":"        this.status \u003d task.getStatus();","lastModifiedDate":"2021-04-04"},{"lineNumber":33,"author":{"gitId":"maxxng"},"content":"        this.title \u003d task.getTitle();","lastModifiedDate":"2021-04-04"},{"lineNumber":34,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":35,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":36,"author":{"gitId":"maxxng"},"content":"    public boolean dateOver() {","lastModifiedDate":"2021-04-04"},{"lineNumber":37,"author":{"gitId":"maxxng"},"content":"        return date.over();","lastModifiedDate":"2021-04-04"},{"lineNumber":38,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":39,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":40,"author":{"gitId":"maxxng"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":41,"author":{"gitId":"maxxng"},"content":"     * Checks if the Recurring schedule end date given by the user has expired.","lastModifiedDate":"2021-04-04"},{"lineNumber":42,"author":{"gitId":"maxxng"},"content":"     *","lastModifiedDate":"2021-04-04"},{"lineNumber":43,"author":{"gitId":"kaixiangtay"},"content":"     * @return Boolean indicating if the end date is before the current system date.","lastModifiedDate":"2021-04-06"},{"lineNumber":44,"author":{"gitId":"maxxng"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":45,"author":{"gitId":"maxxng"},"content":"    public boolean hasExpired() {","lastModifiedDate":"2021-04-04"},{"lineNumber":46,"author":{"gitId":"maxxng"},"content":"        return recurringSchedule.isExpired();","lastModifiedDate":"2021-04-04"},{"lineNumber":47,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":48,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":49,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-04-06"},{"lineNumber":50,"author":{"gitId":"kaixiangtay"},"content":"     * Checks if the Recurring schedule end date is valid considering leap years and months of 30, 31 as well","lastModifiedDate":"2021-04-06"},{"lineNumber":51,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-04-06"},{"lineNumber":52,"author":{"gitId":"kaixiangtay"},"content":"     * @return Boolean if the end date in Recurring Schedule is valid","lastModifiedDate":"2021-04-06"},{"lineNumber":53,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-04-06"},{"lineNumber":54,"author":{"gitId":"maxxng"},"content":"    public boolean hasInvalidDateRange() {","lastModifiedDate":"2021-04-04"},{"lineNumber":55,"author":{"gitId":"maxxng"},"content":"        return recurringSchedule.isInvalidDateRange();","lastModifiedDate":"2021-04-04"},{"lineNumber":56,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":57,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":58,"author":{"gitId":"maxxng"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":59,"author":{"gitId":"maxxng"},"content":"     * Checks if the provided date has the same date as this task\u0027s date.","lastModifiedDate":"2021-04-04"},{"lineNumber":60,"author":{"gitId":"maxxng"},"content":"     *","lastModifiedDate":"2021-04-04"},{"lineNumber":61,"author":{"gitId":"maxxng"},"content":"     * @param date Date to check this task\u0027s date with.","lastModifiedDate":"2021-04-04"},{"lineNumber":62,"author":{"gitId":"maxxng"},"content":"     * @return Boolean indicating whether the provided date is on the same day as this task\u0027s date.","lastModifiedDate":"2021-04-04"},{"lineNumber":63,"author":{"gitId":"maxxng"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":64,"author":{"gitId":"maxxng"},"content":"    public boolean hasSameDate(Date date) {","lastModifiedDate":"2021-04-04"},{"lineNumber":65,"author":{"gitId":"maxxng"},"content":"        return this.date.value !\u003d null \u0026\u0026 this.date.equals(date);","lastModifiedDate":"2021-04-04"},{"lineNumber":66,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":67,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":68,"author":{"gitId":"maxxng"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":69,"author":{"gitId":"maxxng"},"content":"     * Checks if the provided date string is in the schedule of this task\u0027s recurring schedule.","lastModifiedDate":"2021-04-04"},{"lineNumber":70,"author":{"gitId":"maxxng"},"content":"     * Will return false if there is no dates in the schedule.","lastModifiedDate":"2021-04-04"},{"lineNumber":71,"author":{"gitId":"maxxng"},"content":"     *","lastModifiedDate":"2021-04-04"},{"lineNumber":72,"author":{"gitId":"maxxng"},"content":"     * @param dateString Date in string format, to check if it is in this task\u0027s schedule.","lastModifiedDate":"2021-04-04"},{"lineNumber":73,"author":{"gitId":"maxxng"},"content":"     * @return Boolean indicating if the provided date is in the schedule.","lastModifiedDate":"2021-04-04"},{"lineNumber":74,"author":{"gitId":"maxxng"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":75,"author":{"gitId":"maxxng"},"content":"    public boolean isOnRecurringScheduleDate(String dateString) {","lastModifiedDate":"2021-04-04"},{"lineNumber":76,"author":{"gitId":"maxxng"},"content":"        return this.recurringSchedule.isInRecurringSchedule(dateString);","lastModifiedDate":"2021-04-04"},{"lineNumber":77,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":78,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":79,"author":{"gitId":"maxxng"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":80,"author":{"gitId":"maxxng"},"content":"     * Checks if the Date attribute contains any data.","lastModifiedDate":"2021-04-04"},{"lineNumber":81,"author":{"gitId":"maxxng"},"content":"     *","lastModifiedDate":"2021-04-04"},{"lineNumber":82,"author":{"gitId":"maxxng"},"content":"     * @return true if the String of Date isEmpty, false otherwise.","lastModifiedDate":"2021-04-04"},{"lineNumber":83,"author":{"gitId":"maxxng"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":84,"author":{"gitId":"maxxng"},"content":"    public boolean isEmptyDate() {","lastModifiedDate":"2021-04-04"},{"lineNumber":85,"author":{"gitId":"maxxng"},"content":"        return date.isEmptyValue();","lastModifiedDate":"2021-04-04"},{"lineNumber":86,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":87,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":88,"author":{"gitId":"maxxng"},"content":"    /**","lastModifiedDate":"2021-04-04"},{"lineNumber":89,"author":{"gitId":"maxxng"},"content":"     * Returns true if this task is already done.","lastModifiedDate":"2021-04-04"},{"lineNumber":90,"author":{"gitId":"maxxng"},"content":"     */","lastModifiedDate":"2021-04-04"},{"lineNumber":91,"author":{"gitId":"maxxng"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-04-04"},{"lineNumber":92,"author":{"gitId":"maxxng"},"content":"        return status.isDone();","lastModifiedDate":"2021-04-04"},{"lineNumber":93,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":94,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":95,"author":{"gitId":"maxxng"},"content":"    public boolean isWithinSevenDays(LocalDate currentDate) {","lastModifiedDate":"2021-04-04"},{"lineNumber":96,"author":{"gitId":"maxxng"},"content":"        return date.isWithinSevenDays(currentDate);","lastModifiedDate":"2021-04-04"},{"lineNumber":97,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":98,"author":{"gitId":"maxxng"},"content":"}","lastModifiedDate":"2021-04-04"}],"authorContributionMap":{"maxxng":92,"kaixiangtay":6}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Description;","lastModifiedDate":"2021-04-04"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Duration;","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.RecurringSchedule;","lastModifiedDate":"2021-04-04"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Status;","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Title;","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":" * Represents a Task in the planner.","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"public class Task {","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"    private final Title title;","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"habi39"},"content":"    private final Date date;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"habi39"},"content":"    private final Duration duration;","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"    private final Description description;","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"kaixiangtay"},"content":"    private final RecurringSchedule recurringSchedule;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"maxxng"},"content":"    private final Status status;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"habi39"},"content":"    public Task(Title title, Date date, Duration duration, RecurringSchedule recurringSchedule,","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"maxxng"},"content":"                Description description, Status status, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"        // All fields are not null even if its value is blank.","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"habi39"},"content":"        requireAllNonNull(title, date, duration, recurringSchedule, description, status, tags);","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"habi39"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"habi39"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"kaixiangtay"},"content":"        this.recurringSchedule \u003d recurringSchedule;","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"maxxng"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"    public Title getTitle() {","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"        return title;","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"habi39"},"content":"    public Date getDate() {","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"habi39"},"content":"        return date;","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"habi39"},"content":"    public Duration getDuration() {","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"habi39"},"content":"        return duration;","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"kaixiangtay"},"content":"    public RecurringSchedule getRecurringSchedule() {","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"kaixiangtay"},"content":"        return recurringSchedule;","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"LimJunxue"},"content":"    public Description getDescription() {","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"        return description;","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":72,"author":{"gitId":"maxxng"},"content":"    public Status getStatus() {","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"maxxng"},"content":"        return status;","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"LimJunxue"},"content":"     * Replaces the task with a new Task with the set of tags provided.","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"LimJunxue"},"content":"    public Task setTags(Set\u003cTag\u003e tagSet) {","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"habi39"},"content":"        return new Task(title, date, duration, recurringSchedule, description, status, tagSet);","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"LimJunxue"},"content":"     * Gets a hashmap of each field name and its string value. Insertion order matters for the","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"LimJunxue"},"content":"     * TaskCardDetails class that invokes this method to dynamically use entries.","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"LimJunxue"},"content":"     * @return Hashmap of field names and their string values.","lastModifiedDate":"2021-03-22"},{"lineNumber":96,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"LimJunxue"},"content":"    public HashMap\u003cString, String\u003e getFields() {","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"LimJunxue"},"content":"        HashMap\u003cString, String\u003e optionalFieldMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"LimJunxue"},"content":"        optionalFieldMap.put(Title.FIELD_NAME, title.toString());","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"habi39"},"content":"        optionalFieldMap.put(Duration.FIELD_NAME, duration.toString());","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"LimJunxue"},"content":"        optionalFieldMap.put(Status.FIELD_NAME, status.toString());","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"habi39"},"content":"        optionalFieldMap.put(Date.FIELD_NAME, date.toString());","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"LimJunxue"},"content":"        optionalFieldMap.put(Description.FIELD_NAME, description.toString());","lastModifiedDate":"2021-03-22"},{"lineNumber":104,"author":{"gitId":"LimJunxue"},"content":"        optionalFieldMap.put(RecurringSchedule.FIELD_NAME, recurringSchedule.toString());","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"LimJunxue"},"content":"        return optionalFieldMap;","lastModifiedDate":"2021-03-22"},{"lineNumber":106,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":107,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"LimJunxue"},"content":"     * Returns true if both tasks have the same title.","lastModifiedDate":"2021-03-03"},{"lineNumber":110,"author":{"gitId":"LimJunxue"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2021-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"LimJunxue"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2021-03-02"},{"lineNumber":113,"author":{"gitId":"LimJunxue"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2021-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"LimJunxue"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2021-03-02"},{"lineNumber":118,"author":{"gitId":"LimJunxue"},"content":"                \u0026\u0026 otherTask.getTitle().equals(getTitle());","lastModifiedDate":"2021-03-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"LimJunxue"},"content":"     * Returns true if both tasks have the same identity and data fields.","lastModifiedDate":"2021-03-02"},{"lineNumber":123,"author":{"gitId":"LimJunxue"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2021-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"LimJunxue"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"LimJunxue"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2021-03-02"},{"lineNumber":136,"author":{"gitId":"LimJunxue"},"content":"        return otherTask.getTitle().equals(getTitle())","lastModifiedDate":"2021-03-03"},{"lineNumber":137,"author":{"gitId":"habi39"},"content":"                \u0026\u0026 otherTask.getDate().equals(getDate())","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"habi39"},"content":"                \u0026\u0026 otherTask.getDuration().equals(getDuration())","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"kaixiangtay"},"content":"                \u0026\u0026 otherTask.getRecurringSchedule().equals(getRecurringSchedule())","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"LimJunxue"},"content":"                \u0026\u0026 otherTask.getDescription().equals(getDescription())","lastModifiedDate":"2021-03-11"},{"lineNumber":141,"author":{"gitId":"maxxng"},"content":"                \u0026\u0026 otherTask.getStatus().equals(getStatus())","lastModifiedDate":"2021-03-15"},{"lineNumber":142,"author":{"gitId":"LimJunxue"},"content":"                \u0026\u0026 otherTask.getTags().equals(getTags());","lastModifiedDate":"2021-03-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"habi39"},"content":"        return Objects.hash(title, date, duration, recurringSchedule, description, status, tags);","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"maxxng"},"content":"        builder.append(getTitle()).append(\"; \\n\");","lastModifiedDate":"2021-04-04"},{"lineNumber":155,"author":{"gitId":"maxxng"},"content":"        if (!date.isEmptyValue()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":156,"author":{"gitId":"maxxng"},"content":"            builder.append(Date.FIELD_NAME).append(\": \").append(getDate()).append(\"; \\n\");","lastModifiedDate":"2021-04-04"},{"lineNumber":157,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":158,"author":{"gitId":"maxxng"},"content":"        if (!duration.isEmptyValue()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":159,"author":{"gitId":"maxxng"},"content":"            builder.append(Duration.FIELD_NAME).append(\": \").append(getDuration()).append(\"; \\n\");","lastModifiedDate":"2021-04-04"},{"lineNumber":160,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":161,"author":{"gitId":"maxxng"},"content":"        if (!recurringSchedule.isEmptyValue()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":162,"author":{"gitId":"maxxng"},"content":"            builder.append(RecurringSchedule.FIELD_NAME).append(\": \").append(getRecurringSchedule()).append(\"; \\n\");","lastModifiedDate":"2021-04-04"},{"lineNumber":163,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":164,"author":{"gitId":"maxxng"},"content":"        if (!description.isEmptyValue()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":165,"author":{"gitId":"maxxng"},"content":"            builder.append(Description.FIELD_NAME).append(\": \").append(getDescription()).append(\"; \\n\");","lastModifiedDate":"2021-04-04"},{"lineNumber":166,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":167,"author":{"gitId":"maxxng"},"content":"        if (!status.isEmptyValue()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":168,"author":{"gitId":"maxxng"},"content":"            builder.append(Status.FIELD_NAME).append(\": \").append(getStatus()).append(\"; \\n\");","lastModifiedDate":"2021-04-04"},{"lineNumber":169,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-04-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":173,"author":{"gitId":"LimJunxue"},"content":"            builder.append(\"; \\n\").append(Tag.FIELD_NAME).append(\"s: \");","lastModifiedDate":"2021-03-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimJunxue":50,"maxxng":30,"mesyeux":1,"kaixiangtay":5,"habi39":18,"-":74}},{"path":"src/main/java/seedu/address/model/task/TaskComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"habi39"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"habi39"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"habi39"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"habi39"},"content":" * Abstract class which is used to compare meetings based on meeting meetingDate.","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"habi39"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"habi39"},"content":"public abstract class TaskComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"habi39"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"habi39":9}},{"path":"src/main/java/seedu/address/model/task/TaskDateComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"habi39"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"habi39"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"habi39"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"habi39"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"habi39"},"content":" * Compares meetings based on meetingDate and sorts them chronologically.","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"habi39"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"habi39"},"content":"public class TaskDateComparator extends TaskComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"habi39"},"content":"    public static final String SORT_CRITERIA \u003d \"Date\";","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"habi39"},"content":"    public static final String MESSAGE_INVALID_TIME \u003d \"Date is not in valid format.\";","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"habi39"},"content":"    @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"habi39"},"content":"    public int compare(Task task1, Task task2) {","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"habi39"},"content":"        assert task1 !\u003d null;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"habi39"},"content":"        assert task2 !\u003d null;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"habi39"},"content":"        LocalDate date1 \u003d task1.getDate().getDate();","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"habi39"},"content":"        LocalDate date2 \u003d task2.getDate().getDate();","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"habi39"},"content":"        if (date1 \u003d\u003d null \u0026\u0026 date2 !\u003d null) {","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"habi39"},"content":"            return 1;","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"habi39"},"content":"        } else if (date1 !\u003d null \u0026\u0026 date2 \u003d\u003d null) {","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"habi39"},"content":"            return -1;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"habi39"},"content":"        } else if (date1 \u003d\u003d null \u0026\u0026 date2 \u003d\u003d null) {","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"habi39"},"content":"            return 1;","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"habi39"},"content":"        } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"habi39"},"content":"            return date1.compareTo(date2);","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"habi39"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"habi39"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"habi39":32}},{"path":"src/main/java/seedu/address/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"import java.util.List;","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"/**","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":" * tasks uses Task#isSameTask(Task) for equality so as to ensure that the task being added or updated is","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":" * unique in terms of identity in the UniqueTaskList. However, the removal of a task uses Task#equals(Object) so","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":" * as to ensure that the task with exactly the same fields will be removed.","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":" *","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":" *","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":" */","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"LimJunxue"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"LimJunxue"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"LimJunxue"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"LimJunxue"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":74,"author":{"gitId":"LimJunxue"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":75,"author":{"gitId":"LimJunxue"},"content":"     * The task must exist in the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-02"},{"lineNumber":79,"author":{"gitId":"LimJunxue"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-03-02"},{"lineNumber":81,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":82,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":83,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":84,"author":{"gitId":"LimJunxue"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2021-03-02"},{"lineNumber":85,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-02"},{"lineNumber":86,"author":{"gitId":"LimJunxue"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-02"},{"lineNumber":87,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":88,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":89,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":90,"author":{"gitId":"LimJunxue"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2021-03-02"},{"lineNumber":91,"author":{"gitId":"LimJunxue"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2021-03-02"},{"lineNumber":92,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":93,"author":{"gitId":"LimJunxue"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-02"},{"lineNumber":94,"author":{"gitId":"LimJunxue"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2021-03-02"},{"lineNumber":95,"author":{"gitId":"LimJunxue"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":96,"author":{"gitId":"LimJunxue"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-03-02"},{"lineNumber":97,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":99,"author":{"gitId":"LimJunxue"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2021-03-02"},{"lineNumber":100,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":101,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":102,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"habi39"},"content":"     * Returns the number of days from the current time to the date of the specified task.","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"mesyeux"},"content":"     * The task must already exist in the list.","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":106,"author":{"gitId":"mesyeux"},"content":"    public int countdown(Task task) {","lastModifiedDate":"2021-03-22"},{"lineNumber":107,"author":{"gitId":"mesyeux"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-03-22"},{"lineNumber":108,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":109,"author":{"gitId":"habi39"},"content":"        LocalDate date \u003d task.getDate().getDate();","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":111,"author":{"gitId":"habi39"},"content":"        long daysLeft \u003d LocalDate.now().until(date, ChronoUnit.DAYS);","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":113,"author":{"gitId":"mesyeux"},"content":"        return (int) daysLeft;","lastModifiedDate":"2021-03-22"},{"lineNumber":114,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":116,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"mesyeux"},"content":"     * Returns true if the task list has no tasks.","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"mesyeux"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"mesyeux"},"content":"        return internalList.isEmpty();","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"mesyeux"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"mesyeux"},"content":"    public int size() {","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"mesyeux"},"content":"        return internalList.size();","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"mesyeux"},"content":"     * Returns a string percentage of tasks done (in percentage form).","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"mesyeux"},"content":"    public double getPercentage() {","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"mesyeux"},"content":"        double totalTasks \u003d size();","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"mesyeux"},"content":"        double totalDone \u003d 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"mesyeux"},"content":"        for (Task t : internalList) {","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":139,"author":{"gitId":"maxxng"},"content":"            if (new AttributeManager(t).isDone()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":140,"author":{"gitId":"mesyeux"},"content":"                totalDone++;","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"mesyeux"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"mesyeux"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"mesyeux"},"content":"        double decimalFormat \u003d totalDone / totalTasks;","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"mesyeux"},"content":"        return decimalFormat * 100;","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":150,"author":{"gitId":"mesyeux"},"content":"     * Returns the number of tasks due in the next 7 days.","lastModifiedDate":"2021-03-29"},{"lineNumber":151,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"mesyeux"},"content":"    public int getNumberDue() {","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"mesyeux"},"content":"        int totalNumDue \u003d 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"mesyeux"},"content":"        for (Task t : internalList) {","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"maxxng"},"content":"            AttributeManager attributeManager \u003d new AttributeManager(t);","lastModifiedDate":"2021-04-04"},{"lineNumber":157,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"maxxng"},"content":"            if (!attributeManager.isEmptyDate()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":159,"author":{"gitId":"maxxng"},"content":"                boolean isWithinSevenDays \u003d attributeManager.isWithinSevenDays(LocalDate.now());","lastModifiedDate":"2021-04-04"},{"lineNumber":160,"author":{"gitId":"mesyeux"},"content":"                if (isWithinSevenDays) {","lastModifiedDate":"2021-03-29"},{"lineNumber":161,"author":{"gitId":"mesyeux"},"content":"                    totalNumDue++;","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"mesyeux"},"content":"                }","lastModifiedDate":"2021-03-29"},{"lineNumber":163,"author":{"gitId":"mesyeux"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"mesyeux"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":165,"author":{"gitId":"mesyeux"},"content":"        return totalNumDue;","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":169,"author":{"gitId":"LimJunxue"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-02"},{"lineNumber":170,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":171,"author":{"gitId":"LimJunxue"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-02"},{"lineNumber":172,"author":{"gitId":"LimJunxue"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-02"},{"lineNumber":173,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":174,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":175,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":176,"author":{"gitId":"LimJunxue"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-03-02"},{"lineNumber":177,"author":{"gitId":"LimJunxue"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-02"},{"lineNumber":178,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":179,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":180,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":181,"author":{"gitId":"LimJunxue"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-02"},{"lineNumber":182,"author":{"gitId":"LimJunxue"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-02"},{"lineNumber":183,"author":{"gitId":"LimJunxue"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2021-03-02"},{"lineNumber":184,"author":{"gitId":"LimJunxue"},"content":"                        \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2021-03-02"},{"lineNumber":185,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":186,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":187,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":188,"author":{"gitId":"LimJunxue"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-02"},{"lineNumber":189,"author":{"gitId":"LimJunxue"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-02"},{"lineNumber":190,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":191,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":192,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":193,"author":{"gitId":"LimJunxue"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2021-03-02"},{"lineNumber":194,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":195,"author":{"gitId":"LimJunxue"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-02"},{"lineNumber":196,"author":{"gitId":"LimJunxue"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2021-03-02"},{"lineNumber":197,"author":{"gitId":"LimJunxue"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2021-03-02"},{"lineNumber":198,"author":{"gitId":"LimJunxue"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2021-03-02"},{"lineNumber":199,"author":{"gitId":"LimJunxue"},"content":"                    return false;","lastModifiedDate":"2021-03-02"},{"lineNumber":200,"author":{"gitId":"LimJunxue"},"content":"                }","lastModifiedDate":"2021-03-02"},{"lineNumber":201,"author":{"gitId":"LimJunxue"},"content":"            }","lastModifiedDate":"2021-03-02"},{"lineNumber":202,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":203,"author":{"gitId":"LimJunxue"},"content":"        return true;","lastModifiedDate":"2021-03-02"},{"lineNumber":204,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":205,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":206,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"LimJunxue":137,"maxxng":5,"mesyeux":60,"habi39":4}},{"path":"src/main/java/seedu/address/model/task/ValidDateFormatter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangtay"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"kaixiangtay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"kaixiangtay"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"kaixiangtay"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"kaixiangtay"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"kaixiangtay"},"content":"/**","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"kaixiangtay"},"content":" * A ValidDateFormatter class that can be used to verify whether the input date is in the correct range","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"kaixiangtay"},"content":" */","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"kaixiangtay"},"content":"public class ValidDateFormatter {","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"kaixiangtay"},"content":"     * Check whether the valid input date is in the correct range","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"kaixiangtay"},"content":"     * @param date Input string for date","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"kaixiangtay"},"content":"     * @return Boolean result of whether the date is within the correct range","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"kaixiangtay"},"content":"    public static boolean isValid(String date) {","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"kaixiangtay"},"content":"        boolean isValidDate \u003d false;","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"kaixiangtay"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"kaixiangtay"},"content":"            // ResolverStyle.STRICT is used for checking of leap year, months with 30 and 31 days","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"kaixiangtay"},"content":"            LocalDate.parse(date, DateTimeFormatter.ofPattern(\"dd/MM/uuuu\").withResolverStyle(ResolverStyle.STRICT)","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"kaixiangtay"},"content":"            );","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"kaixiangtay"},"content":"            isValidDate \u003d true;","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"kaixiangtay"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"kaixiangtay"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"kaixiangtay"},"content":"            isValidDate \u003d false;","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"kaixiangtay"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"kaixiangtay"},"content":"        return isValidDate;","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"kaixiangtay"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"kaixiangtay":36}},{"path":"src/main/java/seedu/address/model/task/attributes/Attribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maxxng"},"content":"package seedu.address.model.task.attributes;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":3,"author":{"gitId":"maxxng"},"content":"public interface Attribute {","lastModifiedDate":"2021-04-04"},{"lineNumber":4,"author":{"gitId":"maxxng"},"content":"    boolean isEmptyValue();","lastModifiedDate":"2021-04-04"},{"lineNumber":5,"author":{"gitId":"maxxng"},"content":"}","lastModifiedDate":"2021-04-04"}],"authorContributionMap":{"maxxng":5}},{"path":"src/main/java/seedu/address/model/task/attributes/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maxxng"},"content":"package seedu.address.model.task.attributes;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-21"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-21"},{"lineNumber":7,"author":{"gitId":"habi39"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"habi39"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-03-21"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-21"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.ValidDateFormatter;","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":14,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"habi39"},"content":" * Represents a Task\u0027s date in the planner.","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"habi39"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"public class Date implements Attribute {","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"habi39"},"content":"    public static final String FIELD_NAME \u003d \"Date\";","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":23,"author":{"gitId":"habi39"},"content":"            \"Date should be in the format dd/mm/yyyy. For example, 1 July 2021 should be \"","lastModifiedDate":"2021-04-08"},{"lineNumber":24,"author":{"gitId":"habi39"},"content":"                    + \"expressed as 01/07/2021, not 1/7/2021.\";","lastModifiedDate":"2021-04-08"},{"lineNumber":25,"author":{"gitId":"habi39"},"content":"    public static final String MESSAGE_CONSTRAINTS_INVALID_DATE \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"habi39"},"content":"            \"Date should not be before today\";","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"habi39"},"content":"    public static final String VALIDATION_REGEX \u003d \"^((0?[1-9]|[12][0-9]|3[01])/(0?[1-9]|1[012])/(19|20)\\\\d\\\\d)$\";","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"habi39"},"content":"    private static final Logger LOGGER \u003d","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"habi39"},"content":"            Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"    public final LocalDate value;","lastModifiedDate":"2021-03-21"},{"lineNumber":34,"author":{"gitId":"habi39"},"content":"    public final boolean isOverdued;","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"habi39"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"habi39"},"content":"     * @param date A valid date number.","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"habi39"},"content":"    public Date(String date) {","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"habi39"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"habi39"},"content":"        value \u003d parseDate(date);","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"habi39"},"content":"        if (date.length() !\u003d 0) {","lastModifiedDate":"2021-04-02"},{"lineNumber":45,"author":{"gitId":"habi39"},"content":"            LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-04-02"},{"lineNumber":46,"author":{"gitId":"habi39"},"content":"            LocalDate parsedDate \u003d LocalDate.parse(date,","lastModifiedDate":"2021-04-02"},{"lineNumber":47,"author":{"gitId":"habi39"},"content":"                    DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-04-02"},{"lineNumber":48,"author":{"gitId":"habi39"},"content":"            if (parsedDate.isAfter(today)) {","lastModifiedDate":"2021-04-02"},{"lineNumber":49,"author":{"gitId":"habi39"},"content":"                isOverdued \u003d false;","lastModifiedDate":"2021-04-02"},{"lineNumber":50,"author":{"gitId":"habi39"},"content":"            } else {","lastModifiedDate":"2021-04-02"},{"lineNumber":51,"author":{"gitId":"habi39"},"content":"                isOverdued \u003d true;","lastModifiedDate":"2021-04-02"},{"lineNumber":52,"author":{"gitId":"habi39"},"content":"            }","lastModifiedDate":"2021-04-02"},{"lineNumber":53,"author":{"gitId":"habi39"},"content":"        } else {","lastModifiedDate":"2021-04-02"},{"lineNumber":54,"author":{"gitId":"habi39"},"content":"            isOverdued \u003d false;","lastModifiedDate":"2021-04-02"},{"lineNumber":55,"author":{"gitId":"habi39"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"maxxng"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"maxxng"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"maxxng"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"maxxng"},"content":"     * @param date A valid LocalDate object.","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"maxxng"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"maxxng"},"content":"    public Date(LocalDate date) {","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"maxxng"},"content":"        value \u003d date;","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"habi39"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-04-02"},{"lineNumber":66,"author":{"gitId":"habi39"},"content":"        if (date.isAfter(today)) {","lastModifiedDate":"2021-04-02"},{"lineNumber":67,"author":{"gitId":"habi39"},"content":"            isOverdued \u003d false;","lastModifiedDate":"2021-04-02"},{"lineNumber":68,"author":{"gitId":"habi39"},"content":"        } else {","lastModifiedDate":"2021-04-02"},{"lineNumber":69,"author":{"gitId":"habi39"},"content":"            isOverdued \u003d true;","lastModifiedDate":"2021-04-02"},{"lineNumber":70,"author":{"gitId":"habi39"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":71,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"habi39"},"content":"     * Returns true if a given string is a valid date number.","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"habi39"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"mesyeux"},"content":"        Pattern p \u003d Pattern.compile(VALIDATION_REGEX);","lastModifiedDate":"2021-03-21"},{"lineNumber":78,"author":{"gitId":"mesyeux"},"content":"        Matcher m \u003d p.matcher(test);","lastModifiedDate":"2021-03-21"},{"lineNumber":79,"author":{"gitId":"habi39"},"content":"        boolean isValidDate;","lastModifiedDate":"2021-04-02"},{"lineNumber":80,"author":{"gitId":"habi39"},"content":"        if (test.length() !\u003d 0) {","lastModifiedDate":"2021-04-02"},{"lineNumber":81,"author":{"gitId":"habi39"},"content":"            isValidDate \u003d ValidDateFormatter.isValid(test);","lastModifiedDate":"2021-04-02"},{"lineNumber":82,"author":{"gitId":"habi39"},"content":"        } else {","lastModifiedDate":"2021-04-02"},{"lineNumber":83,"author":{"gitId":"habi39"},"content":"            isValidDate \u003d false;","lastModifiedDate":"2021-04-02"},{"lineNumber":84,"author":{"gitId":"habi39"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"habi39"},"content":"        return m.matches() \u0026\u0026 isValidDate || test.isEmpty();","lastModifiedDate":"2021-04-02"},{"lineNumber":86,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":88,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":89,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":90,"author":{"gitId":"habi39"},"content":"     * Returns a date in the form of a LocalDate.","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"habi39"},"content":"     * @param date the specified date.","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"mesyeux"},"content":"     * @return","lastModifiedDate":"2021-03-21"},{"lineNumber":93,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":94,"author":{"gitId":"habi39"},"content":"    public static LocalDate parseDate(String date) {","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"habi39"},"content":"        if (date.isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"habi39"},"content":"            return null;","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"habi39"},"content":"        } else {","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"habi39"},"content":"            LocalDate parsedDate \u003d LocalDate.parse(date,","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"mesyeux"},"content":"                    DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":101,"author":{"gitId":"habi39"},"content":"            return parsedDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"mesyeux"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-03-22"},{"lineNumber":106,"author":{"gitId":"habi39"},"content":"        LOGGER.log(Level.INFO, \"Getting Date\");","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"mesyeux"},"content":"        return value;","lastModifiedDate":"2021-03-22"},{"lineNumber":108,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":109,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":110,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":111,"author":{"gitId":"habi39"},"content":"     * Indicates whether the date is already over","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"habi39"},"content":"     * @return boolean to indicate whether date is over","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":114,"author":{"gitId":"mesyeux"},"content":"    public boolean over() {","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"habi39"},"content":"        LOGGER.log(Level.INFO, \"Checking if the date is after today\");","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"mesyeux"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"mesyeux"},"content":"        return now.isAfter(value);","lastModifiedDate":"2021-03-22"},{"lineNumber":118,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":119,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":120,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"habi39"},"content":"     * Returns true if the task has a date that is within seven days from the current system date.","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"mesyeux"},"content":"     * @param currentDate current date of the system","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"habi39"},"content":"     * @return true if task\u0027s date is within seven days from current system date.","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"mesyeux"},"content":"    public boolean isWithinSevenDays(LocalDate currentDate) {","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"mesyeux"},"content":"        LocalDate sevenDaysFromNow \u003d currentDate.plusDays(7);","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"mesyeux"},"content":"        return value.isBefore(sevenDaysFromNow);","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"maxxng"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"maxxng"},"content":"     * Check if there is a value present.","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"maxxng"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"maxxng"},"content":"     * @return true is value is null, false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"maxxng"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"maxxng"},"content":"    public boolean isEmptyValue() {","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"maxxng"},"content":"        return value \u003d\u003d null;","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"habi39"},"content":"        if (value !\u003d null) {","lastModifiedDate":"2021-03-22"},{"lineNumber":143,"author":{"gitId":"mesyeux"},"content":"            return value.format(","lastModifiedDate":"2021-03-21"},{"lineNumber":144,"author":{"gitId":"mesyeux"},"content":"                    DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":145,"author":{"gitId":"habi39"},"content":"        } else {","lastModifiedDate":"2021-03-22"},{"lineNumber":146,"author":{"gitId":"habi39"},"content":"            return \"\";","lastModifiedDate":"2021-03-22"},{"lineNumber":147,"author":{"gitId":"habi39"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"habi39"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"habi39"},"content":"                \u0026\u0026 ((value \u003d\u003d null \u0026\u0026 ((Date) other).value \u003d\u003d null)","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"habi39"},"content":"                        || value.equals(((Date) other).value))); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"maxxng":22,"mesyeux":36,"habi39":73,"-":32}},{"path":"src/main/java/seedu/address/model/task/attributes/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maxxng"},"content":"package seedu.address.model.task.attributes;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":" * Represents a Task\u0027s description in the planner.","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"public class Description implements Attribute {","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"    public static final String FIELD_NAME \u003d \"Description\";","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"habi39"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Descriptions can take any values\";","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"     * Allows description to be any character including line breaks.","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\S\\\\s]*\";","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"    public final String value;","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"     * Constructs an {@code Description}.","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"     * @param description A valid description.","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"    public Description(String description) {","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"        value \u003d description;","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"maxxng"},"content":"    public boolean isEmptyValue() {","lastModifiedDate":"2021-04-04"},{"lineNumber":41,"author":{"gitId":"maxxng"},"content":"        return value.equals(\"\");","lastModifiedDate":"2021-04-04"},{"lineNumber":42,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":43,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"    public String toString() {","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"        return value;","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"                \u0026\u0026 value.equals(((Description) other).value)); // state check","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"maxxng":6,"LimJunxue":54,"habi39":1}},{"path":"src/main/java/seedu/address/model/task/attributes/Duration.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maxxng"},"content":"package seedu.address.model.task.attributes;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"habi39"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"habi39"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"habi39"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-04-08"},{"lineNumber":7,"author":{"gitId":"habi39"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-04-08"},{"lineNumber":8,"author":{"gitId":"habi39"},"content":"import java.util.Date;","lastModifiedDate":"2021-04-08"},{"lineNumber":9,"author":{"gitId":"habi39"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"habi39"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"habi39"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"habi39"},"content":" * Represents a Task\u0027s Duration in the List.","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"habi39"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDuration(String)}","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"habi39"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"public class Duration implements Attribute {","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"habi39"},"content":"    public static final String FIELD_NAME \u003d \"Duration\";","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"kaixiangtay"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Duration should be numeric, consisting of start time and end time\"","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"habi39"},"content":"            + \" and should be in 24 hours format in the following example format 10:00-14:00.\"","lastModifiedDate":"2021-04-08"},{"lineNumber":21,"author":{"gitId":"habi39"},"content":"            + \"Start time should also be before end time.\";","lastModifiedDate":"2021-04-08"},{"lineNumber":22,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"habi39"},"content":"    /*","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"habi39"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"habi39"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"habi39"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"habi39"},"content":"    public static final String VALIDATION_REGEX \u003d \"([01]?[0-9]|2[0-3]):[0-5][0-9]-([01]?[0-9]|2[0-3]):[0-5][0-9]\";","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"habi39"},"content":"    public final String duration;","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"habi39"},"content":"    public final String value;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"    private String startTime;","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"    private String endTime;","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"habi39"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"habi39"},"content":"     * Constructs an {@code Duration}.","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"habi39"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"habi39"},"content":"     * @param duration A valid duration.","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"habi39"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"habi39"},"content":"    public Duration(String duration) {","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"habi39"},"content":"        requireNonNull(duration);","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"habi39"},"content":"        checkArgument(isValidDuration(duration), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"        value \u003d duration;","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"habi39"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"habi39"},"content":"     * Returns true if a given string is a valid duration.","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"habi39"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"habi39"},"content":"    public static boolean isValidDuration(String test) {","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"habi39"},"content":"        Pattern p \u003d Pattern.compile(VALIDATION_REGEX);","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"habi39"},"content":"        Matcher m \u003d p.matcher(test);","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"habi39"},"content":"        boolean valid \u003d true;","lastModifiedDate":"2021-04-08"},{"lineNumber":54,"author":{"gitId":"habi39"},"content":"        if (m.matches()) {","lastModifiedDate":"2021-04-08"},{"lineNumber":55,"author":{"gitId":"habi39"},"content":"            String[] timings \u003d test.split(\"-\");","lastModifiedDate":"2021-04-08"},{"lineNumber":56,"author":{"gitId":"habi39"},"content":"            try {","lastModifiedDate":"2021-04-08"},{"lineNumber":57,"author":{"gitId":"habi39"},"content":"                Date getFirstTime \u003d new SimpleDateFormat(\"HH:mm\").parse(timings[0]);","lastModifiedDate":"2021-04-08"},{"lineNumber":58,"author":{"gitId":"habi39"},"content":"                Date getSecondTime \u003d new SimpleDateFormat(\"HH:mm\").parse(timings[1]);","lastModifiedDate":"2021-04-08"},{"lineNumber":59,"author":{"gitId":"habi39"},"content":"                if (getFirstTime.after(getSecondTime)) {","lastModifiedDate":"2021-04-08"},{"lineNumber":60,"author":{"gitId":"habi39"},"content":"                    valid \u003d false;","lastModifiedDate":"2021-04-08"},{"lineNumber":61,"author":{"gitId":"habi39"},"content":"                }","lastModifiedDate":"2021-04-08"},{"lineNumber":62,"author":{"gitId":"habi39"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2021-04-08"},{"lineNumber":63,"author":{"gitId":"habi39"},"content":"                throw new IllegalArgumentException(e);","lastModifiedDate":"2021-04-08"},{"lineNumber":64,"author":{"gitId":"habi39"},"content":"            }","lastModifiedDate":"2021-04-08"},{"lineNumber":65,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-04-08"},{"lineNumber":66,"author":{"gitId":"habi39"},"content":"        }","lastModifiedDate":"2021-04-08"},{"lineNumber":67,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"habi39"},"content":"        return m.matches() \u0026\u0026 valid || test.matches(\"\");","lastModifiedDate":"2021-04-08"},{"lineNumber":69,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"mesyeux"},"content":"    /**","lastModifiedDate":"2021-03-21"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"     * Parses the given duration into its start and end time.","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"LimJunxue"},"content":"     * @param duration The specified duration.","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"mesyeux"},"content":"     */","lastModifiedDate":"2021-03-21"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"    private void parseDuration(String duration) {","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"        assert isValidDuration(duration) : \"Cannot parse duration that is in an invalid format.\";","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"LimJunxue"},"content":"        if (duration.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"LimJunxue"},"content":"            return;","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"LimJunxue"},"content":"        String[] times \u003d duration.split(\"-\");","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"LimJunxue"},"content":"        this.startTime \u003d times[0];","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"LimJunxue"},"content":"        this.endTime \u003d times[1];","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-21"},{"lineNumber":86,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"maxxng"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"maxxng"},"content":"     * Checks if the value of Duration is Empty.","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"maxxng"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"maxxng"},"content":"     * @return true if value.isEmpty(), false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"maxxng"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"maxxng"},"content":"    public boolean isEmptyValue() {","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"maxxng"},"content":"        return value.isEmpty();","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"habi39"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"habi39"},"content":"    public String toString() {","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"habi39"},"content":"        return value;","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"habi39"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"habi39"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"habi39"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"habi39"},"content":"                || (other instanceof Duration // instanceof handles nulls","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"habi39"},"content":"                \u0026\u0026 this.duration.equals(((Duration) other).duration)); // state check","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"habi39"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"habi39"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"habi39"},"content":"        return this.duration.hashCode();","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"habi39"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"maxxng":11,"LimJunxue":17,"mesyeux":4,"kaixiangtay":2,"habi39":78}},{"path":"src/main/java/seedu/address/model/task/attributes/RecurringSchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maxxng"},"content":"package seedu.address.model.task.attributes;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"kaixiangtay"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"kaixiangtay"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"kaixiangtay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"kaixiangtay"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"kaixiangtay"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"kaixiangtay"},"content":"import java.time.temporal.TemporalAdjuster;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"kaixiangtay"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"kaixiangtay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"kaixiangtay"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"kaixiangtay"},"content":"import java.util.List;","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"kaixiangtay"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"kaixiangtay"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-03-21"},{"lineNumber":17,"author":{"gitId":"kaixiangtay"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-03-21"},{"lineNumber":18,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.ValidDateFormatter;","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"kaixiangtay"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"kaixiangtay"},"content":" * Represents a Task\u0027s Recurring Schedule in the planner.","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"kaixiangtay"},"content":" * Guarantees: immutable; is valid and can be empty as declared in {@link #isValidRecurringScheduleInput(String)}","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"kaixiangtay"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"public class RecurringSchedule implements Attribute {","lastModifiedDate":"2021-04-04"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"    public static final String FIELD_NAME \u003d \"RecurringSchedule\";","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"kaixiangtay"},"content":"    // example format: [23/10/2021]","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"kaixiangtay"},"content":"    public static final String DATE_REGEX \u003d \"\\\\[(3[01]|[12][0-9]|0[1-9])/(1[0-2]|0[1-9])/[0-9]{4}]\";","lastModifiedDate":"2021-03-21"},{"lineNumber":30,"author":{"gitId":"kaixiangtay"},"content":"    public static final String DAYSOFWEEK_REGEX \u003d \"\\\\[(mon|tue|wed|thu|fri|sat|sun)]\";","lastModifiedDate":"2021-03-21"},{"lineNumber":31,"author":{"gitId":"kaixiangtay"},"content":"    public static final String WEEKFREQUENCY_REGEX \u003d \"\\\\[(weekly|biweekly)]\";","lastModifiedDate":"2021-03-21"},{"lineNumber":32,"author":{"gitId":"kaixiangtay"},"content":"    public static final String VALIDATION_REGEX \u003d DATE_REGEX + DAYSOFWEEK_REGEX + WEEKFREQUENCY_REGEX;","lastModifiedDate":"2021-03-21"},{"lineNumber":33,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"kaixiangtay"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Recurring Schedule should be in this format:\"","lastModifiedDate":"2021-04-06"},{"lineNumber":35,"author":{"gitId":"kaixiangtay"},"content":"            + \"\\n\\n1) Ending Date in dd-mm-yyyy format (requires leading zero for day, month) \"","lastModifiedDate":"2021-04-06"},{"lineNumber":36,"author":{"gitId":"kaixiangtay"},"content":"            + \"should be ahead of current date\"","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"kaixiangtay"},"content":"            + \"\\n\\n2) Days of week (case-insensitive) : mon, tue, wed, thu, fri, sat, sun\"","lastModifiedDate":"2021-04-06"},{"lineNumber":38,"author":{"gitId":"kaixiangtay"},"content":"            + \"\\n\\n3) Frequency of week (case-insensitive) : weekly, biweekly\"","lastModifiedDate":"2021-04-06"},{"lineNumber":39,"author":{"gitId":"kaixiangtay"},"content":"            + \"\\n\\n and without blank space arguments but can be empty if nothing is entered :-)\"","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"kaixiangtay"},"content":"            + \"\\n\\nHere is an example: [23/10/2021][Mon][weekly]\";","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"kaixiangtay"},"content":"    public static final String INVALID_END_DATE \u003d \"End date should be ahead of current date \"","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"kaixiangtay"},"content":"            + \"or the input end is less than a week without matching days found !!!\";","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"kaixiangtay"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"kaixiangtay"},"content":"    // Index 0 is placed as empty string so when days of week is retrieved, no additional increment is required","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"kaixiangtay"},"content":"    public static final List\u003cString\u003e WEEK_DAYS \u003d Arrays.asList(\"\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\", \"sun\");","lastModifiedDate":"2021-04-06"},{"lineNumber":49,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"kaixiangtay"},"content":"    public final String value;","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"kaixiangtay"},"content":"    public final String output;","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"kaixiangtay"},"content":"    private List\u003cString\u003e weekDates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"kaixiangtay"},"content":"    private String dayOfWeek;","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"kaixiangtay"},"content":"    private String weekFreq;","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"kaixiangtay"},"content":"    private boolean isValidDateRange;","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"kaixiangtay"},"content":"    private final LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"kaixiangtay"},"content":"    private Optional\u003cLocalDate\u003e endDate \u003d Optional.empty();","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"kaixiangtay"},"content":"     * Recurring Schedule constructor","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"kaixiangtay"},"content":"     * @param recurringSchedule A valid recurring schedule text","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"kaixiangtay"},"content":"    public RecurringSchedule(String recurringSchedule) {","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"kaixiangtay"},"content":"        requireNonNull(recurringSchedule);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"kaixiangtay"},"content":"        checkArgument(isValidRecurringScheduleInput(recurringSchedule), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"kaixiangtay"},"content":"        value \u003d recurringSchedule;","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"kaixiangtay"},"content":"        output \u003d isEmptyValue() ? \"\" : generateRecurringDates(recurringSchedule);","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"kaixiangtay"},"content":"     * Checks if the Recurring Schedule input is empty string.","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"kaixiangtay"},"content":"     * @return Boolean if the String of Recurring Schedule is empty.","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"kaixiangtay"},"content":"    public boolean isEmptyValue() {","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"kaixiangtay"},"content":"        return value.equals(\"\");","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"kaixiangtay"},"content":"     * Returns if a given string is a valid recurring schedule text","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"kaixiangtay"},"content":"     * Accepts empty input recurring schedule since it is optional for a task to have recurring schedule","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"kaixiangtay"},"content":"     * @param test Input string of recurring schedule","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"kaixiangtay"},"content":"     * @return State of whether recurring schedule is valid and non-empty in boolean format","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"kaixiangtay"},"content":"    public static boolean isValidRecurringScheduleInput(String test) {","lastModifiedDate":"2021-03-18"},{"lineNumber":88,"author":{"gitId":"kaixiangtay"},"content":"        assert test !\u003d null : \"Input recurring schedule is null !!!\";","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"kaixiangtay"},"content":"        Pattern pattern \u003d Pattern.compile(VALIDATION_REGEX, Pattern.CASE_INSENSITIVE);","lastModifiedDate":"2021-03-21"},{"lineNumber":91,"author":{"gitId":"kaixiangtay"},"content":"        Matcher matcher \u003d pattern.matcher(test);","lastModifiedDate":"2021-03-21"},{"lineNumber":92,"author":{"gitId":"kaixiangtay"},"content":"        boolean isValidRecurringSchedule \u003d matcher.matches();","lastModifiedDate":"2021-03-21"},{"lineNumber":93,"author":{"gitId":"kaixiangtay"},"content":"        return isValidRecurringSchedule || test.equals(\"\");","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":96,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":97,"author":{"gitId":"kaixiangtay"},"content":"     * Used to format the input of recurring schedule before the recurring dates can be generated","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"kaixiangtay"},"content":"     * When the recurring schedule is not optional (empty string input)","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"kaixiangtay"},"content":"     * @return String format output of recurring schedule detail in user-centric form","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":102,"author":{"gitId":"kaixiangtay"},"content":"    private String formatRecurringSchedule() {","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":104,"author":{"gitId":"kaixiangtay"},"content":"        String outputDate \u003d FORMATTER.format(endDate.get());","lastModifiedDate":"2021-04-06"},{"lineNumber":105,"author":{"gitId":"kaixiangtay"},"content":"        String outputRecurringScheduleDetail \u003d \" every \" + dayOfWeek + \" \" + weekFreq + \" until \" + outputDate;","lastModifiedDate":"2021-04-06"},{"lineNumber":106,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":107,"author":{"gitId":"kaixiangtay"},"content":"        return outputRecurringScheduleDetail;","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":111,"author":{"gitId":"kaixiangtay"},"content":"     * Returns if the given end date within the recurring schedule have not expired","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"kaixiangtay"},"content":"     * And considered expired when end date is before current system date","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"kaixiangtay"},"content":"     * Or less than a week after current system date without any matching days","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"kaixiangtay"},"content":"     * @return State of whether date in recurring schedule has expired","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"kaixiangtay"},"content":"    public boolean isExpired() {","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"kaixiangtay"},"content":"        // Less than a week when the weekDates is empty, no recurringDates can be added to weekDates","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"kaixiangtay"},"content":"        boolean isLessThanAWeek \u003d (weekDates.isEmpty() \u0026\u0026 !isEmptyValue());","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"kaixiangtay"},"content":"        boolean isExpired \u003d endDate.isEmpty() ? false : endDate.get().isBefore(currentDate) || isLessThanAWeek;","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"kaixiangtay"},"content":"        return isExpired;","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"kaixiangtay"},"content":"     * Used to count the number of weeks between current system date and given end date provided by the user","lastModifiedDate":"2021-03-31"},{"lineNumber":126,"author":{"gitId":"kaixiangtay"},"content":"     * A week is being counted from Sunday of the previous week up till the Saturday of the coming week","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"kaixiangtay"},"content":"     * In the event, the dates range is shorter than a week, the number of weeks will be considered 0","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"kaixiangtay"},"content":"     * @return Number of weeks in integer format","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"kaixiangtay"},"content":"    private int calculateNumWeeksBetweenDates() {","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"kaixiangtay"},"content":"        LocalDate startingDate \u003d currentDate.with(TemporalAdjusters.previousOrSame(DayOfWeek.SUNDAY));","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"kaixiangtay"},"content":"        LocalDate endingDate \u003d endDate.get().with(TemporalAdjusters.previousOrSame(DayOfWeek.SATURDAY));","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"kaixiangtay"},"content":"        long daysBetweenDates \u003d ChronoUnit.DAYS.between(startingDate, endingDate);","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"kaixiangtay"},"content":"        int numWeeks \u003d (int) Math.ceil(daysBetweenDates / 7.0);","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"kaixiangtay"},"content":"        return numWeeks;","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"kaixiangtay"},"content":"     * Used to generate the recurring dates from the recurring schedule conditions provided by the user","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"kaixiangtay"},"content":"     * @param numWeeks Number of weeks between current date and end date","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"kaixiangtay"},"content":"     * @return List of selected week dates that fall within the range of current date and end date","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"kaixiangtay"},"content":"     *         as well as falling on the chosen day of week","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"kaixiangtay"},"content":"    private List\u003cString\u003e findWeekDates(int numWeeks) {","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"kaixiangtay"},"content":"        List\u003cString\u003e weekDates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"kaixiangtay"},"content":"        int dayOfWeekInNum \u003d WEEK_DAYS.indexOf(dayOfWeek);","lastModifiedDate":"2021-04-06"},{"lineNumber":150,"author":{"gitId":"kaixiangtay"},"content":"        LocalDate nextDate \u003d currentDate;","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"kaixiangtay"},"content":"        for (int i \u003d 0; i \u003c numWeeks; i++) {","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"kaixiangtay"},"content":"            DayOfWeek selectedDay \u003d DayOfWeek.of(dayOfWeekInNum);","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"kaixiangtay"},"content":"            TemporalAdjuster upcomingDay \u003d TemporalAdjusters.next(selectedDay);","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"kaixiangtay"},"content":"            nextDate \u003d nextDate.with(upcomingDay);","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"kaixiangtay"},"content":"            boolean isValidNextDate \u003d nextDate.isBefore(endDate.get()) || nextDate.isEqual(endDate.get());","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"kaixiangtay"},"content":"            if (isValidNextDate) {","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"kaixiangtay"},"content":"                weekDates.add(FORMATTER.format(nextDate));","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"kaixiangtay"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"kaixiangtay"},"content":"            boolean isBiWeekly \u003d weekFreq.equals(\"biweekly\");","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"kaixiangtay"},"content":"            if (isBiWeekly) {","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"kaixiangtay"},"content":"                nextDate \u003d nextDate.with(upcomingDay);","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"kaixiangtay"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"kaixiangtay"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"kaixiangtay"},"content":"        return weekDates;","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":169,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":170,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":171,"author":{"gitId":"kaixiangtay"},"content":"     * Used to check whether the input date is within range for recurring schedule when recurring schedule is non-empty","lastModifiedDate":"2021-04-01"},{"lineNumber":172,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":173,"author":{"gitId":"kaixiangtay"},"content":"     * @return Boolean result of whether the input date is in the correct range for recurring schedule","lastModifiedDate":"2021-04-01"},{"lineNumber":174,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":175,"author":{"gitId":"kaixiangtay"},"content":"    public boolean isInvalidDateRange() {","lastModifiedDate":"2021-04-01"},{"lineNumber":176,"author":{"gitId":"kaixiangtay"},"content":"        return !isValidDateRange \u0026\u0026 !isEmptyValue();","lastModifiedDate":"2021-04-01"},{"lineNumber":177,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":178,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":179,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":180,"author":{"gitId":"kaixiangtay"},"content":"     * Used to generate the output of the dates of the recurring schedule","lastModifiedDate":"2021-03-23"},{"lineNumber":181,"author":{"gitId":"kaixiangtay"},"content":"     * When the recurring schedule is present (not an empty string input)","lastModifiedDate":"2021-03-27"},{"lineNumber":182,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":183,"author":{"gitId":"kaixiangtay"},"content":"     * @return Output string of recurring dates in the PlanIt application","lastModifiedDate":"2021-03-23"},{"lineNumber":184,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":185,"author":{"gitId":"kaixiangtay"},"content":"    public String generateRecurringDates(String recurringSchedule) {","lastModifiedDate":"2021-03-27"},{"lineNumber":186,"author":{"gitId":"kaixiangtay"},"content":"        String[] recurringScheduleData \u003d recurringSchedule.replaceAll(\"\\\\]\", \"\").split(\"\\\\[\");","lastModifiedDate":"2021-03-31"},{"lineNumber":187,"author":{"gitId":"kaixiangtay"},"content":"        isValidDateRange \u003d ValidDateFormatter.isValid(recurringScheduleData[1]);","lastModifiedDate":"2021-04-01"},{"lineNumber":188,"author":{"gitId":"kaixiangtay"},"content":"        endDate \u003d Optional.of(LocalDate.parse(recurringScheduleData[1], FORMATTER));","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"kaixiangtay"},"content":"        dayOfWeek \u003d recurringScheduleData[2].toLowerCase();","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"kaixiangtay"},"content":"        weekFreq \u003d recurringScheduleData[3].toLowerCase();","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":192,"author":{"gitId":"kaixiangtay"},"content":"        if (endDate.get().isBefore(currentDate)) { // Handle case where recurring schedule has passed in PlanIT","lastModifiedDate":"2021-04-06"},{"lineNumber":193,"author":{"gitId":"kaixiangtay"},"content":"            return \"\";","lastModifiedDate":"2021-04-06"},{"lineNumber":194,"author":{"gitId":"kaixiangtay"},"content":"        } else {","lastModifiedDate":"2021-04-06"},{"lineNumber":195,"author":{"gitId":"kaixiangtay"},"content":"            String recurringScheduleDetail \u003d formatRecurringSchedule();","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"kaixiangtay"},"content":"            int numWeeks \u003d calculateNumWeeksBetweenDates();","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"kaixiangtay"},"content":"            weekDates \u003d findWeekDates(numWeeks);","lastModifiedDate":"2021-03-31"},{"lineNumber":198,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":199,"author":{"gitId":"kaixiangtay"},"content":"            String recurringScheduleOutput \u003d recurringScheduleDetail + \"\\n\\nHere are the Recurring Sessions:\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":200,"author":{"gitId":"kaixiangtay"},"content":"                    + String.join(\"\\n\", weekDates);","lastModifiedDate":"2021-03-31"},{"lineNumber":201,"author":{"gitId":"kaixiangtay"},"content":"            return recurringScheduleOutput;","lastModifiedDate":"2021-03-22"},{"lineNumber":202,"author":{"gitId":"kaixiangtay"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":203,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-04-06"},{"lineNumber":204,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":205,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":206,"author":{"gitId":"LimJunxue"},"content":"     * Checks if the provided date string is in this schedule\u0027s weekly dates.","lastModifiedDate":"2021-03-29"},{"lineNumber":207,"author":{"gitId":"LimJunxue"},"content":"     * Will return false if there is no dates in the schedule.","lastModifiedDate":"2021-03-29"},{"lineNumber":208,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":209,"author":{"gitId":"LimJunxue"},"content":"     * @param dateString Date to be checked.","lastModifiedDate":"2021-03-29"},{"lineNumber":210,"author":{"gitId":"LimJunxue"},"content":"     * @return Boolean indicating if the date is in this schedule.","lastModifiedDate":"2021-03-29"},{"lineNumber":211,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":212,"author":{"gitId":"kaixiangtay"},"content":"    public boolean isInRecurringSchedule(String dateString) {","lastModifiedDate":"2021-03-30"},{"lineNumber":213,"author":{"gitId":"LimJunxue"},"content":"        return weekDates.stream().anyMatch(date -\u003e date.equals(dateString));","lastModifiedDate":"2021-03-29"},{"lineNumber":214,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":215,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":216,"author":{"gitId":"kaixiangtay"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"kaixiangtay"},"content":"    public String toString() {","lastModifiedDate":"2021-03-17"},{"lineNumber":218,"author":{"gitId":"kaixiangtay"},"content":"        return output;","lastModifiedDate":"2021-03-23"},{"lineNumber":219,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":220,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"kaixiangtay"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"kaixiangtay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"kaixiangtay"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":224,"author":{"gitId":"kaixiangtay"},"content":"                || (other instanceof RecurringSchedule // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":225,"author":{"gitId":"kaixiangtay"},"content":"                \u0026\u0026 value.equals(((RecurringSchedule) other).value)); // state check","lastModifiedDate":"2021-03-17"},{"lineNumber":226,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":227,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":228,"author":{"gitId":"kaixiangtay"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":229,"author":{"gitId":"kaixiangtay"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-17"},{"lineNumber":230,"author":{"gitId":"kaixiangtay"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-17"},{"lineNumber":231,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":232,"author":{"gitId":"kaixiangtay"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"maxxng":4,"LimJunxue":12,"kaixiangtay":214,"habi39":2}},{"path":"src/main/java/seedu/address/model/task/attributes/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maxxng"},"content":"package seedu.address.model.task.attributes;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"maxxng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"maxxng"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"maxxng"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":" * Represents a Person\u0027s status in the address book.","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"public class Status implements Attribute {","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"    public static final String DONE_STATE \u003d \"done\";","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"    public static final String NOT_DONE_STATE \u003d \"not done\";","lastModifiedDate":"2021-04-02"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"    public static final String FIELD_NAME \u003d \"Status\";","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"maxxng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d String.format(\"Status should be either \u0027%s\u0027 or \u0027%s\u0027.\",","lastModifiedDate":"2021-04-02"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"            DONE_STATE, NOT_DONE_STATE);","lastModifiedDate":"2021-04-02"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"maxxng"},"content":"    public final String value;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"maxxng"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"maxxng"},"content":"     * Constructs a Status object.","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"maxxng"},"content":"     * @param status A valid status.","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"maxxng"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"maxxng"},"content":"    public Status(String status) {","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"maxxng"},"content":"        requireNonNull(status);","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"maxxng"},"content":"        checkArgument(isValidStatus(status), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"maxxng"},"content":"        value \u003d status;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"maxxng"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"maxxng"},"content":"     * Checks if a status value is valid.","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"maxxng"},"content":"     * Only \u0027done\u0027 and \u0027not done\u0027 are valid.","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"maxxng"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"maxxng"},"content":"     * @param value valid String value for status","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"maxxng"},"content":"     * @return boolean value indicating if value is a valid status value.","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"maxxng"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"maxxng"},"content":"    public static boolean isValidStatus(String value) {","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"maxxng"},"content":"        return value.equals(DONE_STATE)","lastModifiedDate":"2021-04-02"},{"lineNumber":44,"author":{"gitId":"maxxng"},"content":"                || value.equals(NOT_DONE_STATE);","lastModifiedDate":"2021-04-02"},{"lineNumber":45,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"maxxng"},"content":"    @Override","lastModifiedDate":"2021-04-04"},{"lineNumber":48,"author":{"gitId":"maxxng"},"content":"    public boolean isEmptyValue() {","lastModifiedDate":"2021-04-04"},{"lineNumber":49,"author":{"gitId":"maxxng"},"content":"        return value.equals(\"\");","lastModifiedDate":"2021-04-04"},{"lineNumber":50,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":51,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":52,"author":{"gitId":"maxxng"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"maxxng"},"content":"    public String toString() {","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"maxxng"},"content":"        return value;","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"maxxng"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"maxxng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"maxxng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"maxxng"},"content":"                || (other instanceof Status // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"maxxng"},"content":"                \u0026\u0026 value.equals(((Status) other).value)); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"maxxng"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"maxxng"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"maxxng"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"maxxng"},"content":"        return value.equals(DONE_STATE);","lastModifiedDate":"2021-04-02"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"maxxng"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"maxxng":68,"LimJunxue":4}},{"path":"src/main/java/seedu/address/model/task/attributes/Title.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maxxng"},"content":"package seedu.address.model.task.attributes;","lastModifiedDate":"2021-04-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":" * Represents a Task\u0027s title in the planner.","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTitle(String)}","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"public class Title implements Attribute {","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"    public static final String FIELD_NAME \u003d \"Title\";","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"            \"Titles should only contain alphanumeric characters and spaces (not line breaks)\"","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"                    + \", and it should not be blank\";","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"kaixiangtay"},"content":"     * The first character of the title must not be a whitespace,","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"    public final String fullTitle;","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"     * Constructs a {@code Title}.","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"     * @param title A valid title.","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"    public Title(String title) {","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(title);","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"        checkArgument(isValidTitle(title), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"        fullTitle \u003d title;","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"     * Returns true if a given string is a valid title.","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"    public static boolean isValidTitle(String test) {","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"maxxng"},"content":"    public boolean isEmptyValue() {","lastModifiedDate":"2021-04-04"},{"lineNumber":44,"author":{"gitId":"maxxng"},"content":"        return fullTitle.equals(\"\");","lastModifiedDate":"2021-04-04"},{"lineNumber":45,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-04-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"        return fullTitle;","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"                || (other instanceof Title // instanceof handles nulls","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"                \u0026\u0026 fullTitle.equals(((Title) other).fullTitle)); // state check","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"        return fullTitle.hashCode();","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"maxxng":5,"LimJunxue":18,"kaixiangtay":1,"-":40}},{"path":"src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"/**","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":" * Signals that the operation will result in duplicate Tasks (Tasks are considered duplicates if they have the same","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":" * identity).","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":" */","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"LimJunxue":11}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"/**","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":" */","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"public class TaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"LimJunxue":6}},{"path":"src/main/java/seedu/address/model/task/predicates/DescriptionContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangtay"},"content":"package seedu.address.model.task.predicates;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"kaixiangtay"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"kaixiangtay"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"kaixiangtay"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"kaixiangtay"},"content":" * Tests that a {@code Task}\u0027s {@code Description} matches any of the keywords given.","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"kaixiangtay"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"kaixiangtay"},"content":"public class DescriptionContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"kaixiangtay"},"content":"    private final List\u003cString\u003e descriptionWords;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"kaixiangtay"},"content":"     * DescriptionContainsKeywordsPredicate constructor","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"kaixiangtay"},"content":"     * @param descriptionWords A list of words within the find by description query","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"kaixiangtay"},"content":"    public DescriptionContainsKeywordsPredicate(List\u003cString\u003e descriptionWords) {","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"kaixiangtay"},"content":"        this.descriptionWords \u003d descriptionWords;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"kaixiangtay"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"kaixiangtay"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"kaixiangtay"},"content":"        String description \u003d task.getDescription().value;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"kaixiangtay"},"content":"        return descriptionWords.stream()","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"kaixiangtay"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(description, keyword));","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"kaixiangtay"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"kaixiangtay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"kaixiangtay"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"kaixiangtay"},"content":"                || (other instanceof DescriptionContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"kaixiangtay"},"content":"                \u0026\u0026 descriptionWords.equals(((DescriptionContainsKeywordsPredicate) other)","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"kaixiangtay"},"content":"                .descriptionWords)); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"kaixiangtay"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"kaixiangtay":38}},{"path":"src/main/java/seedu/address/model/task/predicates/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangtay"},"content":"package seedu.address.model.task.predicates;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"kaixiangtay"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"kaixiangtay"},"content":"import java.util.TreeSet;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"kaixiangtay"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"kaixiangtay"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"kaixiangtay"},"content":" * Tests that a {@code Task}\u0027s tags matches all of the keywords given.","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"kaixiangtay"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"kaixiangtay"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"kaixiangtay"},"content":"    private final Set\u003cString\u003e tagWords;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"kaixiangtay"},"content":"     * TagContainsKeywordsPredicate constructor","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"kaixiangtay"},"content":"     * @param tagWords A set of words within the find by tag query","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"kaixiangtay"},"content":"    public TagContainsKeywordsPredicate(Set\u003cString\u003e tagWords) {","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"kaixiangtay"},"content":"        this.tagWords \u003d tagWords;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"kaixiangtay"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"kaixiangtay"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"kaixiangtay"},"content":"        Set\u003cTag\u003e tags \u003d task.getTags();","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"kaixiangtay"},"content":"        Set\u003cString\u003e tagNames \u003d new TreeSet\u003c\u003e(String.CASE_INSENSITIVE_ORDER);","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"kaixiangtay"},"content":"        for (Tag currTag : tags) {","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"kaixiangtay"},"content":"            tagNames.add(currTag.tagName);","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"kaixiangtay"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"kaixiangtay"},"content":"        return tagNames.containsAll(tagWords);","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"kaixiangtay"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"kaixiangtay"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"kaixiangtay"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"kaixiangtay"},"content":"                || (other instanceof TagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"kaixiangtay"},"content":"                \u0026\u0026 tagWords.equals(((TagContainsKeywordsPredicate) other).tagWords)); // state check","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"kaixiangtay"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"kaixiangtay":42}},{"path":"src/main/java/seedu/address/model/task/predicates/TaskDateOnDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.model.task.predicates;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.AttributeManager;","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"habi39"},"content":" * Predicate testing whether the task\u0027s date being tested falls on the date provided.","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"habi39"},"content":"class TaskDateOnDatePredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"habi39"},"content":"    private final Date date;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"habi39"},"content":"    public TaskDateOnDatePredicate(Date date) {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"habi39"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"habi39"},"content":"     * Checks if date of this predicate is on the same date as the provided task\u0027s date.","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"habi39"},"content":"     * @param task Task with date to be checked with this predicate\u0027s date.","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"habi39"},"content":"     * @return Boolean indicating whether the task\u0027s date is on the same date as this predicate\u0027s date.","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"maxxng"},"content":"        return new AttributeManager(task).hasSameDate(date);","lastModifiedDate":"2021-04-04"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"LimJunxue":18,"maxxng":3,"habi39":8}},{"path":"src/main/java/seedu/address/model/task/predicates/TaskOnDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.model.task.predicates;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":" * Predicate testing whether the task being tested falls on the date provided. Uses","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"habi39"},"content":" * {@code TaskScheduledOnDatePredicate} and {@code TaskDateOnDatePredicate} to checks the date with the task\u0027s","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"habi39"},"content":" * date and recurring schedule.","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"public class TaskOnDatePredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"habi39"},"content":"    private final TaskDateOnDatePredicate taskDateOnDatePredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"    private final TaskScheduledOnDatePredicate taskScheduledOnDatePredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"habi39"},"content":"     * Constructs this predicate that tests if a given task has its date or schedule on the provided date date.","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"habi39"},"content":"     * Uses date as the parameter to construct this predicate so as to ensure that the date has been parsed","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"     * correctly.","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"habi39"},"content":"     * @param date Date with date to test tasks\u0027 date and schedule with.","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"habi39"},"content":"    public TaskOnDatePredicate(Date date) {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"habi39"},"content":"        this.taskDateOnDatePredicate \u003d new TaskDateOnDatePredicate(date);","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"        this.taskScheduledOnDatePredicate \u003d new TaskScheduledOnDatePredicate(date.toString());","lastModifiedDate":"2021-04-06"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"habi39"},"content":"        boolean isTaskOnDate \u003d taskDateOnDatePredicate.test(task);","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"        boolean isTaskScheduledOnDate \u003d taskScheduledOnDatePredicate.test(task);","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"habi39"},"content":"        return isTaskOnDate || isTaskScheduledOnDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"LimJunxue":24,"maxxng":1,"habi39":10}},{"path":"src/main/java/seedu/address/model/task/predicates/TaskScheduledOnDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.model.task.predicates;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.AttributeManager;","lastModifiedDate":"2021-04-04"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":" * Predicate testing whether the task\u0027s recurring schedule contains on the date provided.","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"public class TaskScheduledOnDatePredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"    private final String dateString;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"    public TaskScheduledOnDatePredicate(String dateString) {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"        this.dateString \u003d dateString;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"     * Checks if date of this predicate in the provided task\u0027s recurring schedule.","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"     * @param task Task with recurring schedule to be checked with this predicate\u0027s date.","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"     * @return Boolean indicating whether the task\u0027s schedule contains this predicate\u0027s date.","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"maxxng"},"content":"        return new AttributeManager(task).isOnRecurringScheduleDate(dateString);","lastModifiedDate":"2021-04-04"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"LimJunxue":26,"maxxng":2}},{"path":"src/main/java/seedu/address/model/task/predicates/TitleContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangtay"},"content":"package seedu.address.model.task.predicates;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":" * Tests that a {@code Task}\u0027s {@code Title} matches any of the keywords given.","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"public class TitleContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"kaixiangtay"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"kaixiangtay"},"content":"     * TitleContainsKeywordsPredicate constructor","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"kaixiangtay"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"kaixiangtay"},"content":"     * @param keywords A list of keywords within the find by title","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"kaixiangtay"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"    public TitleContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(task.getTitle().fullTitle, keyword));","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"                || (other instanceof TitleContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"                \u0026\u0026 keywords.equals(((TitleContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"LimJunxue":7,"kaixiangtay":7,"-":23}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.Planner;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.ReadOnlyPlanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Description;","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Duration;","lastModifiedDate":"2021-04-04"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.RecurringSchedule;","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Status;","lastModifiedDate":"2021-04-04"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Title;","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":" * Contains utility methods for populating {@code Planner} with sample data.","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"        return new Task[] {","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"kaixiangtay"},"content":"            new Task(new Title(\"Assignment 3\"), new Date(\"13/05/2021\"), new Duration(\"\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"kaixiangtay"},"content":"                    new RecurringSchedule(\"\"), new Description(\"Commands: bash test.sh\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"kaixiangtay"},"content":"                    new Status(\"done\"), getTagSet(\"CS2105\", \"Assignment\")),","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"kaixiangtay"},"content":"            new Task(new Title(\"CS2103 Team Meeting\"), new Date(\"\"), new Duration(\"12:30-18:30\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"kaixiangtay"},"content":"                    new RecurringSchedule(\"[08/06/2021][Mon][weekly]\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"kaixiangtay"},"content":"                    new Description(\"Check feature updates with teammates\\nFinalise UI layout, \\nStandardise UG \u0026 DG\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"kaixiangtay"},"content":"                    new Status(\"not done\"), getTagSet(\"CS2103\", \"Project\")),","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"kaixiangtay"},"content":"            new Task(new Title(\"Countdown to finals\"), new Date(\"09/05/2021\"), new Duration(\"\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"kaixiangtay"},"content":"                    new RecurringSchedule(\"\"), new Description(\"aiken doeet\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"kaixiangtay"},"content":"                    new Status(\"not done\"), getTagSet(\"Finals\")),","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"kaixiangtay"},"content":"            new Task(new Title(\"Demo our amazing product\"), new Date(\"25/05/2021\"), new Duration(\"12:30-14:30\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"kaixiangtay"},"content":"                    new RecurringSchedule(\"\"), new Description(\"Product demo to NUS Computing Students\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"kaixiangtay"},"content":"                    new Status(\"not done\"), getTagSet(\"CS2103\", \"Project\")),","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"kaixiangtay"},"content":"            new Task(new Title(\"Ensure that I eat lunch\"), new Date(\"\"), new Duration(\"12:30-13:30\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"kaixiangtay"},"content":"                    new RecurringSchedule(\"[02/06/2021][Wed][weekly]\"), new Description(\"budget $3\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"kaixiangtay"},"content":"                    new Status(\"not done\"), getTagSet(\"reminder\")),","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"kaixiangtay"},"content":"            new Task(new Title(\"Final project consultation\"), new Date(\"\"), new Duration(\"12:30-13:30\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"kaixiangtay"},"content":"                    new RecurringSchedule(\"[03/06/2021][Fri][biweekly]\"), new Description(\"Location at COM2\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"kaixiangtay"},"content":"                    new Status(\"not done\"), getTagSet(\"CS2103\", \"Project\")),","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"kaixiangtay"},"content":"            new Task(new Title(\"CS2103 last milestone\"), new Date(\"04/06/2021\"), new Duration(\"\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"kaixiangtay"},"content":"                   new RecurringSchedule(\"\"), new Description(\"Wrap up project and release jar file\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"kaixiangtay"},"content":"                   new Status(\"done\"), getTagSet(\"CS2103\", \"Project\")),","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"    public static ReadOnlyPlanner getSamplePlanner() {","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"        Planner sampleAb \u003d new Planner();","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"        for (Task sampleTask : getSampleTasks()) {","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"            sampleAb.addTask(sampleTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"            sampleAb.addTagsIfAbsent(sampleTask.getTags());","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"LimJunxue":10,"maxxng":7,"kaixiangtay":23,"-":27}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Description;","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Duration;","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.RecurringSchedule;","lastModifiedDate":"2021-04-04"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Status;","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Title;","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"class JsonAdaptedTask {","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"    private final String title;","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"habi39"},"content":"    private final String date;","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"habi39"},"content":"    private final String duration;","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"kaixiangtay"},"content":"    private final String recurringSchedule;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"    private final String description;","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"maxxng"},"content":"    private final String status;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"habi39"},"content":"    public JsonAdaptedTask(@JsonProperty(\"title\") String title, @JsonProperty(\"date\") String date,","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"habi39"},"content":"                           @JsonProperty(\"duration\") String duration,","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"kaixiangtay"},"content":"                           @JsonProperty(\"recurringSchedule\") String recurringSchedule,","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"maxxng"},"content":"                           @JsonProperty(\"description\") String description, @JsonProperty(\"status\") String status,","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                           @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"habi39"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"habi39"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"kaixiangtay"},"content":"        this.recurringSchedule \u003d recurringSchedule;","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"maxxng"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"        title \u003d source.getTitle().fullTitle;","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"habi39"},"content":"        date \u003d source.getDate().toString();","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"habi39"},"content":"        duration \u003d source.getDuration().toString();","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"kaixiangtay"},"content":"        recurringSchedule \u003d source.getRecurringSchedule().value;","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"        description \u003d source.getDescription().value;","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"maxxng"},"content":"        status \u003d source.getStatus().value;","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"LimJunxue"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2021-03-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"LimJunxue"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2021-03-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"LimJunxue"},"content":"        final List\u003cTag\u003e taskTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"            taskTags.add(tag.toModelType());","lastModifiedDate":"2021-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"LimJunxue"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"LimJunxue"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName()));","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"LimJunxue"},"content":"        if (!Title.isValidTitle(title)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"LimJunxue"},"content":"            throw new IllegalValueException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"LimJunxue"},"content":"        final Title modelTitle \u003d new Title(title);","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"habi39"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"habi39"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"habi39"},"content":"                    Date.class.getSimpleName()));","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"habi39"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"habi39"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"habi39"},"content":"        final Date modelDate \u003d new Date(date);","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"habi39"},"content":"        if (duration \u003d\u003d null) {","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"habi39"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"habi39"},"content":"                    Duration.class.getSimpleName()));","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"habi39"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":104,"author":{"gitId":"habi39"},"content":"        if (!Duration.isValidDuration(duration)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"habi39"},"content":"            throw new IllegalValueException(Duration.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"habi39"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"habi39"},"content":"        final Duration modelDuration \u003d new Duration(duration);","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"kaixiangtay"},"content":"        if (recurringSchedule \u003d\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"kaixiangtay"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"kaixiangtay"},"content":"                    RecurringSchedule.class.getSimpleName()));","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"kaixiangtay"},"content":"        if (!RecurringSchedule.isValidRecurringScheduleInput(recurringSchedule)) {","lastModifiedDate":"2021-03-18"},{"lineNumber":114,"author":{"gitId":"kaixiangtay"},"content":"            throw new IllegalValueException(RecurringSchedule.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"kaixiangtay"},"content":"        final RecurringSchedule modelRecurringSchedule \u003d new RecurringSchedule(recurringSchedule);","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"LimJunxue"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2021-03-11"},{"lineNumber":119,"author":{"gitId":"LimJunxue"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-11"},{"lineNumber":120,"author":{"gitId":"LimJunxue"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2021-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"LimJunxue"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":123,"author":{"gitId":"LimJunxue"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"LimJunxue"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2021-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"maxxng"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"maxxng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"maxxng"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"maxxng"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"maxxng"},"content":"        final Status modelStatus \u003d new Status(status);","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"LimJunxue"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(taskTags);","lastModifiedDate":"2021-03-02"},{"lineNumber":136,"author":{"gitId":"habi39"},"content":"        return new Task(modelTitle, modelDate, modelDuration, modelRecurringSchedule,","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"maxxng"},"content":"                modelDescription, modelStatus, modelTags);","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"maxxng":20,"LimJunxue":29,"kaixiangtay":10,"habi39":24,"-":57}},{"path":"src/main/java/seedu/address/storage/JsonPlannerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.ReadOnlyPlanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":" * A class to access Planner data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"public class JsonPlannerStorage implements PlannerStorage {","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPlannerStorage.class);","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"    public JsonPlannerStorage(Path filePath) {","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"    public Path getPlannerFilePath() {","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"    public Optional\u003cReadOnlyPlanner\u003e readPlanner() throws DataConversionException {","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"        return readPlanner(filePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"     * Similar to {@link #readPlanner()}.","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"    public Optional\u003cReadOnlyPlanner\u003e readPlanner(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"        Optional\u003cJsonSerializablePlanner\u003e jsonPlanner \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"                filePath, JsonSerializablePlanner.class);","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"        if (!jsonPlanner.isPresent()) {","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"            return Optional.of(jsonPlanner.get().toModelType());","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"    public void savePlanner(ReadOnlyPlanner planner) throws IOException {","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"        savePlanner(planner, filePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"LimJunxue"},"content":"     * Similar to {@link #savePlanner(ReadOnlyPlanner)}.","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"    public void savePlanner(ReadOnlyPlanner planner, Path filePath) throws IOException {","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"LimJunxue"},"content":"        requireNonNull(planner);","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"        JsonUtil.saveJsonFile(new JsonSerializablePlanner(planner), filePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LimJunxue":20,"-":60}},{"path":"src/main/java/seedu/address/storage/JsonSerializablePlanner.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.Planner;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.ReadOnlyPlanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":" * An Immutable Planner that is serializable to JSON format.","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"@JsonRootName(value \u003d \"planner\")","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"class JsonSerializablePlanner {","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Tasks list contains duplicate task(s).\";","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"     * Constructs a {@code JsonSerializablePlanner} with the given tasks.","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"    public JsonSerializablePlanner(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"     * Converts a given {@code ReadOnlyPlanner} into this class for Jackson use.","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializablePlanner}.","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"    public JsonSerializablePlanner(ReadOnlyPlanner source) {","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"     * Converts this planner into the model\u0027s {@code Planner} object.","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"    public Planner toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"        Planner planner \u003d new Planner();","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"            if (planner.hasTask(task)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"            planner.addTask(task);","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"            planner.addTagsIfAbsent(task.getTags());","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"        return planner;","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LimJunxue":25,"-":36}},{"path":"src/main/java/seedu/address/storage/PlannerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.Planner;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.ReadOnlyPlanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":" * Represents a storage for {@link Planner}.","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"public interface PlannerStorage {","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"    Path getPlannerFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"     * Returns Planner data as a {@link ReadOnlyPlanner}.","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"    Optional\u003cReadOnlyPlanner\u003e readPlanner() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"     * @see #getPlannerFilePath()","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"    Optional\u003cReadOnlyPlanner\u003e readPlanner(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"     * Saves the given {@link ReadOnlyPlanner} to the storage.","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"     * @param planner cannot be null.","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"    void savePlanner(ReadOnlyPlanner planner) throws IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"     * @see #savePlanner(ReadOnlyPlanner)","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"    void savePlanner(ReadOnlyPlanner planner, Path filePath) throws IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"LimJunxue":46}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.ReadOnlyPlanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"public interface Storage extends PlannerStorage, UserPrefsStorage {","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"    Path getPlannerFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"    Optional\u003cReadOnlyPlanner\u003e readPlanner() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"    void savePlanner(ReadOnlyPlanner planner) throws IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"LimJunxue":5,"-":27}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.ReadOnlyPlanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":" * Manages storage of Planner data in local storage.","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"    private PlannerStorage plannerStorage;","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"     * Creates a {@code StorageManager} with the given {@code PlannerStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"    public StorageManager(PlannerStorage plannerStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"        this.plannerStorage \u003d plannerStorage;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Planner methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"    public Path getPlannerFilePath() {","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"        return plannerStorage.getPlannerFilePath();","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"    public Optional\u003cReadOnlyPlanner\u003e readPlanner() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"        return readPlanner(plannerStorage.getPlannerFilePath());","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"    public Optional\u003cReadOnlyPlanner\u003e readPlanner(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"        return plannerStorage.readPlanner(filePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"    public void savePlanner(ReadOnlyPlanner planner) throws IOException {","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"LimJunxue"},"content":"        savePlanner(planner, plannerStorage.getPlannerFilePath());","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"LimJunxue"},"content":"    public void savePlanner(ReadOnlyPlanner planner, Path filePath) throws IOException {","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"        plannerStorage.savePlanner(planner, filePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimJunxue":17,"-":62}},{"path":"src/main/java/seedu/address/ui/CalendarPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.layout.Border;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.layout.BorderStroke;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.layout.BorderStrokeStyle;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.layout.BorderWidths;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.commons.Observer;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.ObservableCalendarDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"public class CalendarPanel extends UiPart\u003cRegion\u003e implements Observer {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"    private static final String FXML \u003d \"CalendarPanel.fxml\";","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"    private final ArrayList\u003cStackPane\u003e calendarPanes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"    private final ObservableCalendarDate observableCalendarDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"    // Today\u0027s date","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"    private final LocalDate currentDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"    // Date that the user is viewing, or else today\u0027s date.","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"    private LocalDate viewingDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"    // The start of the month that the current view is showing.","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"    private LocalDate startOfMonth;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"    private VBox calendarPanel;","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"    private Button prevButton;","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"    private Label monthYearLabel;","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"    private Button nextButton;","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"    private GridPane calendarDays;","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"    private GridPane calendar;","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"     * Instantiates the grid and dates of the calendar panel according to the current date.","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"    public CalendarPanel(ObservableCalendarDate observableCalendarDate) {","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"        super(FXML);","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"        this.observableCalendarDate \u003d observableCalendarDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"        observableCalendarDate.addObserver(this);","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"        currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"LimJunxue"},"content":"        viewingDate \u003d currentDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"        startOfMonth \u003d currentDate.withDayOfMonth(1);","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"        for (int i \u003d 0; i \u003c 6; i++) {","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"            for (int j \u003d 0; j \u003c 7; j++) {","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"LimJunxue"},"content":"                StackPane stackPane \u003d new StackPane();","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"LimJunxue"},"content":"                stackPane.setPrefSize(50, 50);","lastModifiedDate":"2021-04-06"},{"lineNumber":68,"author":{"gitId":"LimJunxue"},"content":"                calendar.add(stackPane, j, i);","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"                calendarPanes.add(stackPane);","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"LimJunxue"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"        populateCalendarPage(startOfMonth);","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"     * Gets updated by the observable viewing date, which changes the calendar view to the month of the viewing date.","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"LimJunxue"},"content":"    public void update() {","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"        viewingDate \u003d observableCalendarDate.getDate();","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"LimJunxue"},"content":"        startOfMonth \u003d viewingDate.withDayOfMonth(1);","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"LimJunxue"},"content":"        populateCalendarPage(startOfMonth);","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"LimJunxue"},"content":"     * Fills in the numbers of the month in the date provided into the calendar.","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"LimJunxue"},"content":"     * @param dateToView Date with the month that will be shown in the calendar.","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"LimJunxue"},"content":"    // Solution below adapted from https://github.com/SirGoose3432/javafx-calendar/blob/master/src/FullCalendarView.java","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"LimJunxue"},"content":"    private void populateCalendarPage(LocalDate dateToView) {","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"LimJunxue"},"content":"        LocalDate dateCursor \u003d dateToView;","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"LimJunxue"},"content":"        boolean isCursorOnDiffMonth \u003d false;","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"LimJunxue"},"content":"        while (!dateCursor.getDayOfWeek().toString().equals(\"SUNDAY\")) {","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"LimJunxue"},"content":"            dateCursor \u003d dateCursor.minusDays(1);","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"LimJunxue"},"content":"            isCursorOnDiffMonth \u003d true;","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"LimJunxue"},"content":"        // Populate the calendar with date numbers","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"LimJunxue"},"content":"        for (StackPane pane : calendarPanes) {","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"LimJunxue"},"content":"            pane.getChildren().clear();","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"LimJunxue"},"content":"            Label day \u003d new Label(\"\" + dateCursor.getDayOfMonth());","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"LimJunxue"},"content":"            isCursorOnDiffMonth \u003d decideStyleOfDay(isCursorOnDiffMonth, dateCursor, day);","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"LimJunxue"},"content":"            if (dateCursor.equals(currentDate)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"LimJunxue"},"content":"                day.setBackground(new Background(new BackgroundFill(Color.WHITE,","lastModifiedDate":"2021-04-01"},{"lineNumber":107,"author":{"gitId":"LimJunxue"},"content":"                        new CornerRadii(50), Insets.EMPTY)));","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"LimJunxue"},"content":"                day.setStyle(\"-fx-text-fill: black;\");","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"LimJunxue"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"LimJunxue"},"content":"            if (dateCursor.equals(viewingDate)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"LimJunxue"},"content":"                day.setBorder(new Border(new BorderStroke(Color.WHITE,","lastModifiedDate":"2021-04-01"},{"lineNumber":113,"author":{"gitId":"LimJunxue"},"content":"                        BorderStrokeStyle.SOLID, new CornerRadii(50), new BorderWidths(2))));","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"LimJunxue"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"LimJunxue"},"content":"            pane.getChildren().add(day);","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"LimJunxue"},"content":"            dateCursor \u003d dateCursor.plusDays(1);","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"LimJunxue"},"content":"        // Change the title of the calendar","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"LimJunxue"},"content":"        String monthText \u003d dateToView.getMonth().toString();","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"LimJunxue"},"content":"        String properCaseMonthText \u003d StringUtil.toSentenceCase(monthText);","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"LimJunxue"},"content":"        monthYearLabel.setText(properCaseMonthText + \" \" + dateToView.getYear());","lastModifiedDate":"2021-03-29"},{"lineNumber":124,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"LimJunxue"},"content":"     * Sets the style of dates that are not on the current month in view differently from the","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"LimJunxue"},"content":"     * dates in the current month. Dates on a different month are slightly darker.","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"LimJunxue"},"content":"     * Styles are switched at every 1st day of the month.","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"LimJunxue"},"content":"     * @param isCursorOnDiffMonth Boolean indicating if the current date cursor is on a different month.","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"LimJunxue"},"content":"     * @param dateCursor          LocalDate object that indicates the current date working on.","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"LimJunxue"},"content":"     * @param label               Label to set the style of.","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"LimJunxue"},"content":"     * @return Boolean indicating if the next day is still on a different month.","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"LimJunxue"},"content":"    private boolean decideStyleOfDay(boolean isCursorOnDiffMonth, LocalDate dateCursor, Label label) {","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"LimJunxue"},"content":"        if (isCursorOnDiffMonth) {","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"LimJunxue"},"content":"            label.getStyleClass().add(\"calendarDiffMonthDates\");","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"LimJunxue"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"LimJunxue"},"content":"            label.getStyleClass().add(\"calendarStandardDates\");","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"LimJunxue"},"content":"        if (dateCursor.plusDays(1).getDayOfMonth() \u003d\u003d 1) {","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"LimJunxue"},"content":"            return !isCursorOnDiffMonth;","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"LimJunxue"},"content":"        return isCursorOnDiffMonth;","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"LimJunxue"},"content":"     * Changes the calendar to show next month, relative to the current month shown.","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"LimJunxue"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"LimJunxue"},"content":"    public void handleNextMonth() {","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"LimJunxue"},"content":"        startOfMonth \u003d startOfMonth.plusMonths(1);","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"LimJunxue"},"content":"        populateCalendarPage(startOfMonth);","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":159,"author":{"gitId":"LimJunxue"},"content":"     * Changes the calendar to show previous month, relative to the current month shown.","lastModifiedDate":"2021-03-30"},{"lineNumber":160,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"LimJunxue"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"LimJunxue"},"content":"    public void handlePrevMonth() {","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"LimJunxue"},"content":"        startOfMonth \u003d startOfMonth.minusMonths(1);","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"LimJunxue"},"content":"        populateCalendarPage(startOfMonth);","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"LimJunxue":166}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"    private TextArea commandTextArea;","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"        commandTextArea.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"        // remove ENTER event to prevent new lines on ENTER, then handle command","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"        commandTextArea.addEventFilter(KeyEvent.KEY_PRESSED, new EventHandler\u003cKeyEvent\u003e() {","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"            @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"            public void handle(KeyEvent event) {","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"                if (event.getCode().equals(KeyCode.ENTER)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"                    event.consume();","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"                    handleCommandEntered(event);","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"                }","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"            }","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"        });","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"    private void handleCommandEntered(KeyEvent keyEvent) {","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"        if (keyEvent.getCode() \u003d\u003d KeyCode.ENTER) {","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"            int currentCaretPosition \u003d commandTextArea.getCaretPosition();","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"            String commandText \u003d commandTextArea.getText();","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"            // shift+enter makes a newline anywhere","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"            if (keyEvent.isShiftDown()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"                commandTextArea.setText(commandText.substring(0, currentCaretPosition)","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"                        + System.getProperty(\"line.separator\") + commandText.substring(currentCaretPosition));","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"                commandTextArea.positionCaret(currentCaretPosition + 1);","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"                return;","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"LimJunxue"},"content":"            }","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                return;","lastModifiedDate":"2020-12-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2020-12-04"},{"lineNumber":67,"author":{"gitId":"LimJunxue"},"content":"            // error message wrong when multiline","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"            // remove trailing newlines","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"LimJunxue"},"content":"            commandTextArea.setText(commandText.replaceAll(\"\\n+$\", \"\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"            commandTextArea.positionCaret(currentCaretPosition);","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2017-02-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":75,"author":{"gitId":"LimJunxue"},"content":"                commandTextArea.setText(\"\");","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":86,"author":{"gitId":"LimJunxue"},"content":"        commandTextArea.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":93,"author":{"gitId":"LimJunxue"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextArea.getStyleClass();","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"LimJunxue":37,"-":78}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.commons.CalendarDirection;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"    private TagListPanel tagListPanel;","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"    private CalendarPanel calendarPanel;","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"    @FXML","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"    private StackPane tagListPanelPlaceholder;","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"    private StackPane calendarPanelPlaceholder;","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"LimJunxue"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2021-03-02"},{"lineNumber":117,"author":{"gitId":"LimJunxue"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2021-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"LimJunxue"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getPlannerFilePath());","lastModifiedDate":"2021-03-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"LimJunxue"},"content":"        tagListPanel \u003d new TagListPanel(logic.getSortedTagList());","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"LimJunxue"},"content":"        tagListPanelPlaceholder.getChildren().add(tagListPanel.getRoot());","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"LimJunxue"},"content":"        calendarPanel \u003d new CalendarPanel(logic.getCalendarDate());","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"LimJunxue"},"content":"        calendarPanelPlaceholder.getChildren().add(calendarPanel.getRoot());","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":162,"author":{"gitId":"LimJunxue"},"content":"    public TaskListPanel getTaskListPanel() {","lastModifiedDate":"2021-03-02"},{"lineNumber":163,"author":{"gitId":"LimJunxue"},"content":"        return taskListPanel;","lastModifiedDate":"2021-03-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"LimJunxue"},"content":"    private void handleCalendarNavigation(CalendarDirection direction) throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"LimJunxue"},"content":"        if (direction \u003d\u003d CalendarDirection.NEXT) {","lastModifiedDate":"2021-03-30"},{"lineNumber":168,"author":{"gitId":"LimJunxue"},"content":"            calendarPanel.handleNextMonth();","lastModifiedDate":"2021-03-30"},{"lineNumber":169,"author":{"gitId":"LimJunxue"},"content":"        } else if (direction \u003d\u003d CalendarDirection.PREV) {","lastModifiedDate":"2021-03-30"},{"lineNumber":170,"author":{"gitId":"LimJunxue"},"content":"            calendarPanel.handlePrevMonth();","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"LimJunxue"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"LimJunxue"},"content":"            throw new CommandException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"LimJunxue"},"content":"            if (commandResult.isCalendarNavigation()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"LimJunxue"},"content":"                handleCalendarNavigation(commandResult.getCalendarDirection());","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"LimJunxue":34,"-":168}},{"path":"src/main/java/seedu/address/ui/TagListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":" * Panel containing the list of tags.","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"public class TagListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"    private static final String FXML \u003d \"TagListPanel.fxml\";","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TagListPanel.class);","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"    @FXML","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"    private ListView\u003cTag\u003e tagListView;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"     * Creates a {@code TagListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"    public TagListPanel(ObservableList\u003cTag\u003e tagList) {","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"        super(FXML);","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"        tagListView.setItems(tagList);","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"        tagListView.setCellFactory(listView -\u003e new TagListViewCell());","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Tag}.","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"    class TagListViewCell extends ListCell\u003cTag\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"        protected void updateItem(Tag tag, boolean empty) {","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"            super.updateItem(tag, empty);","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"            if (empty || tag \u003d\u003d null) {","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"                setText(null);","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"            } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"                getStyleClass().clear();","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"                Label tagCard \u003d new Label(tag.tagName);","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"                tagCard.getStyleClass().add(\"tag-card\");","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"                setGraphic(tagCard);","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"            }","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"LimJunxue":53}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"    public final Task task;","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"    public final int id;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"    private TaskCardDetails taskCardDetails;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"    private VBox detailsPlaceholder;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"     * Creates a {@code TaskCard} with the given {@code Task} and index to display.","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"        this.id \u003d displayedIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"        setDetails(task, displayedIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"        boolean isSameId \u003d id \u003d\u003d card.id;","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"        boolean isSameTask \u003d task.equals(card.task);","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"        return isSameId \u0026\u0026 isSameTask;","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"    private void setDetails(Task task, int displayedIndex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"        taskCardDetails \u003d new TaskCardDetails(task, displayedIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"        detailsPlaceholder.getChildren().add(taskCardDetails.getRoot());","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"LimJunxue":25,"-":42}},{"path":"src/main/java/seedu/address/ui/TaskCardDetails.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import java.util.List;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.control.Separator;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-04-04"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Description;","lastModifiedDate":"2021-04-04"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Duration;","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.RecurringSchedule;","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Status;","lastModifiedDate":"2021-04-04"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Title;","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":" * An UI component that displays details of a {@code Task} that belongs in a TaskCard.","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"public class TaskCardDetails extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"    private static final String FXML \u003d \"TaskListCardDetails.fxml\";","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"    public final Task task;","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"     * Fields of each task that is to be rendered onto the view (not fields that are compulsory in the add command).","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"    private final List\u003cString\u003e compulsorilyRenderedFields \u003d","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"habi39"},"content":"            List.of(Title.FIELD_NAME, Status.FIELD_NAME, Duration.FIELD_NAME, Date.FIELD_NAME);","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"    private Label title;","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"    private Label id;","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"habi39"},"content":"    private Label date;","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"    private Label status;","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"habi39"},"content":"    private Label duration;","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"    private VBox details;","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"     * Creates a {@code TaskCode} with the given {@code Task} and index to display.","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"LimJunxue"},"content":"    public TaskCardDetails(Task task, int displayedIndex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"        super(FXML);","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"        setId(displayedIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"LimJunxue"},"content":"        setFields(task);","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"LimJunxue"},"content":"        setTagsIfPresent(task);","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"        setStyleClasses();","lastModifiedDate":"2021-03-22"},{"lineNumber":70,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"    private void setId(int displayedIndex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"LimJunxue"},"content":"        id.getStyleClass().add(\"cell_big_label\");","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"LimJunxue"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"LimJunxue"},"content":"     * Gets optional fields from the task and creates labels dynamically for their string values if present.","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"     * @param task Task with fields to be rendered.","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"LimJunxue"},"content":"    private void setFields(Task task) {","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"LimJunxue"},"content":"        HashMap\u003cString, String\u003e optionalFieldStrings \u003d task.getFields();","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"LimJunxue"},"content":"        optionalFieldStrings.forEach((fieldName, fieldValue) -\u003e {","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"LimJunxue"},"content":"            if (fieldValue.isBlank()) {","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"LimJunxue"},"content":"                return;","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"LimJunxue"},"content":"            } else if (compulsorilyRenderedFields.contains(fieldName)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"LimJunxue"},"content":"                setFieldLabel((Label) details.lookup(\"#\" + fieldName.toLowerCase()), fieldValue);","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"LimJunxue"},"content":"            } else {","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"LimJunxue"},"content":"                createFieldLabel(fieldName, fieldValue);","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"LimJunxue"},"content":"            }","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"LimJunxue"},"content":"        });","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"LimJunxue"},"content":"     * Creates new Labels to contain each tag present, and add these tag Labels into the FlowPane.","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"LimJunxue"},"content":"     * This function will return void if no Labels are created if there are no tags.","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"LimJunxue"},"content":"     * @param task Task to be displayed.","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"LimJunxue"},"content":"    private void setTagsIfPresent(Task task) {","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"LimJunxue"},"content":"        task.getTags().stream()","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"LimJunxue"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-03-22"},{"lineNumber":104,"author":{"gitId":"LimJunxue"},"content":"                .forEach(tag -\u003e {","lastModifiedDate":"2021-04-07"},{"lineNumber":105,"author":{"gitId":"LimJunxue"},"content":"                    Label tagLabel \u003d new Label(tag.tagName);","lastModifiedDate":"2021-04-07"},{"lineNumber":106,"author":{"gitId":"LimJunxue"},"content":"                    tagLabel.setMaxWidth(250);","lastModifiedDate":"2021-04-07"},{"lineNumber":107,"author":{"gitId":"LimJunxue"},"content":"                    tagLabel.setWrapText(true);","lastModifiedDate":"2021-04-07"},{"lineNumber":108,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":109,"author":{"gitId":"LimJunxue"},"content":"                    tags.getChildren().add(tagLabel);","lastModifiedDate":"2021-04-07"},{"lineNumber":110,"author":{"gitId":"LimJunxue"},"content":"                });","lastModifiedDate":"2021-04-07"},{"lineNumber":111,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":112,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":114,"author":{"gitId":"LimJunxue"},"content":"     * Sets style class for individual nodes under details. Styles of optional fields are not set here because they","lastModifiedDate":"2021-03-22"},{"lineNumber":115,"author":{"gitId":"LimJunxue"},"content":"     * are created dynamically.","lastModifiedDate":"2021-03-22"},{"lineNumber":116,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":117,"author":{"gitId":"LimJunxue"},"content":"    private void setStyleClasses() {","lastModifiedDate":"2021-03-22"},{"lineNumber":118,"author":{"gitId":"LimJunxue"},"content":"        title.getStyleClass().add(\"cell_big_label\");","lastModifiedDate":"2021-03-22"},{"lineNumber":119,"author":{"gitId":"LimJunxue"},"content":"        id.getStyleClass().add(\"cell_big_label\");","lastModifiedDate":"2021-03-22"},{"lineNumber":120,"author":{"gitId":"habi39"},"content":"        date.getStyleClass().add(\"cell_small_label\");","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"habi39"},"content":"        duration.getStyleClass().add(\"cell_small_label\");","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"LimJunxue"},"content":"        boolean isStatusDone \u003d status.getText().equals(\"done\");","lastModifiedDate":"2021-03-22"},{"lineNumber":123,"author":{"gitId":"LimJunxue"},"content":"        if (isStatusDone) {","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"LimJunxue"},"content":"            status.getStyleClass().add(\"status-green\");","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"LimJunxue"},"content":"        } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"LimJunxue"},"content":"            status.getStyleClass().add(\"status-red\");","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"LimJunxue"},"content":"     * Sets the value of the field of the task into an existing label. Asserts that the value is not blank because the","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"LimJunxue"},"content":"     * label is compulsory.","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"LimJunxue"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"LimJunxue"},"content":"     * @param label      Static label that is already existing in the view.","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"LimJunxue"},"content":"     * @param fieldValue Value to be set as the text of the label.","lastModifiedDate":"2021-03-22"},{"lineNumber":136,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"LimJunxue"},"content":"    private void setFieldLabel(Label label, String fieldValue) {","lastModifiedDate":"2021-03-22"},{"lineNumber":138,"author":{"gitId":"LimJunxue"},"content":"        assert !fieldValue.isBlank() : label.getId() + \" label cannot be blank as it is compulsory.\";","lastModifiedDate":"2021-03-22"},{"lineNumber":139,"author":{"gitId":"LimJunxue"},"content":"        label.setText(fieldValue);","lastModifiedDate":"2021-03-22"},{"lineNumber":140,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"habi39"},"content":"    /**","lastModifiedDate":"2021-03-22"},{"lineNumber":143,"author":{"gitId":"LimJunxue"},"content":"     * Creates a new label for the fieldValue passed in. Sets its style class according to their names. Asserts the","lastModifiedDate":"2021-03-22"},{"lineNumber":144,"author":{"gitId":"LimJunxue"},"content":"     * value is not blank because a label should not be created with a blank value.","lastModifiedDate":"2021-03-22"},{"lineNumber":145,"author":{"gitId":"habi39"},"content":"     *","lastModifiedDate":"2021-03-22"},{"lineNumber":146,"author":{"gitId":"LimJunxue"},"content":"     * @param fieldName  Name of the field of the task.","lastModifiedDate":"2021-03-22"},{"lineNumber":147,"author":{"gitId":"LimJunxue"},"content":"     * @param fieldValue Value of the field of the task.","lastModifiedDate":"2021-03-22"},{"lineNumber":148,"author":{"gitId":"habi39"},"content":"     */","lastModifiedDate":"2021-03-22"},{"lineNumber":149,"author":{"gitId":"LimJunxue"},"content":"    private void createFieldLabel(String fieldName, String fieldValue) {","lastModifiedDate":"2021-03-22"},{"lineNumber":150,"author":{"gitId":"LimJunxue"},"content":"        assert !fieldValue.isBlank() : fieldName + \" label cannot be created with blank value.\";","lastModifiedDate":"2021-03-22"},{"lineNumber":151,"author":{"gitId":"LimJunxue"},"content":"        Label newLabel \u003d new Label(fieldValue);","lastModifiedDate":"2021-03-22"},{"lineNumber":152,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":153,"author":{"gitId":"LimJunxue"},"content":"        if (fieldName.equals(Description.FIELD_NAME)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":154,"author":{"gitId":"LimJunxue"},"content":"            details.getChildren().add(new Separator());","lastModifiedDate":"2021-03-22"},{"lineNumber":155,"author":{"gitId":"LimJunxue"},"content":"            newLabel.getStyleClass().add(\"description\");","lastModifiedDate":"2021-03-22"},{"lineNumber":156,"author":{"gitId":"LimJunxue"},"content":"        } else if (fieldName.equals(RecurringSchedule.FIELD_NAME)) {","lastModifiedDate":"2021-03-23"},{"lineNumber":157,"author":{"gitId":"LimJunxue"},"content":"            newLabel.getStyleClass().clear();","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"LimJunxue"},"content":"            newLabel.getStyleClass().add(\"recurring-schedule\");","lastModifiedDate":"2021-03-23"},{"lineNumber":159,"author":{"gitId":"LimJunxue"},"content":"        } else {","lastModifiedDate":"2021-03-22"},{"lineNumber":160,"author":{"gitId":"LimJunxue"},"content":"            // Sets style of every other label.","lastModifiedDate":"2021-03-22"},{"lineNumber":161,"author":{"gitId":"LimJunxue"},"content":"            newLabel.getStyleClass().add(\"cell_small_label\");","lastModifiedDate":"2021-03-22"},{"lineNumber":162,"author":{"gitId":"habi39"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":163,"author":{"gitId":"LimJunxue"},"content":"        details.getChildren().add(newLabel);","lastModifiedDate":"2021-03-22"},{"lineNumber":164,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":165,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":166,"author":{"gitId":"LimJunxue"},"content":"    @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":167,"author":{"gitId":"LimJunxue"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-22"},{"lineNumber":168,"author":{"gitId":"LimJunxue"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-22"},{"lineNumber":169,"author":{"gitId":"LimJunxue"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-22"},{"lineNumber":170,"author":{"gitId":"LimJunxue"},"content":"            return true;","lastModifiedDate":"2021-03-22"},{"lineNumber":171,"author":{"gitId":"habi39"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":172,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":173,"author":{"gitId":"LimJunxue"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-22"},{"lineNumber":174,"author":{"gitId":"LimJunxue"},"content":"        if (!(other instanceof TaskCardDetails)) {","lastModifiedDate":"2021-03-22"},{"lineNumber":175,"author":{"gitId":"LimJunxue"},"content":"            return false;","lastModifiedDate":"2021-03-22"},{"lineNumber":176,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":177,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":178,"author":{"gitId":"LimJunxue"},"content":"        // state check","lastModifiedDate":"2021-03-22"},{"lineNumber":179,"author":{"gitId":"LimJunxue"},"content":"        TaskCardDetails card \u003d (TaskCardDetails) other;","lastModifiedDate":"2021-03-22"},{"lineNumber":180,"author":{"gitId":"LimJunxue"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-22"},{"lineNumber":181,"author":{"gitId":"LimJunxue"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2021-03-22"},{"lineNumber":182,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":183,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"LimJunxue":164,"maxxng":7,"habi39":12}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"/**","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":" */","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"    @FXML","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"        super(FXML);","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"        @Override","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"                setText(null);","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"            } else {","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"            }","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"LimJunxue":49}},{"path":"src/main/resources/view/Calendar.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"#calendar {","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"    -fx-alignment: center;","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"/* days in the week */","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"#calendarDays .label {","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"    -fx-text-fill: #999999;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":".calendarDiffMonthDates {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"    -fx-text-fill: #878787;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"    -fx-alignment: center;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"    -fx-padding: 7 7 7 7;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":".calendarStandardDates {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"    -fx-alignment: center;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"    -fx-padding: 7 7 7 7;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"#calendarTitlePanel .button:hover {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"    -fx-background-color: #636363;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"#calendarTitlePanel .button:pressed {","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"    -fx-background-color: #949494;","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"#monthYearLabel {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"    -fx-padding: 0 10 0 10;","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"    -fx-font-size: 15pt;","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"#prevButton, #nextButton {","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"    -fx-padding: 2 5 2 5;","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2021-04-06"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":".currentDate {","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"    -fx-background-color: red;","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":".viewingDate {","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"    -fx-background-color: black;","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"    -fx-border-width: 5px;","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"    -fx-border-color: blue;","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"LimJunxue":56}},{"path":"src/main/resources/view/CalendarPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"\u003cVBox  xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"    \u003cHBox fx:id\u003d\"calendarTitlePanel\" style\u003d\"-fx-padding: 8 14 8 14;\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"        \u003cButton fx:id\u003d\"prevButton\" alignment\u003d\"TOP_LEFT\" onAction\u003d\"#handlePrevMonth\" text\u003d\"PREV\"/\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"        \u003cRegion HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"        \u003cLabel fx:id\u003d\"monthYearLabel\" text\u003d\"month year\" alignment\u003d\"CENTER\" textAlignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"        \u003cRegion HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"        \u003cButton fx:id\u003d\"nextButton\" alignment\u003d\"TOP_RIGHT\" onAction\u003d\"#handleNextMonth\" text\u003d\"NEXT\"/\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"    \u003cGridPane fx:id\u003d\"calendarDays\" prefWidth\u003d\"300\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"        \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"70\" prefWidth\u003d\"50\" text\u003d\"S\" GridPane.columnIndex\u003d\"0\"/\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"        \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"70\" prefWidth\u003d\"50\" text\u003d\"M\" GridPane.columnIndex\u003d\"1\"/\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"        \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"70\" prefWidth\u003d\"50\" text\u003d\"T\" GridPane.columnIndex\u003d\"2\"/\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"        \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"70\" prefWidth\u003d\"50\" text\u003d\"W\" GridPane.columnIndex\u003d\"3\"/\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"        \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"70\" prefWidth\u003d\"50\" text\u003d\"T\" GridPane.columnIndex\u003d\"4\"/\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"        \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"70\" prefWidth\u003d\"50\" text\u003d\"F\" GridPane.columnIndex\u003d\"5\"/\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"        \u003cLabel alignment\u003d\"CENTER\" prefHeight\u003d\"70\" prefWidth\u003d\"50\" text\u003d\"S\" GridPane.columnIndex\u003d\"6\"/\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"    \u003cGridPane fx:id\u003d\"calendar\" prefHeight\u003d\"300\" prefWidth\u003d\"300\" alignment\u003d\"TOP_CENTER\"/\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"LimJunxue":24}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-04-01"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"    \u003cTextArea fx:id\u003d\"commandTextArea\" promptText\u003d\"Enter command here...\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"LimJunxue":2,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"LimJunxue"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"LimJunxue"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"LimJunxue"},"content":"    -fx-padding: 3 5 3 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"LimJunxue"},"content":".separator .line {","lastModifiedDate":"2021-03-12"},{"lineNumber":132,"author":{"gitId":"LimJunxue"},"content":"    -fx-border-color: rgba(0, 0, 0, 0.1);","lastModifiedDate":"2021-03-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"LimJunxue"},"content":"#commandTextArea {","lastModifiedDate":"2021-03-12"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2021-03-12"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2021-03-12"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-12"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"LimJunxue"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-03-12"},{"lineNumber":324,"author":{"gitId":"LimJunxue"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-12"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":327,"author":{"gitId":"LimJunxue"},"content":"#commandTextArea .scroll-pane {","lastModifiedDate":"2021-03-12"},{"lineNumber":328,"author":{"gitId":"LimJunxue"},"content":"    -fx-background-color: #383838;","lastModifiedDate":"2021-03-12"},{"lineNumber":329,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":330,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":331,"author":{"gitId":"LimJunxue"},"content":"#commandTextArea .scroll-pane .viewport {","lastModifiedDate":"2021-03-12"},{"lineNumber":332,"author":{"gitId":"LimJunxue"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-12"},{"lineNumber":333,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":334,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":335,"author":{"gitId":"LimJunxue"},"content":"#commandTextArea .scroll-pane .content {","lastModifiedDate":"2021-03-12"},{"lineNumber":336,"author":{"gitId":"LimJunxue"},"content":"    -fx-background-color: #383838;","lastModifiedDate":"2021-03-12"},{"lineNumber":337,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-12"},{"lineNumber":338,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"LimJunxue"},"content":"#filterField, #taskListPanel, #taskWebpage {","lastModifiedDate":"2021-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":363,"author":{"gitId":"LimJunxue"},"content":".tag-card {","lastModifiedDate":"2021-03-24"},{"lineNumber":364,"author":{"gitId":"LimJunxue"},"content":"    -fx-max-height: 5;","lastModifiedDate":"2021-03-24"},{"lineNumber":365,"author":{"gitId":"LimJunxue"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-24"},{"lineNumber":366,"author":{"gitId":"LimJunxue"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2021-03-24"},{"lineNumber":367,"author":{"gitId":"LimJunxue"},"content":"    -fx-padding: 2 12 2 12;","lastModifiedDate":"2021-03-24"},{"lineNumber":368,"author":{"gitId":"LimJunxue"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-03-24"},{"lineNumber":369,"author":{"gitId":"LimJunxue"},"content":"    -fx-border-width: 5;","lastModifiedDate":"2021-03-24"},{"lineNumber":370,"author":{"gitId":"LimJunxue"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-03-24"},{"lineNumber":371,"author":{"gitId":"LimJunxue"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-03-24"},{"lineNumber":372,"author":{"gitId":"LimJunxue"},"content":"    -fx-background-insets: 5;","lastModifiedDate":"2021-03-24"},{"lineNumber":373,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":374,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":375,"author":{"gitId":"LimJunxue"},"content":".tag-title {","lastModifiedDate":"2021-03-24"},{"lineNumber":376,"author":{"gitId":"LimJunxue"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-24"},{"lineNumber":377,"author":{"gitId":"LimJunxue"},"content":"    -fx-background-color: #212121;","lastModifiedDate":"2021-03-24"},{"lineNumber":378,"author":{"gitId":"LimJunxue"},"content":"    -fx-alignment: center;","lastModifiedDate":"2021-03-24"},{"lineNumber":379,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"LimJunxue":39,"-":340}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"         title\u003d\"PlanIT\" minWidth\u003d\"900\" minHeight\u003d\"500\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"        \u003cURL value\u003d\"@TaskDetails.css\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"        \u003cURL value\u003d\"@Calendar.css\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"        \u003cHBox VBox.vgrow\u003d\"ALWAYS\" minWidth\u003d\"800\"\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"          \u003cVBox VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"            \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"                       prefHeight\u003d\"150\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"            \u003cHBox prefHeight\u003d\"600\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"              \u003cVBox fx:id\u003d\"calendarPanel\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" prefWidth\u003d\"350\"","lastModifiedDate":"2021-04-06"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"                    minWidth\u003d\"330\"\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                  \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"                \u003cStackPane fx:id\u003d\"calendarPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"              \u003cVBox VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"                \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"                           VBox.vgrow\u003d\"ALWAYS\" prefWidth\u003d\"350\" minWidth\u003d\"200\"\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"                    \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"                \u003cHBox fx:id\u003d\"tagListPanel\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"LimJunxue"},"content":"                  \u003cLabel text\u003d\"Tags: \" prefWidth\u003d\"50\" minWidth\u003d\"50\" prefHeight\u003d\"60\" styleClass\u003d\"tag-title\"/\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"                  \u003cStackPane fx:id\u003d\"tagListPanelPlaceholder\" prefHeight\u003d\"60\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"LimJunxue"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"LimJunxue"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"          \u003cVBox fx:id\u003d\"taskListPanel\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" prefWidth\u003d\"450\" minWidth\u003d\"300\"\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":70,"author":{"gitId":"LimJunxue"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"LimJunxue"},"content":"            \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"LimJunxue"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"LimJunxue"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"LimJunxue":35,"-":46}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2017-06-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"LimJunxue":1,"-":8}},{"path":"src/main/resources/view/TagListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"\u003c?import javafx.scene.control.Slider?\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"  \u003cListView fx:id\u003d\"tagListView\" VBox.vgrow\u003d\"ALWAYS\" orientation\u003d\"HORIZONTAL\"\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"    \u003cSlider blockIncrement\u003d\"1000\" snapToTicks\u003d\"true\" prefWidth\u003d\"0.01\" minWidth\u003d\"0.01\" maxWidth\u003d\"0.01\" maxHeight\u003d\"1\"/\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"  \u003c/ListView\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"LimJunxue":11}},{"path":"src/main/resources/view/TaskDetails.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":".description {","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"    -fx-text-fill: rgba(255, 255, 255, 0.5);","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"    -fx-padding: 10 10 10 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":".status-red {","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"    -fx-padding: 0 3 0 3;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"    -fx-text-fill: salmon;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"    -fx-border-color: salmon;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":".status-green {","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"    -fx-padding: 0 3 0 3;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"    -fx-text-fill: palegreen;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"    -fx-border-color: palegreen;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":".recurring-schedule {","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-23"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"    -fx-max-height: 110;","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"LimJunxue":35}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"    \u003cVBox minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"      \u003cVBox fx:id\u003d\"detailsPlaceholder\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"      \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimJunxue":8,"-":13}},{"path":"src/main/resources/view/TaskListCardDetails.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"\u003cVBox id\u003d\"details\" fx:id\u003d\"details\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"    \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"        \u003cLabel fx:id\u003d\"id\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"            \u003cminWidth\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"                \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"                \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"            \u003c/minWidth\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"        \u003cLabel fx:id\u003d\"title\" text\u003d\"\\$first\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"        \u003cRegion HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"        \u003cLabel fx:id\u003d\"status\" text\u003d\"\\$status\" \u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"            \u003cminWidth\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"                \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"                \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"            \u003c/minWidth\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-04-06"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"    \u003cFlowPane fx:id\u003d\"tags\" minWidth\u003d\"200\"/\u003e","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"    \u003cHBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"habi39"},"content":"        \u003cLabel fx:id\u003d\"date\" text\u003d\"No date\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"            \u003cgraphic\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"                \u003cImageView fitHeight\u003d\"15.0\" fitWidth\u003d\"15.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"                    \u003cimage\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"                        \u003cImage url\u003d\"@../images/calendar_icon.png\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"                    \u003c/image\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"            \u003c/graphic\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"        \u003cLabel fx:id\u003d\"duration\" text\u003d\"No duration\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"            \u003cgraphic\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"                \u003cImageView fitHeight\u003d\"15.0\" fitWidth\u003d\"15.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"                    \u003cimage\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"                        \u003cImage url\u003d\"@../images/clock_icon.png\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"                    \u003c/image\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"                \u003c/ImageView\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"            \u003c/graphic\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"LimJunxue":48,"habi39":1}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"  \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimJunxue":1,"-":7}},{"path":"src/test/data/JsonPlannerStorageTest/invalidAndValidTaskPlanner.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"  \"tasks\": [ {","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"habi39"},"content":"    \"title\": \"Task With Invalid date\",","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"habi39"},"content":"    \"date\": \"12/10/2012\",","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"kaixiangtay"},"content":"    \"recurringSchedule\": \"[02/06/2021][Wed][weekly]\",","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"    \"description\": \"4th street\"","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"kaixiangtay"},"content":"    \"title\": \"Valid Task\",","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"habi39"},"content":"    \"date\": \"12/10/2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"kaixiangtay"},"content":"    \"recurringSchedule\": \"[02/06/2021][Wed][weekly]\",","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"    \"description\": \"4th street\"","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LimJunxue":3,"kaixiangtay":3,"habi39":3,"-":4}},{"path":"src/test/data/JsonPlannerStorageTest/invalidTaskPlanner.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"  \"tasks\": [ {","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"    \"title\": \"Task with invalid title field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"habi39"},"content":"    \"date\": \"08/02/20212\",","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"kaixiangtay"},"content":"    \"recurringSchedule\": \"[08/06/2021][Tues][weekly]\",","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"    \"description\": \"4th street\"","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LimJunxue":3,"kaixiangtay":1,"habi39":1,"-":3}},{"path":"src/test/data/JsonSerializablePlannerTest/duplicateTaskPlanner.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"  \"tasks\": [ {","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"    \"title\": \"Alice Pauline\",","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"habi39"},"content":"    \"date\": \"12/10/2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"habi39"},"content":"    \"duration\": \"12:30-13:30\",","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"kaixiangtay"},"content":"    \"recurringSchedule\": \"[08/06/2021][Tue][weekly]\",","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"    \"description\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"    \"status\": \"done\",","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"    \"title\": \"Alice Pauline\",","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"habi39"},"content":"    \"date\": \"12/10/2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"habi39"},"content":"    \"duration\": \"12:30-13:30\",","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"kaixiangtay"},"content":"    \"recurringSchedule\": \"[08/06/2021][Tue][weekly]\",","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"    \"description\": \"4th street\",","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"    \"status\": \"done\"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LimJunxue":4,"maxxng":3,"kaixiangtay":2,"habi39":4,"-":5}},{"path":"src/test/data/JsonSerializablePlannerTest/invalidTaskPlanner.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"  \"tasks\": [ {","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"    \"title\": \"Ha!ns Muster\",","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"habi39"},"content":"    \"date\": \"12/12/20212\",","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"habi39"},"content":"    \"duration\": \"12:30\",","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"kaixiangtay"},"content":"    \"recurringSchedule\": \"valid@l!3e\",","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"    \"description\": \"4th street\"","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LimJunxue":3,"kaixiangtay":1,"habi39":2,"-":3}},{"path":"src/test/data/JsonSerializablePlannerTest/typicalTasksPlanner.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"  \"_comment\": \"PlanIt save file which contains the same Task values as in TypicalTasks#getTypicalPlanner()\",","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"  \"tasks\" : [ {","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"    \"title\" : \"Assignment 79\",","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"habi39"},"content":"    \"date\" : \"\",","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"habi39"},"content":"    \"duration\": \"12:30-13:30\",","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"kaixiangtay"},"content":"    \"recurringSchedule\" : \"[10/06/2021][Mon][biweekly]\",","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"    \"description\": \"Build the next Google\",","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"    \"status\": \"not done\",","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"    \"tagged\" : [ \"priorities\" ]","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"    \"title\" : \"Build a gaming PC\",","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"habi39"},"content":"    \"date\" : \"12/12/2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"    \"duration\": \"\",","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"    \"recurringSchedule\" : \"\",","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"    \"description\": \"buy: coffee, 3080, 40-inch monitor\",","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"    \"status\": \"not done\",","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"    \"tagged\" : [ \"findMoney\", \"priorities\" ]","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"    \"title\" : \"Countdown to finals\",","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"habi39"},"content":"    \"date\" : \"\",","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"habi39"},"content":"    \"duration\": \"12:30-13:30\",","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"kaixiangtay"},"content":"    \"recurringSchedule\" : \"[10/06/2021][Wed][weekly]\",","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"    \"description\": \"aiken doeet\",","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"    \"status\": \"done\",","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"    \"title\" : \"Demo our amazing product\",","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"habi39"},"content":"    \"date\" : \"\",","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"habi39"},"content":"    \"duration\": \"12:30-13:30\",","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"kaixiangtay"},"content":"    \"recurringSchedule\" : \"[05/06/2021][Thu][biweekly]\",","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"    \"description\": \"Number 1 for real\",","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"maxxng"},"content":"    \"status\": \"done\",","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"    \"tagged\" : [ \"fact\" ]","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"    \"title\" : \"Ensure that I eat lunch\",","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"habi39"},"content":"    \"date\" : \"20/10/2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"maxxng"},"content":"    \"duration\": \"\",","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"maxxng"},"content":"    \"recurringSchedule\" : \"\",","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"    \"description\": \"budget 3$\",","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"maxxng"},"content":"    \"status\": \"done\",","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"    \"title\" : \"Final project consult again\",","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"habi39"},"content":"    \"date\" : \"\",","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"habi39"},"content":"    \"duration\": \"12:30-13:30\",","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"maxxng"},"content":"    \"recurringSchedule\" : \"\",","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"    \"description\": \"at COM2\",","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"maxxng"},"content":"    \"status\": \"done\",","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"    \"title\" : \"Get ready for 2101 presentation\",","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"habi39"},"content":"    \"date\" : \"\",","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"maxxng"},"content":"    \"duration\": \"\",","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"    \"recurringSchedule\" : \"[18/06/2021][thu][weekly]\",","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"    \"description\": \"remember to shave\",","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"maxxng"},"content":"    \"status\": \"done\",","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LimJunxue":20,"maxxng":13,"kaixiangtay":3,"habi39":11,"-":13}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"  \"plannerFilePath\" : \"planit.json\"","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"LimJunxue":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"  \"plannerFilePath\" : \"planit.json\"","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"LimJunxue":1,"-":10}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"        final Index fifthTaskIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(fifthTaskIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(fifthTaskIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(fifthTaskIndex.equals(fifthTaskIndex));","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(fifthTaskIndex.equals(null));","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(fifthTaskIndex.equals(5.0f));","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(fifthTaskIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"LimJunxue":7,"-":53}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_AMY;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DURATION_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RECURRINGSCHEDULE_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_AMY;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TITLE_DESC_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"habi39"},"content":"import static seedu.address.testutil.TypicalTasks.AMY_NO_DATE;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.ReadOnlyPlanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.storage.JsonPlannerStorage;","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"        JsonPlannerStorage plannerStorage \u003d","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"                new JsonPlannerStorage(temporaryFolder.resolve(\"planner.json\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"        StorageManager storage \u003d new StorageManager(plannerStorage, userPrefsStorage);","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"mesyeux"},"content":"        String deleteCommand \u003d \"rmt 9\";","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"kaixiangtay"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_ALL_TASKS_SUCCESS, model);","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"LimJunxue"},"content":"        // Setup LogicManager with JsonPlannerIoExceptionThrowingStub","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"LimJunxue"},"content":"        JsonPlannerStorage plannerStorage \u003d","lastModifiedDate":"2021-03-11"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"                new JsonPlannerIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionPlanner.json\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"LimJunxue"},"content":"        StorageManager storage \u003d new StorageManager(plannerStorage, userPrefsStorage);","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"maxxng"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + TITLE_DESC_AMY + DURATION_DESC_AMY","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"kaixiangtay"},"content":"                + RECURRINGSCHEDULE_DESC_AMY + DESCRIPTION_DESC_AMY + STATUS_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"habi39"},"content":"        Task expectedTask \u003d new TaskBuilder(AMY_NO_DATE).withTags().build();","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"LimJunxue"},"content":"        expectedModel.addTask(expectedTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"LimJunxue"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":94,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredTaskList().remove(0));","lastModifiedDate":"2021-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"LimJunxue"},"content":"        Model expectedModel \u003d new ModelManager(model.getPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"LimJunxue"},"content":"    private static class JsonPlannerIoExceptionThrowingStub extends JsonPlannerStorage {","lastModifiedDate":"2021-03-09"},{"lineNumber":154,"author":{"gitId":"LimJunxue"},"content":"        private JsonPlannerIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-03-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"LimJunxue"},"content":"        public void savePlanner(ReadOnlyPlanner planner, Path filePath) throws IOException {","lastModifiedDate":"2021-03-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"LimJunxue":22,"maxxng":2,"mesyeux":1,"kaixiangtay":3,"habi39":3,"-":132}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DURATION_AMY;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RECURRINGSCHEDULE_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalPlanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.conditions.ConstraintManager;","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"        model \u003d new ModelManager(getTypicalPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"    public void execute_newTask_success() {","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"        Model expectedModel \u003d new ModelManager(model.getPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"        expectedModel.addTask(validTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"        assertCommandSuccess(new AddCommand(validTask), model,","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validTask), expectedModel);","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"habi39"},"content":"    public void execute_taskWithDateAndRecurringSchedule_throwsCommandException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"maxxng"},"content":"        Task invalidTask \u003d new TaskBuilder().withTitle(VALID_TITLE_AMY)","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"habi39"},"content":"                .withDate(VALID_DATE_AMY).withRecurringSchedule(VALID_RECURRINGSCHEDULE_AMY)","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"maxxng"},"content":"                .withDescription(VALID_DESCRIPTION_AMY).withStatus(VALID_STATUS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"maxxng"},"content":"        assertCommandFailure(new AddCommand(invalidTask), model,","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"maxxng"},"content":"                ConstraintManager.MESSAGE_DATE_RECURRING_SCHEDULE_CONFLICT);","lastModifiedDate":"2021-04-02"},{"lineNumber":55,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"maxxng"},"content":"    public void execute_taskWithDurationOnly_throwsCommandException() {","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"maxxng"},"content":"        Task invalidTask \u003d new TaskBuilder().withTitle(VALID_TITLE_AMY).withDuration(VALID_DURATION_AMY).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"maxxng"},"content":"        assertCommandFailure(new AddCommand(invalidTask), model, ConstraintManager.MESSAGE_DURATION_STANDALONE_ERROR);","lastModifiedDate":"2021-04-02"},{"lineNumber":62,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"LimJunxue"},"content":"        Task taskInList \u003d model.getPlanner().getTaskList().get(0);","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"LimJunxue"},"content":"        assertCommandFailure(new AddCommand(taskInList), model, AddCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"maxxng":21,"LimJunxue":13,"habi39":3,"-":33}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RECURRINGSCHEDULE_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_AMY;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"habi39"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.conditions.ConstraintManager;","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.ObservableCalendarDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.Planner;","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.ReadOnlyPlanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded();","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"        CommandResult commandResult \u003d new AddCommand(validTask).execute(modelStub);","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validTask), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(Arrays.asList(validTask), modelStub.tasksAdded);","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"        AddCommand addCommand \u003d new AddCommand(validTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"        ModelStub modelStub \u003d new ModelStubWithTask(validTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":62,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_TASK, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"habi39"},"content":"    public void execute_dateAndRecurringSchedule_throwsCommandException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"maxxng"},"content":"        Task invalidTask \u003d new TaskBuilder().withTitle(VALID_TITLE_AMY)","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"habi39"},"content":"                .withDate(VALID_DATE_AMY).withRecurringSchedule(VALID_RECURRINGSCHEDULE_AMY)","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"maxxng"},"content":"                .withDescription(VALID_DESCRIPTION_AMY).withStatus(VALID_STATUS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"maxxng"},"content":"        AddCommand addCommand \u003d new AddCommand(invalidTask);","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"maxxng"},"content":"        ModelStub modelStub \u003d new ModelStubAcceptingTaskAdded();","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"maxxng"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"maxxng"},"content":"                ConstraintManager.MESSAGE_DATE_RECURRING_SCHEDULE_CONFLICT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-04-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"LimJunxue"},"content":"        Task alice \u003d new TaskBuilder().withTitle(\"Alice\").build();","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"        Task bob \u003d new TaskBuilder().withTitle(\"Bob\").build();","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":97,"author":{"gitId":"LimJunxue"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"LimJunxue"},"content":"        public Path getPlannerFilePath() {","lastModifiedDate":"2021-03-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"LimJunxue"},"content":"        public void setPlannerFilePath(Path plannerFilePath) {","lastModifiedDate":"2021-03-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"LimJunxue"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"LimJunxue"},"content":"        public void setPlanner(ReadOnlyPlanner newData) {","lastModifiedDate":"2021-03-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"LimJunxue"},"content":"        public ReadOnlyPlanner getPlanner() {","lastModifiedDate":"2021-03-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"LimJunxue"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"mesyeux"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":156,"author":{"gitId":"mesyeux"},"content":"        public boolean dateOver(Task task) {","lastModifiedDate":"2021-03-22"},{"lineNumber":157,"author":{"gitId":"mesyeux"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-22"},{"lineNumber":158,"author":{"gitId":"mesyeux"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":159,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"LimJunxue"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2021-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"LimJunxue"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-03-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"LimJunxue"},"content":"        public boolean hasTag(Tag tag) {","lastModifiedDate":"2021-03-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"LimJunxue"},"content":"        public Tag getTag(Tag tag) {","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"LimJunxue"},"content":"        public void deleteTag(Tag target) {","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"LimJunxue"},"content":"        public void addTag(Tag tag) {","lastModifiedDate":"2021-03-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":191,"author":{"gitId":"LimJunxue"},"content":"        public Set\u003cTag\u003e addTagsIfAbsent(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":196,"author":{"gitId":"LimJunxue"},"content":"        public void setTags(Set\u003cTag\u003e target, Set\u003cTag\u003e editedTags) throws CommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":201,"author":{"gitId":"mesyeux"},"content":"        public boolean isEmpty() {","lastModifiedDate":"2021-03-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":206,"author":{"gitId":"mesyeux"},"content":"        public int size() {","lastModifiedDate":"2021-03-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":211,"author":{"gitId":"mesyeux"},"content":"        public double getPercentage() {","lastModifiedDate":"2021-03-29"},{"lineNumber":212,"author":{"gitId":"mesyeux"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":213,"author":{"gitId":"mesyeux"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":214,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":215,"author":{"gitId":"mesyeux"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":216,"author":{"gitId":"mesyeux"},"content":"        public int getNumberDue() {","lastModifiedDate":"2021-03-29"},{"lineNumber":217,"author":{"gitId":"mesyeux"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":218,"author":{"gitId":"mesyeux"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":219,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":220,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":221,"author":{"gitId":"mesyeux"},"content":"        @Override","lastModifiedDate":"2021-03-22"},{"lineNumber":222,"author":{"gitId":"mesyeux"},"content":"        public String countdownTask(Task task) {","lastModifiedDate":"2021-03-22"},{"lineNumber":223,"author":{"gitId":"mesyeux"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-22"},{"lineNumber":224,"author":{"gitId":"mesyeux"},"content":"        }","lastModifiedDate":"2021-03-22"},{"lineNumber":225,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"LimJunxue"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-03-02"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"LimJunxue"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":232,"author":{"gitId":"LimJunxue"},"content":"        public ObservableList\u003cTag\u003e getSortedTagList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":233,"author":{"gitId":"LimJunxue"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-24"},{"lineNumber":234,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":235,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"LimJunxue"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-03-02"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":241,"author":{"gitId":"habi39"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":242,"author":{"gitId":"habi39"},"content":"        public void updateSortedTaskList(Comparator\u003cTask\u003e comparator) {","lastModifiedDate":"2021-03-23"},{"lineNumber":243,"author":{"gitId":"habi39"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-23"},{"lineNumber":244,"author":{"gitId":"habi39"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":245,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":246,"author":{"gitId":"LimJunxue"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":247,"author":{"gitId":"LimJunxue"},"content":"        public void updateSortedTagList(Comparator\u003cTag\u003e comparator) {","lastModifiedDate":"2021-03-24"},{"lineNumber":248,"author":{"gitId":"LimJunxue"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-24"},{"lineNumber":249,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":250,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":251,"author":{"gitId":"LimJunxue"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":252,"author":{"gitId":"LimJunxue"},"content":"        public ObservableCalendarDate getCalendarDate() {","lastModifiedDate":"2021-03-29"},{"lineNumber":253,"author":{"gitId":"LimJunxue"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":254,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":255,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":256,"author":{"gitId":"LimJunxue"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":257,"author":{"gitId":"LimJunxue"},"content":"        public void setCalendarDate(LocalDate date) {","lastModifiedDate":"2021-03-29"},{"lineNumber":258,"author":{"gitId":"LimJunxue"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":259,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":260,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":261,"author":{"gitId":"LimJunxue"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":262,"author":{"gitId":"LimJunxue"},"content":"        public void resetCalendarDate() {","lastModifiedDate":"2021-03-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":268,"author":{"gitId":"LimJunxue"},"content":"     * A Model stub that contains a single task.","lastModifiedDate":"2021-03-02"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":270,"author":{"gitId":"LimJunxue"},"content":"    private class ModelStubWithTask extends ModelStub {","lastModifiedDate":"2021-03-02"},{"lineNumber":271,"author":{"gitId":"LimJunxue"},"content":"        private final Task task;","lastModifiedDate":"2021-03-02"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":273,"author":{"gitId":"LimJunxue"},"content":"        ModelStubWithTask(Task task) {","lastModifiedDate":"2021-03-02"},{"lineNumber":274,"author":{"gitId":"LimJunxue"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-03-02"},{"lineNumber":275,"author":{"gitId":"LimJunxue"},"content":"            this.task \u003d task;","lastModifiedDate":"2021-03-02"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":279,"author":{"gitId":"LimJunxue"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-03-02"},{"lineNumber":280,"author":{"gitId":"LimJunxue"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-03-02"},{"lineNumber":281,"author":{"gitId":"LimJunxue"},"content":"            return this.task.isSameTask(task);","lastModifiedDate":"2021-03-02"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":286,"author":{"gitId":"LimJunxue"},"content":"     * A Model stub that always accept the task being added.","lastModifiedDate":"2021-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":288,"author":{"gitId":"LimJunxue"},"content":"    private class ModelStubAcceptingTaskAdded extends ModelStub {","lastModifiedDate":"2021-03-02"},{"lineNumber":289,"author":{"gitId":"LimJunxue"},"content":"        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-02"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":292,"author":{"gitId":"LimJunxue"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2021-03-02"},{"lineNumber":293,"author":{"gitId":"LimJunxue"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-03-02"},{"lineNumber":294,"author":{"gitId":"LimJunxue"},"content":"            return tasksAdded.stream().anyMatch(task::isSameTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":298,"author":{"gitId":"LimJunxue"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2021-03-02"},{"lineNumber":299,"author":{"gitId":"LimJunxue"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-03-02"},{"lineNumber":300,"author":{"gitId":"LimJunxue"},"content":"            tasksAdded.add(task);","lastModifiedDate":"2021-03-02"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":304,"author":{"gitId":"LimJunxue"},"content":"        public ReadOnlyPlanner getPlanner() {","lastModifiedDate":"2021-03-09"},{"lineNumber":305,"author":{"gitId":"LimJunxue"},"content":"            return new Planner();","lastModifiedDate":"2021-03-09"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":309,"author":{"gitId":"LimJunxue"},"content":"        public Set\u003cTag\u003e addTagsIfAbsent(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-24"},{"lineNumber":310,"author":{"gitId":"LimJunxue"},"content":"            return tags;","lastModifiedDate":"2021-03-24"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"maxxng":16,"LimJunxue":84,"mesyeux":22,"habi39":9,"-":183}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalPlanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.Planner;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"    public void execute_emptyPlanner_success() {","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"    public void execute_nonEmptyPlanner_success() {","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"        Model model \u003d new ModelManager(getTypicalPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"        expectedModel.setPlanner(new Planner());","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"LimJunxue":7,"-":25}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.commons.CalendarDirection;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(commandResult.equals(new CommandResult(","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"                \"feedback\", false, CalendarDirection.NONE, false)));","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"        // different calendar navigation value -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(commandResult.equals(new CommandResult(","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"                \"feedback\", true, CalendarDirection.PREV, false)));","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(commandResult.equals(new CommandResult(","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"                \"feedback\", true, CalendarDirection.NEXT, false)));","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(commandResult.equals(new CommandResult(","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"                \"feedback\", false, CalendarDirection.NONE, true)));","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"        // different calendar navigation value -\u003e returns different hashcode","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"                \"feedback\", true, CalendarDirection.PREV, false).hashCode());","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"                \"feedback\", false, CalendarDirection.NONE, true).hashCode());","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"LimJunxue":16,"-":47}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURRINGSCHEDULE;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.Planner;","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.model.task.predicates.TitleContainsKeywordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"    public static final String VALID_TITLE_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"    public static final String VALID_TITLE_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"habi39"},"content":"    public static final String VALID_DATE_AMY \u003d \"12/10/2021\";","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"habi39"},"content":"    public static final String VALID_DATE_BOB \u003d \"14/10/2021\";","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"kaixiangtay"},"content":"    public static final String VALID_RECURRINGSCHEDULE_AMY \u003d \"[10/06/2021][Mon][biweekly]\";","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"habi39"},"content":"    public static final String VALID_RECURRINGSCHEDULE_BOB \u003d \"[08/06/2021][Tue][weekly]\";","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"    public static final String VALID_DESCRIPTION_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"    public static final String VALID_DESCRIPTION_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"maxxng"},"content":"    public static final String VALID_STATUS_AMY \u003d \"done\";","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"maxxng"},"content":"    public static final String VALID_STATUS_BOB \u003d \"not done\";","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"maxxng"},"content":"    public static final String VALID_STATUS_INDEX \u003d \"1000\";","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"habi39"},"content":"    public static final String VALID_DURATION_AMY \u003d \"12:30-13:30\";","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"habi39"},"content":"    public static final String VALID_DURATION_BOB \u003d \"12:30-13:30\";","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"    public static final String TITLE_DESC_AMY \u003d \" \" + PREFIX_TITLE + VALID_TITLE_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"    public static final String TITLE_DESC_BOB \u003d \" \" + PREFIX_TITLE + VALID_TITLE_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"habi39"},"content":"    public static final String DURATION_DESC_AMY \u003d \" \" + PREFIX_DURATION + VALID_DURATION_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"habi39"},"content":"    public static final String DURATION_DESC_BOB \u003d \" \" + PREFIX_DURATION + VALID_DURATION_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"habi39"},"content":"    public static final String DATE_DESC_AMY \u003d \" \" + PREFIX_DATE + VALID_DATE_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"habi39"},"content":"    public static final String DATE_DESC_BOB \u003d \" \" + PREFIX_DATE + VALID_DATE_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"kaixiangtay"},"content":"    public static final String RECURRINGSCHEDULE_DESC_AMY \u003d \" \" + PREFIX_RECURRINGSCHEDULE","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"kaixiangtay"},"content":"            + VALID_RECURRINGSCHEDULE_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"kaixiangtay"},"content":"    public static final String RECURRINGSCHEDULE_DESC_BOB \u003d \" \" + PREFIX_RECURRINGSCHEDULE","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"kaixiangtay"},"content":"            + VALID_RECURRINGSCHEDULE_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"    public static final String DESCRIPTION_DESC_AMY \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_AMY;","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"    public static final String DESCRIPTION_DESC_BOB \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"maxxng"},"content":"    public static final String STATUS_DESC_AMY \u003d \" \" + PREFIX_STATUS + VALID_STATUS_AMY;","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"maxxng"},"content":"    public static final String STATUS_DESC_BOB \u003d \" \" + PREFIX_STATUS + VALID_STATUS_BOB;","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"    public static final String INVALID_TITLE_DESC \u003d \" \" + PREFIX_TITLE + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in titles","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"habi39"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \" + PREFIX_DATE","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"habi39"},"content":"            + \"12/01/20002\"; // Date not allowed in dates","lastModifiedDate":"2021-04-02"},{"lineNumber":67,"author":{"gitId":"kaixiangtay"},"content":"    public static final String INVALID_DURATION_DESC \u003d \" \" + PREFIX_DURATION + \"djdjhej\"; // \u0027 \u0027 not allowed in duration","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"kaixiangtay"},"content":"    public static final String INVALID_RECURRINGSCHEDULE_DESC \u003d \" \" + PREFIX_RECURRINGSCHEDULE","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"kaixiangtay"},"content":"             + \"10/06/2021Monbiweekly\"; // missing \u0027[]\u0027 symbol within the field","lastModifiedDate":"2021-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"maxxng"},"content":"    public static final String INVALID_STATUS_INDEX \u003d \" \" + \"2147483648\"; // Integer Overflow","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"    public static final EditCommand.EditTaskDescriptor DESC_AMY;","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"    public static final EditCommand.EditTaskDescriptor DESC_BOB;","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"habi39"},"content":"        DESC_AMY \u003d new EditTaskDescriptorBuilder().withTitle(VALID_TITLE_AMY).withDuration(VALID_DURATION_AMY)","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"habi39"},"content":"                .withDate(VALID_DATE_AMY).withRecurringSchedule(VALID_RECURRINGSCHEDULE_AMY)","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"kaixiangtay"},"content":"                .withDescription(VALID_DESCRIPTION_AMY).withStatus(VALID_STATUS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"habi39"},"content":"        DESC_BOB \u003d new EditTaskDescriptorBuilder().withTitle(VALID_TITLE_BOB).withDuration(VALID_DURATION_BOB)","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"habi39"},"content":"                .withDate(VALID_DATE_BOB).withRecurringSchedule(VALID_RECURRINGSCHEDULE_BOB)","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"kaixiangtay"},"content":"                .withDescription(VALID_DESCRIPTION_BOB).withStatus(VALID_STATUS_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"LimJunxue"},"content":"     * - the planner, filtered task list and selected task in {@code actualModel} remain unchanged","lastModifiedDate":"2021-03-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"LimJunxue"},"content":"        Planner expectedPlanner \u003d new Planner(actualModel.getPlanner());","lastModifiedDate":"2021-03-09"},{"lineNumber":125,"author":{"gitId":"LimJunxue"},"content":"        List\u003cTask\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredTaskList());","lastModifiedDate":"2021-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":128,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(expectedPlanner, actualModel.getPlanner());","lastModifiedDate":"2021-03-09"},{"lineNumber":129,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredTaskList());","lastModifiedDate":"2021-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"LimJunxue"},"content":"     * Updates {@code model}\u0027s filtered list to show only the task at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-02"},{"lineNumber":133,"author":{"gitId":"LimJunxue"},"content":"     * {@code model}\u0027s planner.","lastModifiedDate":"2021-03-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"LimJunxue"},"content":"    public static void showTaskAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-02"},{"lineNumber":136,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTaskList().size());","lastModifiedDate":"2021-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"LimJunxue"},"content":"        Task task \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-02"},{"lineNumber":139,"author":{"gitId":"LimJunxue"},"content":"        final String[] splitTitle \u003d task.getTitle().fullTitle.split(\"\\\\s+\");","lastModifiedDate":"2021-03-03"},{"lineNumber":140,"author":{"gitId":"LimJunxue"},"content":"        model.updateFilteredTaskList(new TitleContainsKeywordsPredicate(Arrays.asList(splitTitle[0])));","lastModifiedDate":"2021-03-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(1, model.getFilteredTaskList().size());","lastModifiedDate":"2021-03-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"LimJunxue":29,"maxxng":7,"kaixiangtay":12,"habi39":17,"-":79}},{"path":"src/test/java/seedu/address/logic/commands/CountdownCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalPlanner;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"/**","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":" * Contains integration tests (interaction with the Model) and unit tests for CountdownCommand.","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":" */","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"public class CountdownCommandTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"    private Model model \u003d new ModelManager(getTypicalPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"maxxng"},"content":"        Task taskToCountdown \u003d model.getFilteredTaskList().get(INDEX_SECOND_TASK.getZeroBased());","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"habi39"},"content":"        long daysLeft \u003d LocalDate.now().until(taskToCountdown.getDate().getDate(),","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"                ChronoUnit.DAYS);","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"maxxng"},"content":"        CountdownCommand countdownCommand \u003d new CountdownCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"        String expectedMessage \u003d String.format(CountdownCommand.MESSAGE_COUNTDOWN_TASK_SUCCESS,","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"                daysLeft, taskToCountdown);","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"        assertCommandSuccess(countdownCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"        CountdownCommand countdownCommand \u003d new CountdownCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"mesyeux"},"content":"        assertCommandFailure(countdownCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"mesyeux"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"mesyeux"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"maxxng"},"content":"        showTaskAtIndex(model, INDEX_SECOND_TASK);","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"mesyeux"},"content":"        Task taskToCountdown \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"habi39"},"content":"        long daysLeft \u003d LocalDate.now().until(taskToCountdown.getDate().getDate(),","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"mesyeux"},"content":"                ChronoUnit.DAYS);","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"mesyeux"},"content":"        CountdownCommand countdownCommand \u003d new CountdownCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"mesyeux"},"content":"        String expectedMessage \u003d String.format(CountdownCommand.MESSAGE_COUNTDOWN_TASK_SUCCESS,","lastModifiedDate":"2021-03-22"},{"lineNumber":65,"author":{"gitId":"mesyeux"},"content":"                daysLeft, taskToCountdown);","lastModifiedDate":"2021-03-22"},{"lineNumber":66,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":67,"author":{"gitId":"mesyeux"},"content":"        Model expectedModel \u003d new ModelManager(model.getPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-22"},{"lineNumber":68,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":69,"author":{"gitId":"maxxng"},"content":"        showTaskAtIndex(expectedModel, INDEX_SECOND_TASK);","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"mesyeux"},"content":"        assertCommandSuccess(countdownCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-22"},{"lineNumber":71,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":72,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":73,"author":{"gitId":"mesyeux"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":74,"author":{"gitId":"mesyeux"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":75,"author":{"gitId":"mesyeux"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-22"},{"lineNumber":76,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":77,"author":{"gitId":"mesyeux"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-22"},{"lineNumber":78,"author":{"gitId":"mesyeux"},"content":"        // ensures that outOfBoundIndex is still in bounds of planner list","lastModifiedDate":"2021-03-22"},{"lineNumber":79,"author":{"gitId":"mesyeux"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPlanner().getTaskList().size());","lastModifiedDate":"2021-03-22"},{"lineNumber":80,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":81,"author":{"gitId":"mesyeux"},"content":"        CountdownCommand countdownCommand \u003d new CountdownCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-22"},{"lineNumber":82,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":83,"author":{"gitId":"mesyeux"},"content":"        assertCommandFailure(countdownCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-22"},{"lineNumber":84,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":85,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":86,"author":{"gitId":"mesyeux"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":87,"author":{"gitId":"mesyeux"},"content":"    public void equals() {","lastModifiedDate":"2021-03-22"},{"lineNumber":88,"author":{"gitId":"mesyeux"},"content":"        CountdownCommand countdownFirstCommand \u003d new CountdownCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-22"},{"lineNumber":89,"author":{"gitId":"mesyeux"},"content":"        CountdownCommand countdownSecondCommand \u003d new CountdownCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2021-03-22"},{"lineNumber":90,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":91,"author":{"gitId":"mesyeux"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-22"},{"lineNumber":92,"author":{"gitId":"mesyeux"},"content":"        assertTrue(countdownFirstCommand.equals(countdownFirstCommand));","lastModifiedDate":"2021-03-22"},{"lineNumber":93,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":94,"author":{"gitId":"mesyeux"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-22"},{"lineNumber":95,"author":{"gitId":"mesyeux"},"content":"        CountdownCommand countdownFirstCommandCopy \u003d new CountdownCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-22"},{"lineNumber":96,"author":{"gitId":"mesyeux"},"content":"        assertTrue(countdownFirstCommand.equals(countdownFirstCommandCopy));","lastModifiedDate":"2021-03-22"},{"lineNumber":97,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":98,"author":{"gitId":"mesyeux"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":99,"author":{"gitId":"mesyeux"},"content":"        assertFalse(countdownFirstCommand.equals(1));","lastModifiedDate":"2021-03-22"},{"lineNumber":100,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":101,"author":{"gitId":"mesyeux"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":102,"author":{"gitId":"mesyeux"},"content":"        assertFalse(countdownFirstCommand.equals(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":103,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":104,"author":{"gitId":"mesyeux"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":105,"author":{"gitId":"mesyeux"},"content":"        assertFalse(countdownFirstCommand.equals(countdownSecondCommand));","lastModifiedDate":"2021-03-22"},{"lineNumber":106,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":107,"author":{"gitId":"mesyeux"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"maxxng":4,"mesyeux":101,"habi39":2}},{"path":"src/test/java/seedu/address/logic/commands/DeleteFieldCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"//@@author mesyeux","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalPlanner;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"import seedu.address.logic.conditions.ConstraintManager;","lastModifiedDate":"2021-04-02"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.Planner;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":" * {@code DeleteFieldCommand}.","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"public class DeleteFieldCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"    private Model model \u003d new ModelManager(getTypicalPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"    public void execute_validIndexValidFieldUnfilteredList_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"        Task taskToDeleteFieldFrom \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"        Task taskWithFieldDeleted \u003d new TaskBuilder().withTitle(\"Assignment 79\")","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"                .withDescription(\"Build the next Google\").withRecurringSchedule(\"[10/06/2021][Mon][biweekly]\")","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"                .withStatus(\"not done\").withDuration(\"12:30-13:30\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"        String fieldToDelete \u003d \"t/\";","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"mesyeux"},"content":"        DeleteFieldCommand deleteFieldCommand \u003d new DeleteFieldCommand(INDEX_FIRST_TASK, fieldToDelete);","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"        String expectedMessage \u003d String.format(DeleteFieldCommand.MESSAGE_DELETE_FIELD_SUCCESS, taskWithFieldDeleted);","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"mesyeux"},"content":"        expectedModel.setTask(taskToDeleteFieldFrom, taskWithFieldDeleted);","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"mesyeux"},"content":"        assertCommandSuccess(deleteFieldCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"mesyeux"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"mesyeux"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":"        DeleteFieldCommand deleteCommand \u003d new DeleteFieldCommand(outOfBoundIndex, \"t/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"mesyeux"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"mesyeux"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"mesyeux"},"content":"    public void execute_validIndexTitleFieldUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"mesyeux"},"content":"        DeleteFieldCommand deleteCommand \u003d new DeleteFieldCommand(INDEX_FIRST_TASK, \"n/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"mesyeux"},"content":"        assertCommandFailure(deleteCommand, model, \"Cannot delete title field.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"mesyeux"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"mesyeux"},"content":"    public void execute_validIndexInvalidFieldUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"mesyeux"},"content":"        DeleteFieldCommand deleteCommand \u003d new DeleteFieldCommand(INDEX_FIRST_TASK, \"pp/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"mesyeux"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"mesyeux"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"mesyeux"},"content":"    public void execute_validIndexValidFieldFilteredList_success() throws CommandException {","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"mesyeux"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"mesyeux"},"content":"        Task taskInFilteredList \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"mesyeux"},"content":"        Task taskWithFieldDeleted \u003d new TaskBuilder(taskInFilteredList).withDescription(\"\").build();","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"mesyeux"},"content":"        String fieldToDelete \u003d \"d/\";","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"mesyeux"},"content":"        DeleteFieldCommand deleteCommand \u003d new DeleteFieldCommand(INDEX_FIRST_TASK, fieldToDelete);","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"mesyeux"},"content":"        String expectedMessage \u003d String.format(DeleteFieldCommand.MESSAGE_DELETE_FIELD_SUCCESS, taskWithFieldDeleted);","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"mesyeux"},"content":"        Model expectedModel \u003d new ModelManager(new Planner(model.getPlanner()), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"mesyeux"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), taskWithFieldDeleted);","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"mesyeux"},"content":"        showTaskAtIndex(expectedModel, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"mesyeux"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"mesyeux"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"mesyeux"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"mesyeux"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"mesyeux"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"mesyeux"},"content":"        // ensures that outOfBoundIndex is still in bounds of planner list","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"mesyeux"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPlanner().getTaskList().size());","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"mesyeux"},"content":"        DeleteFieldCommand deleteCommand \u003d new DeleteFieldCommand(outOfBoundIndex, \"d/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"mesyeux"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"mesyeux"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"mesyeux"},"content":"    public void execute_validIndexTitleFieldFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"mesyeux"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"mesyeux"},"content":"        DeleteFieldCommand deleteCommand \u003d new DeleteFieldCommand(INDEX_FIRST_TASK, \"n/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"mesyeux"},"content":"        assertCommandFailure(deleteCommand, model, \"Cannot delete title field.\");","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"mesyeux"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"mesyeux"},"content":"    public void execute_validIndexInvalidFieldFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"mesyeux"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"mesyeux"},"content":"        DeleteFieldCommand deleteCommand \u003d new DeleteFieldCommand(INDEX_FIRST_TASK, \"pp/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"mesyeux"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"mesyeux"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":125,"author":{"gitId":"mesyeux"},"content":"    public void execute_taskHasDurationAndNoDateOrRecurringSchedule_failure() {","lastModifiedDate":"2021-04-01"},{"lineNumber":126,"author":{"gitId":"mesyeux"},"content":"        String fieldToDelete \u003d \"r/\";","lastModifiedDate":"2021-04-01"},{"lineNumber":127,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":128,"author":{"gitId":"mesyeux"},"content":"        DeleteFieldCommand deleteFieldCommand \u003d new DeleteFieldCommand(INDEX_FIRST_TASK, fieldToDelete);","lastModifiedDate":"2021-04-01"},{"lineNumber":129,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":130,"author":{"gitId":"mesyeux"},"content":"        assertCommandFailure(deleteFieldCommand, model, ConstraintManager.MESSAGE_DURATION_STANDALONE_ERROR);","lastModifiedDate":"2021-04-02"},{"lineNumber":131,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":132,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":133,"author":{"gitId":"mesyeux"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"mesyeux"},"content":"    public void equals() {","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"mesyeux"},"content":"        DeleteFieldCommand deleteFirstCommand \u003d new DeleteFieldCommand(INDEX_FIRST_TASK, \"d/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"mesyeux"},"content":"        DeleteFieldCommand deleteSecondCommand \u003d new DeleteFieldCommand(INDEX_SECOND_TASK, \"d/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"mesyeux"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"mesyeux"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"mesyeux"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-15"},{"lineNumber":142,"author":{"gitId":"mesyeux"},"content":"        DeleteFieldCommand deleteFirstCommandCopy \u003d new DeleteFieldCommand(INDEX_FIRST_TASK, \"d/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"mesyeux"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-03-15"},{"lineNumber":144,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"mesyeux"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"mesyeux"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-03-15"},{"lineNumber":147,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":148,"author":{"gitId":"mesyeux"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":149,"author":{"gitId":"mesyeux"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"mesyeux"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-15"},{"lineNumber":152,"author":{"gitId":"mesyeux"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"mesyeux"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"mesyeux":154}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalPlanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"habi39"},"content":" * {@code DeleteTaskCommand}.","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"//@@author mesyeux","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"public class DeleteTaskCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"    //@@author","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"    private Model model \u003d new ModelManager(getTypicalPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"        //@@author mesyeux","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"        //@@author","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"mesyeux"},"content":"        //@@author mesyeux","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"mesyeux"},"content":"        assertCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"        //@@author","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"habi39"},"content":"        DeleteTaskCommand deleteCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"        Task taskToDelete \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"mesyeux"},"content":"        //@@author mesyeux","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"mesyeux"},"content":"        DeleteTaskCommand deleteCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"mesyeux"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"mesyeux"},"content":"        //@@author","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"LimJunxue"},"content":"        Model expectedModel \u003d new ModelManager(model.getPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"LimJunxue"},"content":"        showNoTask(expectedModel);","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"LimJunxue"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-02"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"        // ensures that outOfBoundIndex is still in bounds of planner list","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPlanner().getTaskList().size());","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"mesyeux"},"content":"        //@@author mesyeux","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"mesyeux"},"content":"        DeleteTaskCommand deleteCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"mesyeux"},"content":"        //@@author","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"LimJunxue"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"mesyeux"},"content":"        //@@author mesyeux","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"mesyeux"},"content":"        DeleteTaskCommand deleteFirstCommand \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"mesyeux"},"content":"        DeleteTaskCommand deleteSecondCommand \u003d new DeleteTaskCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"mesyeux"},"content":"        //@@author","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"mesyeux"},"content":"        //@@author mesyeux","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"mesyeux"},"content":"        DeleteTaskCommand deleteFirstCommandCopy \u003d new DeleteTaskCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"mesyeux"},"content":"        //@@author","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"LimJunxue"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"LimJunxue"},"content":"    private void showNoTask(Model model) {","lastModifiedDate":"2021-03-02"},{"lineNumber":120,"author":{"gitId":"LimJunxue"},"content":"        model.updateFilteredTaskList(p -\u003e false);","lastModifiedDate":"2021-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(model.getFilteredTaskList().isEmpty());","lastModifiedDate":"2021-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"LimJunxue":25,"mesyeux":27,"habi39":2,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/DoneCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"maxxng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"maxxng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"maxxng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"maxxng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalPlanner;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"maxxng"},"content":" *","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"public class DoneCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"maxxng"},"content":"    private Model model \u003d new ModelManager(getTypicalPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"    public void execute_updateNotDoneStatus_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"maxxng"},"content":"        Task taskToBeDone \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"maxxng"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"maxxng"},"content":"        Task taskSetToDone \u003d DoneCommand.setTaskStatusAsDone(taskToBeDone);","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"maxxng"},"content":"        String expectedMessage \u003d String.format(DoneCommand.MESSAGE_DONE_TASK_SUCCESS, taskSetToDone);","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"maxxng"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"maxxng"},"content":"        expectedModel.setTask(taskToBeDone, taskSetToDone);","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"maxxng"},"content":"        assertCommandSuccess(doneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"maxxng"},"content":"    public void execute_statusIsDone_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"maxxng"},"content":"        Task taskToBeDone \u003d model.getFilteredTaskList().get(INDEX_SECOND_TASK.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"maxxng"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(INDEX_SECOND_TASK);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"maxxng"},"content":"        Task taskSetToDone \u003d DoneCommand.setTaskStatusAsDone(taskToBeDone);","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"maxxng"},"content":"        String expectedMessage \u003d String.format(DoneCommand.MESSAGE_DONE_TASK_SUCCESS, taskSetToDone);","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"maxxng"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"maxxng"},"content":"        expectedModel.setTask(taskToBeDone, taskSetToDone);","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"maxxng"},"content":"        assertCommandSuccess(doneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"maxxng"},"content":"    public void equals() {","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"maxxng"},"content":"        final DoneCommand standardCommand \u003d new DoneCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"maxxng"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"maxxng"},"content":"        DoneCommand doneCommandWithIdenticalIndex \u003d new DoneCommand(INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"maxxng"},"content":"        assertTrue(standardCommand.equals(doneCommandWithIdenticalIndex));","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"maxxng"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"maxxng"},"content":"        assertFalse(standardCommand.equals(new DeleteTaskCommand(INDEX_FIRST_TASK)));","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"maxxng"},"content":"        assertFalse(standardCommand.equals(new DoneCommand(INDEX_SECOND_TASK)));","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"maxxng"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"maxxng":66}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_AMY;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DURATION_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RECURRINGSCHEDULE_AMY;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalPlanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"habi39"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.conditions.ConstraintManager;","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.Planner;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"    private Model model \u003d new ModelManager(getTypicalPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"habi39"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() throws CommandException {","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"        Task editedTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(editedTask).build();","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TASK, descriptor);","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"        Model expectedModel \u003d new ModelManager(new Planner(model.getPlanner()), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"        expectedModel.setTags(model.getFilteredTaskList().get(0).getTags(), editedTask.getTags());","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"habi39"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() throws CommandException {","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"        Index indexThirdLastTask \u003d Index.fromOneBased(model.getFilteredTaskList().size() - 2);","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"        Task lastTask \u003d model.getFilteredTaskList().get(indexThirdLastTask.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"        TaskBuilder taskInList \u003d new TaskBuilder(lastTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"maxxng"},"content":"        Task editedTask \u003d taskInList.withTitle(VALID_TITLE_BOB).withDuration(VALID_DURATION_BOB)","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withTitle(VALID_TITLE_BOB)","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"maxxng"},"content":"                .withDuration(VALID_DURATION_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"LimJunxue"},"content":"        EditCommand editCommand \u003d new EditCommand(indexThirdLastTask, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"        Model expectedModel \u003d new ModelManager(new Planner(model.getPlanner()), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"        expectedModel.setTask(lastTask, editedTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"LimJunxue"},"content":"        expectedModel.setTags(lastTask.getTags(), editedTask.getTags());","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"maxxng"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TASK, new EditTaskDescriptor());","lastModifiedDate":"2021-03-02"},{"lineNumber":81,"author":{"gitId":"LimJunxue"},"content":"        Task editedTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"LimJunxue"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"LimJunxue"},"content":"        Planner typicalPlanner \u003d new Planner(model.getPlanner());","lastModifiedDate":"2021-04-07"},{"lineNumber":86,"author":{"gitId":"LimJunxue"},"content":"        Model expectedModel \u003d new ModelManager(typicalPlanner, new UserPrefs());","lastModifiedDate":"2021-04-07"},{"lineNumber":87,"author":{"gitId":"maxxng"},"content":"        expectedModel.setTask(editedTask, editedTask);","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"LimJunxue"},"content":"        expectedModel.setTags(editedTask.getTags(), editedTask.getTags());","lastModifiedDate":"2021-04-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"habi39"},"content":"    public void execute_filteredList_success() throws CommandException {","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"LimJunxue"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"LimJunxue"},"content":"        Task taskInFilteredList \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"LimJunxue"},"content":"        Task editedTask \u003d new TaskBuilder(taskInFilteredList).withTitle(VALID_TITLE_BOB).build();","lastModifiedDate":"2021-03-03"},{"lineNumber":99,"author":{"gitId":"LimJunxue"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2021-03-02"},{"lineNumber":100,"author":{"gitId":"LimJunxue"},"content":"                new EditTaskDescriptorBuilder().withTitle(VALID_TITLE_BOB).build());","lastModifiedDate":"2021-03-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"LimJunxue"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"LimJunxue"},"content":"        Model expectedModel \u003d new ModelManager(new Planner(model.getPlanner()), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":105,"author":{"gitId":"LimJunxue"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2021-03-02"},{"lineNumber":106,"author":{"gitId":"LimJunxue"},"content":"        expectedModel.setTags(model.getFilteredTaskList().get(0).getTags(), editedTask.getTags());","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"LimJunxue"},"content":"    public void execute_duplicateTaskUnfilteredList_failure() {","lastModifiedDate":"2021-03-02"},{"lineNumber":113,"author":{"gitId":"LimJunxue"},"content":"        Task firstTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-03-02"},{"lineNumber":114,"author":{"gitId":"LimJunxue"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(firstTask).build();","lastModifiedDate":"2021-03-02"},{"lineNumber":115,"author":{"gitId":"LimJunxue"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_TASK, descriptor);","lastModifiedDate":"2021-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"LimJunxue"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"LimJunxue"},"content":"    public void execute_duplicateTaskFilteredList_failure() {","lastModifiedDate":"2021-03-02"},{"lineNumber":122,"author":{"gitId":"LimJunxue"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"LimJunxue"},"content":"        // edit task in filtered list into a duplicate in planner","lastModifiedDate":"2021-03-09"},{"lineNumber":125,"author":{"gitId":"LimJunxue"},"content":"        Task taskInList \u003d model.getPlanner().getTaskList().get(INDEX_SECOND_TASK.getZeroBased());","lastModifiedDate":"2021-03-09"},{"lineNumber":126,"author":{"gitId":"LimJunxue"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2021-03-02"},{"lineNumber":127,"author":{"gitId":"LimJunxue"},"content":"                new EditTaskDescriptorBuilder(taskInList).build());","lastModifiedDate":"2021-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"LimJunxue"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"LimJunxue"},"content":"    public void execute_invalidTaskIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-02"},{"lineNumber":134,"author":{"gitId":"LimJunxue"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-03-02"},{"lineNumber":135,"author":{"gitId":"LimJunxue"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withTitle(VALID_TITLE_BOB).build();","lastModifiedDate":"2021-03-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"LimJunxue"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"LimJunxue"},"content":"     * but smaller than size of planner","lastModifiedDate":"2021-03-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"LimJunxue"},"content":"    public void execute_invalidTaskIndexFilteredList_failure() {","lastModifiedDate":"2021-03-02"},{"lineNumber":147,"author":{"gitId":"LimJunxue"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-02"},{"lineNumber":148,"author":{"gitId":"LimJunxue"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-02"},{"lineNumber":149,"author":{"gitId":"LimJunxue"},"content":"        // ensures that outOfBoundIndex is still in bounds of planner list","lastModifiedDate":"2021-03-09"},{"lineNumber":150,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPlanner().getTaskList().size());","lastModifiedDate":"2021-03-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"LimJunxue"},"content":"                new EditTaskDescriptorBuilder().withTitle(VALID_TITLE_BOB).build());","lastModifiedDate":"2021-03-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"LimJunxue"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":159,"author":{"gitId":"maxxng"},"content":"    public void execute_editedTaskOnlyHasDuration_failure() {","lastModifiedDate":"2021-04-01"},{"lineNumber":160,"author":{"gitId":"maxxng"},"content":"        Index indexThirdLastTask \u003d Index.fromOneBased(model.getFilteredTaskList().size() - 2);","lastModifiedDate":"2021-04-01"},{"lineNumber":161,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":162,"author":{"gitId":"maxxng"},"content":"        Task editedTask \u003d new TaskBuilder().withTitle(VALID_TITLE_BOB).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":163,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":164,"author":{"gitId":"maxxng"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(editedTask).withTitle(VALID_TITLE_BOB)","lastModifiedDate":"2021-04-01"},{"lineNumber":165,"author":{"gitId":"maxxng"},"content":"                .withDuration(VALID_DURATION_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":166,"author":{"gitId":"maxxng"},"content":"        EditCommand editCommand \u003d new EditCommand(indexThirdLastTask, descriptor);","lastModifiedDate":"2021-04-01"},{"lineNumber":167,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":168,"author":{"gitId":"maxxng"},"content":"        String expectedMessage \u003d ConstraintManager.MESSAGE_DURATION_STANDALONE_ERROR;","lastModifiedDate":"2021-04-02"},{"lineNumber":169,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":170,"author":{"gitId":"maxxng"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2021-04-01"},{"lineNumber":171,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":172,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":173,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":174,"author":{"gitId":"maxxng"},"content":"    public void execute_editedTaskHasDateAndRecurringSchedule_failure() {","lastModifiedDate":"2021-04-01"},{"lineNumber":175,"author":{"gitId":"maxxng"},"content":"        Index indexThirdLastTask \u003d Index.fromOneBased(model.getFilteredTaskList().size() - 2);","lastModifiedDate":"2021-04-01"},{"lineNumber":176,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":177,"author":{"gitId":"maxxng"},"content":"        Task editedTask \u003d new TaskBuilder().withTitle(VALID_TITLE_BOB).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":178,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":179,"author":{"gitId":"maxxng"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(editedTask).withTitle(VALID_TITLE_BOB)","lastModifiedDate":"2021-04-01"},{"lineNumber":180,"author":{"gitId":"maxxng"},"content":"                .withDate(VALID_DATE_AMY).withRecurringSchedule(VALID_RECURRINGSCHEDULE_AMY)","lastModifiedDate":"2021-04-01"},{"lineNumber":181,"author":{"gitId":"maxxng"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":182,"author":{"gitId":"maxxng"},"content":"        EditCommand editCommand \u003d new EditCommand(indexThirdLastTask, descriptor);","lastModifiedDate":"2021-04-01"},{"lineNumber":183,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":184,"author":{"gitId":"maxxng"},"content":"        String expectedMessage \u003d ConstraintManager.MESSAGE_DATE_RECURRING_SCHEDULE_CONFLICT;","lastModifiedDate":"2021-04-02"},{"lineNumber":185,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":186,"author":{"gitId":"maxxng"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2021-04-01"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":191,"author":{"gitId":"LimJunxue"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_TASK, DESC_AMY);","lastModifiedDate":"2021-03-02"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":194,"author":{"gitId":"LimJunxue"},"content":"        EditTaskDescriptor copyDescriptor \u003d new EditTaskDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-02"},{"lineNumber":195,"author":{"gitId":"LimJunxue"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_TASK, copyDescriptor);","lastModifiedDate":"2021-03-02"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":208,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_TASK, DESC_AMY)));","lastModifiedDate":"2021-03-02"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":211,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_TASK, DESC_BOB)));","lastModifiedDate":"2021-03-02"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"maxxng":37,"LimJunxue":71,"habi39":4,"-":102}},{"path":"src/test/java/seedu/address/logic/commands/EditTaskDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RECURRINGSCHEDULE_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"public class EditTaskDescriptorTest {","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"        EditTaskDescriptor descriptorWithSameValues \u003d new EditTaskDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"        // different title -\u003e returns false","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"        EditTaskDescriptor editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY).withTitle(VALID_TITLE_BOB).build();","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"habi39"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"habi39"},"content":"        editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY).withDate(VALID_DATE_BOB).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"kaixiangtay"},"content":"        // different recurring schedule -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"kaixiangtay"},"content":"        editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY).withRecurringSchedule(VALID_RECURRINGSCHEDULE_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"        editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY).withDescription(VALID_DESCRIPTION_BOB).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"        editedAmy \u003d new EditTaskDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"LimJunxue":11,"kaixiangtay":3,"habi39":3,"-":41}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.commons.CalendarDirection;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"                MESSAGE_EXIT_ACKNOWLEDGEMENT, false, CalendarDirection.NONE, true);","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"LimJunxue":3,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_TASKS_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.CARL;","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.ELLE;","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.FIONA;","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalPlanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.model.task.predicates.TitleContainsKeywordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"    private Model model \u003d new ModelManager(getTypicalPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"        TitleContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"                new TitleContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"        TitleContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"                new TitleContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"    public void execute_zeroKeywords_noTaskFound() {","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"        TitleContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredTaskList());","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"    public void execute_multipleKeywords_multipleTasksFound() {","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"LimJunxue"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"        TitleContainsKeywordsPredicate predicate \u003d preparePredicate(\"finals lunch consult\");","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"LimJunxue"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredTaskList());","lastModifiedDate":"2021-03-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"LimJunxue"},"content":"     * Parses {@code userInput} into a {@code TitleContainsKeywordsPredicate}.","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"LimJunxue"},"content":"    private TitleContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"LimJunxue"},"content":"        return new TitleContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"LimJunxue":25,"kaixiangtay":1,"-":58}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE);","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"LimJunxue":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_UNDONE_TASKS;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalPlanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"        model \u003d new ModelManager(getTypicalPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"        expectedModel \u003d new ModelManager(model.getPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"kaixiangtay"},"content":"        assertCommandSuccess(new ListCommand(true), model,","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"kaixiangtay"},"content":"              ListCommand.MESSAGE_ALL_TASKS_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"kaixiangtay"},"content":"        assertCommandSuccess(new ListCommand(true), model,","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"kaixiangtay"},"content":"               ListCommand.MESSAGE_ALL_TASKS_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"kaixiangtay"},"content":"    public void execute_listIsFiltered_showsUndoneTasks() {","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"kaixiangtay"},"content":"        ListCommand command \u003d new ListCommand(false);","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"kaixiangtay"},"content":"        expectedModel.updateFilteredTaskList(PREDICATE_SHOW_UNDONE_TASKS);","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"kaixiangtay"},"content":"        assertCommandSuccess(command, expectedModel,","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"kaixiangtay"},"content":"                ListCommand.MESSAGE_UNDONE_TASKS_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"LimJunxue":6,"kaixiangtay":14,"-":32}},{"path":"src/test/java/seedu/address/logic/commands/SnoozeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"maxxng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"maxxng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"maxxng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalPlanner;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"maxxng"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"maxxng"},"content":"public class SnoozeCommandTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"    private Model model \u003d new ModelManager(getTypicalPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"maxxng"},"content":"    public void execute_allParametersGivenUnfilteredList_success() throws CommandException {","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"maxxng"},"content":"        Task snoozedTask \u003d new TaskBuilder().withTitle(\"Build a gaming PC\")","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"maxxng"},"content":"                .withDescription(\"buy: coffee, 3080, 40-inch monitor\")","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"maxxng"},"content":"                .withDate(\"15/12/2021\").withStatus(\"not done\").withTags(\"findMoney\", \"priorities\").build();","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"maxxng"},"content":"        SnoozeCommand snoozeCommand \u003d new SnoozeCommand(INDEX_SECOND_TASK, 3);","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"maxxng"},"content":"        String snoozedTaskTitle \u003d snoozedTask.getTitle().fullTitle;","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"maxxng"},"content":"        String expectedMessage \u003d String.format(SnoozeCommand.MESSAGE_SNOOZE_TASK_SUCCESS,","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"maxxng"},"content":"                snoozedTaskTitle, 3);","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"maxxng"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"maxxng"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(1), snoozedTask);","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"maxxng"},"content":"        assertCommandSuccess(snoozeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"maxxng"},"content":"    public void execute_invalidTaskIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"maxxng"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"maxxng"},"content":"        SnoozeCommand snoozeCommand \u003d new SnoozeCommand(outOfBoundIndex, 1);","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"maxxng"},"content":"        assertCommandFailure(snoozeCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"maxxng"},"content":"    public void execute_invalidTaskIndexFilteredList_failure() {","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"maxxng"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"maxxng"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"maxxng"},"content":"        // ensures that outOfBoundIndex is still in bounds of planner list","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"maxxng"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getPlanner().getTaskList().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"maxxng"},"content":"        SnoozeCommand snoozeCommand \u003d new SnoozeCommand(outOfBoundIndex, 3);","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"maxxng"},"content":"        assertCommandFailure(snoozeCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"maxxng"},"content":"    public void execute_noDateOnTask_failure() {","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"maxxng"},"content":"        SnoozeCommand snoozeCommand \u003d new SnoozeCommand(INDEX_FIRST_TASK, 3);","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"maxxng"},"content":"        assertCommandFailure(snoozeCommand, model, \"The task selected has no date attribute.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"maxxng"},"content":"                + SnoozeCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"maxxng"},"content":"    public void equals() {","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"maxxng"},"content":"        final SnoozeCommand snoozeCommand \u003d new SnoozeCommand(INDEX_SECOND_TASK, 3);","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"maxxng"},"content":"        // Same object","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"maxxng"},"content":"        assertTrue(snoozeCommand.equals(snoozeCommand));","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"maxxng"},"content":"        SnoozeCommand snoozeCommandWithSameValues \u003d new SnoozeCommand(INDEX_SECOND_TASK, 3);","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"maxxng"},"content":"        // Same values","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"maxxng"},"content":"        assertTrue(snoozeCommand.equals(snoozeCommandWithSameValues));","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"maxxng"},"content":"        assertFalse(snoozeCommand.equals(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"maxxng"},"content":"        assertFalse(snoozeCommand.equals(new DoneCommand(INDEX_SECOND_TASK)));","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"maxxng"},"content":"        assertFalse(snoozeCommand.equals(new SnoozeCommand(INDEX_FIRST_TASK, 3)));","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"maxxng"},"content":"        assertFalse(snoozeCommand.equals(new SnoozeCommand(INDEX_SECOND_TASK, 1)));","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"maxxng"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"maxxng":87}},{"path":"src/test/java/seedu/address/logic/commands/StatsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalPlanner;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"public class StatsCommandTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"    public void execute_emptyPlanner_throwsCommandException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"        StatsCommand statsCommand \u003d new StatsCommand();","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"        assertCommandFailure(statsCommand, model, StatsCommand.MESSAGE_NO_TASKS);","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"    public void execute_nonEmptyPlanner_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"        Model model \u003d new ModelManager(getTypicalPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"        String expectedMessage \u003d String.format(StatsCommand.MESSAGE_SUCCESS, 7, 71.43, 0);","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"        StatsCommand statsCommand \u003d new StatsCommand();","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"mesyeux"},"content":"        assertCommandSuccess(statsCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"mesyeux":36}},{"path":"src/test/java/seedu/address/logic/commands/ViewDayCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.GEORGE;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalPlanner;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.predicates.TaskOnDatePredicate;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"class ViewDayCommandTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"    private Model model \u003d new ModelManager(getTypicalPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalPlanner(), new UserPrefs());","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"    public void execute_viewDayWithTasks_multipleTasksFound() {","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"habi39"},"content":"        String expectedMessage \u003d String.format(ViewDayCommand.MESSAGE_VIEW_DAY_SUCCESS, 1, \"June\", \"2021\");","lastModifiedDate":"2021-04-08"},{"lineNumber":26,"author":{"gitId":"habi39"},"content":"        Date date \u003d new Date(\"03/06/2021\");","lastModifiedDate":"2021-04-08"},{"lineNumber":27,"author":{"gitId":"habi39"},"content":"        TaskOnDatePredicate predicate \u003d new TaskOnDatePredicate(date);","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"habi39"},"content":"        ViewDayCommand command \u003d new ViewDayCommand(predicate, date.getDate());","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(Arrays.asList(GEORGE), expectedModel.getFilteredTaskList());","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"    public void execute_viewDayWithoutTasks_noTasksFound() {","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"        String expectedMessage \u003d String.format(ViewDayCommand.MESSAGE_VIEW_DAY_SUCCESS, 0, \"April\", \"2021\");","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"habi39"},"content":"        Date date \u003d new Date(\"24/04/2021\");","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"habi39"},"content":"        TaskOnDatePredicate predicate \u003d new TaskOnDatePredicate(date);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"habi39"},"content":"        ViewDayCommand command \u003d new ViewDayCommand(predicate, date.getDate());","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(Collections.emptyList(), expectedModel.getFilteredTaskList());","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"LimJunxue":36,"maxxng":1,"habi39":7}},{"path":"src/test/java/seedu/address/logic/conditions/ConstraintManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"maxxng"},"content":"package seedu.address.logic.conditions;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_AMY;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DURATION_AMY;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RECURRINGSCHEDULE_AMY;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_AMY;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"public class ConstraintManagerTest {","lastModifiedDate":"2021-04-02"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"maxxng"},"content":"    public void check_durationNoDateOrRecurringSchedule_throwsCommandException() {","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"        Task task \u003d new TaskBuilder().withTitle(VALID_TITLE_AMY).withDuration(VALID_DURATION_AMY).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"maxxng"},"content":"        assertThrows(CommandException.class, () -\u003e ConstraintManager.enforceAttributeConstraints(task));","lastModifiedDate":"2021-04-02"},{"lineNumber":22,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"    public void check_dateAndRecurringSchedule_throwsCommandException() {","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"maxxng"},"content":"        Task task \u003d new TaskBuilder().withTitle(VALID_TITLE_AMY).withDate(VALID_DATE_AMY)","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"maxxng"},"content":"                .withRecurringSchedule(VALID_RECURRINGSCHEDULE_AMY).build();","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"maxxng"},"content":"        assertThrows(CommandException.class, () -\u003e ConstraintManager.enforceAttributeConstraints(task));","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"maxxng"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"maxxng":31}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_AMY;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DURATION_DESC_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DURATION_DESC_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DURATION_DESC;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_RECURRINGSCHEDULE_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TITLE_DESC;","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RECURRINGSCHEDULE_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RECURRINGSCHEDULE_DESC_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_AMY;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TITLE_DESC_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TITLE_DESC_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.AMY;","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.BOB;","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-04-04"},{"lineNumber":37,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":38,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Duration;","lastModifiedDate":"2021-04-04"},{"lineNumber":39,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.RecurringSchedule;","lastModifiedDate":"2021-04-04"},{"lineNumber":40,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Title;","lastModifiedDate":"2021-04-04"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"        Task expectedTask \u003d new TaskBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"habi39"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + TITLE_DESC_BOB + DATE_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"habi39"},"content":"                + DURATION_DESC_BOB + RECURRINGSCHEDULE_DESC_BOB + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"habi39"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedTask));","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"        // multiple titles - last title accepted","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"habi39"},"content":"        assertParseSuccess(parser, TITLE_DESC_AMY + TITLE_DESC_BOB + DATE_DESC_BOB + DURATION_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"kaixiangtay"},"content":"                + RECURRINGSCHEDULE_DESC_BOB + DESCRIPTION_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedTask));","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"habi39"},"content":"        // multiple dates - last date accepted","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"habi39"},"content":"        assertParseSuccess(parser, TITLE_DESC_BOB + DATE_DESC_AMY + DATE_DESC_BOB + DURATION_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"kaixiangtay"},"content":"                + RECURRINGSCHEDULE_DESC_BOB + DESCRIPTION_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedTask));","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"habi39"},"content":"        // multiple durations - last duration accepted","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"habi39"},"content":"        assertParseSuccess(parser, TITLE_DESC_BOB + DATE_DESC_BOB + DURATION_DESC_AMY + DURATION_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"kaixiangtay"},"content":"                + RECURRINGSCHEDULE_DESC_BOB + DESCRIPTION_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedTask));","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"kaixiangtay"},"content":"        // multiple recurringTasks - last recurringTasks accepted","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"habi39"},"content":"        assertParseSuccess(parser, TITLE_DESC_BOB + DATE_DESC_BOB + DURATION_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"kaixiangtay"},"content":"                + RECURRINGSCHEDULE_DESC_BOB + RECURRINGSCHEDULE_DESC_BOB + DESCRIPTION_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"kaixiangtay"},"content":"                new AddCommand(expectedTask));","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"        // multiple description - last description accepted","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"habi39"},"content":"        assertParseSuccess(parser, TITLE_DESC_BOB + DATE_DESC_BOB + DURATION_DESC_BOB + RECURRINGSCHEDULE_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"habi39"},"content":"                + DESCRIPTION_DESC_AMY + DESCRIPTION_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedTask));","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"        Task expectedTaskMultipleTags \u003d new TaskBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":79,"author":{"gitId":"habi39"},"content":"        assertParseSuccess(parser, TITLE_DESC_BOB + DATE_DESC_BOB + DURATION_DESC_BOB + RECURRINGSCHEDULE_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"habi39"},"content":"                + DESCRIPTION_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedTaskMultipleTags));","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"LimJunxue"},"content":"        Task expectedTask \u003d new TaskBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-02"},{"lineNumber":87,"author":{"gitId":"habi39"},"content":"        assertParseSuccess(parser, TITLE_DESC_AMY + DATE_DESC_AMY + DURATION_DESC_AMY + RECURRINGSCHEDULE_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"maxxng"},"content":"                        + STATUS_DESC_AMY + DESCRIPTION_DESC_AMY, new AddCommand(expectedTask));","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"LimJunxue"},"content":"        // missing title prefix","lastModifiedDate":"2021-03-03"},{"lineNumber":96,"author":{"gitId":"habi39"},"content":"        assertParseFailure(parser, VALID_TITLE_BOB + DATE_DESC_BOB + DURATION_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"kaixiangtay"},"content":"                + RECURRINGSCHEDULE_DESC_BOB + DESCRIPTION_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"LimJunxue"},"content":"        /*","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"habi39"},"content":"        // missing date prefix","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"habi39"},"content":"        assertParseFailure(parser, TITLE_DESC_BOB + VALID_DATE_BOB + RECURRINGSCHEDULE_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"kaixiangtay"},"content":"            + DESCRIPTION_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"kaixiangtay"},"content":"        // missing recurring schedule prefix","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"habi39"},"content":"        assertParseFailure(parser, TITLE_DESC_BOB + DATE_DESC_BOB + VALID_RECURRINGSCHEDULE_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"kaixiangtay"},"content":"            + DESCRIPTION_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"LimJunxue"},"content":"        // missing description prefix","lastModifiedDate":"2021-03-11"},{"lineNumber":109,"author":{"gitId":"habi39"},"content":"        assertParseFailure(parser, TITLE_DESC_BOB + DATE_DESC_BOB + RECURRINGSCHEDULE_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"kaixiangtay"},"content":"            + VALID_DESCRIPTION_BOB, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"habi39"},"content":"        assertParseFailure(parser, VALID_TITLE_BOB + VALID_DATE_BOB + VALID_RECURRINGSCHEDULE_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"kaixiangtay"},"content":"            + VALID_DESCRIPTION_BOB, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"LimJunxue"},"content":"        */","lastModifiedDate":"2021-03-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"LimJunxue"},"content":"        // invalid title","lastModifiedDate":"2021-03-03"},{"lineNumber":121,"author":{"gitId":"habi39"},"content":"        assertParseFailure(parser, INVALID_TITLE_DESC + DATE_DESC_BOB + DURATION_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"kaixiangtay"},"content":"                + RECURRINGSCHEDULE_DESC_BOB + DESCRIPTION_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"kaixiangtay"},"content":"                Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"habi39"},"content":"        // invalid date","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"habi39"},"content":"        assertParseFailure(parser, TITLE_DESC_BOB + INVALID_DATE_DESC + DURATION_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"kaixiangtay"},"content":"                + RECURRINGSCHEDULE_DESC_BOB + DESCRIPTION_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"habi39"},"content":"                Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"habi39"},"content":"        // invalid duration","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"habi39"},"content":"        assertParseFailure(parser, TITLE_DESC_BOB + DATE_DESC_BOB + INVALID_DURATION_DESC","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"kaixiangtay"},"content":"                + RECURRINGSCHEDULE_DESC_BOB + DESCRIPTION_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"habi39"},"content":"                Duration.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"kaixiangtay"},"content":"        // invalid recurringSchedule","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"habi39"},"content":"        assertParseFailure(parser, TITLE_DESC_BOB + DATE_DESC_BOB + DURATION_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"kaixiangtay"},"content":"                + INVALID_RECURRINGSCHEDULE_DESC + DESCRIPTION_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"kaixiangtay"},"content":"                + TAG_DESC_FRIEND, RecurringSchedule.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"habi39"},"content":"        assertParseFailure(parser, TITLE_DESC_BOB + DATE_DESC_BOB + DURATION_DESC_BOB + RECURRINGSCHEDULE_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"habi39"},"content":"                + DESCRIPTION_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"LimJunxue"},"content":"        // description is no longer invalid as it accepts anything","lastModifiedDate":"2021-03-15"},{"lineNumber":145,"author":{"gitId":"LimJunxue"},"content":"        /*","lastModifiedDate":"2021-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"habi39"},"content":"        assertParseFailure(parser, INVALID_TITLE_DESC + DATE_DESC_BOB + DURATION_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"habi39"},"content":"                        + INVALID_DESCRIPTION_DESC, Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"LimJunxue"},"content":"         */","lastModifiedDate":"2021-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":152,"author":{"gitId":"habi39"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + TITLE_DESC_BOB + DATE_DESC_BOB + DURATION_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"kaixiangtay"},"content":"                        + RECURRINGSCHEDULE_DESC_BOB + DESCRIPTION_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"LimJunxue":22,"maxxng":7,"kaixiangtay":23,"habi39":40,"-":64}},{"path":"src/test/java/seedu/address/logic/parser/CountdownCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"import seedu.address.logic.commands.CountdownCommand;","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"public class CountdownCommandParserTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"    private CountdownCommandParser parser \u003d new CountdownCommandParser();","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"    public void parse_validArgs_returnsCountdownCommand() {","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"        assertParseSuccess(parser, \"1\", new CountdownCommand(INDEX_FIRST_TASK));","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"                CountdownCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"mesyeux":25}},{"path":"src/test/java/seedu/address/logic/parser/DeleteFieldCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mesyeux"},"content":"//@@author mesyeux","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"mesyeux"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"mesyeux"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"mesyeux"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"mesyeux"},"content":"import seedu.address.logic.commands.DeleteFieldCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"mesyeux"},"content":"public class DeleteFieldCommandParserTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"mesyeux"},"content":"    private DeleteFieldCommandParser parser \u003d new DeleteFieldCommandParser();","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"mesyeux"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"mesyeux"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"mesyeux"},"content":"        assertParseSuccess(parser, \" 1 d/\", new DeleteFieldCommand(INDEX_FIRST_TASK, \"d/\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"mesyeux"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"                DeleteFieldCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"        assertParseFailure(parser, \"1 t/\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"mesyeux"},"content":"                DeleteFieldCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"mesyeux"},"content":"        assertParseFailure(parser, \"1 d/ d/\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"mesyeux"},"content":"                DeleteFieldCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"        assertParseFailure(parser, \"1 pp/\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"                DeleteFieldCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"mesyeux"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"mesyeux":32}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"habi39"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"habi39"},"content":" * outside of the DeleteTaskCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"mesyeux"},"content":"//@@author mesyeux","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"mesyeux"},"content":"public class DeleteTaskCommandParserTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"mesyeux"},"content":"    //@@author","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"mesyeux"},"content":"    //@@author mesyeux","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"mesyeux"},"content":"    private DeleteTaskCommandParser parser \u003d new DeleteTaskCommandParser();","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"mesyeux"},"content":"    //@@author","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"mesyeux"},"content":"        //@@author mesyeux","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"mesyeux"},"content":"        assertParseSuccess(parser, \"1\", new DeleteTaskCommand(INDEX_FIRST_TASK));","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"mesyeux"},"content":"        //@@author","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"mesyeux"},"content":"        //@@author mesyeux","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"mesyeux"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"mesyeux"},"content":"                DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"mesyeux"},"content":"        //@@author","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"LimJunxue":1,"mesyeux":13,"habi39":2,"-":25}},{"path":"src/test/java/seedu/address/logic/parser/DoneCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"maxxng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"maxxng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STATUS_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_TASK;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.commands.DoneCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"public class DoneCommandParserTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"    private DoneCommandParser parser \u003d new DoneCommandParser();","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"    public void parse_invalidParameter_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"        assertParseFailure(parser, INVALID_STATUS_INDEX,","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"maxxng"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"maxxng"},"content":"        assertParseFailure(parser, \"-1\",","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"maxxng"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"maxxng"},"content":"    public void parse_missingParameter_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"maxxng"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"maxxng"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"maxxng"},"content":"    public void parse_extraValidParameter_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"maxxng"},"content":"        assertParseFailure(parser, VALID_STATUS_INDEX + \" \" + VALID_STATUS_INDEX,","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"maxxng"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"maxxng"},"content":"    public void parse_normalParameter_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"maxxng"},"content":"        DoneCommand expectedDoneCommand \u003d new DoneCommand(INDEX_THIRD_TASK);","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"maxxng"},"content":"        assertParseSuccess(parser, \"3\", expectedDoneCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"maxxng"},"content":"    public void parse_extraWhitespaceWithValidParameter_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"maxxng"},"content":"        DoneCommand expectedDoneCommand \u003d new DoneCommand(INDEX_THIRD_TASK);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"maxxng"},"content":"        assertParseSuccess(parser, \" 3\", expectedDoneCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"maxxng"},"content":"        assertParseSuccess(parser, \"3  \", expectedDoneCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"maxxng"},"content":"        assertParseSuccess(parser, \"  3   \", expectedDoneCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"maxxng"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"maxxng":56}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_AMY;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_DESC_BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_RECURRINGSCHEDULE_DESC;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TITLE_DESC;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RECURRINGSCHEDULE_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RECURRINGSCHEDULE_DESC_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TITLE_DESC_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_AMY;","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RECURRINGSCHEDULE_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RECURRINGSCHEDULE_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_TASK;","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":40,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.RecurringSchedule;","lastModifiedDate":"2021-04-04"},{"lineNumber":41,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Title;","lastModifiedDate":"2021-04-04"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"        assertParseFailure(parser, VALID_TITLE_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"LimJunxue"},"content":"        assertParseFailure(parser, \"-5\" + TITLE_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"        assertParseFailure(parser, \"0\" + TITLE_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"LimJunxue"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TITLE_DESC, Title.MESSAGE_CONSTRAINTS); // invalid title","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"habi39"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DATE_DESC, Date.MESSAGE_CONSTRAINTS); // invalid date","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"kaixiangtay"},"content":"        assertParseFailure(parser, \"1\" + INVALID_RECURRINGSCHEDULE_DESC,","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"kaixiangtay"},"content":"                RecurringSchedule.MESSAGE_CONSTRAINTS); // invalid recurring schedule","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"habi39"},"content":"        // invalid date followed by valid recurring schedule","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"habi39"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DATE_DESC + RECURRINGSCHEDULE_DESC_AMY,","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"habi39"},"content":"                Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"habi39"},"content":"        // valid date followed by invalid date. The test case for invalid date followed by valid date","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"habi39"},"content":"        assertParseFailure(parser, \"1\" + DATE_DESC_BOB + INVALID_DATE_DESC,","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"habi39"},"content":"                Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"LimJunxue"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Task} being edited,","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"kaixiangtay"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"kaixiangtay"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"kaixiangtay"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND,","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"kaixiangtay"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"kaixiangtay"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"kaixiangtay"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"kaixiangtay"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TITLE_DESC + INVALID_RECURRINGSCHEDULE_DESC + VALID_DESCRIPTION_AMY","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"habi39"},"content":"                        + VALID_DATE_AMY, Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"LimJunxue"},"content":"        Index targetIndex \u003d INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-02"},{"lineNumber":114,"author":{"gitId":"habi39"},"content":"        String userInput \u003d targetIndex.getOneBased() + DATE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"kaixiangtay"},"content":"                + RECURRINGSCHEDULE_DESC_AMY + DESCRIPTION_DESC_AMY + TITLE_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"LimJunxue"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withTitle(VALID_TITLE_AMY)","lastModifiedDate":"2021-03-03"},{"lineNumber":118,"author":{"gitId":"habi39"},"content":"                .withDate(VALID_DATE_BOB).withRecurringSchedule(VALID_RECURRINGSCHEDULE_AMY)","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"kaixiangtay"},"content":"                .withDescription(VALID_DESCRIPTION_AMY).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"LimJunxue"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-02"},{"lineNumber":128,"author":{"gitId":"habi39"},"content":"        String userInput \u003d targetIndex.getOneBased() + DATE_DESC_BOB + RECURRINGSCHEDULE_DESC_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"habi39"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withDate(VALID_DATE_BOB)","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"kaixiangtay"},"content":"                .withRecurringSchedule(VALID_RECURRINGSCHEDULE_AMY).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"LimJunxue"},"content":"        // title","lastModifiedDate":"2021-03-03"},{"lineNumber":140,"author":{"gitId":"LimJunxue"},"content":"        Index targetIndex \u003d INDEX_THIRD_TASK;","lastModifiedDate":"2021-03-02"},{"lineNumber":141,"author":{"gitId":"LimJunxue"},"content":"        String userInput \u003d targetIndex.getOneBased() + TITLE_DESC_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":142,"author":{"gitId":"LimJunxue"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withTitle(VALID_TITLE_AMY).build();","lastModifiedDate":"2021-03-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"habi39"},"content":"        // date","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"habi39"},"content":"        userInput \u003d targetIndex.getOneBased() + DATE_DESC_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"habi39"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withDate(VALID_DATE_AMY).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"kaixiangtay"},"content":"        // recurring schedule","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"kaixiangtay"},"content":"        userInput \u003d targetIndex.getOneBased() + RECURRINGSCHEDULE_DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"kaixiangtay"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withRecurringSchedule(VALID_RECURRINGSCHEDULE_AMY).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"LimJunxue"},"content":"        // description","lastModifiedDate":"2021-03-11"},{"lineNumber":159,"author":{"gitId":"LimJunxue"},"content":"        userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_AMY;","lastModifiedDate":"2021-03-11"},{"lineNumber":160,"author":{"gitId":"LimJunxue"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withDescription(VALID_DESCRIPTION_AMY).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":166,"author":{"gitId":"LimJunxue"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":173,"author":{"gitId":"LimJunxue"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-02"},{"lineNumber":174,"author":{"gitId":"habi39"},"content":"        String userInput \u003d targetIndex.getOneBased() + DATE_DESC_AMY + DESCRIPTION_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"habi39"},"content":"                + RECURRINGSCHEDULE_DESC_AMY + TAG_DESC_FRIEND + DATE_DESC_AMY + DESCRIPTION_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"habi39"},"content":"                + RECURRINGSCHEDULE_DESC_AMY + TAG_DESC_FRIEND + DATE_DESC_BOB + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"kaixiangtay"},"content":"                + RECURRINGSCHEDULE_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"habi39"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withDate(VALID_DATE_BOB)","lastModifiedDate":"2021-03-30"},{"lineNumber":180,"author":{"gitId":"kaixiangtay"},"content":"                .withRecurringSchedule(VALID_RECURRINGSCHEDULE_BOB).withDescription(VALID_DESCRIPTION_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"LimJunxue"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"LimJunxue"},"content":"        Index targetIndex \u003d INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-02"},{"lineNumber":192,"author":{"gitId":"habi39"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_DATE_DESC + DATE_DESC_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":193,"author":{"gitId":"habi39"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withDate(VALID_DATE_BOB).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"habi39"},"content":"        userInput \u003d targetIndex.getOneBased() + RECURRINGSCHEDULE_DESC_BOB + INVALID_DATE_DESC","lastModifiedDate":"2021-03-30"},{"lineNumber":199,"author":{"gitId":"habi39"},"content":"                + DESCRIPTION_DESC_BOB + DATE_DESC_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":200,"author":{"gitId":"habi39"},"content":"        descriptor \u003d new EditTaskDescriptorBuilder().withDate(VALID_DATE_BOB)","lastModifiedDate":"2021-03-30"},{"lineNumber":201,"author":{"gitId":"kaixiangtay"},"content":"                .withRecurringSchedule(VALID_RECURRINGSCHEDULE_BOB).withDescription(VALID_DESCRIPTION_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":208,"author":{"gitId":"LimJunxue"},"content":"        Index targetIndex \u003d INDEX_THIRD_TASK;","lastModifiedDate":"2021-03-02"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"LimJunxue"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-03-02"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"LimJunxue":33,"maxxng":3,"kaixiangtay":23,"habi39":29,"-":128}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"kaixiangtay"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.model.task.predicates.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.model.task.predicates.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.model.task.predicates.TitleContainsKeywordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"kaixiangtay"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"kaixiangtay"},"content":"                FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"kaixiangtay"},"content":"        assertParseFailure(parser, \"t/  \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"kaixiangtay"},"content":"                FindCommandParserUtil.TAG_USAGE));","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"kaixiangtay"},"content":"        assertParseFailure(parser, \"d/\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"kaixiangtay"},"content":"                FindCommandParserUtil.DESCRIPTION_USAGE));","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"kaixiangtay"},"content":"    public void parse_multipleFindArgs_throwsParseException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"kaixiangtay"},"content":"        assertParseFailure(parser, \"d/Bob   d/Charlie\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"kaixiangtay"},"content":"                FindCommandParserUtil.MULTIPLE_COMMANDS));","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"kaixiangtay"},"content":"        assertParseFailure(parser, \"d/Bob   t/project   t/exam\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"kaixiangtay"},"content":"                FindCommandParserUtil.MULTIPLE_COMMANDS));","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"kaixiangtay"},"content":"        assertParseFailure(parser, \"t/exam  d/Bob   d/Charlie\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"kaixiangtay"},"content":"                FindCommandParserUtil.MULTIPLE_COMMANDS));","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"kaixiangtay"},"content":"        assertParseFailure(parser, \"Alice   d/Charlie\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"kaixiangtay"},"content":"                FindCommandParserUtil.MULTIPLE_COMMANDS));","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"kaixiangtay"},"content":"        assertParseFailure(parser, \"Alice   t/exam\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"kaixiangtay"},"content":"                FindCommandParserUtil.MULTIPLE_COMMANDS));","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"kaixiangtay"},"content":"        assertParseFailure(parser, \"Alice  d/Bob t/exam\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"kaixiangtay"},"content":"                FindCommandParserUtil.MULTIPLE_COMMANDS));","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"kaixiangtay"},"content":"                new FindCommand(new TitleContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":56,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"kaixiangtay"},"content":"        // locate multiple tags from keywords","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"kaixiangtay"},"content":"        expectedFindCommand \u003d new FindCommand(new TagContainsKeywordsPredicate(","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"kaixiangtay"},"content":"                new HashSet\u003c\u003e(Arrays.asList(\"Bob\", \"Charlie\"))));","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"kaixiangtay"},"content":"        assertParseSuccess(parser, \"t/Bob t/Charlie\", expectedFindCommand);","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"kaixiangtay"},"content":"        // locate description from keywords","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"kaixiangtay"},"content":"        expectedFindCommand \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"kaixiangtay"},"content":"                new FindCommand(new DescriptionContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"kaixiangtay"},"content":"        assertParseSuccess(parser, \"d/Alice Bob\", expectedFindCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"kaixiangtay":36,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangtay"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-22"},{"lineNumber":2,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":3,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-22"},{"lineNumber":4,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":5,"author":{"gitId":"kaixiangtay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-22"},{"lineNumber":6,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":7,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-22"},{"lineNumber":8,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":9,"author":{"gitId":"kaixiangtay"},"content":"public class FindCommandParserUtilTest {","lastModifiedDate":"2021-03-22"},{"lineNumber":10,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":11,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":12,"author":{"gitId":"kaixiangtay"},"content":"    public void checkEmptyInputField_invalidInput_throwsParseException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":13,"author":{"gitId":"kaixiangtay"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-03-22"},{"lineNumber":14,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":15,"author":{"gitId":"kaixiangtay"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-03-22"},{"lineNumber":16,"author":{"gitId":"kaixiangtay"},"content":"            -\u003e FindCommandParserUtil.checkEmptyInputField(input, \"input\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":17,"author":{"gitId":"kaixiangtay"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-03-22"},{"lineNumber":18,"author":{"gitId":"kaixiangtay"},"content":"            -\u003e FindCommandParserUtil.checkEmptyInputField(input, \"t/\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":19,"author":{"gitId":"kaixiangtay"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-03-22"},{"lineNumber":20,"author":{"gitId":"kaixiangtay"},"content":"            -\u003e FindCommandParserUtil.checkEmptyInputField(input, \"d/\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":21,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":22,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":23,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":24,"author":{"gitId":"kaixiangtay"},"content":"    public void handleSearchByTag_invalidInput_throwsParseException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":25,"author":{"gitId":"kaixiangtay"},"content":"        String[] keywords \u003d new String[]{\"t/\"};","lastModifiedDate":"2021-03-22"},{"lineNumber":26,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":27,"author":{"gitId":"kaixiangtay"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-03-22"},{"lineNumber":28,"author":{"gitId":"kaixiangtay"},"content":"            -\u003e FindCommandParserUtil.handleSearchByTag(keywords));","lastModifiedDate":"2021-03-22"},{"lineNumber":29,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":30,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":31,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":32,"author":{"gitId":"kaixiangtay"},"content":"    public void handleSearchByDescription_invalidInput_throwsParseException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":33,"author":{"gitId":"kaixiangtay"},"content":"        String[] keywords \u003d new String[]{\"d/\"};","lastModifiedDate":"2021-03-22"},{"lineNumber":34,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":35,"author":{"gitId":"kaixiangtay"},"content":"        assertThrows(ParseException.class, ()","lastModifiedDate":"2021-03-22"},{"lineNumber":36,"author":{"gitId":"kaixiangtay"},"content":"            -\u003e FindCommandParserUtil.handleSearchByDescription(keywords));","lastModifiedDate":"2021-03-22"},{"lineNumber":37,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":38,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":39,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"kaixiangtay"},"content":"    public void checkEmptyInputField_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"kaixiangtay"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"kaixiangtay"},"content":"            -\u003e FindCommandParserUtil.checkEmptyInputField(null, \"input\"));","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"kaixiangtay"},"content":"    public void handleSearchByTag_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"kaixiangtay"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"kaixiangtay"},"content":"            -\u003e FindCommandParserUtil.handleSearchByTag(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"kaixiangtay"},"content":"    public void handleSearchByDescription_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"kaixiangtay"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"kaixiangtay"},"content":"            -\u003e FindCommandParserUtil.handleSearchByDescription(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"kaixiangtay"},"content":"}","lastModifiedDate":"2021-03-22"}],"authorContributionMap":{"kaixiangtay":56}},{"path":"src/test/java/seedu/address/logic/parser/ListCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangtay"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"kaixiangtay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"kaixiangtay"},"content":"public class ListCommandParserTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"kaixiangtay"},"content":"    private ListCommandParser parser \u003d new ListCommandParser();","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"kaixiangtay"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"kaixiangtay"},"content":"        // invalid since only one valid argument (done, not done) is allowed","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"kaixiangtay"},"content":"        assertParseFailure(parser, \"done not done\",","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"kaixiangtay"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.INVALID_INPUT));","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"kaixiangtay"},"content":"        assertParseFailure(parser, \"-1 done!@\",","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"kaixiangtay"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.INVALID_INPUT));","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"kaixiangtay"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"kaixiangtay":24}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Description;","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.RecurringSchedule;","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Title;","lastModifiedDate":"2021-04-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"    private static final String INVALID_TITLE \u003d \"R@chel\";","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"habi39"},"content":"    private static final String INVALID_DATE \u003d \"12/03/20199\";","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" \";","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"kaixiangtay"},"content":"    private static final String INVALID_RECURRINGSCHEDULE \u003d \"[10/01/2020][tues][weekly]\";","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"    private static final String VALID_TITLE \u003d \"Rachel Walker\";","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"habi39"},"content":"    private static final String VALID_DATE \u003d \"12/08/2021\";","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"    private static final String VALID_DESCRIPTION \u003d \"123 Main Street #0505\";","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"kaixiangtay"},"content":"    private static final String VALID_RECURRINGSCHEDULE \u003d \"[10/06/2021][Mon][biweekly]\";","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(INDEX_FIRST_TASK, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(INDEX_FIRST_TASK, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"    public void parseTitle_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTitle((String) null));","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"    public void parseTitle_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTitle(INVALID_TITLE));","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"    public void parseTitle_validValueWithoutWhitespace_returnsTitle() throws Exception {","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"LimJunxue"},"content":"        Title expectedTitle \u003d new Title(VALID_TITLE);","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(expectedTitle, ParserUtil.parseTitle(VALID_TITLE));","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"LimJunxue"},"content":"    public void parseTitle_validValueWithWhitespace_returnsTrimmedTitle() throws Exception {","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"        String titleWithWhitespace \u003d WHITESPACE + VALID_TITLE + WHITESPACE;","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"        Title expectedTitle \u003d new Title(VALID_TITLE);","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(expectedTitle, ParserUtil.parseTitle(titleWithWhitespace));","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"habi39"},"content":"    public void parseDate_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"habi39"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE));","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"habi39"},"content":"    public void parseDate_validValueWithoutWhitespace_returnsDate() throws Exception {","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"habi39"},"content":"        Date expectedDate \u003d new Date(VALID_DATE);","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"habi39"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(VALID_DATE));","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"habi39"},"content":"    public void parseDate_validValueWithWhitespace_returnsTrimmedDate() throws Exception {","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"habi39"},"content":"        String dateWithWhitespace \u003d WHITESPACE + VALID_DATE + WHITESPACE;","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"habi39"},"content":"        Date expectedDate \u003d new Date(VALID_DATE);","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"habi39"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(dateWithWhitespace));","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"LimJunxue"},"content":"    public void parseDescription_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":101,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescription((String) null));","lastModifiedDate":"2021-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"LimJunxue"},"content":"    public void parseDescription_validValueWithoutWhitespace_returnsDescription() throws Exception {","lastModifiedDate":"2021-03-11"},{"lineNumber":106,"author":{"gitId":"LimJunxue"},"content":"        Description expectedDescription \u003d new Description(VALID_DESCRIPTION);","lastModifiedDate":"2021-03-11"},{"lineNumber":107,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(VALID_DESCRIPTION));","lastModifiedDate":"2021-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"LimJunxue"},"content":"    public void parseDescription_validValueWithWhitespace_returnsTrimmedDescription() throws Exception {","lastModifiedDate":"2021-03-11"},{"lineNumber":112,"author":{"gitId":"LimJunxue"},"content":"        String descriptionWithWhitespace \u003d WHITESPACE + VALID_DESCRIPTION + WHITESPACE;","lastModifiedDate":"2021-03-11"},{"lineNumber":113,"author":{"gitId":"LimJunxue"},"content":"        Description expectedDescription \u003d new Description(VALID_DESCRIPTION);","lastModifiedDate":"2021-03-11"},{"lineNumber":114,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(descriptionWithWhitespace));","lastModifiedDate":"2021-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"kaixiangtay"},"content":"    public void parseRecurringSchedule_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"kaixiangtay"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRecurringSchedule((String) null));","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"kaixiangtay"},"content":"    public void parseRecurringSchedule_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"kaixiangtay"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRecurringSchedule(INVALID_RECURRINGSCHEDULE));","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"kaixiangtay"},"content":"    public void parseRecurringSchedule_validValueWithoutWhitespace_returnsRecurringSchedule() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"kaixiangtay"},"content":"        RecurringSchedule expectedRecurringSchedule \u003d new RecurringSchedule(VALID_RECURRINGSCHEDULE);","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"kaixiangtay"},"content":"        System.out.println(expectedRecurringSchedule);","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"kaixiangtay"},"content":"        System.out.println(ParserUtil.parseRecurringSchedule(VALID_RECURRINGSCHEDULE));","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"kaixiangtay"},"content":"        assertEquals(expectedRecurringSchedule, ParserUtil.parseRecurringSchedule(VALID_RECURRINGSCHEDULE));","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"kaixiangtay"},"content":"    public void parseRecurringSchedule_validValueWithWhitespace_returnsTrimmedRecurringSchedule() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"kaixiangtay"},"content":"        String recurringScheduleWithWhitespace \u003d WHITESPACE + VALID_RECURRINGSCHEDULE + WHITESPACE;","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"kaixiangtay"},"content":"        RecurringSchedule expectedRecurringSchedule \u003d new RecurringSchedule(VALID_RECURRINGSCHEDULE);","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"kaixiangtay"},"content":"        assertEquals(expectedRecurringSchedule, ParserUtil.parseRecurringSchedule(recurringScheduleWithWhitespace));","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"LimJunxue":27,"maxxng":4,"kaixiangtay":15,"habi39":11,"-":130}},{"path":"src/test/java/seedu/address/logic/parser/PlannerParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"habi39"},"content":"import seedu.address.logic.commands.DeleteFieldCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"habi39"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.model.task.predicates.TitleContainsKeywordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.testutil.TaskUtil;","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"public class PlannerParserTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"    private final PlannerParser parser \u003d new PlannerParser();","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(TaskUtil.getAddCommand(task));","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(new AddCommand(task), command);","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"habi39"},"content":"    public void parseCommand_delete_task() throws Exception {","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"mesyeux"},"content":"        //@@author mesyeux","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"mesyeux"},"content":"        DeleteTaskCommand command \u003d (DeleteTaskCommand) parser.parseCommand(","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"mesyeux"},"content":"                DeleteTaskCommand.COMMAND_WORD + \" \" + INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"mesyeux"},"content":"        assertEquals(new DeleteTaskCommand(INDEX_FIRST_TASK), command);","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"mesyeux"},"content":"        //@@author","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"mesyeux"},"content":"    //@@author mesyeux","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"mesyeux"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"mesyeux"},"content":"    public void parseCommand_delete_field() throws Exception {","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"mesyeux"},"content":"        DeleteFieldCommand command \u003d (DeleteFieldCommand) parser.parseCommand(","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"mesyeux"},"content":"                DeleteFieldCommand.COMMAND_WORD + \" \" + INDEX_FIRST_TASK.getOneBased()","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"mesyeux"},"content":"                + \" d/\");","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"mesyeux"},"content":"        assertEquals(new DeleteFieldCommand(INDEX_FIRST_TASK, \"d/\"), command);","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"mesyeux"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"mesyeux"},"content":"    //@@author","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(task).build();","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"LimJunxue"},"content":"                + INDEX_FIRST_TASK.getOneBased() + \" \" + TaskUtil.getEditTaskDescriptorDetails(descriptor));","lastModifiedDate":"2021-03-02"},{"lineNumber":75,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_TASK, descriptor), command);","lastModifiedDate":"2021-03-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(new FindCommand(new TitleContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"kaixiangtay"},"content":"    public void parseCommand_list_throwsParseException() {","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"kaixiangtay"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.INVALID_INPUT), ()","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"kaixiangtay"},"content":"            -\u003e parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"LimJunxue":16,"mesyeux":14,"kaixiangtay":4,"habi39":3,"-":77}},{"path":"src/test/java/seedu/address/logic/parser/SnoozeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"maxxng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"maxxng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"maxxng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"import seedu.address.logic.commands.SnoozeCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"public class SnoozeCommandParserTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"    private SnoozeCommandParser parser \u003d new SnoozeCommandParser();","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"    public void parse_missingIndex_failure() {","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"maxxng"},"content":"        assertParseFailure(parser, \" \", SnoozeCommandParser.MESSAGE_INVALID_ARGUMENT);","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"maxxng"},"content":"    public void parse_tooManyParameters_failure() {","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"maxxng"},"content":"        assertParseFailure(parser, \"2 2 2\", SnoozeCommandParser.MESSAGE_INVALID_ARGUMENT);","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"maxxng"},"content":"    public void parse_indexOnly_success() {","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"maxxng"},"content":"        SnoozeCommand expectedCommand \u003d new SnoozeCommand(INDEX_SECOND_TASK, 1);","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"maxxng"},"content":"        assertParseSuccess(parser, \"2\", expectedCommand);","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"maxxng"},"content":"    public void parse_indexAndDays_success() {","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"maxxng"},"content":"        SnoozeCommand expectedCommand \u003d new SnoozeCommand(INDEX_SECOND_TASK, 3);","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"maxxng"},"content":"        assertParseSuccess(parser, \"2 3\", expectedCommand);","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"maxxng"},"content":"    public void parse_validIndexOnlyWithTrailingWhitespace_success() {","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"maxxng"},"content":"        SnoozeCommand expectedCommand \u003d new SnoozeCommand(INDEX_SECOND_TASK, 1);","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"maxxng"},"content":"        assertParseSuccess(parser, \"2   \", expectedCommand);","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"maxxng"},"content":"        assertParseSuccess(parser, \"  2\", expectedCommand);","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"maxxng"},"content":"        assertParseSuccess(parser, \"  2   \", expectedCommand);","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"maxxng"},"content":"    public void parse_validIndexAndDaysWithTrailingWhitespace_success() {","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"maxxng"},"content":"        SnoozeCommand expectedCommand \u003d new SnoozeCommand(INDEX_FIRST_TASK, 4);","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"maxxng"},"content":"        assertParseSuccess(parser, \"1 4  \", expectedCommand);","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"maxxng"},"content":"        assertParseSuccess(parser, \"  1 4\", expectedCommand);","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"maxxng"},"content":"        assertParseSuccess(parser, \"  1 4   \", expectedCommand);","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"maxxng"},"content":"    public void parse_numberOfDaysEqualsZero_failure() {","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"maxxng"},"content":"        assertParseFailure(parser, \"1 0\", SnoozeCommandParser.MESSAGE_INVALID_ARGUMENT);","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"maxxng"},"content":"    public void parse_numberOfDaysNegative_failure() {","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"maxxng"},"content":"        assertParseFailure(parser, \"1 -2\", SnoozeCommandParser.MESSAGE_INVALID_ARGUMENT);","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"maxxng"},"content":"    public void parse_invalidInput_failure() {","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"maxxng"},"content":"        assertParseFailure(parser, \"1 0x1\", SnoozeCommandParser.MESSAGE_INVALID_ARGUMENT);","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"maxxng"},"content":"        assertParseFailure(parser, \"0x1\", SnoozeCommandParser.MESSAGE_INVALID_ARGUMENT);","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"maxxng"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"maxxng":73}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.BENSON;","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.model.task.predicates.TitleContainsKeywordsPredicate;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.testutil.PlannerBuilder;","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(new Planner(), new Planner(modelManager.getPlanner()));","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"        userPrefs.setPlannerFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"        userPrefs.setPlannerFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"    public void setPlannerFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPlannerFilePath(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"    public void setPlannerFilePath_validPath_setsPlannerFilePath() {","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"        modelManager.setPlannerFilePath(path);","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(path, modelManager.getPlannerFilePath());","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTask(null));","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"LimJunxue"},"content":"    public void hasTask_taskNotInPlanner_returnsFalse() {","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(modelManager.hasTask(ALICE));","lastModifiedDate":"2021-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"LimJunxue"},"content":"    public void hasTask_taskInPlanner_returnsTrue() {","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"LimJunxue"},"content":"        modelManager.addTask(ALICE);","lastModifiedDate":"2021-03-02"},{"lineNumber":88,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(modelManager.hasTask(ALICE));","lastModifiedDate":"2021-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"LimJunxue"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":93,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTaskList().remove(0));","lastModifiedDate":"2021-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"LimJunxue"},"content":"        Planner planner \u003d new PlannerBuilder().withTask(ALICE).withTask(BENSON).build();","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"LimJunxue"},"content":"        Planner differentPlanner \u003d new Planner();","lastModifiedDate":"2021-03-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"LimJunxue"},"content":"        modelManager \u003d new ModelManager(planner, userPrefs);","lastModifiedDate":"2021-03-09"},{"lineNumber":104,"author":{"gitId":"LimJunxue"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(planner, userPrefs);","lastModifiedDate":"2021-03-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"LimJunxue"},"content":"        // different planner -\u003e returns false","lastModifiedDate":"2021-03-09"},{"lineNumber":117,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentPlanner, userPrefs)));","lastModifiedDate":"2021-03-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"LimJunxue"},"content":"        String[] keywords \u003d ALICE.getTitle().fullTitle.split(\"\\\\s+\");","lastModifiedDate":"2021-03-03"},{"lineNumber":121,"author":{"gitId":"LimJunxue"},"content":"        modelManager.updateFilteredTaskList(new TitleContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-03-03"},{"lineNumber":122,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(modelManager.equals(new ModelManager(planner, userPrefs)));","lastModifiedDate":"2021-03-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"LimJunxue"},"content":"        modelManager.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"LimJunxue"},"content":"        differentUserPrefs.setPlannerFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":130,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(modelManager.equals(new ModelManager(planner, differentUserPrefs)));","lastModifiedDate":"2021-03-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"LimJunxue":33,"kaixiangtay":1,"-":98}},{"path":"src/test/java/seedu/address/model/PlannerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalPlanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.tag.UniqueTagList;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"public class PlannerTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"    private final Planner planner \u003d new Planner();","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(Collections.emptyList(), planner.getTaskList());","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(NullPointerException.class, () -\u003e planner.resetData(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"    public void resetData_withValidReadOnlyPlanner_replacesData() {","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"        Planner newData \u003d getTypicalPlanner();","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"        planner.resetData(newData);","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(newData, planner);","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"    public void resetData_withDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"        // Two tasks with the same identity fields","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"        Task editedAlice \u003d new TaskBuilder(ALICE).withDescription(VALID_DESCRIPTION_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"        List\u003cTask\u003e newTasks \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"        PlannerStub newData \u003d new PlannerStub(newTasks);","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e planner.resetData(newData));","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(NullPointerException.class, () -\u003e planner.hasTask(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"    public void hasTask_taskNotInPlanner_returnsFalse() {","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(planner.hasTask(ALICE));","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"LimJunxue"},"content":"    public void hasTask_taskInPlanner_returnsTrue() {","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"        planner.addTask(ALICE);","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(planner.hasTask(ALICE));","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"    public void hasTask_taskWithSameIdentityFieldsInPlanner_returnsTrue() {","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"        planner.addTask(ALICE);","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"LimJunxue"},"content":"        Task editedAlice \u003d new TaskBuilder(ALICE).withDescription(VALID_DESCRIPTION_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(planner.hasTask(editedAlice));","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"LimJunxue"},"content":"    public void getTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":85,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e planner.getTaskList().remove(0));","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"kaixiangtay"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e planner.getTaskList().remove(0));","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"LimJunxue"},"content":"     * A stub ReadOnlyPlanner whose tasks list can violate interface constraints.","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"LimJunxue"},"content":"    private static class PlannerStub implements ReadOnlyPlanner {","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"LimJunxue"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-02"},{"lineNumber":94,"author":{"gitId":"LimJunxue"},"content":"        private final ObservableList\u003cTag\u003e tags \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"LimJunxue"},"content":"        PlannerStub(Collection\u003cTask\u003e tasks) {","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"LimJunxue"},"content":"            this.tasks.setAll(tasks);","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"LimJunxue"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-03-02"},{"lineNumber":102,"author":{"gitId":"LimJunxue"},"content":"            return tasks;","lastModifiedDate":"2021-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"LimJunxue"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"LimJunxue"},"content":"        public ObservableList\u003cTag\u003e getTagList() {","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"LimJunxue"},"content":"            return tags;","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"LimJunxue"},"content":"        @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"LimJunxue"},"content":"        public UniqueTagList getUniqueTagListObject() {","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"LimJunxue"},"content":"            return new UniqueTagList();","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"LimJunxue":53,"kaixiangtay":1,"-":62}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"    public void setPlannerFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setPlannerFilePath(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"LimJunxue":2,"-":19}},{"path":"src/test/java/seedu/address/model/task/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"habi39"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"habi39"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"habi39"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"habi39"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"habi39"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"habi39"},"content":"public class DateTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"habi39"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"habi39"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date((String) null));","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"habi39"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"habi39"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"habi39"},"content":"        String invalidDate \u003d \"21/03/20199\";","lastModifiedDate":"2021-04-02"},{"lineNumber":21,"author":{"gitId":"habi39"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"habi39"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"habi39"},"content":"    public void isValidDate() {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"habi39"},"content":"        // null date number","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"habi39"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"habi39"},"content":"        // invalid date numbers","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"habi39"},"content":"        assertFalse(Date.isValidDate(\"21/03/20193\")); // empty string","lastModifiedDate":"2021-04-02"},{"lineNumber":31,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"habi39"},"content":"        // valid date numbers","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"habi39"},"content":"        assertTrue(Date.isValidDate(\"12/12/2021\")); // exactly 3 numbers","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"habi39"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"maxxng":3,"habi39":34}},{"path":"src/test/java/seedu/address/model/task/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Description;","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"public class DescriptionTest {","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"    public void isValidDescription() {","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"        // null description","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(NullPointerException.class, () -\u003e Description.isValidDescription(null));","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"        // valid descriptions","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(Description.isValidDescription(\"\")); // blank","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(Description.isValidDescription(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(Description.isValidDescription(\"-\")); // one character","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(Description.isValidDescription(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(Description.isValidDescription(\"Todo: \"","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"                + \"\\n - task 1\"","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"                + \"\\n - task 2\"","lastModifiedDate":"2021-03-23"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"                + \"\\n - task 3\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"LimJunxue":30,"maxxng":2}},{"path":"src/test/java/seedu/address/model/task/DurationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"habi39"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"habi39"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"habi39"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"habi39"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"habi39"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Duration;","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"habi39"},"content":"public class DurationTest {","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"habi39"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"habi39"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"habi39"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Duration(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"habi39"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"kaixiangtay"},"content":"    public void constructor_invalidDuration_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"kaixiangtay"},"content":"        String invalidDuration \u003d \" \";","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"kaixiangtay"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Duration(invalidDuration));","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"habi39"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"kaixiangtay"},"content":"    public void isValidDuration() {","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"kaixiangtay"},"content":"        // null duration number","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"habi39"},"content":"        assertThrows(NullPointerException.class, () -\u003e Duration.isValidDuration(null));","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"kaixiangtay"},"content":"        // invalid duration numbers","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"habi39"},"content":"        assertFalse(Duration.isValidDuration(\" \")); // spaces only","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"kaixiangtay"},"content":"        // valid duration numbers","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(Duration.isValidDuration(\"\")); // empty string","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"habi39"},"content":"        assertTrue(Duration.isValidDuration(\"15:30-16:30\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"habi39"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"maxxng":2,"kaixiangtay":8,"habi39":27}},{"path":"src/test/java/seedu/address/model/task/RecurringScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangtay"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"kaixiangtay"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"kaixiangtay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"kaixiangtay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"kaixiangtay"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"kaixiangtay"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"kaixiangtay"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"kaixiangtay"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"kaixiangtay"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"kaixiangtay"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"kaixiangtay"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"kaixiangtay"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"kaixiangtay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.RecurringSchedule;","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"kaixiangtay"},"content":"public class RecurringScheduleTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"kaixiangtay"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"kaixiangtay"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"kaixiangtay"},"content":"        assertThrows(NullPointerException.class, () -\u003e new RecurringSchedule(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"kaixiangtay"},"content":"    public void constructor_invalidRecurringSchedule_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"kaixiangtay"},"content":"        String invalidRecurringSchedule \u003d \"recurring schedule\";","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"kaixiangtay"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new RecurringSchedule(invalidRecurringSchedule));","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"kaixiangtay"},"content":"        String blankRecurringSchedule \u003d \" \";","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"kaixiangtay"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new RecurringSchedule(blankRecurringSchedule));","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"kaixiangtay"},"content":"    public void equals() {","lastModifiedDate":"2021-03-22"},{"lineNumber":40,"author":{"gitId":"kaixiangtay"},"content":"        String firstRecurringScheduleDetails \u003d \"[30/05/2021][mon][weekly]\";","lastModifiedDate":"2021-03-22"},{"lineNumber":41,"author":{"gitId":"kaixiangtay"},"content":"        String secondRecurringScheduleDetails \u003d \"[30/07/2021][tue][biweekly]\";","lastModifiedDate":"2021-03-22"},{"lineNumber":42,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":43,"author":{"gitId":"kaixiangtay"},"content":"        RecurringSchedule firstRecurringSchedule \u003d new RecurringSchedule(firstRecurringScheduleDetails);","lastModifiedDate":"2021-03-22"},{"lineNumber":44,"author":{"gitId":"kaixiangtay"},"content":"        RecurringSchedule secondRecurringSchedule \u003d new RecurringSchedule(secondRecurringScheduleDetails);","lastModifiedDate":"2021-03-22"},{"lineNumber":45,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":46,"author":{"gitId":"kaixiangtay"},"content":"        // different recurring schedule -\u003e returns true","lastModifiedDate":"2021-03-22"},{"lineNumber":47,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(firstRecurringSchedule.equals(secondRecurringSchedule));","lastModifiedDate":"2021-03-22"},{"lineNumber":48,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":49,"author":{"gitId":"kaixiangtay"},"content":"        // same recurring schedule -\u003e returns true","lastModifiedDate":"2021-03-22"},{"lineNumber":50,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(firstRecurringSchedule.equals(firstRecurringSchedule));","lastModifiedDate":"2021-03-22"},{"lineNumber":51,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":52,"author":{"gitId":"kaixiangtay"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-22"},{"lineNumber":53,"author":{"gitId":"kaixiangtay"},"content":"        RecurringSchedule firstRecurringScheduleCopy \u003d new RecurringSchedule(firstRecurringScheduleDetails);","lastModifiedDate":"2021-03-22"},{"lineNumber":54,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(firstRecurringSchedule.equals(firstRecurringScheduleCopy));","lastModifiedDate":"2021-03-22"},{"lineNumber":55,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":56,"author":{"gitId":"kaixiangtay"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":57,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(firstRecurringSchedule.equals(1));","lastModifiedDate":"2021-03-22"},{"lineNumber":58,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":59,"author":{"gitId":"kaixiangtay"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-22"},{"lineNumber":60,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(firstRecurringSchedule.equals(null));","lastModifiedDate":"2021-03-22"},{"lineNumber":61,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-22"},{"lineNumber":62,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-22"},{"lineNumber":63,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-22"},{"lineNumber":64,"author":{"gitId":"kaixiangtay"},"content":"    public void isEmptyRecurringScheduleInput() {","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"kaixiangtay"},"content":"        RecurringSchedule emptyRecurringSchedule \u003d new RecurringSchedule(\"\");","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"kaixiangtay"},"content":"        // accept no argument since it is optional for a task to be recurring schedule","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(emptyRecurringSchedule.isEmptyValue());","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"kaixiangtay"},"content":"    public void isInvalidRecurringSchedule_missingParameters() {","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"kaixiangtay"},"content":"        // missing frequency of week","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(RecurringSchedule.isValidRecurringScheduleInput(\"[10/06/2021][Mon]\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":75,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"kaixiangtay"},"content":"        // missing days of week","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(RecurringSchedule.isValidRecurringScheduleInput(\"[10/06/2021][biweekly]\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"kaixiangtay"},"content":"        // missing starting date","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(RecurringSchedule.isValidRecurringScheduleInput(\"[Mon][biweekly]\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"kaixiangtay"},"content":"        // missing \u0027[]\u0027 brackets between starting date, days of week and week frequency","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(RecurringSchedule.isValidRecurringScheduleInput(\"10/06/2021Monbiweekly\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"kaixiangtay"},"content":"        // missing month from the starting date","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(RecurringSchedule.isValidRecurringScheduleInput(\"[10/2021][Mon][biweekly]\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":87,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"kaixiangtay"},"content":"        // missing year from the starting date","lastModifiedDate":"2021-03-19"},{"lineNumber":89,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(RecurringSchedule.isValidRecurringScheduleInput(\"[10/06/ ][Mon][biweekly]\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"kaixiangtay"},"content":"        // missing days of week","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(RecurringSchedule.isValidRecurringScheduleInput(\"[10/06/2021][][biweekly]\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"kaixiangtay"},"content":"        // missing frequency of week","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(RecurringSchedule.isValidRecurringScheduleInput(\"[10/06/2021][Mon][]\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"kaixiangtay"},"content":"        // missing starting date, days of week, week frequency","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(RecurringSchedule.isValidRecurringScheduleInput(\"[][][]\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"kaixiangtay"},"content":"    public void isInvalidRecurringSchedule_invalidInput() {","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"kaixiangtay"},"content":"        // invalid special characters between spaces","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(RecurringSchedule.isValidRecurringScheduleInput(\"[10@06r*2021][Mon][biweekly]\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"kaixiangtay"},"content":"        // invalid special characters","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(RecurringSchedule.isValidRecurringScheduleInput(\"[10 @*! 2021][M_n][biwe$$ly]\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":108,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"kaixiangtay"},"content":"        // invalid format for day in starting date, accept up to value 31 only","lastModifiedDate":"2021-03-21"},{"lineNumber":110,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(RecurringSchedule.isValidRecurringScheduleInput(\"[40/12/2021][Mon][biweekly]\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":111,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":112,"author":{"gitId":"kaixiangtay"},"content":"        // invalid format for month in starting date, accept up to value 12 only","lastModifiedDate":"2021-03-21"},{"lineNumber":113,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(RecurringSchedule.isValidRecurringScheduleInput(\"[10/13/2021][Mon][biweekly]\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":114,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"kaixiangtay"},"content":"        // invalid format for days of week, kept to 3 alphabet characters","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(RecurringSchedule.isValidRecurringScheduleInput(\"[10/06/2021][Monday][biweekly]\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"kaixiangtay"},"content":"        // invalid input for frequency of week, only accept weekly or biweekly","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(RecurringSchedule.isValidRecurringScheduleInput(\"[10/06/2021][Mon][fortnight]\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"kaixiangtay"},"content":"        // invalid formatting, missing \u0027[]\u0027 brackets in between","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(RecurringSchedule.isValidRecurringScheduleInput(\"[10/06/2021-Mon-biweekly]\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"kaixiangtay"},"content":"        // wrong order \u003d\u003e days of week comes before starting date","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(RecurringSchedule.isValidRecurringScheduleInput(\"[Mon][10/06/2021][biWeekly]\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"kaixiangtay"},"content":"        // wrong order \u003d\u003e week frequency comes before days of week","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(RecurringSchedule.isValidRecurringScheduleInput(\"[10/06/2021][biWeekly][Mon]\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"kaixiangtay"},"content":"        // wrong order \u003d\u003e week frequency comes before days of week and days of week comes before starting date","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(RecurringSchedule.isValidRecurringScheduleInput(\"[biWeekly][Mon][10/06/2021]\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"kaixiangtay"},"content":"    public void isValidRecurringSchedule() {","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"kaixiangtay"},"content":"        // valid biweekly recurring schedule, mixture of large and small caps","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(RecurringSchedule.isValidRecurringScheduleInput(\"[10/06/2021][Mon][biWeekly]\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"kaixiangtay"},"content":"        // valid biweekly recurring schedule, large caps only","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(RecurringSchedule.isValidRecurringScheduleInput(\"[10/06/2021][MON][BIWEEKLY]\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"kaixiangtay"},"content":"        // valid weekly recurring schedule, mixture of large and small caps","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(RecurringSchedule.isValidRecurringScheduleInput(\"[10/06/2021][Wed][weekly]\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"kaixiangtay"},"content":"        // valid weekly recurring schedule, small caps only","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(RecurringSchedule.isValidRecurringScheduleInput(\"[10/06/2021][wed][weekly]\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":147,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"kaixiangtay"},"content":"    public void isInRecurringSchedule() {","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"kaixiangtay"},"content":"        String firstDateString \u003d \"10/05/2021\";","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"kaixiangtay"},"content":"        List\u003cString\u003e weekDates \u003d new ArrayList\u003c\u003e(Arrays.asList(\"10/05/2021\" , \"17/05/2021\", \"24/05/2021\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"kaixiangtay"},"content":"        // date string found in recurring schedule","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(weekDates.stream().anyMatch(date -\u003e date.equals(firstDateString)));","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"kaixiangtay"},"content":"        // date string not found in recurring schedule","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"kaixiangtay"},"content":"        String secondDateString \u003d \"31/05/2021\";","lastModifiedDate":"2021-03-30"},{"lineNumber":159,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(weekDates.stream().anyMatch(date -\u003e date.equals(secondDateString)));","lastModifiedDate":"2021-03-30"},{"lineNumber":160,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"kaixiangtay"},"content":"    public void checkExpiryDate() {","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"kaixiangtay"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"kaixiangtay"},"content":"        String endDateInput \u003d \"05/02/2019\";","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"kaixiangtay"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateInput, FORMATTER);","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"kaixiangtay"},"content":"        // end date is after current date","lastModifiedDate":"2021-03-31"},{"lineNumber":170,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(endDate.isBefore(currentDate));","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"kaixiangtay"},"content":"        endDateInput \u003d \"31/12/2021\";","lastModifiedDate":"2021-03-31"},{"lineNumber":173,"author":{"gitId":"kaixiangtay"},"content":"        endDate \u003d LocalDate.parse(endDateInput, FORMATTER);","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"kaixiangtay"},"content":"        // end date is ahead of current date","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(endDate.isBefore(currentDate));","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"kaixiangtay"},"content":"    public void formatRecurringScheduleInput() {","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"kaixiangtay"},"content":"        String recurringSchedule \u003d \"[30/06/2021][MON][Biweekly]\";","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"kaixiangtay"},"content":"        String[] recurringScheduleData \u003d recurringSchedule.replaceAll(\"\\\\]\", \"\").split(\"\\\\[\");","lastModifiedDate":"2021-03-31"},{"lineNumber":183,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":184,"author":{"gitId":"kaixiangtay"},"content":"        LocalDate endDate \u003d LocalDate.parse(recurringScheduleData[1], FORMATTER);","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"kaixiangtay"},"content":"        String dayOfWeek \u003d recurringScheduleData[2].toLowerCase();","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"kaixiangtay"},"content":"        String weekFreq \u003d recurringScheduleData[3].toLowerCase();","lastModifiedDate":"2021-03-31"},{"lineNumber":187,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":188,"author":{"gitId":"kaixiangtay"},"content":"        // end of date is valid input","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"kaixiangtay"},"content":"        assertEquals(endDate, LocalDate.parse(\"30/06/2021\", FORMATTER));","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"kaixiangtay"},"content":"        // day of week is valid input","lastModifiedDate":"2021-03-31"},{"lineNumber":192,"author":{"gitId":"kaixiangtay"},"content":"        assertEquals(dayOfWeek, \"mon\");","lastModifiedDate":"2021-03-31"},{"lineNumber":193,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":194,"author":{"gitId":"kaixiangtay"},"content":"        // week frequency is valid input","lastModifiedDate":"2021-03-31"},{"lineNumber":195,"author":{"gitId":"kaixiangtay"},"content":"        assertEquals(weekFreq, \"biweekly\");","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"kaixiangtay"},"content":"        String outputRecurringScheduleDetail \u003d \" every \" + dayOfWeek + \" \" + weekFreq + \" until \"","lastModifiedDate":"2021-03-31"},{"lineNumber":198,"author":{"gitId":"kaixiangtay"},"content":"                + recurringScheduleData[1];","lastModifiedDate":"2021-03-31"},{"lineNumber":199,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":200,"author":{"gitId":"kaixiangtay"},"content":"        // valid output recurring detail","lastModifiedDate":"2021-03-31"},{"lineNumber":201,"author":{"gitId":"kaixiangtay"},"content":"        assertEquals(outputRecurringScheduleDetail, \" every mon biweekly until 30/06/2021\");","lastModifiedDate":"2021-03-31"},{"lineNumber":202,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":203,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":205,"author":{"gitId":"kaixiangtay"},"content":"    public void calculateNumWeeksBetweenDates() {","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"kaixiangtay"},"content":"        // current date to be 28/03/2021 (Sun)","lastModifiedDate":"2021-03-31"},{"lineNumber":207,"author":{"gitId":"kaixiangtay"},"content":"        LocalDate currentDate \u003d LocalDate.parse(\"28/03/2021\", FORMATTER);","lastModifiedDate":"2021-03-31"},{"lineNumber":208,"author":{"gitId":"kaixiangtay"},"content":"        // end date to be 02/04/2021 here (Fri of same week)","lastModifiedDate":"2021-03-31"},{"lineNumber":209,"author":{"gitId":"kaixiangtay"},"content":"        LocalDate firstEndDate \u003d LocalDate.parse(\"02/04/2021\", FORMATTER);","lastModifiedDate":"2021-03-31"},{"lineNumber":210,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":211,"author":{"gitId":"kaixiangtay"},"content":"        LocalDate startingDate \u003d currentDate.with(TemporalAdjusters.previousOrSame(DayOfWeek.SUNDAY));","lastModifiedDate":"2021-03-31"},{"lineNumber":212,"author":{"gitId":"kaixiangtay"},"content":"        LocalDate endingDate \u003d firstEndDate.with(TemporalAdjusters.previousOrSame(DayOfWeek.SATURDAY));","lastModifiedDate":"2021-03-31"},{"lineNumber":213,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":214,"author":{"gitId":"kaixiangtay"},"content":"        long daysBetweenDates \u003d ChronoUnit.DAYS.between(startingDate, endingDate);","lastModifiedDate":"2021-03-31"},{"lineNumber":215,"author":{"gitId":"kaixiangtay"},"content":"        int numWeeks \u003d (int) Math.ceil(daysBetweenDates / 7.0);","lastModifiedDate":"2021-03-31"},{"lineNumber":216,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":217,"author":{"gitId":"kaixiangtay"},"content":"        // number of weeks is considered 0 and not 1","lastModifiedDate":"2021-03-31"},{"lineNumber":218,"author":{"gitId":"kaixiangtay"},"content":"        // since it is within a single week range from the previous week Sun till the current week Sat","lastModifiedDate":"2021-03-31"},{"lineNumber":219,"author":{"gitId":"kaixiangtay"},"content":"        assertEquals(numWeeks, 0);","lastModifiedDate":"2021-03-31"},{"lineNumber":220,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":221,"author":{"gitId":"kaixiangtay"},"content":"        // end date to be 03/04/2021 here (Sat to be considered the last day of same week)","lastModifiedDate":"2021-03-31"},{"lineNumber":222,"author":{"gitId":"kaixiangtay"},"content":"        LocalDate secondEndDate \u003d LocalDate.parse(\"03/04/2021\", FORMATTER);","lastModifiedDate":"2021-03-31"},{"lineNumber":223,"author":{"gitId":"kaixiangtay"},"content":"        endingDate \u003d secondEndDate.with(TemporalAdjusters.previousOrSame(DayOfWeek.SATURDAY));","lastModifiedDate":"2021-03-31"},{"lineNumber":224,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":225,"author":{"gitId":"kaixiangtay"},"content":"        daysBetweenDates \u003d ChronoUnit.DAYS.between(startingDate, endingDate);","lastModifiedDate":"2021-03-31"},{"lineNumber":226,"author":{"gitId":"kaixiangtay"},"content":"        numWeeks \u003d (int) Math.ceil(daysBetweenDates / 7.0);","lastModifiedDate":"2021-03-31"},{"lineNumber":227,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":228,"author":{"gitId":"kaixiangtay"},"content":"        // number of weeks is considered 1 since it has just completed a single week range (inclusive of Sat)","lastModifiedDate":"2021-03-31"},{"lineNumber":229,"author":{"gitId":"kaixiangtay"},"content":"        // from the previous week Sun till the current week Sat","lastModifiedDate":"2021-03-31"},{"lineNumber":230,"author":{"gitId":"kaixiangtay"},"content":"        assertEquals(numWeeks, 1);","lastModifiedDate":"2021-03-31"},{"lineNumber":231,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":232,"author":{"gitId":"kaixiangtay"},"content":"        LocalDate thirdEndDate \u003d LocalDate.parse(\"18/04/2021\", FORMATTER);","lastModifiedDate":"2021-03-31"},{"lineNumber":233,"author":{"gitId":"kaixiangtay"},"content":"        endingDate \u003d thirdEndDate.with(TemporalAdjusters.previousOrSame(DayOfWeek.SATURDAY));","lastModifiedDate":"2021-03-31"},{"lineNumber":234,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":235,"author":{"gitId":"kaixiangtay"},"content":"        daysBetweenDates \u003d ChronoUnit.DAYS.between(startingDate, endingDate);","lastModifiedDate":"2021-03-31"},{"lineNumber":236,"author":{"gitId":"kaixiangtay"},"content":"        numWeeks \u003d (int) Math.ceil(daysBetweenDates / 7.0);","lastModifiedDate":"2021-03-31"},{"lineNumber":237,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":238,"author":{"gitId":"kaixiangtay"},"content":"        // number of weeks is considered 3 since it has completed 3 weeks range","lastModifiedDate":"2021-03-31"},{"lineNumber":239,"author":{"gitId":"kaixiangtay"},"content":"        assertEquals(numWeeks, 3);","lastModifiedDate":"2021-03-31"},{"lineNumber":240,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":241,"author":{"gitId":"kaixiangtay"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"maxxng":2,"kaixiangtay":239}},{"path":"src/test/java/seedu/address/model/task/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"maxxng"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"maxxng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"maxxng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"maxxng"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"maxxng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Status;","lastModifiedDate":"2021-04-04"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":"public class StatusTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Status(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"maxxng"},"content":"    public void constructor_invalidStatus_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"maxxng"},"content":"        String invalidStatus \u003d \"task done\";","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"maxxng"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Status(invalidStatus));","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"maxxng"},"content":"    public void hashcode_identicalStatusObjects_identicalHashcodes() {","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"maxxng"},"content":"        Status statusOne \u003d new Status(\"done\");","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"maxxng"},"content":"        Status statusTwo \u003d new Status(\"done\");","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"maxxng"},"content":"        assertEquals(statusOne.hashCode(), statusTwo.hashCode());","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"maxxng"},"content":"    public void hashcode_differentStatusObjects_differentHashcodes() {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"maxxng"},"content":"        Status statusOne \u003d new Status(\"done\");","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"maxxng"},"content":"        Status statusTwo \u003d new Status(\"not done\");","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"maxxng"},"content":"        assertNotEquals(statusOne.hashCode(), statusTwo.hashCode());","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"maxxng"},"content":"    public void isDone() {","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"maxxng"},"content":"        Status statusOne \u003d new Status(\"done\");","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"maxxng"},"content":"        Status statusTwo \u003d new Status(\"not done\");","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"maxxng"},"content":"        assertTrue(statusOne.isDone());","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"maxxng"},"content":"        assertFalse(statusTwo.isDone());","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"maxxng"},"content":"    public void isValidStatus() {","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"maxxng"},"content":"        assertThrows(NullPointerException.class, () -\u003e Status.isValidStatus(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"maxxng"},"content":"        assertFalse(Status.isValidStatus(\"in progress\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"maxxng"},"content":"        assertFalse(Status.isValidStatus(\"done \"));","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"maxxng"},"content":"        assertFalse(Status.isValidStatus(\" not done\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"maxxng"},"content":"        assertFalse(Status.isValidStatus(\"notdone\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"maxxng"},"content":"        assertTrue(Status.isValidStatus(\"done\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"maxxng"},"content":"        assertTrue(Status.isValidStatus(\"not done\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"maxxng"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"maxxng":63}},{"path":"src/test/java/seedu/address/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RECURRINGSCHEDULE_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.BOB;","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"public class TaskTest {","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e task.getTags().remove(0));","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"    public void isSameTask() {","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(ALICE.isSameTask(ALICE));","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(ALICE.isSameTask(null));","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"        // same title, all other attributes different -\u003e returns true","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"habi39"},"content":"        Task editedAlice \u003d new TaskBuilder(ALICE).withDate(VALID_DATE_BOB)","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"kaixiangtay"},"content":"                .withRecurringSchedule(VALID_RECURRINGSCHEDULE_BOB).withDescription(VALID_DESCRIPTION_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"kaixiangtay"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(ALICE.isSameTask(editedAlice));","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"        // different title, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"        editedAlice \u003d new TaskBuilder(ALICE).withTitle(VALID_TITLE_BOB).build();","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(ALICE.isSameTask(editedAlice));","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"        // title differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"        Task editedBob \u003d new TaskBuilder(BOB).withTitle(VALID_TITLE_BOB.toLowerCase()).build();","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(BOB.isSameTask(editedBob));","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"        // title has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"        String titleWithTrailingSpaces \u003d VALID_TITLE_BOB + \" \";","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"        editedBob \u003d new TaskBuilder(BOB).withTitle(titleWithTrailingSpaces).build();","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(BOB.isSameTask(editedBob));","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"        Task aliceCopy \u003d new TaskBuilder(ALICE).build();","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"        // different title -\u003e returns false","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"LimJunxue"},"content":"        Task editedAlice \u003d new TaskBuilder(ALICE).withTitle(VALID_TITLE_BOB).build();","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"habi39"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"habi39"},"content":"        editedAlice \u003d new TaskBuilder(ALICE).withDate(VALID_DATE_BOB).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"kaixiangtay"},"content":"        // different recurring schedule -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"kaixiangtay"},"content":"        editedAlice \u003d new TaskBuilder(ALICE).withRecurringSchedule(VALID_RECURRINGSCHEDULE_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"LimJunxue"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"LimJunxue"},"content":"        editedAlice \u003d new TaskBuilder(ALICE).withDescription(VALID_DESCRIPTION_BOB).build();","lastModifiedDate":"2021-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"LimJunxue"},"content":"        editedAlice \u003d new TaskBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"LimJunxue":31,"kaixiangtay":6,"habi39":4,"-":51}},{"path":"src/test/java/seedu/address/model/task/TitleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Title;","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"public class TitleTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Title(null));","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"    public void constructor_invalidTitle_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"        String invalidTitle \u003d \"\";","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Title(invalidTitle));","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"    public void isValidTitle() {","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"        // null title","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(NullPointerException.class, () -\u003e Title.isValidTitle(null));","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"        // invalid title","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(Title.isValidTitle(\"\")); // empty string","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(Title.isValidTitle(\" \")); // spaces only","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(Title.isValidTitle(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(Title.isValidTitle(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"        // valid title","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(Title.isValidTitle(\"peter jack\")); // alphabets only","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(Title.isValidTitle(\"12345\")); // numbers only","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(Title.isValidTitle(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(Title.isValidTitle(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(Title.isValidTitle(\"David Roger Jackson Ray Jr 2nd\")); // long titles","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"LimJunxue":40,"maxxng":2}},{"path":"src/test/java/seedu/address/model/task/UniqueTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.BOB;","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-02"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"import java.util.List;","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"public class UniqueTaskListTest {","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.contains(null));","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(uniqueTaskList.contains(ALICE));","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(uniqueTaskList.contains(ALICE));","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"    public void contains_taskWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"        Task editedAlice \u003d new TaskBuilder(ALICE).withDescription(VALID_DESCRIPTION_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"                .build();","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(uniqueTaskList.contains(editedAlice));","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.add(null));","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"    public void add_duplicateTask_throwsDuplicateTaskException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.add(ALICE));","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"LimJunxue"},"content":"    public void setTask_nullTargetTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(null, ALICE));","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":66,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"LimJunxue"},"content":"    public void setTask_nullEditedTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(ALICE, null));","lastModifiedDate":"2021-03-02"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"    public void setTask_targetTaskNotInList_throwsTaskNotFoundException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.setTask(ALICE, ALICE));","lastModifiedDate":"2021-03-02"},{"lineNumber":74,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":75,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"    public void setTask_editedTaskIsSameTask_success() {","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"LimJunxue"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2021-03-02"},{"lineNumber":79,"author":{"gitId":"LimJunxue"},"content":"        uniqueTaskList.setTask(ALICE, ALICE);","lastModifiedDate":"2021-03-02"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-02"},{"lineNumber":81,"author":{"gitId":"LimJunxue"},"content":"        expectedUniqueTaskList.add(ALICE);","lastModifiedDate":"2021-03-02"},{"lineNumber":82,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-02"},{"lineNumber":83,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":84,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":85,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":86,"author":{"gitId":"LimJunxue"},"content":"    public void setTask_editedTaskHasSameIdentity_success() {","lastModifiedDate":"2021-03-02"},{"lineNumber":87,"author":{"gitId":"LimJunxue"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2021-03-02"},{"lineNumber":88,"author":{"gitId":"LimJunxue"},"content":"        Task editedAlice \u003d new TaskBuilder(ALICE).withDescription(VALID_DESCRIPTION_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-11"},{"lineNumber":89,"author":{"gitId":"LimJunxue"},"content":"                .build();","lastModifiedDate":"2021-03-02"},{"lineNumber":90,"author":{"gitId":"LimJunxue"},"content":"        uniqueTaskList.setTask(ALICE, editedAlice);","lastModifiedDate":"2021-03-02"},{"lineNumber":91,"author":{"gitId":"LimJunxue"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-02"},{"lineNumber":92,"author":{"gitId":"LimJunxue"},"content":"        expectedUniqueTaskList.add(editedAlice);","lastModifiedDate":"2021-03-02"},{"lineNumber":93,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-02"},{"lineNumber":94,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":95,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":96,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":97,"author":{"gitId":"LimJunxue"},"content":"    public void setTask_editedTaskHasDifferentIdentity_success() {","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"LimJunxue"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2021-03-02"},{"lineNumber":99,"author":{"gitId":"LimJunxue"},"content":"        uniqueTaskList.setTask(ALICE, BOB);","lastModifiedDate":"2021-03-02"},{"lineNumber":100,"author":{"gitId":"LimJunxue"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-02"},{"lineNumber":101,"author":{"gitId":"LimJunxue"},"content":"        expectedUniqueTaskList.add(BOB);","lastModifiedDate":"2021-03-02"},{"lineNumber":102,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-02"},{"lineNumber":103,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":104,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":105,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":106,"author":{"gitId":"LimJunxue"},"content":"    public void setTask_editedTaskHasNonUniqueIdentity_throwsDuplicateTaskException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":107,"author":{"gitId":"LimJunxue"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2021-03-02"},{"lineNumber":108,"author":{"gitId":"LimJunxue"},"content":"        uniqueTaskList.add(BOB);","lastModifiedDate":"2021-03-02"},{"lineNumber":109,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTask(ALICE, BOB));","lastModifiedDate":"2021-03-02"},{"lineNumber":110,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":111,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":112,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":113,"author":{"gitId":"LimJunxue"},"content":"    public void remove_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":114,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.remove(null));","lastModifiedDate":"2021-03-02"},{"lineNumber":115,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":116,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":117,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":118,"author":{"gitId":"LimJunxue"},"content":"    public void remove_taskDoesNotExist_throwsTaskNotFoundException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":119,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.remove(ALICE));","lastModifiedDate":"2021-03-02"},{"lineNumber":120,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":121,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":122,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":123,"author":{"gitId":"LimJunxue"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2021-03-02"},{"lineNumber":124,"author":{"gitId":"LimJunxue"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2021-03-02"},{"lineNumber":125,"author":{"gitId":"LimJunxue"},"content":"        uniqueTaskList.remove(ALICE);","lastModifiedDate":"2021-03-02"},{"lineNumber":126,"author":{"gitId":"LimJunxue"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-02"},{"lineNumber":127,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-02"},{"lineNumber":128,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":129,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":130,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":131,"author":{"gitId":"LimJunxue"},"content":"    public void setTasks_nullUniqueTaskList_throwsNullPointerException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":132,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((UniqueTaskList) null));","lastModifiedDate":"2021-03-02"},{"lineNumber":133,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":134,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":135,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":136,"author":{"gitId":"LimJunxue"},"content":"    public void setTasks_uniqueTaskList_replacesOwnListWithProvidedUniqueTaskList() {","lastModifiedDate":"2021-03-02"},{"lineNumber":137,"author":{"gitId":"LimJunxue"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2021-03-02"},{"lineNumber":138,"author":{"gitId":"LimJunxue"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-02"},{"lineNumber":139,"author":{"gitId":"LimJunxue"},"content":"        expectedUniqueTaskList.add(BOB);","lastModifiedDate":"2021-03-02"},{"lineNumber":140,"author":{"gitId":"LimJunxue"},"content":"        uniqueTaskList.setTasks(expectedUniqueTaskList);","lastModifiedDate":"2021-03-02"},{"lineNumber":141,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-02"},{"lineNumber":142,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":143,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":144,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":145,"author":{"gitId":"LimJunxue"},"content":"    public void setTasks_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":146,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((List\u003cTask\u003e) null));","lastModifiedDate":"2021-03-02"},{"lineNumber":147,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":148,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":149,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":150,"author":{"gitId":"LimJunxue"},"content":"    public void setTasks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-02"},{"lineNumber":151,"author":{"gitId":"LimJunxue"},"content":"        uniqueTaskList.add(ALICE);","lastModifiedDate":"2021-03-02"},{"lineNumber":152,"author":{"gitId":"LimJunxue"},"content":"        List\u003cTask\u003e taskList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-03-02"},{"lineNumber":153,"author":{"gitId":"LimJunxue"},"content":"        uniqueTaskList.setTasks(taskList);","lastModifiedDate":"2021-03-02"},{"lineNumber":154,"author":{"gitId":"LimJunxue"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-03-02"},{"lineNumber":155,"author":{"gitId":"LimJunxue"},"content":"        expectedUniqueTaskList.add(BOB);","lastModifiedDate":"2021-03-02"},{"lineNumber":156,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-03-02"},{"lineNumber":157,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":158,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":159,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":160,"author":{"gitId":"LimJunxue"},"content":"    public void setTasks_listWithDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":161,"author":{"gitId":"LimJunxue"},"content":"        List\u003cTask\u003e listWithDuplicateTasks \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-03-02"},{"lineNumber":162,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTasks(listWithDuplicateTasks));","lastModifiedDate":"2021-03-02"},{"lineNumber":163,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":164,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":165,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-02"},{"lineNumber":166,"author":{"gitId":"LimJunxue"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-02"},{"lineNumber":167,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-03-02"},{"lineNumber":168,"author":{"gitId":"LimJunxue"},"content":"            -\u003e uniqueTaskList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-03-02"},{"lineNumber":169,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":170,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"LimJunxue":170}},{"path":"src/test/java/seedu/address/model/task/predicates/DescriptionContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangtay"},"content":"package seedu.address.model.task.predicates;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"kaixiangtay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"kaixiangtay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"kaixiangtay"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"kaixiangtay"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"kaixiangtay"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"kaixiangtay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"kaixiangtay"},"content":"public class DescriptionContainsKeywordsPredicateTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"kaixiangtay"},"content":"    public void equals() {","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"kaixiangtay"},"content":"        List\u003cString\u003e firstKeywords \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"kaixiangtay"},"content":"        List\u003cString\u003e secondKeywords \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"kaixiangtay"},"content":"        DescriptionContainsKeywordsPredicate firstPredicate \u003d new DescriptionContainsKeywordsPredicate(firstKeywords);","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"kaixiangtay"},"content":"        DescriptionContainsKeywordsPredicate secondPredicate \u003d new DescriptionContainsKeywordsPredicate(secondKeywords);","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"kaixiangtay"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(secondPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"kaixiangtay"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"kaixiangtay"},"content":"        DescriptionContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"kaixiangtay"},"content":"                new DescriptionContainsKeywordsPredicate(firstKeywords);","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"kaixiangtay"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(secondPredicate.equals(100));","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"kaixiangtay"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(secondPredicate.equals(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"kaixiangtay"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(secondPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"kaixiangtay"},"content":"    public void test_descriptionContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"kaixiangtay"},"content":"        // One keyword","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"kaixiangtay"},"content":"        DescriptionContainsKeywordsPredicate predicate \u003d new DescriptionContainsKeywordsPredicate(","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"kaixiangtay"},"content":"                Collections.singletonList(\"Alice\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDescription(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"kaixiangtay"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"kaixiangtay"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDescription(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"kaixiangtay"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"kaixiangtay"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDescription(\"Alice Carol\").build()));","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"kaixiangtay"},"content":"        // Mixed order for keywords","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"kaixiangtay"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDescription(\"Carol Bob\").build()));","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"kaixiangtay"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"kaixiangtay"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDescription(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"kaixiangtay"},"content":"    public void test_descriptionDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"kaixiangtay"},"content":"        // Zero keywords","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"kaixiangtay"},"content":"        DescriptionContainsKeywordsPredicate predicate \u003d new DescriptionContainsKeywordsPredicate(","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"kaixiangtay"},"content":"                Collections.emptyList());","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(predicate.test(new TaskBuilder().withDescription(\"Alice\").build()));","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"kaixiangtay"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"kaixiangtay"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(predicate.test(new TaskBuilder().withDescription(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"habi39"},"content":"        // Keywords match title, date but does not match description","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"kaixiangtay"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"habi39"},"content":"                Arrays.asList(\"13/05/2021\", \"Alice\"));","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"habi39"},"content":"        assertFalse(predicate.test(new TaskBuilder().withTitle(\"Alice\").withDate(\"13/05/2021\")","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"kaixiangtay"},"content":"                .withDescription(\"Main Street\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"kaixiangtay"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"kaixiangtay":80,"habi39":3}},{"path":"src/test/java/seedu/address/model/task/predicates/TagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangtay"},"content":"package seedu.address.model.task.predicates;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"kaixiangtay"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"kaixiangtay"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"kaixiangtay"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"kaixiangtay"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"kaixiangtay"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"kaixiangtay"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"kaixiangtay"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"kaixiangtay"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"kaixiangtay"},"content":"public class TagContainsKeywordsPredicateTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"kaixiangtay"},"content":"    public void equals() {","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"kaixiangtay"},"content":"        Set\u003cString\u003e firstPredicateKeywordSet \u003d Collections.singleton(\"first\");","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"kaixiangtay"},"content":"        Set\u003cString\u003e secondPredicateKeywordSet \u003d new HashSet\u003c\u003e(Arrays.asList(\"first\", \"second\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"kaixiangtay"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordSet);","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"kaixiangtay"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d new TagContainsKeywordsPredicate(secondPredicateKeywordSet);","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"kaixiangtay"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"kaixiangtay"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"kaixiangtay"},"content":"        TagContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"kaixiangtay"},"content":"                new TagContainsKeywordsPredicate(firstPredicateKeywordSet);","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"kaixiangtay"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"kaixiangtay"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"kaixiangtay"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"kaixiangtay"},"content":"    public void test_tagContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"kaixiangtay"},"content":"        TagContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"kaixiangtay"},"content":"        // One keyword","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"kaixiangtay"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Collections.singleton(","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"kaixiangtay"},"content":"                \"Alice\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(predicate.test(new TaskBuilder().withTags(\"Alice\").build()));","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"kaixiangtay"},"content":"        // All multiple tag keywords match multiple tags","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"kaixiangtay"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(new HashSet\u003c\u003e(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(predicate.test(new TaskBuilder().withTags(\"Alice\", \"Bob\").build()));","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"kaixiangtay"},"content":"        // All multiple tag keywords match multiple tags (Order does not matter)","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"kaixiangtay"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(new HashSet\u003c\u003e(Arrays.asList(\"Bob\", \"Alice\")));","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(predicate.test(new TaskBuilder().withTags(\"Alice\", \"Bob\").build()));","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"kaixiangtay"},"content":"        // All multiple tag keywords match some of the tags","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"kaixiangtay"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(new HashSet\u003c\u003e(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(predicate.test(new TaskBuilder().withTags(\"Alice\", \"Bob\", \"Charles\").build()));","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"kaixiangtay"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"kaixiangtay"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(new HashSet\u003c\u003e(Arrays.asList(\"aLIce\", \"bOB\")));","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"kaixiangtay"},"content":"        assertTrue(predicate.test(new TaskBuilder().withTags(\"Alice\", \"Bob\").build()));","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"kaixiangtay"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"kaixiangtay"},"content":"    public void test_tagDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"kaixiangtay"},"content":"        TagContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"kaixiangtay"},"content":"        // Only match partial keyword","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"kaixiangtay"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(new HashSet\u003c\u003e(Arrays.asList(\"Car\")));","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(predicate.test(new TaskBuilder().withTags(\"Carol\").build()));","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"kaixiangtay"},"content":"        // Only match partial keyword, have extra characters","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"kaixiangtay"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(new HashSet\u003c\u003e(Arrays.asList(\"Carol\")));","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(predicate.test(new TaskBuilder().withTags(\"Car\").build()));","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"kaixiangtay"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"kaixiangtay"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(new HashSet\u003c\u003e(Arrays.asList(\"Carol\")));","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(predicate.test(new TaskBuilder().withTags(\"AliceBob\").build()));","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"habi39"},"content":"        // Keywords match title, date and description but does not match tag","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"kaixiangtay"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(new HashSet\u003c\u003e(Arrays.asList","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"habi39"},"content":"                (\"Alice\", \"13/05/2021\", \"Main Street\")));","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"habi39"},"content":"        assertFalse(predicate.test(new TaskBuilder().withTitle(\"Alice\").withDate(\"13/05/2021\")","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"kaixiangtay"},"content":"                .withDescription(\"Main Street\").withTags(\"CS2103\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"kaixiangtay"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"kaixiangtay"},"content":"        // Not all keywords match with the tags","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"kaixiangtay"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(new HashSet\u003c\u003e(Arrays.asList(\"Bob\", \"Carol\")));","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"kaixiangtay"},"content":"        assertFalse(predicate.test(new TaskBuilder().withTags(\"Alice\", \"Bob\").build()));","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"kaixiangtay"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"kaixiangtay"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"kaixiangtay":92,"habi39":3}},{"path":"src/test/java/seedu/address/model/task/predicates/TaskDateOnDatePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"habi39"},"content":"package seedu.address.model.task.predicates;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"habi39"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"habi39"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"habi39"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"habi39"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"habi39"},"content":"class TaskDateOnDatePredicateTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"habi39"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"    public void test_taskDateOnDate_returnsTrue() {","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"habi39"},"content":"        TaskDateOnDatePredicate predicate \u003d new TaskDateOnDatePredicate(new Date(\"10/04/2021\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"habi39"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDate(\"10/04/2021\").build()));","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"habi39"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"    public void test_taskDateNotOnDate_returnsFalse() {","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"habi39"},"content":"        // given date on schedule and no date","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"habi39"},"content":"        TaskDateOnDatePredicate predicate \u003d new TaskDateOnDatePredicate(new Date(\"08/05/2021\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"habi39"},"content":"        assertFalse(predicate.test(new TaskBuilder().withRecurringSchedule(\"[08/05/2021][sat][weekly]\").build()));","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"habi39"},"content":"        // wrong date","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"habi39"},"content":"        predicate \u003d new TaskDateOnDatePredicate(new Date(\"08/05/2021\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"habi39"},"content":"        assertFalse(predicate.test(new TaskBuilder().withDate(\"09/05/2021\").build()));","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"habi39"},"content":"        // no date","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"habi39"},"content":"        predicate \u003d new TaskDateOnDatePredicate(new Date(\"08/05/2021\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"habi39"},"content":"        assertFalse(predicate.test(new TaskBuilder().build()));","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"habi39"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"maxxng":1,"LimJunxue":2,"habi39":29}},{"path":"src/test/java/seedu/address/model/task/predicates/TaskOnDatePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.model.task.predicates;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"class TaskOnDatePredicateTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"    public void test_taskContainsDate_returnsTrue() {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"habi39"},"content":"        TaskOnDatePredicate predicate \u003d new TaskOnDatePredicate(new Date(\"10/04/2021\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(predicate.test(new TaskBuilder().withRecurringSchedule(\"[10/06/2021][sat][weekly]\").build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"        // given date on schedule\u0027s end date","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"habi39"},"content":"        predicate \u003d new TaskOnDatePredicate(new Date(\"08/05/2021\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(predicate.test(new TaskBuilder().withRecurringSchedule(\"[08/05/2021][sat][weekly]\").build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"habi39"},"content":"        // given date on date","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"habi39"},"content":"        predicate \u003d new TaskOnDatePredicate(new Date(\"08/05/2021\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"habi39"},"content":"        assertTrue(predicate.test(new TaskBuilder().withDate(\"08/05/2021\").build()));","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"    public void test_taskDoesNotContainDate_returnsFalse() {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"habi39"},"content":"        // given date not in schedule and no date","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"habi39"},"content":"        TaskOnDatePredicate predicate \u003d new TaskOnDatePredicate(new Date(\"11/04/2021\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(predicate.test(new TaskBuilder().withRecurringSchedule(\"[10/06/2021][sat][weekly]\").build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"habi39"},"content":"        // given date after schedule\u0027s end date and no date","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"habi39"},"content":"        predicate \u003d new TaskOnDatePredicate(new Date(\"08/05/2021\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(predicate.test(new TaskBuilder().withRecurringSchedule(\"[08/04/2021][sat][weekly]\").build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"habi39"},"content":"        // no schedule and wrong date","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"habi39"},"content":"        predicate \u003d new TaskOnDatePredicate(new Date(\"08/05/2021\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"habi39"},"content":"        assertFalse(predicate.test(new TaskBuilder().withDate(\"09/05/2021\").build()));","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"habi39"},"content":"        // no schedule and no date","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"habi39"},"content":"        predicate \u003d new TaskOnDatePredicate(new Date(\"08/05/2021\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(predicate.test(new TaskBuilder().build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"LimJunxue":29,"maxxng":1,"habi39":14}},{"path":"src/test/java/seedu/address/model/task/predicates/TaskScheduledOnDatePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.model.task.predicates;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"class TaskScheduledOnDatePredicateTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"    public void test_scheduleContainsDate_returnsTrue() {","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"        TaskScheduledOnDatePredicate predicate \u003d new TaskScheduledOnDatePredicate(\"10/04/2021\");","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(predicate.test(new TaskBuilder().withRecurringSchedule(\"[10/06/2021][sat][weekly]\").build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"        // given date on schedule\u0027s end date","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"        predicate \u003d new TaskScheduledOnDatePredicate(\"08/05/2021\");","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(predicate.test(new TaskBuilder().withRecurringSchedule(\"[08/05/2021][sat][weekly]\").build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"    public void test_scheduleDoesNotContainDate_returnsFalse() {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"        TaskScheduledOnDatePredicate predicate \u003d new TaskScheduledOnDatePredicate(\"11/04/2021\");","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(predicate.test(new TaskBuilder().withRecurringSchedule(\"[10/06/2021][sat][weekly]\").build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"        // given date after schedule\u0027s end date","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"        predicate \u003d new TaskScheduledOnDatePredicate(\"08/05/2021\");","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(predicate.test(new TaskBuilder().withRecurringSchedule(\"[08/04/2021][sat][weekly]\").build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"habi39"},"content":"        // no schedule and on date","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"        predicate \u003d new TaskScheduledOnDatePredicate(\"08/05/2021\");","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"habi39"},"content":"        assertFalse(predicate.test(new TaskBuilder().withDate(\"08/05/2021\").build()));","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"        // no schedule","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"        predicate \u003d new TaskScheduledOnDatePredicate(\"08/05/2021\");","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(predicate.test(new TaskBuilder().build()));","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"LimJunxue":36,"habi39":2}},{"path":"src/test/java/seedu/address/model/task/predicates/TitleContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixiangtay"},"content":"package seedu.address.model.task.predicates;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import java.util.List;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"public class TitleContainsKeywordsPredicateTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"    public void equals() {","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"        TitleContainsKeywordsPredicate firstPredicate \u003d new TitleContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"        TitleContainsKeywordsPredicate secondPredicate \u003d new TitleContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"        TitleContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"                new TitleContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"    public void test_titleContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"        // One keyword","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"        TitleContainsKeywordsPredicate predicate \u003d new TitleContainsKeywordsPredicate(Collections.singletonList(","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"                \"Alice\"));","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(predicate.test(new TaskBuilder().withTitle(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"        // Multiple keywords","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(predicate.test(new TaskBuilder().withTitle(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(predicate.test(new TaskBuilder().withTitle(\"Alice Carol\").build()));","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"        assertTrue(predicate.test(new TaskBuilder().withTitle(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"    public void test_titleDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"        // Zero keywords","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"        TitleContainsKeywordsPredicate predicate \u003d new TitleContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(predicate.test(new TaskBuilder().withTitle(\"Alice\").build()));","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"LimJunxue"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(predicate.test(new TaskBuilder().withTitle(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"habi39"},"content":"        // Keywords match date and description but does not match title","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"mesyeux"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"12/12/2021\", \"Main\", \"Street\"));","lastModifiedDate":"2021-03-21"},{"lineNumber":74,"author":{"gitId":"habi39"},"content":"        assertFalse(predicate.test(new TaskBuilder().withTitle(\"Alice\").withDate(\"12/12/2021\")","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"kaixiangtay"},"content":"                .withDescription(\"Main Street\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"LimJunxue":72,"mesyeux":1,"kaixiangtay":2,"habi39":2}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.storage.JsonAdaptedTask.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.BENSON;","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Description;","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Duration;","lastModifiedDate":"2021-04-04"},{"lineNumber":18,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.RecurringSchedule;","lastModifiedDate":"2021-04-04"},{"lineNumber":19,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Status;","lastModifiedDate":"2021-04-04"},{"lineNumber":20,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Title;","lastModifiedDate":"2021-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"public class JsonAdaptedTaskTest {","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"    private static final String INVALID_TITLE \u003d \"R@chel\";","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"habi39"},"content":"    private static final String INVALID_DEADLINE \u003d \"19/05/20199\";","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"habi39"},"content":"    private static final String INVALID_DURATION \u003d \" \";","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" \";","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"kaixiangtay"},"content":"    private static final String INVALID_RECURRINGSCHEDULE \u003d \"[08@06*2021][Tue][lyweek]\";","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"maxxng"},"content":"    private static final String INVALID_STATUS \u003d \"done1\";","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"    private static final String VALID_TITLE \u003d BENSON.getTitle().toString();","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"habi39"},"content":"    private static final String VALID_DEADLINE \u003d BENSON.getDate().toString();","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"habi39"},"content":"    private static final String VALID_DURATION \u003d BENSON.getDuration().toString();","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"kaixiangtay"},"content":"    private static final String VALID_RECURRINGSCHEDULE \u003d BENSON.getRecurringSchedule().value;","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"    private static final String VALID_DESCRIPTION \u003d BENSON.getDescription().toString();","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"maxxng"},"content":"    private static final String VALID_STATUS \u003d BENSON.getStatus().toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"    public void toModelType_validTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(BENSON);","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(BENSON, task.toModelType());","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"    public void toModelType_invalidTitle_throwsIllegalValueException() {","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"habi39"},"content":"                new JsonAdaptedTask(INVALID_TITLE, VALID_DEADLINE, VALID_DURATION, VALID_RECURRINGSCHEDULE,","lastModifiedDate":"2021-03-23"},{"lineNumber":51,"author":{"gitId":"maxxng"},"content":"                        VALID_DESCRIPTION, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"        String expectedMessage \u003d Title.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"    public void toModelType_nullTitle_throwsIllegalValueException() {","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"habi39"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(null, VALID_DEADLINE, VALID_DURATION, VALID_RECURRINGSCHEDULE,","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"maxxng"},"content":"                VALID_DESCRIPTION, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName());","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"habi39"},"content":"    public void toModelType_invalidDeadline_throwsIllegalValueException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"LimJunxue"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":67,"author":{"gitId":"habi39"},"content":"                new JsonAdaptedTask(VALID_TITLE, INVALID_DEADLINE, VALID_DURATION, VALID_RECURRINGSCHEDULE,","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"maxxng"},"content":"                        VALID_DESCRIPTION, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"habi39"},"content":"        String expectedMessage \u003d Date.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"habi39"},"content":"    public void toModelType_nullDeadline_throwsIllegalValueException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"habi39"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_TITLE, null, VALID_DURATION, VALID_RECURRINGSCHEDULE,","lastModifiedDate":"2021-03-23"},{"lineNumber":76,"author":{"gitId":"maxxng"},"content":"                VALID_DESCRIPTION, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"habi39"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName());","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"habi39"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"habi39"},"content":"    public void toModelType_invalidDuration_throwsIllegalValueException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"habi39"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"habi39"},"content":"                new JsonAdaptedTask(VALID_TITLE, VALID_DEADLINE, INVALID_DURATION, VALID_RECURRINGSCHEDULE,","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"maxxng"},"content":"                        VALID_DESCRIPTION, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"habi39"},"content":"        String expectedMessage \u003d Duration.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"habi39"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"habi39"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"habi39"},"content":"    public void toModelType_nullDuration_throwsIllegalValueException() {","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"kaixiangtay"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_TITLE, VALID_DEADLINE, null, VALID_RECURRINGSCHEDULE,","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"maxxng"},"content":"                VALID_DESCRIPTION, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"habi39"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Duration.class.getSimpleName());","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"habi39"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"kaixiangtay"},"content":"    public void toModelType_invalidRecurringSchedule_throwsIllegalValueException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"LimJunxue"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":101,"author":{"gitId":"habi39"},"content":"                new JsonAdaptedTask(VALID_TITLE, VALID_DEADLINE, VALID_DURATION, INVALID_RECURRINGSCHEDULE,","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"maxxng"},"content":"                        VALID_DESCRIPTION, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"kaixiangtay"},"content":"        String expectedMessage \u003d RecurringSchedule.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"kaixiangtay"},"content":"    public void toModelType_nullRecurringSchedule_throwsIllegalValueException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"habi39"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_TITLE, VALID_DEADLINE, VALID_DURATION, null,","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"maxxng"},"content":"                VALID_DESCRIPTION, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"kaixiangtay"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, RecurringSchedule.class.getSimpleName());","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"LimJunxue"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-03-11"},{"lineNumber":117,"author":{"gitId":"habi39"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_TITLE, VALID_DEADLINE, VALID_DURATION,","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"kaixiangtay"},"content":"                VALID_RECURRINGSCHEDULE, null, VALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"LimJunxue"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName());","lastModifiedDate":"2021-03-11"},{"lineNumber":120,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"maxxng"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"maxxng"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"habi39"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_TITLE, VALID_DEADLINE, VALID_DURATION,","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"kaixiangtay"},"content":"                VALID_RECURRINGSCHEDULE, VALID_DESCRIPTION, INVALID_STATUS, VALID_TAGS);","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"maxxng"},"content":"        String expectedMessage \u003d Status.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"maxxng"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"LimJunxue"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2021-03-02"},{"lineNumber":136,"author":{"gitId":"habi39"},"content":"                new JsonAdaptedTask(VALID_TITLE, VALID_DEADLINE, VALID_DURATION, VALID_RECURRINGSCHEDULE,","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"maxxng"},"content":"                        VALID_DESCRIPTION, VALID_STATUS, invalidTags);","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(IllegalValueException.class, task::toModelType);","lastModifiedDate":"2021-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LimJunxue":28,"maxxng":23,"kaixiangtay":9,"habi39":31,"-":50}},{"path":"src/test/java/seedu/address/storage/JsonPlannerStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.ALICE;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.HOON;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.IDA;","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalPlanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.Planner;","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.ReadOnlyPlanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"public class JsonPlannerStorageTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonPlannerStorageTest\");","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"    @TempDir","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"    public Path testFolder;","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"    public void readPlanner_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(NullPointerException.class, () -\u003e readPlanner(null));","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"    private java.util.Optional\u003cReadOnlyPlanner\u003e readPlanner(String filePath) throws Exception {","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"        return new JsonPlannerStorage(Paths.get(filePath)).readPlanner(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"                : null;","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"        assertFalse(readPlanner(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(DataConversionException.class, () -\u003e readPlanner(\"notJsonFormatPlanner.json\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"    public void readPlanner_invalidTaskPlanner_throwDataConversionException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(DataConversionException.class, () -\u003e readPlanner(\"invalidTaskPlanner.json\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"    public void readPlanner_invalidAndValidTaskPlanner_throwDataConversionException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(DataConversionException.class, () -\u003e readPlanner(\"invalidAndValidTaskPlanner.json\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":62,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"    public void readAndSavePlanner_allInOrder_success() throws Exception {","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"        Path filePath \u003d testFolder.resolve(\"TempPlanner.json\");","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"LimJunxue"},"content":"        Planner original \u003d getTypicalPlanner();","lastModifiedDate":"2021-03-09"},{"lineNumber":67,"author":{"gitId":"LimJunxue"},"content":"        JsonPlannerStorage jsonPlannerStorage \u003d new JsonPlannerStorage(filePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-03-09"},{"lineNumber":70,"author":{"gitId":"LimJunxue"},"content":"        jsonPlannerStorage.savePlanner(original, filePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"        ReadOnlyPlanner readBack \u003d jsonPlannerStorage.readPlanner(filePath).get();","lastModifiedDate":"2021-03-09"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(original, new Planner(readBack));","lastModifiedDate":"2021-03-09"},{"lineNumber":73,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":74,"author":{"gitId":"LimJunxue"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-03-09"},{"lineNumber":75,"author":{"gitId":"LimJunxue"},"content":"        original.addTask(HOON);","lastModifiedDate":"2021-03-09"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"        original.removeTask(ALICE);","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"        jsonPlannerStorage.savePlanner(original, filePath);","lastModifiedDate":"2021-03-09"},{"lineNumber":78,"author":{"gitId":"LimJunxue"},"content":"        readBack \u003d jsonPlannerStorage.readPlanner(filePath).get();","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(original, new Planner(readBack));","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":81,"author":{"gitId":"LimJunxue"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-03-09"},{"lineNumber":82,"author":{"gitId":"LimJunxue"},"content":"        original.addTask(IDA);","lastModifiedDate":"2021-03-09"},{"lineNumber":83,"author":{"gitId":"LimJunxue"},"content":"        jsonPlannerStorage.savePlanner(original); // file path not specified","lastModifiedDate":"2021-03-09"},{"lineNumber":84,"author":{"gitId":"LimJunxue"},"content":"        readBack \u003d jsonPlannerStorage.readPlanner().get(); // file path not specified","lastModifiedDate":"2021-03-09"},{"lineNumber":85,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(original, new Planner(readBack));","lastModifiedDate":"2021-03-09"},{"lineNumber":86,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":88,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":89,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"LimJunxue"},"content":"    public void savePlanner_nullPlanner_throwsNullPointerException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":91,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(NullPointerException.class, () -\u003e savePlanner(null, \"SomeFile.json\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":94,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":95,"author":{"gitId":"LimJunxue"},"content":"     * Saves {@code planner} at the specified {@code filePath}.","lastModifiedDate":"2021-03-09"},{"lineNumber":96,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":97,"author":{"gitId":"LimJunxue"},"content":"    private void savePlanner(ReadOnlyPlanner planner, String filePath) {","lastModifiedDate":"2021-03-09"},{"lineNumber":98,"author":{"gitId":"LimJunxue"},"content":"        try {","lastModifiedDate":"2021-03-09"},{"lineNumber":99,"author":{"gitId":"LimJunxue"},"content":"            new JsonPlannerStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-09"},{"lineNumber":100,"author":{"gitId":"LimJunxue"},"content":"                    .savePlanner(planner, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-09"},{"lineNumber":101,"author":{"gitId":"LimJunxue"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-09"},{"lineNumber":102,"author":{"gitId":"LimJunxue"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-03-09"},{"lineNumber":103,"author":{"gitId":"LimJunxue"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":104,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":105,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":106,"author":{"gitId":"LimJunxue"},"content":"    @Test","lastModifiedDate":"2021-03-09"},{"lineNumber":107,"author":{"gitId":"LimJunxue"},"content":"    public void savePlanner_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-09"},{"lineNumber":108,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(NullPointerException.class, () -\u003e savePlanner(new Planner(), null));","lastModifiedDate":"2021-03-09"},{"lineNumber":109,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":110,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"LimJunxue":110}},{"path":"src/test/java/seedu/address/storage/JsonSerializablePlannerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.Planner;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.testutil.TypicalTasks;","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"public class JsonSerializablePlannerTest {","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializablePlannerTest\");","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"    private static final Path TYPICAL_TASKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTasksPlanner.json\");","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"    private static final Path INVALID_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTaskPlanner.json\");","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"    private static final Path DUPLICATE_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTaskPlanner.json\");","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"    public void toModelType_typicalTasksFile_success() throws Exception {","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"        JsonSerializablePlanner dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TASKS_FILE,","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"                JsonSerializablePlanner.class).get();","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"        Planner plannerFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"        Planner typicalTasksPlanner \u003d TypicalTasks.getTypicalPlanner();","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(plannerFromFile, typicalTasksPlanner);","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"    public void toModelType_invalidTaskFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"        JsonSerializablePlanner dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TASK_FILE,","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"                JsonSerializablePlanner.class).get();","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"    public void toModelType_duplicateTasks_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"        JsonSerializablePlanner dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TASK_FILE,","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"                JsonSerializablePlanner.class).get();","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"        assertThrows(IllegalValueException.class, JsonSerializablePlanner.MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LimJunxue":20,"-":27}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"        userPrefs.setPlannerFilePath(Paths.get(\"planit.json\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"LimJunxue":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalPlanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.Planner;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.ReadOnlyPlanner;","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"        JsonPlannerStorage plannerStorage \u003d new JsonPlannerStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"        storageManager \u003d new StorageManager(plannerStorage, userPrefsStorage);","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"    public void plannerReadSave() throws Exception {","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"         * {@link JsonPlannerStorage} class.","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonPlannerStorageTest} class.","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"        Planner original \u003d getTypicalPlanner();","lastModifiedDate":"2021-03-09"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"        storageManager.savePlanner(original);","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"        ReadOnlyPlanner retrieved \u003d storageManager.readPlanner().get();","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"        assertEquals(original, new Planner(retrieved));","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"    public void getPlannerFilePath() {","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"        assertNotNull(storageManager.getPlannerFilePath());","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimJunxue":14,"-":54}},{"path":"src/test/java/seedu/address/testutil/EditTaskDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Description;","lastModifiedDate":"2021-04-04"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Duration;","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.RecurringSchedule;","lastModifiedDate":"2021-04-04"},{"lineNumber":14,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Status;","lastModifiedDate":"2021-04-04"},{"lineNumber":15,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Title;","lastModifiedDate":"2021-04-04"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"/**","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":" * A utility class to help with building EditTaskDescriptor objects.","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":" */","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"public class EditTaskDescriptorBuilder {","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"    private EditTaskDescriptor descriptor;","lastModifiedDate":"2021-03-02"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"    public EditTaskDescriptorBuilder() {","lastModifiedDate":"2021-03-02"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2021-03-02"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"    public EditTaskDescriptorBuilder(EditTaskDescriptor descriptor) {","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"        this.descriptor \u003d new EditTaskDescriptor(descriptor);","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"     * Returns an {@code EditTaskDescriptor} with fields containing {@code task}\u0027s details","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"    public EditTaskDescriptorBuilder(Task task) {","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"        descriptor.setTitle(task.getTitle());","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"habi39"},"content":"        descriptor.setDate(task.getDate());","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"habi39"},"content":"        descriptor.setDuration(task.getDuration());","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"kaixiangtay"},"content":"        descriptor.setRecurringSchedule(task.getRecurringSchedule());","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"        descriptor.setDescription(task.getDescription());","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"maxxng"},"content":"        descriptor.setStatus(task.getStatus());","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"        descriptor.setTags(task.getTags());","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"     * Sets the {@code Title} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"    public EditTaskDescriptorBuilder withTitle(String title) {","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"        descriptor.setTitle(new Title(title));","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"        return this;","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"habi39"},"content":"     * Sets the {@code Date} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"habi39"},"content":"    public EditTaskDescriptorBuilder withDate(String date) {","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"habi39"},"content":"        descriptor.setDate(new Date(date));","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"        return this;","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"habi39"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"habi39"},"content":"     * Sets the {@code Duration} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"habi39"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"habi39"},"content":"    public EditTaskDescriptorBuilder withDuration(String duration) {","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"habi39"},"content":"        descriptor.setDuration(new Duration(duration));","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"habi39"},"content":"        return this;","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"kaixiangtay"},"content":"     * Sets the {@code RecurringSchedule} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"kaixiangtay"},"content":"    public EditTaskDescriptorBuilder withRecurringSchedule(String recurringSchedule) {","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"kaixiangtay"},"content":"        descriptor.setRecurringSchedule(new RecurringSchedule(recurringSchedule));","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"LimJunxue"},"content":"        return this;","lastModifiedDate":"2021-03-02"},{"lineNumber":75,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"LimJunxue"},"content":"     * Sets the {@code Description} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-03-11"},{"lineNumber":79,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"    public EditTaskDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2021-03-11"},{"lineNumber":81,"author":{"gitId":"LimJunxue"},"content":"        descriptor.setDescription(new Description(description));","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"LimJunxue"},"content":"        return this;","lastModifiedDate":"2021-03-02"},{"lineNumber":83,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":84,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":85,"author":{"gitId":"maxxng"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"maxxng"},"content":"     * Sets the {@code Status} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"maxxng"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"maxxng"},"content":"    public EditTaskDescriptorBuilder withStatus(String status) {","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"maxxng"},"content":"        descriptor.setStatus(new Status(status));","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"maxxng"},"content":"        return this;","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":94,"author":{"gitId":"LimJunxue"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditTaskDescriptor}","lastModifiedDate":"2021-03-02"},{"lineNumber":95,"author":{"gitId":"LimJunxue"},"content":"     * that we are building.","lastModifiedDate":"2021-03-02"},{"lineNumber":96,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":97,"author":{"gitId":"LimJunxue"},"content":"    public EditTaskDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"LimJunxue"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-03-02"},{"lineNumber":99,"author":{"gitId":"LimJunxue"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-03-02"},{"lineNumber":100,"author":{"gitId":"LimJunxue"},"content":"        return this;","lastModifiedDate":"2021-03-02"},{"lineNumber":101,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":102,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":103,"author":{"gitId":"LimJunxue"},"content":"    public EditTaskDescriptor build() {","lastModifiedDate":"2021-03-02"},{"lineNumber":104,"author":{"gitId":"LimJunxue"},"content":"        return descriptor;","lastModifiedDate":"2021-03-02"},{"lineNumber":105,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":106,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"LimJunxue":74,"maxxng":16,"kaixiangtay":4,"habi39":12}},{"path":"src/test/java/seedu/address/testutil/PlannerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.Planner;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":" * A utility class to help with building Planner objects.","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":" *     {@code Planner ab \u003d new PlannerBuilder().withTask(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"public class PlannerBuilder {","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"    private Planner planner;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"    public PlannerBuilder() {","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"        planner \u003d new Planner();","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"    public PlannerBuilder(Planner planner) {","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"        this.planner \u003d planner;","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"     * Adds a new {@code Task} to the {@code Planner} that we are building.","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"    public PlannerBuilder withTask(Task task) {","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"        planner.addTask(task);","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"        return this;","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"    public Planner build() {","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"        return planner;","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"LimJunxue":34}},{"path":"src/test/java/seedu/address/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"    private static final String TITLE_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"        return TITLE_TEST_VALUE;","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimJunxue":2,"-":70}},{"path":"src/test/java/seedu/address/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-02"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-04-04"},{"lineNumber":8,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Date;","lastModifiedDate":"2021-04-04"},{"lineNumber":9,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Description;","lastModifiedDate":"2021-04-04"},{"lineNumber":10,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Duration;","lastModifiedDate":"2021-04-04"},{"lineNumber":11,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.RecurringSchedule;","lastModifiedDate":"2021-04-04"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Status;","lastModifiedDate":"2021-04-04"},{"lineNumber":13,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.attributes.Title;","lastModifiedDate":"2021-04-04"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"/**","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":" */","lastModifiedDate":"2021-03-02"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"public class TaskBuilder {","lastModifiedDate":"2021-03-02"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"    public static final String DEFAULT_TITLE \u003d \"Amy Bee\";","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"habi39"},"content":"    public static final String DEFAULT_DATE \u003d \"\";","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"maxxng"},"content":"    public static final String DEFAULT_DURATION \u003d \"\";","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"maxxng"},"content":"    public static final String DEFAULT_RECURRINGSCHEDULE \u003d \"\";","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"maxxng"},"content":"    public static final String DEFAULT_STATUS \u003d \"not done\";","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"    private Title title;","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"habi39"},"content":"    private Date date;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"habi39"},"content":"    private Duration duration;","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"kaixiangtay"},"content":"    private RecurringSchedule recurringSchedule;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"    private Description description;","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"maxxng"},"content":"    private Status status;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"    public TaskBuilder() {","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"        title \u003d new Title(DEFAULT_TITLE);","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"habi39"},"content":"        date \u003d new Date(DEFAULT_DATE);","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"habi39"},"content":"        duration \u003d new Duration(DEFAULT_DURATION);","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"kaixiangtay"},"content":"        recurringSchedule \u003d new RecurringSchedule(DEFAULT_RECURRINGSCHEDULE);","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"maxxng"},"content":"        status \u003d new Status(DEFAULT_STATUS);","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"        title \u003d taskToCopy.getTitle();","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"habi39"},"content":"        date \u003d taskToCopy.getDate();","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"habi39"},"content":"        duration \u003d taskToCopy.getDuration();","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"kaixiangtay"},"content":"        recurringSchedule \u003d taskToCopy.getRecurringSchedule();","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"        description \u003d taskToCopy.getDescription();","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"maxxng"},"content":"        status \u003d taskToCopy.getStatus();","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"        tags \u003d new HashSet\u003c\u003e(taskToCopy.getTags());","lastModifiedDate":"2021-03-02"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"     * Sets the {@code Title} of the {@code Task} that we are building.","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"    public TaskBuilder withTitle(String title) {","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"LimJunxue"},"content":"        this.title \u003d new Title(title);","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"LimJunxue"},"content":"        return this;","lastModifiedDate":"2021-03-02"},{"lineNumber":68,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":70,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Task} that we are building.","lastModifiedDate":"2021-03-02"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"LimJunxue"},"content":"    public TaskBuilder withTags(String ... tags) {","lastModifiedDate":"2021-03-02"},{"lineNumber":74,"author":{"gitId":"LimJunxue"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-03-02"},{"lineNumber":75,"author":{"gitId":"LimJunxue"},"content":"        return this;","lastModifiedDate":"2021-03-02"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":78,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":79,"author":{"gitId":"LimJunxue"},"content":"     * Sets the {@code Description} of the {@code Task} that we are building.","lastModifiedDate":"2021-03-11"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":81,"author":{"gitId":"LimJunxue"},"content":"    public TaskBuilder withDescription(String description) {","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"LimJunxue"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"LimJunxue"},"content":"        return this;","lastModifiedDate":"2021-03-02"},{"lineNumber":84,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":85,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":86,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":87,"author":{"gitId":"habi39"},"content":"     * Sets the {@code Date} of the {@code Task} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":89,"author":{"gitId":"habi39"},"content":"    public TaskBuilder withDate(String date) {","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"habi39"},"content":"        this.date \u003d new Date(date);","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"LimJunxue"},"content":"        return this;","lastModifiedDate":"2021-03-02"},{"lineNumber":92,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":93,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":94,"author":{"gitId":"maxxng"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"habi39"},"content":"     * Sets the {@code Date} of the {@code Task} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"maxxng"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"maxxng"},"content":"    public TaskBuilder withStatus(String status) {","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"maxxng"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"maxxng"},"content":"        return this;","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"maxxng"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"maxxng"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"habi39"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"habi39"},"content":"     * Sets the {@code Duration} of the {@code Task} that we are building.","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"habi39"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"habi39"},"content":"    public TaskBuilder withDuration(String duration) {","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"habi39"},"content":"        this.duration \u003d new Duration(duration);","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"habi39"},"content":"        return this;","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"habi39"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"LimJunxue"},"content":"    /**","lastModifiedDate":"2021-03-02"},{"lineNumber":111,"author":{"gitId":"kaixiangtay"},"content":"     * Sets the {@code RecurringSchedule} of the {@code Task} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"LimJunxue"},"content":"     */","lastModifiedDate":"2021-03-02"},{"lineNumber":113,"author":{"gitId":"kaixiangtay"},"content":"    public TaskBuilder withRecurringSchedule(String recurringSchedule) {","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"kaixiangtay"},"content":"        this.recurringSchedule \u003d new RecurringSchedule(recurringSchedule);","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"LimJunxue"},"content":"        return this;","lastModifiedDate":"2021-03-02"},{"lineNumber":116,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":117,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":118,"author":{"gitId":"LimJunxue"},"content":"    public Task build() {","lastModifiedDate":"2021-03-02"},{"lineNumber":119,"author":{"gitId":"habi39"},"content":"        return new Task(title, date, duration, recurringSchedule, description, status, tags);","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"LimJunxue"},"content":"    }","lastModifiedDate":"2021-03-02"},{"lineNumber":121,"author":{"gitId":"LimJunxue"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":122,"author":{"gitId":"LimJunxue"},"content":"}","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"LimJunxue":76,"maxxng":20,"kaixiangtay":6,"habi39":20}},{"path":"src/test/java/seedu/address/testutil/TaskUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURRINGSCHEDULE;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.logic.commands.EditCommand.EditTaskDescriptor;","lastModifiedDate":"2021-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"maxxng"},"content":"import seedu.address.model.task.AttributeManager;","lastModifiedDate":"2021-04-04"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"habi39"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":" * A utility class for Task.","lastModifiedDate":"2021-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"public class TaskUtil {","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"     * Returns an add command string for adding the {@code task}.","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"    public static String getAddCommand(Task task) {","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getTaskDetails(task);","lastModifiedDate":"2021-03-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"     * Returns the part of command string for the given {@code task}\u0027s details.","lastModifiedDate":"2021-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"    public static String getTaskDetails(Task task) {","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"        sb.append(PREFIX_TITLE + task.getTitle().fullTitle + \" \");","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"maxxng"},"content":"        AttributeManager attributeManager \u003d new AttributeManager(task);","lastModifiedDate":"2021-04-04"},{"lineNumber":39,"author":{"gitId":"maxxng"},"content":"        if (!attributeManager.isEmptyDate()) {","lastModifiedDate":"2021-04-04"},{"lineNumber":40,"author":{"gitId":"habi39"},"content":"            sb.append(PREFIX_DATE + task.getDate().toString() + \" \");","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"maxxng"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"habi39"},"content":"        sb.append(PREFIX_DURATION + task.getDuration().toString() + \" \");","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"kaixiangtay"},"content":"        sb.append(PREFIX_RECURRINGSCHEDULE + task.getRecurringSchedule().value + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"        sb.append(PREFIX_DESCRIPTION + task.getDescription().value + \" \");","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"maxxng"},"content":"        sb.append(PREFIX_STATUS + task.getStatus().value + \" \");","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"        task.getTags().stream().forEach(s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \"));","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"     * Returns the part of command string for the given {@code EditTaskDescriptor}\u0027s details.","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"    public static String getEditTaskDescriptorDetails(EditTaskDescriptor descriptor) {","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"        descriptor.getTitle().ifPresent(title -\u003e sb.append(PREFIX_TITLE).append(title.fullTitle).append(\" \"));","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"habi39"},"content":"        descriptor.getDate().ifPresent(date -\u003e sb.append(PREFIX_DATE)","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"habi39"},"content":"                .append(date.toString()).append(\" \"));","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"habi39"},"content":"        descriptor.getDuration().ifPresent(duration -\u003e sb.append(PREFIX_DURATION)","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"habi39"},"content":"                .append(duration.toString()).append(\" \"));","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"kaixiangtay"},"content":"        descriptor.getRecurringSchedule().ifPresent(recurringSchedule -\u003e sb.append(PREFIX_RECURRINGSCHEDULE)","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"kaixiangtay"},"content":"                .append(recurringSchedule.value).append(\" \"));","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"LimJunxue"},"content":"        descriptor.getDescription().ifPresent(description -\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"                sb.append(PREFIX_DESCRIPTION).append(description.value).append(\" \"));","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"maxxng"},"content":"        descriptor.getStatus().ifPresent(status -\u003e sb.append(PREFIX_STATUS).append(status.value).append(\" \"));","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"LimJunxue":19,"maxxng":7,"kaixiangtay":4,"habi39":9,"-":36}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"     * Returns the middle index of the task in the {@code model}\u0027s task list.","lastModifiedDate":"2021-03-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"        return Index.fromOneBased(model.getFilteredTaskList().size() / 2);","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"     * Returns the last index of the task in the {@code model}\u0027s task list.","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"        return Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"     * Returns the task in the {@code model}\u0027s task list at {@code index}.","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"    public static Task getTask(Model model, Index index) {","lastModifiedDate":"2021-03-02"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"        return model.getFilteredTaskList().get(index.getZeroBased());","lastModifiedDate":"2021-03-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimJunxue":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"    public static final Index INDEX_THIRD_TASK \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"LimJunxue":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_AMY;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DURATION_AMY;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"habi39"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DURATION_BOB;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RECURRINGSCHEDULE_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"kaixiangtay"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RECURRINGSCHEDULE_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_AMY;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"maxxng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_BOB;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_AMY;","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_BOB;","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.Planner;","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2021-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"public class TypicalTasks {","lastModifiedDate":"2021-03-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"    public static final Task ALICE \u003d new TaskBuilder().withTitle(\"Assignment 79\")","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"kaixiangtay"},"content":"            .withDescription(\"Build the next Google\").withRecurringSchedule(\"[10/06/2021][Mon][biweekly]\")","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"maxxng"},"content":"            .withStatus(\"not done\").withDuration(\"12:30-13:30\")","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"            .withTags(\"priorities\").build();","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"    public static final Task BENSON \u003d new TaskBuilder().withTitle(\"Build a gaming PC\")","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"            .withDescription(\"buy: coffee, 3080, 40-inch monitor\")","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"habi39"},"content":"            .withDate(\"12/12/2021\").withStatus(\"not done\").withTags(\"findMoney\", \"priorities\").build();","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"maxxng"},"content":"    public static final Task CARL \u003d new TaskBuilder().withTitle(\"Countdown to finals\")","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"habi39"},"content":"            .withDuration(\"12:30-13:30\").withRecurringSchedule(\"[10/06/2021][Wed][weekly]\")","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"habi39"},"content":"            .withDescription(\"aiken doeet\").withStatus(\"done\").build();","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"maxxng"},"content":"    public static final Task DANIEL \u003d new TaskBuilder().withTitle(\"Demo our amazing product\")","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"habi39"},"content":"            .withDuration(\"12:30-13:30\").withRecurringSchedule(\"[05/06/2021][Thu][biweekly]\").withStatus(\"done\")","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"habi39"},"content":"            .withDescription(\"Number 1 for real\").withTags(\"fact\").build();","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"habi39"},"content":"    public static final Task ELLE \u003d new TaskBuilder().withTitle(\"Ensure that I eat lunch\").withDate(\"20/10/2021\")","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"maxxng"},"content":"            .withDescription(\"budget 3$\").withStatus(\"done\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"mesyeux"},"content":"    public static final Task FIONA \u003d new TaskBuilder().withTitle(\"Final project consult again\")","lastModifiedDate":"2021-03-21"},{"lineNumber":46,"author":{"gitId":"maxxng"},"content":"            .withDuration(\"12:30-13:30\").withDescription(\"at COM2\").withStatus(\"done\").build();","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"    public static final Task GEORGE \u003d new TaskBuilder().withTitle(\"Get ready for 2101 presentation\")","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"            .withRecurringSchedule(\"[18/06/2021][thu][weekly]\")","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"kaixiangtay"},"content":"            .withStatus(\"done\").withDescription(\"remember to shave\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":52,"author":{"gitId":"maxxng"},"content":"    public static final Task HOON \u003d new TaskBuilder().withTitle(\"Hoon Meier\")","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"habi39"},"content":"            .withDuration(\"12:30-13:30\").withRecurringSchedule(\"[25/06/2021][Sat][biweekly]\")","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"habi39"},"content":"            .withDescription(\"little india\").withStatus(\"done\").build();","lastModifiedDate":"2021-03-23"},{"lineNumber":55,"author":{"gitId":"habi39"},"content":"    public static final Task IDA \u003d new TaskBuilder().withTitle(\"Ida Mueller\").withDate(\"05/05/2021\")","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"habi39"},"content":"            .withDescription(\"chicago ave\").withStatus(\"done\").build();","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"    // Manually added - Task\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"habi39"},"content":"    public static final Task AMY \u003d new TaskBuilder().withTitle(VALID_TITLE_AMY).withDate(VALID_DATE_AMY)","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"habi39"},"content":"            .withDuration(VALID_DURATION_AMY).withRecurringSchedule(VALID_RECURRINGSCHEDULE_AMY)","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"kaixiangtay"},"content":"            .withDescription(VALID_DESCRIPTION_AMY).withStatus(VALID_STATUS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"habi39"},"content":"    public static final Task BOB \u003d new TaskBuilder().withTitle(VALID_TITLE_BOB).withDate(VALID_DATE_BOB)","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"habi39"},"content":"            .withDuration(VALID_DURATION_BOB).withRecurringSchedule(VALID_RECURRINGSCHEDULE_BOB)","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"kaixiangtay"},"content":"            .withDescription(VALID_DESCRIPTION_BOB).withStatus(VALID_STATUS_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"kaixiangtay"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"habi39"},"content":"    public static final Task AMY_NO_DATE \u003d new TaskBuilder().withTitle(VALID_TITLE_AMY)","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"maxxng"},"content":"            .withDuration(VALID_DURATION_AMY).withRecurringSchedule(VALID_RECURRINGSCHEDULE_AMY)","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"maxxng"},"content":"            .withDescription(VALID_DESCRIPTION_AMY).withStatus(VALID_STATUS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"    private TypicalTasks() {","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"LimJunxue"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"     * Returns an {@code Planner} with all the typical tasks.","lastModifiedDate":"2021-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"LimJunxue"},"content":"    public static Planner getTypicalPlanner() {","lastModifiedDate":"2021-03-09"},{"lineNumber":79,"author":{"gitId":"LimJunxue"},"content":"        Planner ab \u003d new Planner();","lastModifiedDate":"2021-03-09"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2021-03-02"},{"lineNumber":81,"author":{"gitId":"LimJunxue"},"content":"            ab.addTask(task);","lastModifiedDate":"2021-03-02"},{"lineNumber":82,"author":{"gitId":"LimJunxue"},"content":"            ab.addTagsIfAbsent(task.getTags());","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":87,"author":{"gitId":"LimJunxue"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2021-03-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"LimJunxue":24,"maxxng":10,"mesyeux":1,"kaixiangtay":7,"habi39":19,"-":29}}]
