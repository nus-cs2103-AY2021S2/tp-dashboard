[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-W12-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W12-2/tp/actions)","lastModifiedDate":"2021-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-03-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"* This is **project for Software Engineering (SE) students**.\u003cbr\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"* The project simulates an ongoing software project for a desktop application (called _Car@leads_) \u003cbr\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"  used for managing car customers contacts .","lastModifiedDate":"2021-03-02"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** \u003cbr\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"    (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"* It is named `Car@leads` because we want car salesperson users to match their cars with the right customers.","lastModifiedDate":"2021-03-02"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"* For the detailed documentation of this project, see the **[Car@leads Product Website](https://ay2021s2-cs2103t-w12-2.github.io/tp/)**.","lastModifiedDate":"2021-03-02"}],"authorContributionMap":{"OhJunMing":9,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"run {","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"}","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"Shizheng001"},"content":"    compile \u0027javax.mail:mail:1.4.7\u0027","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"Shizheng001"},"content":"    archiveName \u003d \u0027carLeads.jar\u0027","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Shizheng001":2,"OhJunMing":4,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"## Mentors","lastModifiedDate":"2021-03-02"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"* Lecturer : Prof Damith Chatura Rajapakse","lastModifiedDate":"2021-03-02"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"* Supervisor : Choo Qi Le Aaron","lastModifiedDate":"2021-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":"### Oh Jun Ming","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"\u003cimg src\u003d\"images/ohjunming.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"[[github](https://github.com/OhJunMing)]","lastModifiedDate":"2021-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"* Role: Deciding, we will allocate equally, everyone gets a chance","lastModifiedDate":"2021-03-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"rajobasu"},"content":"### Shi Zheng","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"\u003cimg src\u003d\"images/shizheng001.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Shizheng001"},"content":"[[github](http://github.com/ShiZheng001)]","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Shizheng001"},"content":"* Role: Not yet decided","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"### Rajarshi Basu","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"\u003cimg src\u003d\"images/rajobasu.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"rajobasu"},"content":"[[github](http://github.com/rajobasu)] ","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"rajobasu"},"content":"* Role: NOT Specific","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"rajobasu"},"content":"### Ho Wei Jun Sherman","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"nighoggDatatype"},"content":"\u003cimg src\u003d\"images/nighoggdatatype.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"nighoggDatatype"},"content":"[[GitHub](https://github.com/nighoggDatatype)]","lastModifiedDate":"2021-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"nighoggDatatype"},"content":"* Languages: C, Java, C#, Typescript, Ruby","lastModifiedDate":"2021-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nighoggDatatype":3,"Shizheng001":2,"rajobasu":6,"OhJunMing":8,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"layout: page title: Developer Guide","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"* Table of Contents {:toc}","lastModifiedDate":"2021-04-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"### Find filter Date of birth","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"rajobasu"},"content":"Step 1. User will execute find command Step 2. findcommand will be parsed Step 3. Access the specific DOB filter to","lastModifiedDate":"2021-04-02"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":"filter the results and list them out on the GUI","lastModifiedDate":"2021-04-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"rajobasu"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"* Car salesperson working in a multi-brand dealership","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"**Value proposition**:","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"* Manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-03-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"* Offers a higher success rate of closing deals as car salesperson can focus on selling cars that fits \u003cbr\u003e","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"  the customer needs and requirements","lastModifiedDate":"2021-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"* Notify potential clients on promotions and new car launches based on their profile preferences","lastModifiedDate":"2021-03-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":46,"author":{"gitId":"rajobasu"},"content":"* Follow-up with ex-customers upon expiry of their COE for new sales opportunity","lastModifiedDate":"2021-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":48,"author":{"gitId":"rajobasu"},"content":"* More complex search operations, to search for multiple fields at once using logical conjunctions like","lastModifiedDate":"2021-04-02"},{"lineNumber":49,"author":{"gitId":"rajobasu"},"content":"  \u0027and\u0027, \u0027or\u0027 and \u0027not\u0027, as well as brackets.","lastModifiedDate":"2021-04-02"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"  ","lastModifiedDate":"2021-03-02"},{"lineNumber":51,"author":{"gitId":"rajobasu"},"content":"* Email integration Contact customers directly from the app instead of using a separate app. ","lastModifiedDate":"2021-04-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"rajobasu"},"content":"Here \u0027User\u0027 refers to a Car Salesperson Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (","lastModifiedDate":"2021-04-02"},{"lineNumber":56,"author":{"gitId":"rajobasu"},"content":"unlikely to have) - `*`","lastModifiedDate":"2021-04-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                | So that I can…​                                             |","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":"| `* * *`  | user                                       | add a new customer             | add new customers to my existing customer base                         |","lastModifiedDate":"2021-03-02"},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":"| `* * *`  | user                                       | delete an existing customer     | remove customer entries that I no longer require                       |","lastModifiedDate":"2021-03-02"},{"lineNumber":62,"author":{"gitId":"rajobasu"},"content":"| `* * *`  | user                                       | exit from the app              | safely exit the app, certain that my data is securely saved            |","lastModifiedDate":"2021-04-02"},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":"| `* * *`  | user                                       | list my customers              | have an overview of my customer contacts                               |","lastModifiedDate":"2021-03-02"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"| `* * *`  | user                                       | clear all my customers contacts | start afresh with a empty customer database instead of trying to rectify a legacy database riddle with outdated data|","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"rajobasu"},"content":"| `* * *`  | user                                       | filter by car type preference  | find customers who prefer a specific car type easily          |","lastModifiedDate":"2021-04-02"},{"lineNumber":66,"author":{"gitId":"rajobasu"},"content":"| `* * *`  | user                                       | filter by car brand preference | find customers who prefer a specific car brand easily         |","lastModifiedDate":"2021-04-02"},{"lineNumber":67,"author":{"gitId":"rajobasu"},"content":"| `* * *`  | user                                       | filter by address   | find customers who live near a specific region","lastModifiedDate":"2021-04-02"},{"lineNumber":68,"author":{"gitId":"rajobasu"},"content":"| `* * *`  | user                                       | filter by name   | find customers whose name match most closely the phone number I remember","lastModifiedDate":"2021-04-02"},{"lineNumber":69,"author":{"gitId":"rajobasu"},"content":"| `* * *`  | user                                       | filter by Date Of Birth   | find customers whose DoB match most closely the phone number I remember","lastModifiedDate":"2021-04-02"},{"lineNumber":70,"author":{"gitId":"rajobasu"},"content":"| `* * *`  | user                                       | filter by email   | find customers whose email match most closely the phone number I remember","lastModifiedDate":"2021-04-02"},{"lineNumber":71,"author":{"gitId":"rajobasu"},"content":"| `* * *`  | user                                       | filter by phone number   | find customers whose phone number match most closely the phone number I remember","lastModifiedDate":"2021-04-02"},{"lineNumber":72,"author":{"gitId":"rajobasu"},"content":"| `* * *`  | user                                       | filter by tags   | find customers who have the specified tags","lastModifiedDate":"2021-04-02"},{"lineNumber":73,"author":{"gitId":"rajobasu"},"content":"| `* * *`  | user                                       | repeat the last command | use similar commands without having to type out everything everytime","lastModifiedDate":"2021-04-02"},{"lineNumber":74,"author":{"gitId":"OhJunMing"},"content":"| `* * *`  | new user                                   | see usage instructions         | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"rajobasu"},"content":"| `* *`    | user                                       | use logical operators and brackets to filter | filter using more complex parameters than just 1 field ","lastModifiedDate":"2021-04-02"},{"lineNumber":76,"author":{"gitId":"rajobasu"},"content":"| `* *`    | user                                       | list customers with expiring COE   |  have a list of potential customers who might purchase a new car   |","lastModifiedDate":"2021-04-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details   | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"rajobasu"},"content":"| `*`      | user                                       | email customers | to contact them","lastModifiedDate":"2021-04-02"},{"lineNumber":79,"author":{"gitId":"OhJunMing"},"content":"| `*`      | user                                       | send customer holiday greetings| maintain cordial relationship with my customer                         |","lastModifiedDate":"2021-03-02"},{"lineNumber":80,"author":{"gitId":"OhJunMing"},"content":"| `*`      | user                                       | track family status of customers| make appropriate recommendations for car type for family              |","lastModifiedDate":"2021-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"rajobasu"},"content":"(For all use cases below, the **System** is the `Car@Leads` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-07"},{"lineNumber":88,"author":{"gitId":"OhJunMing"},"content":"**Use case: Add a customer**","lastModifiedDate":"2021-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"OhJunMing"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":92,"author":{"gitId":"OhJunMing"},"content":"1. User requests to list customers.","lastModifiedDate":"2021-03-02"},{"lineNumber":93,"author":{"gitId":"rajobasu"},"content":"2. System shows a list of customers.","lastModifiedDate":"2021-03-07"},{"lineNumber":94,"author":{"gitId":"OhJunMing"},"content":"3. User requests to add a specific customer in the list.","lastModifiedDate":"2021-03-02"},{"lineNumber":95,"author":{"gitId":"rajobasu"},"content":"4. System adds the specified customer.","lastModifiedDate":"2021-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":97,"author":{"gitId":"OhJunMing"},"content":"   Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":99,"author":{"gitId":"OhJunMing"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":101,"author":{"gitId":"OhJunMing"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":103,"author":{"gitId":"OhJunMing"},"content":"  Use case resumes from step 3","lastModifiedDate":"2021-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":105,"author":{"gitId":"OhJunMing"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":107,"author":{"gitId":"rajobasu"},"content":"    * 3a1. System shows an error message.","lastModifiedDate":"2021-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":109,"author":{"gitId":"OhJunMing"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":111,"author":{"gitId":"OhJunMing"},"content":"**Use case: Delete a customer**","lastModifiedDate":"2021-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"OhJunMing"},"content":"1. User requests to list customers","lastModifiedDate":"2021-03-02"},{"lineNumber":116,"author":{"gitId":"rajobasu"},"content":"2. System shows a list of customers","lastModifiedDate":"2021-03-07"},{"lineNumber":117,"author":{"gitId":"OhJunMing"},"content":"3. User requests to delete a specific customer in the list","lastModifiedDate":"2021-03-02"},{"lineNumber":118,"author":{"gitId":"rajobasu"},"content":"4. System deletes the customer","lastModifiedDate":"2021-03-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"rajobasu"},"content":"    * 3a1. System shows an error message.","lastModifiedDate":"2021-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"OhJunMing"},"content":"**Use case: List customers**","lastModifiedDate":"2021-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":138,"author":{"gitId":"OhJunMing"},"content":"1. User requests to list customers","lastModifiedDate":"2021-03-02"},{"lineNumber":139,"author":{"gitId":"rajobasu"},"content":"2. System shows a list of customers","lastModifiedDate":"2021-03-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":141,"author":{"gitId":"OhJunMing"},"content":"   Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-03-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-03-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-03-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"rajobasu"},"content":"2. Should be able to hold up to 1000 customers without a noticeable sluggishness (response time within 100ms) in","lastModifiedDate":"2021-03-12"},{"lineNumber":155,"author":{"gitId":"Shizheng001"},"content":"   performance for typical usage.","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"rajobasu"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2021-04-02"},{"lineNumber":157,"author":{"gitId":"rajobasu"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-04-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"rajobasu"},"content":"* **COE**: Certificate of Entitlement for Singapore Cars","lastModifiedDate":"2021-03-07"},{"lineNumber":166,"author":{"gitId":"OhJunMing"},"content":"* **GUI**: Graphical user interface for the Car@leads app","lastModifiedDate":"2021-03-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"rajobasu"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2021-04-02"},{"lineNumber":186,"author":{"gitId":"rajobasu"},"content":"       optimum.","lastModifiedDate":"2021-04-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"rajobasu"},"content":"### Deleting a customer","lastModifiedDate":"2021-03-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"rajobasu"},"content":"1. Deleting a customer while all customers are being shown","lastModifiedDate":"2021-03-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"rajobasu"},"content":"    1. Prerequisites: List all customers using the `list` command. Multiple customers in the list.","lastModifiedDate":"2021-03-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"Shizheng001"},"content":"    1. Test case: `delete John doe`\u003cbr\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":204,"author":{"gitId":"rajobasu"},"content":"       Expected: contact with name \u0027John doe\u0027 is deleted from the list. Details of the deleted contact shown in the","lastModifiedDate":"2021-04-02"},{"lineNumber":205,"author":{"gitId":"rajobasu"},"content":"       status message. Timestamp in the status bar is updated.","lastModifiedDate":"2021-04-02"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"Shizheng001"},"content":"    1. Test case: `delete Invalid@Name`\u003cbr\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":208,"author":{"gitId":"rajobasu"},"content":"       Expected: No customer is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-03-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"Shizheng001"},"content":"    1. Other incorrect delete commands to try: `delete`","lastModifiedDate":"2021-03-16"},{"lineNumber":211,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Shizheng001":4,"rajobasu":45,"OhJunMing":32,"-":140}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"# Welcome to Car@leads","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"Car@leads is a **desktop app for a car salesperson to manage customer contacts** (CLI).","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"\u003cbr\u003e Users can add new customer contacts which include details such as customer\u0027s car brand and car type preferences along with other personal information.","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"\u003cbr\u003e Users can filter through the customer data using specific filters, such as filtering out customers who prefer a specific car brand and follow up with them for sales opportunities.","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"\u003cbr\u003e Car@leads is optimized for use via a Command Line Interface, while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"\u003cbr\u003e If you can type fast, Car@leads can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-03-04"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"   \u003cbr\u003eNote how the app contains some sample data to provide a example of how app usage.","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"   \u003cbr\u003eRemember to clear these sample data using the clear command before use. \u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"    * **`add`**`n/Bob Ang p/88765432 e/bobhnd@example.com a/John street, block 123, #01-01 b/1998 07 10  c/BMW+Coupe|2030 01 01 c/Porsche+SUV|2030 01 01 cp/MercedesBenz+SUV`","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"      : Adds a contact named `Bob Ang`","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"    * **`find`**`n/Bob Ang cp/BMW+Coupe`","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"      : Finds a contact named `Bob Ang` whose preferred car is a BMW Coupe.","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"    * **`delete`**`John Doe` : Deletes \u0027John Doe\u0027 contact from contact list .","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"    * **`list`** : Lists all contacts.","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"    * **`help`** : Get a legend of commands.","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":73,"author":{"gitId":"OhJunMing"},"content":"* `COE_EXPIRY_DATE` input order: YYYY{space}MM{space}DD","lastModifiedDate":"2021-04-02"},{"lineNumber":74,"author":{"gitId":"nighoggDatatype"},"content":"  * Example: `2013 12 31`","lastModifiedDate":"2021-04-03"},{"lineNumber":75,"author":{"gitId":"nighoggDatatype"},"content":"  * This is the same input format as `DATE_OF_BIRTH`","lastModifiedDate":"2021-04-03"},{"lineNumber":76,"author":{"gitId":"OhJunMing"},"content":"* `|` joins car with COE expiry date","lastModifiedDate":"2021-04-02"},{"lineNumber":77,"author":{"gitId":"OhJunMing"},"content":"* `+` joins car brand and car type","lastModifiedDate":"2021-04-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"rajobasu"},"content":"## Command summary","lastModifiedDate":"2021-04-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":84,"author":{"gitId":"rajobasu"},"content":"Action | Format, Examples","lastModifiedDate":"2021-04-03"},{"lineNumber":85,"author":{"gitId":"rajobasu"},"content":"--------|------------------","lastModifiedDate":"2021-04-03"},{"lineNumber":86,"author":{"gitId":"nighoggDatatype"},"content":"**add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS b/DATE_OF_BIRTH [t/TAG]…​ [c/CAR_BRAND_OWNED+CAR_TYPE_OWNED|COE_EXPIRY_DATE] [cp/CAR_BRAND_PREFERRED+CAR_TYPE_PREFERRED]`\u003cbr\u003e e.g., `n/add n/Bob Ang p/88765432 e/bobhnd@example.com a/John street, block 123, #01-01 c/BMW Coupe|2030 01 01 c/Porsche|2030 01 01`","lastModifiedDate":"2021-04-06"},{"lineNumber":87,"author":{"gitId":"rajobasu"},"content":"**find** | `find [e/bob /AND p/98761234] /OR b/1999 10 11`","lastModifiedDate":"2021-04-03"},{"lineNumber":88,"author":{"gitId":"rajobasu"},"content":"**delete** | `delete NAME`\u003cbr\u003e e.g., `delete John doe`","lastModifiedDate":"2021-04-03"},{"lineNumber":89,"author":{"gitId":"rajobasu"},"content":"**list** | `list` Generates a default list of unfiltered contacts saved in the contact book.","lastModifiedDate":"2021-04-03"},{"lineNumber":90,"author":{"gitId":"rajobasu"},"content":"**clear** | `clear` Clears the contact list, erasing all saved data.","lastModifiedDate":"2021-04-03"},{"lineNumber":91,"author":{"gitId":"rajobasu"},"content":"**exit** | `exit` The GUI Button at the top of the status bar. Clicking on it closes the application safely.","lastModifiedDate":"2021-04-03"},{"lineNumber":92,"author":{"gitId":"rajobasu"},"content":"**help** | `help` The GUI Button at the top of the status bar. Clicking on it opens a help window.","lastModifiedDate":"2021-04-03"},{"lineNumber":93,"author":{"gitId":"rajobasu"},"content":"**email** | `email`The GUI Button at the top of the status bar. Clicking on it opens a simplified MailBox interface allowing user to send email.","lastModifiedDate":"2021-04-03"},{"lineNumber":94,"author":{"gitId":"nighoggDatatype"},"content":"**up** | `/up{X}`, meaning any command starting with `/up`. Eg: `/up delete John Doe`","lastModifiedDate":"2021-04-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":97,"author":{"gitId":"rajobasu"},"content":"### Adding a customer: `add`","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"OhJunMing"},"content":"Adds a customer to the contact list.","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"nighoggDatatype"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS b/DATE_OF_BIRTH [t/TAG]…​ [c/CAR_BRAND_OWNED+CAR_TYPE_OWNED|COE_EXPIRY_DATE] [cp/CAR_BRAND_PREFERRED+CAR_TYPE_PREFERRED]`","lastModifiedDate":"2021-04-06"},{"lineNumber":102,"author":{"gitId":"OhJunMing"},"content":"\u003cbr\u003e`n/add n/Bob Ang p/88765432 e/bobhnd@example.com a/John street, block 123, #01-01 c/BMW+Coupe|2030 01 01 c/Porsche+SUV|2030 01 01 cp/MercedesBenz+SUV`","lastModifiedDate":"2021-04-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"OhJunMing"},"content":"A customer can have any number of tags, carsOwned, carPreferred (including 0)","lastModifiedDate":"2021-04-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"nighoggDatatype"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 c/Honda City`","lastModifiedDate":"2021-03-02"},{"lineNumber":112,"author":{"gitId":"nighoggDatatype"},"content":"* `add n/Betsy Crowe c/Honda City t/friend e/betsycrowe@example.com x/2011 03 27 a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2021-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"OhJunMing"},"content":"### Finding a customer: `find` ","lastModifiedDate":"2021-04-02"},{"lineNumber":115,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":116,"author":{"gitId":"OhJunMing"},"content":"Find customers from the contact list that matches specified filters.","lastModifiedDate":"2021-04-01"},{"lineNumber":117,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":118,"author":{"gitId":"rajobasu"},"content":"Format: `find  n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS c/OWNED_CARBRAND+OWNED_CARTYPE coe/COE_EXPIRY_DATE t/TAGs ","lastModifiedDate":"2021-04-03"},{"lineNumber":119,"author":{"gitId":"rajobasu"},"content":"cp/PREFERRED_CARBRAND+PREFERRED_CARTYPE b/DATE_OF_BIRTH`","lastModifiedDate":"2021-04-03"},{"lineNumber":120,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":121,"author":{"gitId":"rajobasu"},"content":"**IMP** : All arguments are optional. In particular:","lastModifiedDate":"2021-04-03"},{"lineNumber":122,"author":{"gitId":"rajobasu"},"content":"- for `c/OWNED_CARBRAND+OWNED_CARTYPE`, user can either give brand or type information, or both using the `+`sign to ","lastModifiedDate":"2021-04-03"},{"lineNumber":123,"author":{"gitId":"rajobasu"},"content":"  separate.","lastModifiedDate":"2021-04-03"},{"lineNumber":124,"author":{"gitId":"rajobasu"},"content":"  ","lastModifiedDate":"2021-04-03"},{"lineNumber":125,"author":{"gitId":"rajobasu"},"content":"- for `cp/PREFERRED_CARBRAND+PREFERRED_CARTYPE` user can either give brand or type information, or both using the ","lastModifiedDate":"2021-04-03"},{"lineNumber":126,"author":{"gitId":"rajobasu"},"content":"  `+` sign to separate.","lastModifiedDate":"2021-04-03"},{"lineNumber":127,"author":{"gitId":"OhJunMing"},"content":"  ","lastModifiedDate":"2021-04-01"},{"lineNumber":128,"author":{"gitId":"rajobasu"},"content":"- for `n/NAME` giving a partial name is also okay - all names which have the given parameter as a subsequence (Note ","lastModifiedDate":"2021-04-03"},{"lineNumber":129,"author":{"gitId":"rajobasu"},"content":"  that `abc` is a subsequence of `addbddc`) will be matched. Note that this is the only field for which we match ","lastModifiedDate":"2021-04-03"},{"lineNumber":130,"author":{"gitId":"rajobasu"},"content":"  a subsequence instead of a simple substring.","lastModifiedDate":"2021-04-03"},{"lineNumber":131,"author":{"gitId":"rajobasu"},"content":"  ","lastModifiedDate":"2021-04-03"},{"lineNumber":132,"author":{"gitId":"rajobasu"},"content":"- for `e/EMAIL`, all email containing the given parameter will be valid, but note that domain name is not checked.","lastModifiedDate":"2021-04-03"},{"lineNumber":133,"author":{"gitId":"rajobasu"},"content":"    - eg `find e/abc` will return profiles with the following emails:","lastModifiedDate":"2021-04-03"},{"lineNumber":134,"author":{"gitId":"rajobasu"},"content":"        -  `abcd@gmail.com`","lastModifiedDate":"2021-04-03"},{"lineNumber":135,"author":{"gitId":"rajobasu"},"content":"        -  `bbabc@gmail.com`","lastModifiedDate":"2021-04-03"},{"lineNumber":136,"author":{"gitId":"rajobasu"},"content":"    - It will _not_ return:","lastModifiedDate":"2021-04-03"},{"lineNumber":137,"author":{"gitId":"rajobasu"},"content":"        - `xxx@abc.com`","lastModifiedDate":"2021-04-03"},{"lineNumber":138,"author":{"gitId":"rajobasu"},"content":"        - `axbyc@hhh.com`","lastModifiedDate":"2021-04-03"},{"lineNumber":139,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":140,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":141,"author":{"gitId":"nighoggDatatype"},"content":"Further details about the search options are as follows:","lastModifiedDate":"2021-04-03"},{"lineNumber":142,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":143,"author":{"gitId":"nighoggDatatype"},"content":"- For `coe/COE_EXPIRY_DATE`, using `coe/exp` will search for all customers with an expired COE on any of the cars they own.","lastModifiedDate":"2021-04-03"},{"lineNumber":144,"author":{"gitId":"nighoggDatatype"},"content":"  it is a special case alias for the search `coe/0`, where `coe/NON_NEGATIVE_NUMBER` will search for any customers with","lastModifiedDate":"2021-04-03"},{"lineNumber":145,"author":{"gitId":"nighoggDatatype"},"content":"  at least one car that will expire in `NON_NEGATIVE_NUMBER` years *or less*.","lastModifiedDate":"2021-04-03"},{"lineNumber":146,"author":{"gitId":"OhJunMing"},"content":"  ","lastModifiedDate":"2021-04-01"},{"lineNumber":147,"author":{"gitId":"rajobasu"},"content":"- for `a/ADDRESS` partial addresses are also acceptable","lastModifiedDate":"2021-04-03"},{"lineNumber":148,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":149,"author":{"gitId":"rajobasu"},"content":"- for `b/DATE_OF_BIRTH` partial dates also work. Note that `find b/1999` is a more generic search than `find b/1999 ","lastModifiedDate":"2021-04-03"},{"lineNumber":150,"author":{"gitId":"rajobasu"},"content":"  02` and hence will return more items.","lastModifiedDate":"2021-04-03"},{"lineNumber":151,"author":{"gitId":"rajobasu"},"content":"  ","lastModifiedDate":"2021-04-03"},{"lineNumber":152,"author":{"gitId":"rajobasu"},"content":"- for `t/TAGS` all customers satisfying _any_ tag will be returned. In particular, `find t/TAG_A TAG_B TAG_C` is a more ","lastModifiedDate":"2021-04-03"},{"lineNumber":153,"author":{"gitId":"rajobasu"},"content":"  generic ","lastModifiedDate":"2021-04-03"},{"lineNumber":154,"author":{"gitId":"rajobasu"},"content":"  query than `find t/TAG_A` ","lastModifiedDate":"2021-04-03"},{"lineNumber":155,"author":{"gitId":"rajobasu"},"content":"  ","lastModifiedDate":"2021-04-03"},{"lineNumber":156,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":157,"author":{"gitId":"rajobasu"},"content":"**COMBINING FIND PARAMETERS**","lastModifiedDate":"2021-04-03"},{"lineNumber":158,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":159,"author":{"gitId":"rajobasu"},"content":"We can combine in the following way : ","lastModifiedDate":"2021-04-03"},{"lineNumber":160,"author":{"gitId":"rajobasu"},"content":"-   `find a/Orchard /AND n/John /AND /NOT t/CRIMINAL`","lastModifiedDate":"2021-04-03"},{"lineNumber":161,"author":{"gitId":"rajobasu"},"content":"-   `find a/Orchard /AND n/John /AND [ t/RICH /OR /NOT t/CRIMINAL ]`","lastModifiedDate":"2021-04-03"},{"lineNumber":162,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":163,"author":{"gitId":"rajobasu"},"content":"Note that for `find A /AND B /OR C /OR D /AND E` , the implicit bracketing considered is `find A /AND [B /OR [C /OR [D ","lastModifiedDate":"2021-04-03"},{"lineNumber":164,"author":{"gitId":"rajobasu"},"content":"/AND E]]]`","lastModifiedDate":"2021-04-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":166,"author":{"gitId":"OhJunMing"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-04-01"},{"lineNumber":167,"author":{"gitId":"OhJunMing"},"content":"A customer can have any number of tags (including 0)","lastModifiedDate":"2021-04-01"},{"lineNumber":168,"author":{"gitId":"OhJunMing"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":171,"author":{"gitId":"rajobasu"},"content":"## Deleting a customer : `delete`","lastModifiedDate":"2021-04-03"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"rajobasu"},"content":"Deletes the specified customer from the contact list.","lastModifiedDate":"2021-03-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"Shizheng001"},"content":"Format: `delete name`","lastModifiedDate":"2021-03-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"Shizheng001"},"content":"* Deletes the customer with the specified `name`.","lastModifiedDate":"2021-03-16"},{"lineNumber":178,"author":{"gitId":"OhJunMing"},"content":"* The name refers to the customer name shown in the displayed customer contact list.","lastModifiedDate":"2021-03-29"},{"lineNumber":179,"author":{"gitId":"Shizheng001"},"content":"* The name **must be valid** does not contain special characters  …​","lastModifiedDate":"2021-03-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"rajobasu"},"content":"## Listing all customers : `list`","lastModifiedDate":"2021-04-03"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":183,"author":{"gitId":"OhJunMing"},"content":"Shows a list of all customers in the system","lastModifiedDate":"2021-03-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":185,"author":{"gitId":"OhJunMing"},"content":"Format: `list`","lastModifiedDate":"2021-03-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":187,"author":{"gitId":"rajobasu"},"content":"## Clear all customers : `clear`","lastModifiedDate":"2021-04-03"},{"lineNumber":188,"author":{"gitId":"OhJunMing"},"content":"* **`clear`** : Deletes all customers in the system.","lastModifiedDate":"2021-03-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"rajobasu"},"content":"## Repeat last Command : `/up`","lastModifiedDate":"2021-04-03"},{"lineNumber":191,"author":{"gitId":"nighoggDatatype"},"content":"* **`/up{X}`** : Loads in the previous command. `{X}` can be any string of characters, usually the previous command.","lastModifiedDate":"2021-04-03"},{"lineNumber":192,"author":{"gitId":"nighoggDatatype"},"content":"* Examples: `/updelete John Doe`","lastModifiedDate":"2021-04-03"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":194,"author":{"gitId":"nighoggDatatype"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-04-03"},{"lineNumber":195,"author":{"gitId":"nighoggDatatype"},"content":"There does not need to be a space after /up, so long as it is the first part of the \u0027command\u0027","lastModifiedDate":"2021-04-03"},{"lineNumber":196,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":198,"author":{"gitId":"rajobasu"},"content":"eg: The command Box is as follows","lastModifiedDate":"2021-04-03"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":200,"author":{"gitId":"rajobasu"},"content":"    - find e/Apple","lastModifiedDate":"2021-04-03"},{"lineNumber":201,"author":{"gitId":"rajobasu"},"content":"    - find e/AppleChain","lastModifiedDate":"2021-04-03"},{"lineNumber":202,"author":{"gitId":"rajobasu"},"content":"    - /up","lastModifiedDate":"2021-04-03"},{"lineNumber":203,"author":{"gitId":"rajobasu"},"content":"    - /up","lastModifiedDate":"2021-04-03"},{"lineNumber":204,"author":{"gitId":"rajobasu"},"content":"Result:  ","lastModifiedDate":"2021-04-03"},{"lineNumber":205,"author":{"gitId":"rajobasu"},"content":"    - `find e/Apple`","lastModifiedDate":"2021-04-03"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"rajobasu"},"content":"## Exiting app: `exit`","lastModifiedDate":"2021-04-03"},{"lineNumber":210,"author":{"gitId":"OhJunMing"},"content":"* **`exit`** : Exits the app.","lastModifiedDate":"2021-03-16"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":212,"author":{"gitId":"rajobasu"},"content":"## Quick help: `help`","lastModifiedDate":"2021-04-03"},{"lineNumber":213,"author":{"gitId":"OhJunMing"},"content":"* **`help`** : Overview of commands and input syntax.","lastModifiedDate":"2021-03-16"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":215,"author":{"gitId":"rajobasu"},"content":"## Email Contact person: `email`","lastModifiedDate":"2021-04-03"},{"lineNumber":216,"author":{"gitId":"nighoggDatatype"},"content":"* **`email`** : Opens a simplified mailbox interface enabling user to email to the desired contact persons with a prefilled text field.","lastModifiedDate":"2021-04-03"},{"lineNumber":217,"author":{"gitId":"nighoggDatatype"},"content":"  Currently, it only supports sending through Gmail accounts and requires enabling less secure app access on google security.","lastModifiedDate":"2021-04-03"},{"lineNumber":218,"author":{"gitId":"nighoggDatatype"},"content":"  This feature is **only** avaliable through the menu bar currently.","lastModifiedDate":"2021-04-03"},{"lineNumber":219,"author":{"gitId":"Shizheng001"},"content":"  ![Ui](images/helps/googlehelp1.png)","lastModifiedDate":"2021-04-02"},{"lineNumber":220,"author":{"gitId":"Shizheng001"},"content":"  Url: https://myaccount.google.com/security","lastModifiedDate":"2021-04-02"},{"lineNumber":221,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nighoggDatatype":20,"Shizheng001":5,"rajobasu":65,"OhJunMing":38,"-":93}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"OhJunMing"},"content":"    content: \"Car@leads\";","lastModifiedDate":"2021-04-03"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"OhJunMing":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"title: Car@leads","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-W12-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2021S2-CS2103T-W12-2/tp/actions)","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-W12-2/tp/branch/master/graph/badge.svg?token\u003dBL6AOB40D1)](https://codecov.io/gh/AY2021S2-CS2103T-W12-2/tp)","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"**Car@leads is a desktop app for a car salesperson to manage customer contacts** (CLI).","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"\u003cbr\u003e Users can add new customer contacts which include details such as customer\u0027s car brand and car type preferences along with other personal information.","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"\u003cbr\u003e Users can filter through the customer data using specific filters, such as filtering out customers who prefer a specific car brand and follow up with them for sales opportunities.","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"\u003cbr\u003e Car@leads is optimized for use via a Command Line Interface, while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"\u003cbr\u003e If you can type fast, Car@leads can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"* If you are interested in using Car@leads, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"* If you are interested about developing Car@leads, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"rajobasu":1,"OhJunMing":9,"-":13}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"rajobasu"},"content":" * Changes the remark of an existing customer in the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"rajobasu"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the customer identified \"","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"rajobasu"},"content":"            + \"by the index number used in the last customer listing. \"","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"rajobasu"},"content":"     * @param index of the customer in the filtered customer list to edit the remark","lastModifiedDate":"2021-03-12"},{"lineNumber":103,"author":{"gitId":"rajobasu"},"content":"     * @param remark of the customer to be updated to","lastModifiedDate":"2021-03-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"rajobasu"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of customer data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the customer’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a customer.","lastModifiedDate":"2021-03-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"rajobasu"},"content":"Create a new `Remark` in `seedu.address.model.customer`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-03-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"rajobasu"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each customer.","lastModifiedDate":"2021-03-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"rajobasu"},"content":"Simply add the following to [`seedu.address.ui.CustomerCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-03-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"rajobasu"},"content":"public PersonCard(Person customer, int displayedIndex) {","lastModifiedDate":"2021-03-12"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"rajobasu"},"content":"    remark.setText(customer.getRemark().value);","lastModifiedDate":"2021-03-12"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"rajobasu"},"content":"        Person customerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-12"},{"lineNumber":344,"author":{"gitId":"rajobasu"},"content":"        Person editedCustomer \u003d new Person(customerToEdit.getName(), customerToEdit.getPhone(), customerToEdit.getEmail(),","lastModifiedDate":"2021-03-12"},{"lineNumber":345,"author":{"gitId":"rajobasu"},"content":"                customerToEdit.getAddress(), remark, customerToEdit.getTags());","lastModifiedDate":"2021-03-12"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"rajobasu"},"content":"        model.setPerson(customerToEdit, editedCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"rajobasu"},"content":"        return new CommandResult(generateSuccessMessage(editedCustomer));","lastModifiedDate":"2021-03-12"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"rajobasu"},"content":"     * {@code customerToEdit}.","lastModifiedDate":"2021-03-12"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"rajobasu"},"content":"    private String generateSuccessMessage(Person customerToEdit) {","lastModifiedDate":"2021-03-12"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"rajobasu"},"content":"        return String.format(message, customerToEdit);","lastModifiedDate":"2021-03-12"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"rajobasu":19,"-":375}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on AddressBook, you will most likely find that some features and fields that are no longer necessary. In scenarios like this, you can consider refactoring the existing `Person` model to suit your use case.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"In this tutorial, we’ll do exactly just that and remove the `address` field from `Person`.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Fortunately, IntelliJ IDEA provides a robust refactoring tool that can identify *most* usages. Let’s try to use it as much as we can.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"rajobasu"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.customer.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry. You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"rajobasu"},"content":"  \"customers\": [ {","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"rajobasu":2,"-":101}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"![Architecture sequence diagram from the developer","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"guide](../images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Note how the diagram shows only how the execution flows *between* the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram succeeds in informing the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of the code base.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Setting a break point","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method. In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the UI transfers control to the Logic component. According to the sequence diagram, the UI component yields control to the Logic component through a method named `execute`. Searching through the code base for `execute()` yields a promising candidate in `seedu.address.ui.CommandBox.CommandExecutor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Using the `Search for target by name` feature. `Navigate` \\\u003e `Symbol`.](../images/tracing/Execute.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"A quick look at the class confirms that this is indeed close to what we’re looking for. However, it is just an `Interface`. Let’s delve further and find the implementation of the interface by using the `Find Usages` feature in IntelliJ IDEA.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to jot down what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and look something like this:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Use the `Show execution point` feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s `Step in` into that method call:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()`. Let’s take a look at the body of the method and annotate what we can deduce.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. `Step over` the logging code since it is of no interest to us now. ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. `Step into` the line where user input in parsed from a String to a Command.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    **`AddressBookParser\\#parseCommand()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. `Step over` until you reach the `switch` statement. The `Variables` window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. Stepping into the `switch`, we obviously stop at **`AddressBookParser\\#parseCommand()`.**","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** Sometimes you might end up stepping into functions that are not of interest. Simply `step out` of them\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the `Variable` tool window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far matches with the diagram?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"1. Now let’s see what happens when we call `command#execute()`\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   **`EditCommand\\#execute()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"rajobasu"},"content":"       Person customerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-12"},{"lineNumber":156,"author":{"gitId":"rajobasu"},"content":"       Person editedCustomer \u003d createEditedPerson(customerToEdit, editPersonDescriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":157,"author":{"gitId":"rajobasu"},"content":"       if (!customerToEdit.isSamePerson(editedCustomer) \u0026\u0026 model.hasPerson(editedCustomer)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"rajobasu"},"content":"       model.setPerson(customerToEdit, editedCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"rajobasu"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedCustomer));","lastModifiedDate":"2021-03-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to `model`.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"1. We can a closer look at how storage works by repeatedly stepping into the code until we arrive at","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    `JsonAddressBook#saveAddressBook()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Again, it appears that the heavy lifting is delegated. Let’s take a look at `JsonSerializableAddressBook`\u0027s constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook\\#JsonSerializableAddressBook()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   /**","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    *","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"   public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"rajobasu"},"content":"       customers.addAll(","lastModifiedDate":"2021-03-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"           source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                 .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                 .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                 .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"1. We can continue to step through until we return to `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    **`ResultDisplay\\#setFeedbackToUser()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"1. Finally, we step through until we reach the end of","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"the result being displayed to the user. From this tutorial, you learned","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"more about the inner workings of AddressBook and how the various","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"components mesh together to form one cohesive product.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"execution path tracing. In some cases, you can do further tracing for","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"the given commands to find exactly what happens.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown(if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"rajobasu":6,"-":244}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"Shizheng001"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"Shizheng001"},"content":"     * Main method start the application running.","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"Shizheng001"},"content":"     * @param args Arguments keyed into the CLI app to interact with app.","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Shizheng001"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"Shizheng001":4,"-":25}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"Shizheng001"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"Shizheng001"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Car@Leads ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"Shizheng001"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Contact List\");","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"Shizheng001"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Contact list\");","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"Shizheng001"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Contact list\");","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"Shizheng001"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Contact list\");","lastModifiedDate":"2021-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"Shizheng001"},"content":"        logger.info(\"Starting Car@Leads \" + MainApp.VERSION);","lastModifiedDate":"2021-04-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"Shizheng001"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Car@Leads ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-04-01"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Shizheng001":8,"-":175}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"Shizheng001"},"content":"    private static final String LOG_FILE \u003d \"carLeads.log\";","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Shizheng001":1,"-":111}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"rajobasu"},"content":"    public static final String MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX \u003d \"The customer index provided is invalid\";","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":"    public static final String MESSAGE_CUSTOMERS_LISTED_OVERVIEW \u003d \"%1$d customers listed!\";","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":"    public static final String MESSAGE_NO_SUCH_NAME_IN_BOOK \u003d \"The customer name provided is invalid\";","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Shizheng001":1,"rajobasu":2,"-":10}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"rajobasu"},"content":"    /** Returns an unmodifiable view of the filtered list of customers */","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"    ObservableList\u003cCustomer\u003e getFilteredCustomerList();","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"rajobasu":3,"-":47}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"rajobasu"},"content":"    public ObservableList\u003cCustomer\u003e getFilteredCustomerList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"rajobasu"},"content":"        return model.getFilteredCustomerList();","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"rajobasu":3,"-":78}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CARS_OWNED;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CARS_PREFERRED;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":" * Adds a customer to the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"rajobasu"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a customer to the address book. \"","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"nighoggDatatype"},"content":"            + PREFIX_DOB + \"DATE_OF_BIRTH \"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"rajobasu"},"content":"            + PREFIX_CARS_OWNED + \"CARS_OWNED\"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"rajobasu"},"content":"            + PREFIX_CARS_PREFERRED + \"CARS_PREFERRED\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"nighoggDatatype"},"content":"            + PREFIX_DOB + \"2011 07 13 \"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"            + PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"rajobasu"},"content":"            + PREFIX_CARS_OWNED + \"Honda+Sedan|2030 01 01 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"Shizheng001"},"content":"            + PREFIX_CARS_PREFERRED + \"BMW+SUV \";","lastModifiedDate":"2021-04-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"rajobasu"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New customer added: %1$s\";","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"rajobasu"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOMER \u003d \"This customer already exists in the address book\";","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"rajobasu"},"content":"    private final Customer toAdd;","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"rajobasu"},"content":"     * Creates an AddCommand to add the specified {@code Customer}","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"rajobasu"},"content":"    public AddCommand(Customer customer) {","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"rajobasu"},"content":"        requireNonNull(customer);","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"rajobasu"},"content":"        toAdd \u003d customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"rajobasu"},"content":"        if (model.hasCustomer(toAdd)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"rajobasu"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"rajobasu"},"content":"        model.addCustomer(toAdd);","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nighoggDatatype":3,"Shizheng001":2,"rajobasu":18,"OhJunMing":2,"-":53}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":"    // MailBox should be shown to the user.","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"Shizheng001"},"content":"    private final boolean email;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Shizheng001"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"Shizheng001"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"Shizheng001"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"Shizheng001"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean email) {","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"Shizheng001"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"Shizheng001"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"Shizheng001"},"content":"    public boolean isEmail() {","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"Shizheng001"},"content":"        return email;","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"Shizheng001"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"Shizheng001"},"content":"                \u0026\u0026 email \u003d\u003d otherCommandResult.email","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"Shizheng001"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, email);","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Shizheng001":15,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":" * Deletes customers identified using their names from the contact list.","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"Shizheng001"},"content":"            + \": Deletes the customer identified by his/her name in the displayed customer list.\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Shizheng001"},"content":"            + \"Parameters: String (must be a valid customer name)\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Shizheng001"},"content":"            + \"Example: \" + COMMAND_WORD + \" John Doe\";","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"rajobasu"},"content":"    public static final String MESSAGE_DELETE_CUSTOMER_SUCCESS \u003d \"Deleted Customer: %1$s\";","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"Shizheng001"},"content":"    private final String targetName;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Shizheng001"},"content":"    public DeleteCommand(String targetName) {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Shizheng001"},"content":"        this.targetName \u003d targetName;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"rajobasu"},"content":"        List\u003cCustomer\u003e lastShownList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"Shizheng001"},"content":"        List\u003cString\u003e names \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"Shizheng001"},"content":"        for (Customer c : lastShownList) {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"Shizheng001"},"content":"            names.add(c.getName().toString());","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"Shizheng001"},"content":"        if (!names.contains(targetName)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Shizheng001"},"content":"            throw new CommandException(Messages.MESSAGE_NO_SUCH_NAME_IN_BOOK);","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"Shizheng001"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"Shizheng001"},"content":"        Customer customerToDelete \u003d lastShownList.get(names.indexOf(targetName));","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"rajobasu"},"content":"        model.deleteCustomer(customerToDelete);","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"rajobasu"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CUSTOMER_SUCCESS, customerToDelete));","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"Shizheng001"},"content":"                \u0026\u0026 targetName.equals(((DeleteCommand) other).targetName)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Shizheng001":16,"rajobasu":5,"-":35}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CARS_OWNED;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CARS_PREFERRED;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":"import java.util.Map;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.model.customer.Address;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Car;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.CoeExpiry;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"nighoggDatatype"},"content":"import seedu.address.model.customer.DateOfBirth;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Email;","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Name;","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Phone;","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"Shizheng001"},"content":"        + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"nighoggDatatype"},"content":"        + \"[\" + PREFIX_DOB + \"DATE_OF_BIRTH] \"","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"rajobasu"},"content":"        + \"[\" + PREFIX_CARS_OWNED + \"TAG]...\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"rajobasu"},"content":"        + \"[\" + PREFIX_CARS_PREFERRED + \"TAG]...\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"rajobasu"},"content":"    public static final String MESSAGE_EDIT_CUSTOMER_SUCCESS \u003d \"Edited Customer: %1$s\";","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"rajobasu"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOMER \u003d \"This customer already exists in the address book.\";","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"rajobasu"},"content":"    private final EditCustomerDescriptor editCustomerDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"rajobasu"},"content":"     * @param index                  of the customer in the filtered customer list to edit","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"rajobasu"},"content":"     * @param editCustomerDescriptor details to edit the customer with","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"rajobasu"},"content":"    public EditCommand(Index index, EditCustomerDescriptor editCustomerDescriptor) {","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"rajobasu"},"content":"        requireNonNull(editCustomerDescriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"rajobasu"},"content":"        this.editCustomerDescriptor \u003d new EditCustomerDescriptor(editCustomerDescriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"rajobasu"},"content":"     * Creates and returns a {@code Customer} with the details of {@code customerToEdit} edited with {@code","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"rajobasu"},"content":"     * editCustomerDescriptor}.","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"rajobasu"},"content":"    private static Customer createEditedCustomer(Customer customerToEdit,","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"rajobasu"},"content":"                                                 EditCustomerDescriptor editCustomerDescriptor) {","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"rajobasu"},"content":"        assert customerToEdit !\u003d null;","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"rajobasu"},"content":"        Name updatedName \u003d editCustomerDescriptor.getName().orElse(customerToEdit.getName());","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"rajobasu"},"content":"        Phone updatedPhone \u003d editCustomerDescriptor.getPhone().orElse(customerToEdit.getPhone());","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"rajobasu"},"content":"        Email updatedEmail \u003d editCustomerDescriptor.getEmail().orElse(customerToEdit.getEmail());","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"rajobasu"},"content":"        Address updatedAddress \u003d editCustomerDescriptor.getAddress().orElse(customerToEdit.getAddress());","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"nighoggDatatype"},"content":"        DateOfBirth updatedDateOfBirth \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"nighoggDatatype"},"content":"                editCustomerDescriptor.getDateOfBirth().orElse(customerToEdit.getDateOfBirth());","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"rajobasu"},"content":"        Set\u003cTag\u003e updatedTags \u003d editCustomerDescriptor.getTags().orElse(customerToEdit.getTags());","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"rajobasu"},"content":"        Map\u003cCar, CoeExpiry\u003e updatedCarsOwned \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"rajobasu"},"content":"            editCustomerDescriptor.getCarsOwned().orElse(customerToEdit.getCarsOwned());","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"OhJunMing"},"content":"        Set\u003cCar\u003e updatedCarsPreferred \u003d editCustomerDescriptor.getCarsPreferred()","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"OhJunMing"},"content":"                .orElse(customerToEdit.getCarsPreferred());","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"nighoggDatatype"},"content":"        return new Customer(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedDateOfBirth,","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"OhJunMing"},"content":"                updatedTags, updatedCarsOwned, updatedCarsPreferred);","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"rajobasu"},"content":"        List\u003cCustomer\u003e lastShownList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2021-03-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"rajobasu"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"rajobasu"},"content":"        Customer customerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-12"},{"lineNumber":113,"author":{"gitId":"rajobasu"},"content":"        Customer editedCustomer \u003d createEditedCustomer(customerToEdit, editCustomerDescriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"rajobasu"},"content":"        if (!customerToEdit.isSameCustomer(editedCustomer) \u0026\u0026 model.hasCustomer(editedCustomer)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":116,"author":{"gitId":"rajobasu"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2021-03-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"rajobasu"},"content":"        model.setCustomer(customerToEdit, editedCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":120,"author":{"gitId":"rajobasu"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2021-03-12"},{"lineNumber":121,"author":{"gitId":"rajobasu"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer));","lastModifiedDate":"2021-03-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"rajobasu"},"content":"            \u0026\u0026 editCustomerDescriptor.equals(e.editCustomerDescriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"rajobasu"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the corresponding field value","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"rajobasu"},"content":"     * of the person.","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"rajobasu"},"content":"    public static class EditCustomerDescriptor {","lastModifiedDate":"2021-03-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"nighoggDatatype"},"content":"        private DateOfBirth dateOfBirth;","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"rajobasu"},"content":"        private Map\u003cCar, CoeExpiry\u003e carsOwned;","lastModifiedDate":"2021-03-16"},{"lineNumber":154,"author":{"gitId":"OhJunMing"},"content":"        private Set\u003cCar\u003e carsPreferred;","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"rajobasu"},"content":"        public EditCustomerDescriptor() {","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"rajobasu"},"content":"         * Copy constructor. A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"rajobasu"},"content":"        public EditCustomerDescriptor(EditCustomerDescriptor toCopy) {","lastModifiedDate":"2021-03-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"nighoggDatatype"},"content":"            setDateOfBirth(toCopy.dateOfBirth);","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"rajobasu"},"content":"            setCarsOwned(toCopy.carsOwned);","lastModifiedDate":"2021-03-16"},{"lineNumber":170,"author":{"gitId":"OhJunMing"},"content":"            setCarsPreferred(toCopy.carsPreferred);","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"OhJunMing"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, dateOfBirth, tags, carsPreferred);","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"Shizheng001"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":179,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":180,"author":{"gitId":"rajobasu"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-03-16"},{"lineNumber":181,"author":{"gitId":"rajobasu"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-03-16"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-03-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-03-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"rajobasu"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2021-03-16"},{"lineNumber":189,"author":{"gitId":"rajobasu"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2021-03-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2021-03-16"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2021-03-16"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"rajobasu"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2021-03-16"},{"lineNumber":197,"author":{"gitId":"rajobasu"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2021-03-16"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2021-03-16"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2021-03-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"rajobasu"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2021-03-16"},{"lineNumber":205,"author":{"gitId":"rajobasu"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2021-03-16"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2021-03-16"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2021-03-16"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"nighoggDatatype"},"content":"        public Optional\u003cDateOfBirth\u003e getDateOfBirth() {","lastModifiedDate":"2021-03-29"},{"lineNumber":213,"author":{"gitId":"nighoggDatatype"},"content":"            return Optional.ofNullable(dateOfBirth);","lastModifiedDate":"2021-03-29"},{"lineNumber":214,"author":{"gitId":"nighoggDatatype"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":215,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":216,"author":{"gitId":"nighoggDatatype"},"content":"        public void setDateOfBirth(DateOfBirth dateOfBirth) {","lastModifiedDate":"2021-03-29"},{"lineNumber":217,"author":{"gitId":"nighoggDatatype"},"content":"            this.dateOfBirth \u003d dateOfBirth;","lastModifiedDate":"2021-03-29"},{"lineNumber":218,"author":{"gitId":"nighoggDatatype"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":219,"author":{"gitId":"rajobasu"},"content":"        /**","lastModifiedDate":"2021-03-16"},{"lineNumber":220,"author":{"gitId":"rajobasu"},"content":"         * Returns an unmodifiable carsOwned map, which throws {@code UnsupportedOperationException} if modification is","lastModifiedDate":"2021-03-16"},{"lineNumber":221,"author":{"gitId":"rajobasu"},"content":"         * attempted. Returns {@code Optional#empty()} if {@code carsOwned} is null.","lastModifiedDate":"2021-03-16"},{"lineNumber":222,"author":{"gitId":"rajobasu"},"content":"         */","lastModifiedDate":"2021-03-16"},{"lineNumber":223,"author":{"gitId":"rajobasu"},"content":"        public Optional\u003cMap\u003cCar, CoeExpiry\u003e\u003e getCarsOwned() {","lastModifiedDate":"2021-03-16"},{"lineNumber":224,"author":{"gitId":"rajobasu"},"content":"            return Optional.ofNullable(carsOwned).map(Collections::unmodifiableMap);","lastModifiedDate":"2021-03-16"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-03-12"},{"lineNumber":228,"author":{"gitId":"rajobasu"},"content":"         * Sets {@code carsOwned} to this object\u0027s {@code carsOwned}. A defensive copy of {@code carsOwned} is used","lastModifiedDate":"2021-03-16"},{"lineNumber":229,"author":{"gitId":"rajobasu"},"content":"         * internally.","lastModifiedDate":"2021-03-16"},{"lineNumber":230,"author":{"gitId":"rajobasu"},"content":"         */","lastModifiedDate":"2021-03-12"},{"lineNumber":231,"author":{"gitId":"rajobasu"},"content":"        public void setCarsOwned(Map\u003cCar, CoeExpiry\u003e carsOwned) {","lastModifiedDate":"2021-03-16"},{"lineNumber":232,"author":{"gitId":"rajobasu"},"content":"            this.carsOwned \u003d carsOwned !\u003d null ? new HashMap\u003c\u003e(carsOwned) : null;","lastModifiedDate":"2021-03-16"},{"lineNumber":233,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":234,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":235,"author":{"gitId":"Shizheng001"},"content":"        /**","lastModifiedDate":"2021-03-16"},{"lineNumber":236,"author":{"gitId":"rajobasu"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException} if modification is","lastModifiedDate":"2021-03-16"},{"lineNumber":237,"author":{"gitId":"rajobasu"},"content":"         * attempted. Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-03-16"},{"lineNumber":238,"author":{"gitId":"Shizheng001"},"content":"         */","lastModifiedDate":"2021-03-16"},{"lineNumber":239,"author":{"gitId":"Shizheng001"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-03-16"},{"lineNumber":240,"author":{"gitId":"rajobasu"},"content":"            return Optional.ofNullable(tags).map(Collections::unmodifiableSet);","lastModifiedDate":"2021-03-16"},{"lineNumber":241,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":242,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":243,"author":{"gitId":"rajobasu"},"content":"        /**","lastModifiedDate":"2021-03-16"},{"lineNumber":244,"author":{"gitId":"rajobasu"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}. A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-16"},{"lineNumber":245,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-03-16"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-16"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-03-16"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-03-31"},{"lineNumber":251,"author":{"gitId":"OhJunMing"},"content":"         * Returns {@code Optional#empty()} if {@code carsPreferred} is null.","lastModifiedDate":"2021-03-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-03-31"},{"lineNumber":253,"author":{"gitId":"OhJunMing"},"content":"        public Optional\u003cSet\u003cCar\u003e\u003e getCarsPreferred() {","lastModifiedDate":"2021-03-31"},{"lineNumber":254,"author":{"gitId":"OhJunMing"},"content":"            return Optional.ofNullable(carsPreferred);","lastModifiedDate":"2021-03-31"},{"lineNumber":255,"author":{"gitId":"OhJunMing"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":256,"author":{"gitId":"OhJunMing"},"content":"        /**","lastModifiedDate":"2021-03-31"},{"lineNumber":257,"author":{"gitId":"OhJunMing"},"content":"         * Sets {@code carsPreferred} to this object\u0027s {@code carsPreferred}.","lastModifiedDate":"2021-03-31"},{"lineNumber":258,"author":{"gitId":"OhJunMing"},"content":"         * A defensive copy of {@code carsPreferred} is used internally.","lastModifiedDate":"2021-03-31"},{"lineNumber":259,"author":{"gitId":"OhJunMing"},"content":"         */","lastModifiedDate":"2021-03-31"},{"lineNumber":260,"author":{"gitId":"OhJunMing"},"content":"        public void setCarsPreferred(Set\u003cCar\u003e carsPreferred) {","lastModifiedDate":"2021-03-31"},{"lineNumber":261,"author":{"gitId":"OhJunMing"},"content":"            this.carsPreferred \u003d (carsPreferred !\u003d null) ? new HashSet\u003c\u003e(carsPreferred) : null;","lastModifiedDate":"2021-03-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"rajobasu"},"content":"            if (!(other instanceof EditCustomerDescriptor)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"rajobasu"},"content":"            EditCustomerDescriptor e \u003d (EditCustomerDescriptor) other;","lastModifiedDate":"2021-03-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":282,"author":{"gitId":"Shizheng001"},"content":"                \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2021-03-16"},{"lineNumber":283,"author":{"gitId":"nighoggDatatype"},"content":"                \u0026\u0026 getDateOfBirth().equals(e.getDateOfBirth())","lastModifiedDate":"2021-03-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"nighoggDatatype":16,"Shizheng001":9,"rajobasu":85,"OhJunMing":16,"-":161}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"Shizheng001"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Shizheng001":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"import seedu.address.logic.filters.combinator.FilterCombinator;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"rajobasu"},"content":" * Finds and lists all customers in address book whose name contains any of the argument keywords. Keyword matching is","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":" * case insensitive.","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"rajobasu"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all customers whose names contain any of \"","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"rajobasu"},"content":"    public static final String MESSAGE_SYNTAX_ERROR \u003d \"There is a syntax error in the given find command : syntax \"","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"rajobasu"},"content":"        + \"should be a well bracketed sequence like \\\u0027 find n/Raj /AND [ p/9876 /OR /NOT b/1998 ] \\\u0027\";","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"rajobasu"},"content":"    private final FilterCombinator predicate;","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"rajobasu"},"content":"    public FindCommand(FilterCombinator predicate) {","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"        if (!predicate.isValidCombinator()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"rajobasu"},"content":"            return new CommandResult(MESSAGE_SYNTAX_ERROR);","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"rajobasu"},"content":"        model.updateFilteredCustomerList(predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"            String.format(Messages.MESSAGE_CUSTOMERS_LISTED_OVERVIEW, model.getFilteredCustomerList().size()));","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"rajobasu":14,"-":35}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"Shizheng001"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Shizheng001":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":" * Lists all customers in the address book to the user.","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Great! List of all customers generated \";","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rajobasu":3,"OhJunMing":1,"-":20}},{"path":"src/main/java/seedu/address/logic/filters/AbstractFilter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.logic.filters;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"import java.util.List;","lastModifiedDate":"2021-03-23"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"public abstract class AbstractFilter {","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"    protected final String filterString;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":"    public AbstractFilter(String filterString) {","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"        this.filterString \u003d filterString.trim();","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":"    public abstract boolean test(Customer customer);","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"rajobasu"},"content":"    public List\u003cCustomer\u003e filterAllCustomers(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":"        return customers.stream().filter(this::test).collect(Collectors.toUnmodifiableList());","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"    public String toString() {","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"rajobasu"},"content":"        return filterString;","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"rajobasu"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"rajobasu":24}},{"path":"src/main/java/seedu/address/logic/filters/AddressFilter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"package seedu.address.logic.filters;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":"public class AddressFilter extends AbstractFilter {","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":"    public AddressFilter(String filterString) {","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":"        super(filterString.trim());","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Shizheng001"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"Shizheng001"},"content":"    public boolean test(Customer customer) {","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"        return customer.getAddress().value.trim().contains(filterString.trim());","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"Shizheng001"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"Shizheng001":13,"rajobasu":1}},{"path":"src/main/java/seedu/address/logic/filters/CarFilter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package seedu.address.logic.filters;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"import seedu.address.model.customer.Car;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":" * Filters Cars based on user specified filters carBrand, carType.","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"public abstract class CarFilter extends AbstractFilter {","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"     * Creates a filter for Cars","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"rajobasu"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"     * @param filterString","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"    public CarFilter(String filterString) {","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"        super(filterString.trim());","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"        requireNonNull(filterString);","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"     * Parses filter command for c/, cp/ prefixes.","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"rajobasu"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"     * @param car","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"     * @return","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"    public static Car parseCar(String car) {","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"rajobasu"},"content":"        String trimmedCar \u003d car;","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"        String[] carDetails \u003d trimmedCar.split(\"\\\\+\");","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"        if (carDetails.length !\u003d 2) {","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"            //throw new ParseException(Car.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"        String filterCarBrand \u003d carDetails[0].trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"        String filterCarType \u003d carDetails[1].trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"        if (filterCarBrand.isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"            filterCarBrand \u003d null;","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"        if (filterCarType.isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"            filterCarType \u003d null;","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"        return new Car(filterCarBrand, filterCarType);","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"     * Predicate for abstract test method use.","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"     * @param car       Car member from carsOwned or carsPreferred.","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"     * @param filterCar Specified Car to filter by.","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":"     * @return","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"rajobasu"},"content":"    public boolean carFilterPredicate(Car car, String filterCar) {","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"rajobasu"},"content":"        filterCar \u003d filterCar.trim();","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"rajobasu"},"content":"        String[] carDetails \u003d filterCar.split(\"\\\\+\", 2);","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"rajobasu"},"content":"        if (carDetails.length \u003d\u003d 1) {","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"rajobasu"},"content":"            return car.getCarBrand().toLowerCase().contains(filterCar.toLowerCase())","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"rajobasu"},"content":"                || car.getCarType().toLowerCase().contains(filterCar.toLowerCase());","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":"        } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"rajobasu"},"content":"            return car.getCarBrand().toLowerCase().contains(carDetails[0].toLowerCase())","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"rajobasu"},"content":"                || car.getCarType().toLowerCase().contains(carDetails[1].toLowerCase());","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"rajobasu":14,"OhJunMing":51}},{"path":"src/main/java/seedu/address/logic/filters/CarsOwnedFilter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package seedu.address.logic.filters;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":" * Filters CarsOwned based on user specified filters carBrand, carType.","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"public class CarsOwnedFilter extends CarFilter {","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"     * Creates a filter for CarsOwned.","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"     * @param filterString","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"    public CarsOwnedFilter(String filterString) {","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"        super(filterString.trim());","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"        requireNonNull(filterString);","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"     * Tests each car in CarsOwned, with the specified filters.","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"     * @param customer","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"     * @return","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"    public boolean test(Customer customer) {","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"        requireNonNull(customer);","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"        return customer.getCarsOwned()","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"                .keySet()","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"                .parallelStream()","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"rajobasu"},"content":"                .anyMatch(x -\u003e carFilterPredicate(x, filterString));","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"rajobasu":1,"OhJunMing":34}},{"path":"src/main/java/seedu/address/logic/filters/CarsPreferredFilter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package seedu.address.logic.filters;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":" * Filters CarsOwned based on user specified filters carBrand, carType.","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"public class CarsPreferredFilter extends CarFilter {","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"     * Creates a filter for CarsOwned.","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"     * @param filterString","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"    public CarsPreferredFilter(String filterString) {","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"        super(filterString.trim());","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"        requireNonNull(filterString);","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"     * Tests each car in CarsOwned, with the specified filters.","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"     * @param customer","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"     * @return","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"    public boolean test(Customer customer) {","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"        requireNonNull(customer);","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"        return customer.getCarsPreferred()","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"                .parallelStream()","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"rajobasu"},"content":"                .anyMatch(x -\u003e carFilterPredicate(x, filterString));","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"rajobasu":1,"OhJunMing":33}},{"path":"src/main/java/seedu/address/logic/filters/CoeExpiryFilter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package seedu.address.logic.filters;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"import seedu.address.model.customer.CoeExpiry;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"public class CoeExpiryFilter extends AbstractFilter {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"COE Expiry Filter can only accept \u0027exp\u0027 or a non negative number\";","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"    private final LocalDate coeExpiryThreshold;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"     * Create a filter for COE Expiry, checking whether a COE","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":"     * expires in {@code filterString} years or less.","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"nighoggDatatype"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"nighoggDatatype"},"content":"     * A special keyword \"exp\" is accepted as an alias for COE","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"nighoggDatatype"},"content":"     * that expires in zero years or less (ie: Already expired).","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"nighoggDatatype"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"nighoggDatatype"},"content":"     * Note that {@code filterString} must either be \"exp\" or a non negative number.","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"nighoggDatatype"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"nighoggDatatype"},"content":"     * @param filterString The number of years that a COE can be valid for before","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"nighoggDatatype"},"content":"     *                     being skipped.","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"nighoggDatatype"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"nighoggDatatype"},"content":"    public CoeExpiryFilter(String filterString) {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"nighoggDatatype"},"content":"        super(filterString);","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"nighoggDatatype"},"content":"        requireNonNull(filterString);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"nighoggDatatype"},"content":"        checkArgument(isValidFilter(filterString), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"nighoggDatatype"},"content":"        LocalDate currentDate \u003d LocalDate.now(); // Should be the date without time","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"nighoggDatatype"},"content":"        boolean expiredOnly \u003d filterString.equals(\"exp\");","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"nighoggDatatype"},"content":"        int years \u003d 0;","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"nighoggDatatype"},"content":"        if (!expiredOnly) {","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"nighoggDatatype"},"content":"            years \u003d Integer.parseInt(filterString);","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"nighoggDatatype"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"nighoggDatatype"},"content":"        this.coeExpiryThreshold \u003d currentDate.plusYears(years);","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"nighoggDatatype"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"nighoggDatatype"},"content":"     * Returns true if a given string is a valid filter.","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"nighoggDatatype"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"nighoggDatatype"},"content":"    public static boolean isValidFilter(String filterString) {","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"nighoggDatatype"},"content":"        if (filterString.equals(\"exp\")) {","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"nighoggDatatype"},"content":"            return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"nighoggDatatype"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"nighoggDatatype"},"content":"        try {","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"nighoggDatatype"},"content":"            return Integer.parseInt(filterString) \u003e\u003d 0;","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"nighoggDatatype"},"content":"        } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"nighoggDatatype"},"content":"            return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"nighoggDatatype"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"nighoggDatatype"},"content":"    private boolean isCoeExpiryExpiringSoon(CoeExpiry coeExpiry) {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"nighoggDatatype"},"content":"        return coeExpiryThreshold.isAfter(coeExpiry.toDate());","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"nighoggDatatype"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"nighoggDatatype"},"content":"    public boolean test(Customer customer) {","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"nighoggDatatype"},"content":"        requireNonNull(customer);","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"nighoggDatatype"},"content":"        return customer.getCarsOwned()","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"nighoggDatatype"},"content":"                       .values()","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"nighoggDatatype"},"content":"                       .parallelStream()","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"nighoggDatatype"},"content":"                       .anyMatch(this::isCoeExpiryExpiringSoon);","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"nighoggDatatype"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"nighoggDatatype"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"nighoggDatatype"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"nighoggDatatype"},"content":"                || (other instanceof CoeExpiryFilter // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"nighoggDatatype"},"content":"                \u0026\u0026 coeExpiryThreshold.equals(((CoeExpiryFilter) other).coeExpiryThreshold)); // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"nighoggDatatype"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"nighoggDatatype":72}},{"path":"src/main/java/seedu/address/logic/filters/DobFilter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.logic.filters;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"public class DobFilter extends AbstractFilter {","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"     * Constructor for DoBFilter, creates a list of keywords in the date, to later match with the customer\u0027s DOB.","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"     * @param filterString - the birthdate to match. No particular format needed.","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"rajobasu"},"content":"    public DobFilter(String filterString) {","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":"        super(filterString.trim());","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"rajobasu"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":"    public boolean test(Customer customer) {","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"rajobasu"},"content":"        String dob \u003d customer.getDateOfBirth().getBirthDate();","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"rajobasu"},"content":"        return dob.contains(filterString.trim());","lastModifiedDate":"2021-04-02"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"rajobasu"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"rajobasu":19}},{"path":"src/main/java/seedu/address/logic/filters/EmailFilter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.logic.filters;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"public class EmailFilter extends AbstractFilter {","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"    public EmailFilter(String filterString) {","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"        super(filterString.trim());","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"rajobasu"},"content":"    @Override public boolean test(Customer customer) {","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":"        return customer.getEmail().getEmailIdWithoutDomain().toLowerCase().contains(filterString.toLowerCase());","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"rajobasu"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"rajobasu":13}},{"path":"src/main/java/seedu/address/logic/filters/Filters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.logic.filters;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CARS_OWNED;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CARS_PREFERRED;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COE_EXPIRY;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"rajobasu"},"content":"import java.util.List;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"rajobasu"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"rajobasu"},"content":"public class Filters {","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":"    public static AbstractFilter getCorrespondingFilter(String info) {","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(\" \" + info + \" \", PREFIX_NAME,","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"rajobasu"},"content":"            PREFIX_EMAIL,","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"rajobasu"},"content":"            PREFIX_PHONE,","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"rajobasu"},"content":"            PREFIX_ADDRESS, PREFIX_DOB, PREFIX_TAG, PREFIX_CARS_OWNED, PREFIX_CARS_PREFERRED);","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"rajobasu"},"content":"        if (argumentMultimap.getTotalSize() !\u003d 2) { // since there is also a dummy position :(","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"rajobasu"},"content":"            throw new NullPointerException(","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"rajobasu"},"content":"                \"Number of filters between two logical operators should be exactly 1 \" + argumentMultimap);","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"rajobasu"},"content":"        if (argumentMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"rajobasu"},"content":"            return new EmailFilter(argumentMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"rajobasu"},"content":"        if (argumentMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"rajobasu"},"content":"            return new PhoneNumberFilter(argumentMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"        if (argumentMultimap.getValue(PREFIX_COE_EXPIRY).isPresent()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"rajobasu"},"content":"            return new CoeExpiryFilter(argumentMultimap.getValue(PREFIX_COE_EXPIRY).get());","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"rajobasu"},"content":"        if (argumentMultimap.getValue(PREFIX_DOB).isPresent()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"rajobasu"},"content":"            return new DobFilter(argumentMultimap.getValue(PREFIX_DOB).get());","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"rajobasu"},"content":"        if (argumentMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"rajobasu"},"content":"            return new NameFilter(argumentMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"rajobasu"},"content":"        if (argumentMultimap.getValue(PREFIX_CARS_OWNED).isPresent()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"rajobasu"},"content":"            return new CarsOwnedFilter(argumentMultimap.getValue(PREFIX_CARS_OWNED).get());","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"rajobasu"},"content":"        if (argumentMultimap.getValue(PREFIX_CARS_PREFERRED).isPresent()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"rajobasu"},"content":"            return new CarsPreferredFilter(argumentMultimap.getValue(PREFIX_CARS_PREFERRED).get());","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"rajobasu"},"content":"        if (argumentMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"rajobasu"},"content":"            return new AddressFilter(argumentMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"rajobasu"},"content":"        if (argumentMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"rajobasu"},"content":"            return new TagFilter(argumentMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"rajobasu"},"content":"        /*","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"rajobasu"},"content":"         * throw new IllegalArgumentException(\"No appropriate filter for : \" + info);","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"rajobasu"},"content":"         */","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"rajobasu"},"content":"        return new AbstractFilter(info) {","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"rajobasu"},"content":"            @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"rajobasu"},"content":"            public boolean test(Customer customer) {","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"rajobasu"},"content":"                return false;","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"rajobasu"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"rajobasu"},"content":"            @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"rajobasu"},"content":"            public List\u003cCustomer\u003e filterAllCustomers(List\u003cCustomer\u003e customer) {","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"rajobasu"},"content":"                return null;","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"rajobasu"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"rajobasu"},"content":"        };","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"rajobasu"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"rajobasu":87}},{"path":"src/main/java/seedu/address/logic/filters/NameFilter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package seedu.address.logic.filters;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"public class NameFilter extends AbstractFilter {","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Name Filter must contain at least one valid name to test by\";","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"    /*","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"     * The first character of the search string must not be a whitespace,","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":"    private static final int MISTAKE_THRESHOLD \u003d 3;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"nighoggDatatype"},"content":"    private final String[] nameList;","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"nighoggDatatype"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"nighoggDatatype"},"content":"     * Creates a filter that filters by name, with tolerances for mis-spelling.","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"nighoggDatatype"},"content":"     *","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"nighoggDatatype"},"content":"     * @param nameListSingleString String with names to search, separated by spaces.","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"nighoggDatatype"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"nighoggDatatype"},"content":"    public NameFilter(String nameListSingleString) {","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"nighoggDatatype"},"content":"        super(nameListSingleString);","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"nighoggDatatype"},"content":"        requireNonNull(nameListSingleString);","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"nighoggDatatype"},"content":"        checkArgument(isValidFilter(nameListSingleString), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"nighoggDatatype"},"content":"        this.nameList \u003d nameListSingleString.split(\"\\\\s+\");","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"nighoggDatatype"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"nighoggDatatype"},"content":"     * Returns true if a given string is a valid filter.","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"nighoggDatatype"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"nighoggDatatype"},"content":"    public static boolean isValidFilter(String filterString) {","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"nighoggDatatype"},"content":"        return filterString.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"nighoggDatatype"},"content":"    private boolean isSubsequence(String customerName, String potentialName) {","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"nighoggDatatype"},"content":"        int customerPointer \u003d 0;","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"nighoggDatatype"},"content":"        int potentialPointer \u003d 0;","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"nighoggDatatype"},"content":"        while (customerPointer \u003c customerName.length() \u0026\u0026 potentialPointer \u003c potentialName.length()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"nighoggDatatype"},"content":"            if (customerName.charAt(customerPointer) \u003d\u003d potentialName.charAt(potentialPointer)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"nighoggDatatype"},"content":"                potentialPointer++;","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"nighoggDatatype"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"nighoggDatatype"},"content":"            customerPointer++;","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"nighoggDatatype"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"nighoggDatatype"},"content":"        return potentialPointer \u003d\u003d potentialName.length();","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"nighoggDatatype"},"content":"    @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"nighoggDatatype"},"content":"    public boolean test(Customer customer) {","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"nighoggDatatype"},"content":"        requireNonNull(customer);","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"nighoggDatatype"},"content":"        String[] customerNameTokens \u003d customer.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"nighoggDatatype"},"content":"        for (String token : customerNameTokens) {","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"nighoggDatatype"},"content":"            for (String possibleName : nameList) {","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"nighoggDatatype"},"content":"                if (isSubsequence(token.toLowerCase(), possibleName.toLowerCase())) {","lastModifiedDate":"2021-04-02"},{"lineNumber":60,"author":{"gitId":"nighoggDatatype"},"content":"                    return true;","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"nighoggDatatype"},"content":"                }","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"nighoggDatatype"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"nighoggDatatype"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"nighoggDatatype"},"content":"        return false;","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"nighoggDatatype"},"content":"    //Code below is mothballed for now","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    //@@author nighoggDatatype-reused","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    //Reused from https://stackoverflow.com/a/13564498/11358676","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private int levenshteinDistance(String s1, String s2) {","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return dist(s1.toCharArray(), s2.toCharArray());","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private int dist(char[] s1, char[] s2) {","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // memoize only previous line of distance matrix","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        int[] prev \u003d new int[s2.length + 1];","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        for (int j \u003d 0; j \u003c s2.length + 1; j++) {","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            prev[j] \u003d j;","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c s1.length + 1; i++) {","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            // calculate current line of distance matrix","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            int[] curr \u003d new int[s2.length + 1];","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            curr[0] \u003d i;","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            for (int j \u003d 1; j \u003c s2.length + 1; j++) {","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                int d1 \u003d prev[j] + 1;","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                int d2 \u003d curr[j - 1] + 1;","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                int d3 \u003d prev[j - 1];","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                if (s1[i - 1] !\u003d s2[j - 1]) {","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                    d3 +\u003d 1;","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                curr[j] \u003d Math.min(Math.min(d1, d2), d3);","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            // define current line of distance matrix as previous","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            prev \u003d curr;","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return prev[s2.length];","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"nighoggDatatype"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"nighoggDatatype":66,"rajobasu":1,"-":34}},{"path":"src/main/java/seedu/address/logic/filters/PhoneNumberFilter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.logic.filters;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"public class PhoneNumberFilter extends AbstractFilter {","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"    public PhoneNumberFilter(String filterString) {","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"        super(filterString.trim());","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"rajobasu"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":"    public boolean test(Customer customer) {","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"        return customer.getPhone().getPhoneNumber().trim().startsWith(filterString);","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"rajobasu"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"rajobasu":14}},{"path":"src/main/java/seedu/address/logic/filters/TagFilter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"package seedu.address.logic.filters;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":"public class TagFilter extends AbstractFilter {","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":"    public TagFilter(String filterString) {","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Shizheng001"},"content":"        super(filterString.trim());","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Shizheng001"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"Shizheng001"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":"    public boolean test(Customer customer) {","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"Shizheng001"},"content":"        Object[] tags \u003d customer.getTags().toArray();","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":"        boolean containsTag \u003d false;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"Shizheng001"},"content":"        for (Object tag : tags) {","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"Shizheng001"},"content":"            if (((Tag) tag).tagName.trim().startsWith(filterString)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"Shizheng001"},"content":"                containsTag \u003d true;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"Shizheng001"},"content":"                break;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"Shizheng001"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"Shizheng001"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"Shizheng001"},"content":"        return containsTag;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"Shizheng001"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"Shizheng001"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"Shizheng001":23}},{"path":"src/main/java/seedu/address/logic/filters/combinator/FilterCombinator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.logic.filters.combinator;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AND;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOT;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OR;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"import java.util.LinkedList;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"import java.util.Stack;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"rajobasu"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"import seedu.address.logic.filters.AbstractFilter;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"rajobasu"},"content":"import seedu.address.logic.filters.Filters;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"rajobasu"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"rajobasu"},"content":"public class FilterCombinator implements Predicate\u003cCustomer\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":"    private final Node rootNode;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"rajobasu"},"content":"     * Constructor for filter combinator to create a expression tree from the given argument.","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"rajobasu"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"rajobasu"},"content":"     * @param argument - the filter expression","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"rajobasu"},"content":"    public FilterCombinator(String argument) {","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"rajobasu"},"content":"        Node temp \u003d null;","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"rajobasu"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"rajobasu"},"content":"            temp \u003d createTree(argument);","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"rajobasu"},"content":"        } catch (IllegalArgumentException | NullPointerException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"rajobasu"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"rajobasu"},"content":"        } finally {","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"            rootNode \u003d temp;","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"rajobasu"},"content":"    public boolean isValidCombinator() {","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"rajobasu"},"content":"        return rootNode !\u003d null;","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"rajobasu"},"content":"    private LogicalOperator getCorrespondingLogicalOperator(Prefix prefix) {","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"rajobasu"},"content":"        if (prefix.equals(PREFIX_AND)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"rajobasu"},"content":"            return LogicalOperator.AND;","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"rajobasu"},"content":"        } else if (prefix.equals(PREFIX_OR)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"rajobasu"},"content":"            return LogicalOperator.OR;","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"rajobasu"},"content":"        } else if (prefix.equals(PREFIX_NOT)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"rajobasu"},"content":"            return LogicalOperator.NOT;","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"rajobasu"},"content":"        } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"rajobasu"},"content":"            throw new IllegalArgumentException(\"Unknown operator\");","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"rajobasu"},"content":"    private Node createTree(String description) {","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"rajobasu"},"content":"        description \u003d description.trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"rajobasu"},"content":"        if (description.replace(\u0027[\u0027, \u0027 \u0027).replace(\u0027]\u0027, \u0027 \u0027).trim().isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"rajobasu"},"content":"            throw new IllegalArgumentException(\"Incorrect formatting 1 \" + description.length());","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"rajobasu"},"content":"        StringBuilder inPresentScope \u003d new StringBuilder(\"\");","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"rajobasu"},"content":"        StringBuilder inSubtreeScope \u003d new StringBuilder(\"\");","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"rajobasu"},"content":"        Stack\u003cNode\u003e nodeStack \u003d new Stack\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"rajobasu"},"content":"        LinkedList\u003cArgumentTokenizer.PrefixPosition\u003e allPositions \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"rajobasu"},"content":"            new LinkedList\u003c\u003e(ArgumentTokenizer.findAllPrefixPositions(description, PREFIX_AND,","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"rajobasu"},"content":"                PREFIX_NOT, PREFIX_OR));","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"rajobasu"},"content":"        allPositions.sort(Comparator.comparingInt(ArgumentTokenizer.PrefixPosition::getStartPosition));","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"rajobasu"},"content":"        System.out.println(allPositions);","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"rajobasu"},"content":"        int nestingLevel \u003d 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"rajobasu"},"content":"        for (int i \u003d 0; i \u003c description.length(); i++) {","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"rajobasu"},"content":"            char c \u003d description.charAt(i);","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"rajobasu"},"content":"            while (!allPositions.isEmpty() \u0026\u0026 i \u003e allPositions.getFirst().getStartPosition()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"rajobasu"},"content":"                allPositions.removeFirst();","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"rajobasu"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"rajobasu"},"content":"            // first check if the character is part of a logical operator prefix","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"rajobasu"},"content":"            if (nestingLevel \u003d\u003d 0 \u0026\u0026 !allPositions.isEmpty() \u0026\u0026 i \u003d\u003d allPositions.getFirst().getStartPosition()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"rajobasu"},"content":"                // now we try to form a Node from the previously given filter at this level.","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"rajobasu"},"content":"                // only try to form a node if we have actually got some information","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"rajobasu"},"content":"                if (inPresentScope.toString().trim().length() \u003e 0) {","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"rajobasu"},"content":"                    AbstractFilter filter \u003d Filters.getCorrespondingFilter(inPresentScope.toString().trim());","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"rajobasu"},"content":"                    nodeStack.push(new Node(filter));","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"rajobasu"},"content":"                }","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"rajobasu"},"content":"                Prefix prefix \u003d allPositions.getFirst().getPrefix();","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"rajobasu"},"content":"                nodeStack.push(new Node(getCorrespondingLogicalOperator(prefix)));","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"rajobasu"},"content":"                i +\u003d prefix.getPrefix().trim().length() - 1; // since we will anyway do a +1 when the for loop updates.","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"rajobasu"},"content":"                allPositions.removeFirst();","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"rajobasu"},"content":"                inPresentScope \u003d new StringBuilder(\"\");","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"rajobasu"},"content":"                continue;","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"rajobasu"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"rajobasu"},"content":"            // all nesting is handled here.","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"rajobasu"},"content":"            if (c \u003d\u003d \u0027[\u0027) {","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"rajobasu"},"content":"                // starting a new nesting depth","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"rajobasu"},"content":"                if (nestingLevel !\u003d 0) {","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"rajobasu"},"content":"                    inSubtreeScope.append(c);","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"rajobasu"},"content":"                }","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"rajobasu"},"content":"                nestingLevel++;","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"rajobasu"},"content":"            } else if (c \u003d\u003d \u0027]\u0027) {","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"rajobasu"},"content":"                nestingLevel--;","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"rajobasu"},"content":"                if (nestingLevel \u003e 0) {","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"rajobasu"},"content":"                    inSubtreeScope.append(c);","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"rajobasu"},"content":"                } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"rajobasu"},"content":"                    Node nextNode \u003d createTree(inSubtreeScope.toString());","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"rajobasu"},"content":"                    nodeStack.push(nextNode);","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"rajobasu"},"content":"                    inSubtreeScope \u003d new StringBuilder(\"\");","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"rajobasu"},"content":"                }","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"rajobasu"},"content":"            } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"rajobasu"},"content":"                if (nestingLevel \u003e 0) {","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"rajobasu"},"content":"                    inSubtreeScope.append(c);","lastModifiedDate":"2021-03-31"},{"lineNumber":123,"author":{"gitId":"rajobasu"},"content":"                } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"rajobasu"},"content":"                    inPresentScope.append(c);","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"rajobasu"},"content":"                }","lastModifiedDate":"2021-03-31"},{"lineNumber":126,"author":{"gitId":"rajobasu"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"rajobasu"},"content":"        if (inPresentScope.toString().trim().length() \u003e 0) {","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"rajobasu"},"content":"            AbstractFilter filter \u003d Filters.getCorrespondingFilter(inPresentScope.toString().trim());","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"rajobasu"},"content":"            nodeStack.push(new Node(filter));","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"rajobasu"},"content":"        System.out.println(nodeStack);","lastModifiedDate":"2021-04-01"},{"lineNumber":135,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"rajobasu"},"content":"        return formTreeFromNodeStack(nodeStack);","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"rajobasu"},"content":"    private Node formTreeFromNodeStack(Stack\u003cNode\u003e nodeStack) {","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"rajobasu"},"content":"        while (!nodeStack.isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"rajobasu"},"content":"            if (nodeStack.size() \u003d\u003d 1) {","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"rajobasu"},"content":"                return nodeStack.pop();","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"rajobasu"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"rajobasu"},"content":"            if (nodeStack.size() \u003d\u003d 2) {","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"rajobasu"},"content":"                Node upper \u003d nodeStack.pop();","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"rajobasu"},"content":"                Node operator \u003d nodeStack.pop();","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"rajobasu"},"content":"                if (!operator.hasUnaryOperator()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"rajobasu"},"content":"                    throw new IllegalArgumentException(\"Incorrect formatting 3\");","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"rajobasu"},"content":"                }","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"rajobasu"},"content":"                operator.setChild(upper);","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"rajobasu"},"content":"                nodeStack.push(operator);","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"rajobasu"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"rajobasu"},"content":"            Node first \u003d nodeStack.pop();","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"rajobasu"},"content":"            Node second \u003d nodeStack.pop();","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"rajobasu"},"content":"            Node third \u003d nodeStack.pop();","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"rajobasu"},"content":"            if (second.hasChildren() || second.getNodeType() \u003d\u003d NodeType.EVALUATOR) {","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"rajobasu"},"content":"                throw new IllegalArgumentException(\"Incorrect formatting 4 \" + second.getNodeType());","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"rajobasu"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"rajobasu"},"content":"            if (second.hasUnaryOperator()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"rajobasu"},"content":"                second.setChild(first);","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"rajobasu"},"content":"                nodeStack.push(third);","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"rajobasu"},"content":"                nodeStack.push(second);","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"rajobasu"},"content":"            } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"rajobasu"},"content":"                second.setLeftNode(third);","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"rajobasu"},"content":"                second.setRightNode(first);","lastModifiedDate":"2021-03-31"},{"lineNumber":170,"author":{"gitId":"rajobasu"},"content":"                nodeStack.push(second);","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"rajobasu"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":173,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"rajobasu"},"content":"        throw new IllegalArgumentException(\"Incorrect formatting 5\");","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"rajobasu"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":180,"author":{"gitId":"rajobasu"},"content":"    public boolean test(Customer customer) {","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"rajobasu"},"content":"        return rootNode.evaluate(customer);","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":183,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":184,"author":{"gitId":"rajobasu"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"rajobasu"},"content":"    public String toString() {","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"rajobasu"},"content":"        return \"FilterCombinator{\"","lastModifiedDate":"2021-03-31"},{"lineNumber":187,"author":{"gitId":"rajobasu"},"content":"            + \"rootNode\u003d\" + rootNode","lastModifiedDate":"2021-03-31"},{"lineNumber":188,"author":{"gitId":"rajobasu"},"content":"            + \u0027}\u0027;","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"rajobasu"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"rajobasu":190}},{"path":"src/main/java/seedu/address/logic/filters/combinator/LogicalOperator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.logic.filters.combinator;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"import java.util.function.BinaryOperator;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"public enum LogicalOperator {","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"    AND(true, (x, y) -\u003e x \u0026\u0026 y),","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"    OR(true, (x, y) -\u003e x || y),","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"    NOT(false, (x, y) -\u003e !x);","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"rajobasu"},"content":"    private boolean isBinaryOperator;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":"    private BinaryOperator\u003cBoolean\u003e binaryOperator;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"rajobasu"},"content":"    LogicalOperator(boolean isBinaryOperator, BinaryOperator\u003cBoolean\u003e binaryOperator) {","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"rajobasu"},"content":"        this.isBinaryOperator \u003d isBinaryOperator;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":"        this.binaryOperator \u003d binaryOperator;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":"    public boolean isBinaryOperator() {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"rajobasu"},"content":"        return isBinaryOperator;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"rajobasu"},"content":"    public boolean isUnaryOperator() {","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"rajobasu"},"content":"        return !isBinaryOperator;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"rajobasu"},"content":"     * @param b1","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"rajobasu"},"content":"     * @param b2","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"rajobasu"},"content":"     * @return","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"rajobasu"},"content":"    public boolean apply(boolean b1, boolean b2) {","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"rajobasu"},"content":"        if (isBinaryOperator) {","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"rajobasu"},"content":"            return binaryOperator.apply(b1, b2);","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"rajobasu"},"content":"            throw new IllegalArgumentException(\"Two parameters passed for a unary operation\");","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"     * @param b1","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"rajobasu"},"content":"     * @return","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"rajobasu"},"content":"    public boolean apply(boolean b1) {","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"rajobasu"},"content":"        if (!isBinaryOperator) {","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"rajobasu"},"content":"            return binaryOperator.apply(b1, b1);","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"rajobasu"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"rajobasu"},"content":"            throw new IllegalArgumentException(\"One parameter passed for a unary operation\");","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"rajobasu"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"rajobasu":50}},{"path":"src/main/java/seedu/address/logic/filters/combinator/Node.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.logic.filters.combinator;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"import seedu.address.logic.filters.AbstractFilter;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"class Node {","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"    private final LogicalOperator operator;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"    private final AbstractFilter filter;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"    private final NodeType nodeType;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":"    private Node left;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"    private Node right;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"rajobasu"},"content":"    public Node(LogicalOperator operator, Node left, Node right) {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":"        this.operator \u003d operator;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"rajobasu"},"content":"        this.filter \u003d null;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"rajobasu"},"content":"        this.nodeType \u003d NodeType.COMBINATOR;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":"        this.left \u003d left;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"rajobasu"},"content":"        this.right \u003d right;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"rajobasu"},"content":"    public Node(AbstractFilter filter) {","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"rajobasu"},"content":"        this.operator \u003d null;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"rajobasu"},"content":"        this.filter \u003d filter;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"rajobasu"},"content":"        this.nodeType \u003d NodeType.EVALUATOR;","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"rajobasu"},"content":"        this.left \u003d null;","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"rajobasu"},"content":"        this.right \u003d null;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"rajobasu"},"content":"    public Node(LogicalOperator operator) {","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"rajobasu"},"content":"        this(operator, null, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"    public Node(LogicalOperator operator, Node singleChild) {","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"rajobasu"},"content":"        this(operator, singleChild, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"rajobasu"},"content":"    public NodeType getNodeType() {","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"rajobasu"},"content":"        return this.nodeType;","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"rajobasu"},"content":"    public boolean evaluate(Customer customer) {","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"rajobasu"},"content":"        if (this.nodeType \u003d\u003d NodeType.COMBINATOR) {","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"rajobasu"},"content":"            assert operator !\u003d null;","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"rajobasu"},"content":"            if (operator.isBinaryOperator()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"rajobasu"},"content":"                return operator.apply(left.evaluate(customer), right.evaluate(customer));","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"rajobasu"},"content":"            } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"rajobasu"},"content":"                return operator.apply(left.evaluate(customer));","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"rajobasu"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"rajobasu"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"rajobasu"},"content":"            assert filter !\u003d null;","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"rajobasu"},"content":"            return filter.test(customer);","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"rajobasu"},"content":"    public void setLeftNode(Node node) {","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"rajobasu"},"content":"        if (nodeType \u003d\u003d NodeType.EVALUATOR) {","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"rajobasu"},"content":"            throw new IllegalStateException(\"Evaluator node cannot have a child\");","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"rajobasu"},"content":"        this.left \u003d node;","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"rajobasu"},"content":"    public void setRightNode(Node node) {","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"rajobasu"},"content":"        if (nodeType \u003d\u003d NodeType.EVALUATOR) {","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"rajobasu"},"content":"            throw new IllegalStateException(\"Evaluator node cannot have a child\");","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"rajobasu"},"content":"        assert operator !\u003d null;","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"rajobasu"},"content":"        if (operator.isUnaryOperator()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"rajobasu"},"content":"            throw new IllegalStateException(\"Cannot add second child to unary operator\");","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"rajobasu"},"content":"        this.right \u003d node;","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"rajobasu"},"content":"    public void setChild(Node node) {","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"rajobasu"},"content":"        this.setLeftNode(node);","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"rajobasu"},"content":"    public boolean hasUnaryOperator() {","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"rajobasu"},"content":"        if (nodeType !\u003d NodeType.COMBINATOR) {","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"rajobasu"},"content":"            return false;","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"rajobasu"},"content":"        assert operator !\u003d null;","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"rajobasu"},"content":"        return operator.isUnaryOperator();","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"rajobasu"},"content":"    public boolean hasBinaryOperator() {","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"rajobasu"},"content":"        if (nodeType !\u003d NodeType.COMBINATOR) {","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"rajobasu"},"content":"            return false;","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"rajobasu"},"content":"        assert operator !\u003d null;","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"rajobasu"},"content":"        return operator.isBinaryOperator();","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"rajobasu"},"content":"    public boolean hasChildren() {","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"rajobasu"},"content":"        return !(left \u003d\u003d null \u0026\u0026 right \u003d\u003d null);","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"rajobasu"},"content":"    public String toString() {","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"rajobasu"},"content":"        return nodeType.toString() + \":\" + operator + \" \" + filter + \": {\" + left + \"}{\" + right + \"}\";","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"rajobasu"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"rajobasu":104}},{"path":"src/main/java/seedu/address/logic/filters/combinator/NodeType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.logic.filters.combinator;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"enum NodeType {","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"    COMBINATOR,","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"    EVALUATOR","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"rajobasu":6}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CARS_OWNED;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CARS_PREFERRED;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"rajobasu"},"content":"import java.util.Map;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.model.customer.Address;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Car;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.CoeExpiry;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"nighoggDatatype"},"content":"import seedu.address.model.customer.DateOfBirth;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Email;","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Name;","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Phone;","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"rajobasu"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given {@code","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"rajobasu"},"content":"     * ArgumentMultimap}.","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"rajobasu"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"rajobasu"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"rajobasu"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand and returns an AddCommand object","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"rajobasu"},"content":"     * for execution.","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"rajobasu"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":50,"author":{"gitId":"nighoggDatatype"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_DOB,","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"rajobasu"},"content":"                PREFIX_TAG, PREFIX_CARS_OWNED, PREFIX_CARS_PREFERRED);","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"nighoggDatatype"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_DOB)","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"nighoggDatatype"},"content":"        DateOfBirth dateOfBirth \u003d ParserUtil.parseDateOfBirth(argMultimap.getValue(PREFIX_DOB).get());","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"rajobasu"},"content":"        Map\u003cCar, CoeExpiry\u003e carsOwned \u003d ParserUtil.parseCarsOwned(argMultimap.getAllValues(PREFIX_CARS_OWNED));","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"rajobasu"},"content":"        Set\u003cCar\u003e carsPreferred \u003d ParserUtil.parseCarsPreferred(argMultimap.getAllValues(PREFIX_CARS_PREFERRED));","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"        Customer customer \u003d new Customer(name, phone, email, address, dateOfBirth, tagList, carsOwned, carsPreferred);","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"rajobasu"},"content":"        return new AddCommand(customer);","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"nighoggDatatype":5,"Shizheng001":2,"rajobasu":22,"OhJunMing":1,"-":42}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"rajobasu"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":"     **/","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"rajobasu"},"content":"    public int getTotalSize() {","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"rajobasu"},"content":"        int total \u003d 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"rajobasu"},"content":"        for (var pair : argMultimap.entrySet()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"rajobasu"},"content":"            total +\u003d pair.getValue().size();","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"rajobasu"},"content":"        return total;","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"rajobasu":11,"-":59}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"rajobasu"},"content":"    public static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"rajobasu"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"rajobasu"},"content":"    private static String extractArgumentValue(","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"rajobasu"},"content":"            String argsString,","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":131,"author":{"gitId":"rajobasu"},"content":"    public static class PrefixPosition {","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"rajobasu"},"content":"        private final int startPosition;","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"rajobasu"},"content":"        public int getStartPosition() {","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"rajobasu"},"content":"        public Prefix getPrefix() {","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"rajobasu"},"content":"        @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"rajobasu"},"content":"        public String toString() {","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"rajobasu"},"content":"            return \"PrefixPosition{\"","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"rajobasu"},"content":"                    + \"startPosition\u003d\" + startPosition","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"rajobasu"},"content":"                    + \", prefix\u003d\" + prefix","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"rajobasu"},"content":"                    + \u0027}\u0027;","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"rajobasu":16,"-":141}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"rajobasu"},"content":"    public static final Prefix PREFIX_CARS_OWNED \u003d new Prefix(\"c/\");","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"    public static final Prefix PREFIX_DOB \u003d new Prefix(\"b/\");","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"rajobasu"},"content":"    public static final Prefix PREFIX_CARS_PREFERRED \u003d new Prefix(\"cp/\");","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"rajobasu"},"content":"    public static final Prefix PREFIX_AND \u003d new Prefix(\"/AND\");","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":"    public static final Prefix PREFIX_OR \u003d new Prefix(\"/OR\");","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"rajobasu"},"content":"    public static final Prefix PREFIX_NOT \u003d new Prefix(\"/NOT\");","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":"    public static final Prefix PREFIX_COE_EXPIRY \u003d new Prefix(\"coe/\");","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"nighoggDatatype":1,"rajobasu":6,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"Shizheng001"},"content":"            String name \u003d ParserUtil.parseName(args).toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Shizheng001"},"content":"            return new DeleteCommand(name);","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Shizheng001":2,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CARS_OWNED;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CARS_PREFERRED;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"import seedu.address.logic.commands.EditCommand.EditCustomerDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"import seedu.address.model.customer.Car;","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"nighoggDatatype"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_DOB,","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"                    PREFIX_TAG, PREFIX_CARS_OWNED, PREFIX_CARS_PREFERRED);","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"Shizheng001"},"content":"        EditCommand.EditCustomerDescriptor editCustomerDescriptor \u003d new EditCustomerDescriptor();","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"rajobasu"},"content":"            editCustomerDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"rajobasu"},"content":"            editCustomerDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"rajobasu"},"content":"            editCustomerDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"Shizheng001"},"content":"            editCustomerDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"nighoggDatatype"},"content":"        if (argMultimap.getValue(PREFIX_DOB).isPresent()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"nighoggDatatype"},"content":"            editCustomerDescriptor.setDateOfBirth(ParserUtil.parseDateOfBirth(argMultimap.getValue(PREFIX_DOB).get()));","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"nighoggDatatype"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"rajobasu"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editCustomerDescriptor::setTags);","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"rajobasu"},"content":"        editCustomerDescriptor.setCarsOwned(ParserUtil.parseCarsOwned(argMultimap.getAllValues(PREFIX_CARS_OWNED)));","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"rajobasu"},"content":"        parseCarsPreferredForEdit(argMultimap.getAllValues(PREFIX_CARS_PREFERRED))","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":"                .ifPresent(editCustomerDescriptor::setCarsPreferred);","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"rajobasu"},"content":"        if (!editCustomerDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"rajobasu"},"content":"        return new EditCommand(index, editCustomerDescriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"OhJunMing"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"OhJunMing"},"content":"     * Parses {@code Collection\u003cString\u003e cars} into a {@code Set\u003cCar\u003e} if {@code cars} is non-empty.","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"OhJunMing"},"content":"     * If {@code cars} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"OhJunMing"},"content":"     * {@code Set\u003cCar\u003e} containing zero cars.","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"OhJunMing"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"OhJunMing"},"content":"    private Optional\u003cSet\u003cCar\u003e\u003e parseCarsPreferredForEdit(Collection\u003cString\u003e cars) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"OhJunMing"},"content":"        assert cars !\u003d null;","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"OhJunMing"},"content":"        if (cars.isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"OhJunMing"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"OhJunMing"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"OhJunMing"},"content":"        Collection\u003cString\u003e carSet \u003d cars.size() \u003d\u003d 1 \u0026\u0026 cars.contains(\"\") ? Collections.emptySet() : cars;","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"OhJunMing"},"content":"        return Optional.of(ParserUtil.parseCarsPreferred(carSet));","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"OhJunMing"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"nighoggDatatype":5,"Shizheng001":2,"rajobasu":12,"OhJunMing":17,"-":72}},{"path":"src/main/java/seedu/address/logic/parser/FilterCombinatorParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"public class FilterCombinatorParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"    @Override","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"    public FindCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"rajobasu"},"content":"        return null;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"rajobasu":12}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"import seedu.address.logic.filters.combinator.FilterCombinator;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand and returns a FindCommand object","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"rajobasu"},"content":"     * for execution.","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"rajobasu"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"rajobasu"},"content":"        return new FindCommand(new FilterCombinator(trimmedArgs));","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"rajobasu":5,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"import java.util.AbstractMap;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"import java.util.Map;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.model.customer.Address;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Car;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.CoeExpiry;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"nighoggDatatype"},"content":"import seedu.address.model.customer.DateOfBirth;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Email;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Name;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Phone;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"rajobasu"},"content":"     * Parses a {@code String name} into a {@code Name}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"rajobasu"},"content":"     * Parses a {@code String phone} into a {@code Phone}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"rajobasu"},"content":"     * Parses a {@code String address} into an {@code Address}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"rajobasu"},"content":"     * Parses a {@code String email} into an {@code Email}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"nighoggDatatype"},"content":"     * Parses a {@code String dateOfBirth} into an {@code DateOfBirth}.","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"nighoggDatatype"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"nighoggDatatype"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"nighoggDatatype"},"content":"    public static DateOfBirth parseDateOfBirth(String dateOfBirth) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"nighoggDatatype"},"content":"        requireNonNull(dateOfBirth);","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"nighoggDatatype"},"content":"        String trimmedDateOfBirth \u003d dateOfBirth.trim();","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"nighoggDatatype"},"content":"        if (!DateOfBirth.isValidDateOfBirth(trimmedDateOfBirth)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"nighoggDatatype"},"content":"            throw new ParseException(DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"nighoggDatatype"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"nighoggDatatype"},"content":"        return new DateOfBirth(trimmedDateOfBirth);","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"rajobasu"},"content":"     * Parses a {@code String tag} into a {@code Tag}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":141,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"OhJunMing"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"OhJunMing"},"content":"     * Parses carInfo, carBrand, carType, carCoeExpiry.","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"OhJunMing"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"OhJunMing"},"content":"     * @param info","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"OhJunMing"},"content":"     * @return Map Object","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"OhJunMing"},"content":"     * @throws ParseException","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"OhJunMing"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"rajobasu"},"content":"    private static Map.Entry\u003cCar, CoeExpiry\u003e parseCarInfo(String info) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":150,"author":{"gitId":"rajobasu"},"content":"        info \u003d info.trim();","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"rajobasu"},"content":"        String[] parts \u003d info.split(\"\\\\|\");","lastModifiedDate":"2021-03-16"},{"lineNumber":152,"author":{"gitId":"OhJunMing"},"content":"        String[] carDetails \u003d parts[0].split(\"\\\\+\");","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"rajobasu"},"content":"        if (parts.length !\u003d 2) {","lastModifiedDate":"2021-03-16"},{"lineNumber":155,"author":{"gitId":"rajobasu"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-16"},{"lineNumber":156,"author":{"gitId":"rajobasu"},"content":"                Car.MESSAGE_CONSTRAINTS + \" and also \" + CoeExpiry.MESSAGE_CONSTRAINTS + \"\\n\" + info);","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":158,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":159,"author":{"gitId":"OhJunMing"},"content":"        if (carDetails.length !\u003d 2) {","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"OhJunMing"},"content":"            throw new ParseException(Car.MESSAGE_CONSTRAINTS + \"\\n\" + info);","lastModifiedDate":"2021-03-29"},{"lineNumber":161,"author":{"gitId":"OhJunMing"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":163,"author":{"gitId":"rajobasu"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":164,"author":{"gitId":"OhJunMing"},"content":"            return new AbstractMap.SimpleEntry\u003c\u003e(new Car(carDetails[0].trim(), carDetails[1].trim()),","lastModifiedDate":"2021-03-29"},{"lineNumber":165,"author":{"gitId":"OhJunMing"},"content":"                    new CoeExpiry(parts[1].trim()));","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"rajobasu"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"rajobasu"},"content":"            throw new ParseException(Car.MESSAGE_CONSTRAINTS + \" and \" + CoeExpiry.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":168,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":169,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":170,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":171,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":172,"author":{"gitId":"rajobasu"},"content":"     * Parses the list of cars|coeExpiries given as string and returns them as a map","lastModifiedDate":"2021-03-16"},{"lineNumber":173,"author":{"gitId":"rajobasu"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":174,"author":{"gitId":"rajobasu"},"content":"     * @param allValues - collection of all the strings","lastModifiedDate":"2021-03-16"},{"lineNumber":175,"author":{"gitId":"rajobasu"},"content":"     * @return - map of {car : CoeExpiry}","lastModifiedDate":"2021-03-16"},{"lineNumber":176,"author":{"gitId":"rajobasu"},"content":"     * @throws ParseException - thrown when formatting not correct","lastModifiedDate":"2021-03-16"},{"lineNumber":177,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":178,"author":{"gitId":"rajobasu"},"content":"    public static Map\u003cCar, CoeExpiry\u003e parseCarsOwned(Collection\u003cString\u003e allValues) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":179,"author":{"gitId":"rajobasu"},"content":"        requireNonNull(allValues);","lastModifiedDate":"2021-03-16"},{"lineNumber":180,"author":{"gitId":"rajobasu"},"content":"        final Map\u003cCar, CoeExpiry\u003e carsOwned \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":181,"author":{"gitId":"rajobasu"},"content":"        for (String carOwned : allValues) {","lastModifiedDate":"2021-03-16"},{"lineNumber":182,"author":{"gitId":"rajobasu"},"content":"            Map.Entry\u003cCar, CoeExpiry\u003e newEntry \u003d parseCarInfo(carOwned);","lastModifiedDate":"2021-03-16"},{"lineNumber":183,"author":{"gitId":"rajobasu"},"content":"            carsOwned.put(newEntry.getKey(), newEntry.getValue());","lastModifiedDate":"2021-03-16"},{"lineNumber":184,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":185,"author":{"gitId":"rajobasu"},"content":"        return carsOwned;","lastModifiedDate":"2021-03-16"},{"lineNumber":186,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":187,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":188,"author":{"gitId":"OhJunMing"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":189,"author":{"gitId":"OhJunMing"},"content":"     * Parses a {@code String car} into a {@code Car}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"OhJunMing"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":191,"author":{"gitId":"OhJunMing"},"content":"     * @throws ParseException if the given {@code car} is invalid.","lastModifiedDate":"2021-03-31"},{"lineNumber":192,"author":{"gitId":"OhJunMing"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":193,"author":{"gitId":"OhJunMing"},"content":"    public static Car parseCarPreferred(String car) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":194,"author":{"gitId":"OhJunMing"},"content":"        String trimmedCar \u003d car.trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":195,"author":{"gitId":"OhJunMing"},"content":"        String[] carDetails \u003d trimmedCar.split(\"\\\\+\");","lastModifiedDate":"2021-03-31"},{"lineNumber":196,"author":{"gitId":"OhJunMing"},"content":"        if (carDetails.length !\u003d 2) {","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"OhJunMing"},"content":"            throw new ParseException(Car.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":198,"author":{"gitId":"OhJunMing"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":199,"author":{"gitId":"OhJunMing"},"content":"        String carBrand \u003d carDetails[0].trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":200,"author":{"gitId":"OhJunMing"},"content":"        String carType \u003d carDetails[1].trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":201,"author":{"gitId":"OhJunMing"},"content":"        if (!Car.isValidCar(carBrand, carType)) {","lastModifiedDate":"2021-03-31"},{"lineNumber":202,"author":{"gitId":"OhJunMing"},"content":"            throw new ParseException(Car.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":203,"author":{"gitId":"OhJunMing"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":204,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":205,"author":{"gitId":"OhJunMing"},"content":"        try {","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"OhJunMing"},"content":"            return new Car(carBrand, carType);","lastModifiedDate":"2021-03-31"},{"lineNumber":207,"author":{"gitId":"OhJunMing"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-03-31"},{"lineNumber":208,"author":{"gitId":"OhJunMing"},"content":"            throw new ParseException(Car.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":209,"author":{"gitId":"OhJunMing"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":210,"author":{"gitId":"OhJunMing"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":211,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":212,"author":{"gitId":"OhJunMing"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":213,"author":{"gitId":"OhJunMing"},"content":"     * Parses {@code Collection\u003cString\u003e cars} into a {@code Set\u003cCar\u003e}.","lastModifiedDate":"2021-03-31"},{"lineNumber":214,"author":{"gitId":"OhJunMing"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":215,"author":{"gitId":"OhJunMing"},"content":"    public static Set\u003cCar\u003e parseCarsPreferred(Collection\u003cString\u003e cars) throws ParseException {","lastModifiedDate":"2021-03-31"},{"lineNumber":216,"author":{"gitId":"OhJunMing"},"content":"        requireNonNull(cars);","lastModifiedDate":"2021-03-31"},{"lineNumber":217,"author":{"gitId":"OhJunMing"},"content":"        final Set\u003cCar\u003e carsPreferred \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":218,"author":{"gitId":"OhJunMing"},"content":"        for (String carPreferred : cars) {","lastModifiedDate":"2021-03-31"},{"lineNumber":219,"author":{"gitId":"OhJunMing"},"content":"            carsPreferred.add(parseCarPreferred(carPreferred));","lastModifiedDate":"2021-03-31"},{"lineNumber":220,"author":{"gitId":"OhJunMing"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":221,"author":{"gitId":"OhJunMing"},"content":"        return carsPreferred;","lastModifiedDate":"2021-03-31"},{"lineNumber":222,"author":{"gitId":"OhJunMing"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"nighoggDatatype":13,"Shizheng001":1,"rajobasu":45,"OhJunMing":51,"-":113}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.UniqueCustomerList;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":" * Wraps all data at the address-book level Duplicates are not allowed (by .isSameCustomer comparison)","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"rajobasu"},"content":"    private final UniqueCustomerList customers;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"rajobasu"},"content":"        customers \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"rajobasu"},"content":"    public AddressBook() {","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"     * Creates an AddressBook using the Customers in the {@code toBeCopied}","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"rajobasu"},"content":"     * Replaces the contents of the customer list with {@code customers}. {@code customers} must not contain duplicate","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"rajobasu"},"content":"     * customers.","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"rajobasu"},"content":"    public void setCustomers(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"rajobasu"},"content":"        this.customers.setCustomers(customers);","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"rajobasu"},"content":"        setCustomers(newData.getCustomerList());","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"rajobasu"},"content":"    //// customer-level operations","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"rajobasu"},"content":"     * Returns true if a customer with the same identity as {@code customer} exists in the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"rajobasu"},"content":"    public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"rajobasu"},"content":"        requireNonNull(customer);","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"rajobasu"},"content":"        return customers.contains(customer);","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"rajobasu"},"content":"     * Adds a customer to the address book. The customer must not already exist in the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"rajobasu"},"content":"    public void addCustomer(Customer p) {","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"rajobasu"},"content":"        customers.add(p);","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"rajobasu"},"content":"     * Replaces the given customer {@code target} in the list with {@code editedCustomer}. {@code target} must exist in","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"rajobasu"},"content":"     * the address book. The customer identity of {@code editedCustomer} must not be the same as another existing","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"rajobasu"},"content":"     * customer in the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"rajobasu"},"content":"    public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"rajobasu"},"content":"        requireNonNull(editedCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"rajobasu"},"content":"        customers.setCustomer(target, editedCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"rajobasu"},"content":"     * Removes {@code key} from this {@code AddressBook}. {@code key} must exist in the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"rajobasu"},"content":"    public void removeCustomer(Customer key) {","lastModifiedDate":"2021-03-12"},{"lineNumber":92,"author":{"gitId":"rajobasu"},"content":"        customers.remove(key);","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"rajobasu"},"content":"        return customers.asUnmodifiableObservableList().size() + \" customers\";","lastModifiedDate":"2021-03-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"rajobasu"},"content":"    public ObservableList\u003cCustomer\u003e getCustomerList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":105,"author":{"gitId":"rajobasu"},"content":"        return customers.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"rajobasu"},"content":"            \u0026\u0026 customers.equals(((AddressBook) other).customers));","lastModifiedDate":"2021-03-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"rajobasu"},"content":"        return customers.hashCode();","lastModifiedDate":"2021-03-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rajobasu":36,"-":83}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"rajobasu"},"content":"    Predicate\u003cCustomer\u003e PREDICATE_SHOW_ALL_CUSTOMERS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"rajobasu"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"rajobasu"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"rajobasu"},"content":"     * Returns the AddressBook","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"rajobasu"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"rajobasu"},"content":"     * Returns true if a customer with the same identity as {@code customer} exists in the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"rajobasu"},"content":"    boolean hasCustomer(Customer customer);","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"rajobasu"},"content":"     * Deletes the given customer. The customer must exist in the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"rajobasu"},"content":"    void deleteCustomer(Customer target);","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"rajobasu"},"content":"     * Adds the given customer. {@code customer} must not already exist in the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"rajobasu"},"content":"    void addCustomer(Customer customer);","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"rajobasu"},"content":"     * Replaces the given customer {@code target} with {@code editedCustomer}. {@code target} must exist in the address","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"rajobasu"},"content":"     * book. The customer identity of {@code editedCustomer} must not be the same as another existing customer in the","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"rajobasu"},"content":"     * address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"rajobasu"},"content":"    void setCustomer(Customer target, Customer editedCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"rajobasu"},"content":"     * Returns an unmodifiable view of the filtered customer list","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"rajobasu"},"content":"    ObservableList\u003cCustomer\u003e getFilteredCustomerList();","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"rajobasu"},"content":"     * Updates the filter of the filtered customer list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"rajobasu"},"content":"     *","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"rajobasu"},"content":"    void updateFilteredCustomerList(Predicate\u003cCustomer\u003e predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"rajobasu":30,"-":62}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"rajobasu"},"content":"    private final FilteredList\u003cCustomer\u003e filteredCustomers;","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"rajobasu"},"content":"        filteredCustomers \u003d new FilteredList\u003c\u003e(this.addressBook.getCustomerList());","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"rajobasu"},"content":"    public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"rajobasu"},"content":"        requireNonNull(customer);","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"rajobasu"},"content":"        return addressBook.hasCustomer(customer);","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"rajobasu"},"content":"    public void deleteCustomer(Customer target) {","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"rajobasu"},"content":"        addressBook.removeCustomer(target);","lastModifiedDate":"2021-03-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"rajobasu"},"content":"    public void addCustomer(Customer customer) {","lastModifiedDate":"2021-03-12"},{"lineNumber":104,"author":{"gitId":"rajobasu"},"content":"        addressBook.addCustomer(customer);","lastModifiedDate":"2021-03-12"},{"lineNumber":105,"author":{"gitId":"rajobasu"},"content":"        updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2021-03-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"rajobasu"},"content":"    public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2021-03-12"},{"lineNumber":110,"author":{"gitId":"rajobasu"},"content":"        requireAllNonNull(target, editedCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"rajobasu"},"content":"        addressBook.setCustomer(target, editedCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"rajobasu"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Customer List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":118,"author":{"gitId":"rajobasu"},"content":"     * Returns an unmodifiable view of the list of {@code Customer} backed by the internal list of","lastModifiedDate":"2021-03-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"rajobasu"},"content":"    public ObservableList\u003cCustomer\u003e getFilteredCustomerList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":123,"author":{"gitId":"rajobasu"},"content":"        return filteredCustomers;","lastModifiedDate":"2021-03-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"rajobasu"},"content":"    public void updateFilteredCustomerList(Predicate\u003cCustomer\u003e predicate) {","lastModifiedDate":"2021-03-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"rajobasu"},"content":"        filteredCustomers.setPredicate(predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"rajobasu"},"content":"                \u0026\u0026 filteredCustomers.equals(other.filteredCustomers);","lastModifiedDate":"2021-03-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rajobasu":21,"-":130}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"     * Returns an unmodifiable view of the customers list.","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"rajobasu"},"content":"     * This list will not contain any duplicate customers.","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":"    ObservableList\u003cCustomer\u003e getCustomerList();","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rajobasu":4,"-":13}},{"path":"src/main/java/seedu/address/model/customer/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":" * Represents a Customer\u0027s address in the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rajobasu":2,"-":55}},{"path":"src/main/java/seedu/address/model/customer/Car.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":" * Represents a car in the address book.","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCar(String, String)}","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"public class Car {","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Car Brand + Car Type can take any values, it should not be blank\";","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"    /*","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":"     * The first character of the preferred car must not be a whitespace,","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"nighoggDatatype"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"nighoggDatatype"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"nighoggDatatype"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"rajobasu"},"content":"    private final String carBrand;","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"rajobasu"},"content":"    private final String carType;","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"nighoggDatatype"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"nighoggDatatype"},"content":"     * Constructs a {@code Car}.","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"nighoggDatatype"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"     * @param carBrand A valid carBrand.","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"     * @param carType A valid carType.","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"nighoggDatatype"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"    public Car(String carBrand, String carType) {","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"        requireNonNull(carBrand);","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"        requireNonNull(carType);","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"        checkArgument(isValidCar(carBrand, carType), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"        this.carBrand \u003d carBrand;","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"        this.carType \u003d carType;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"     * Returns true if a given string is a valid car.","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"    public static boolean isValidCar(String carBrand, String carType) {","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"        return isValidCarBrand(carBrand) \u0026\u0026 isValidCarType(carType);","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"nighoggDatatype"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"     * Returns true if a given string is a valid carBrand.","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"nighoggDatatype"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"    public static boolean isValidCarBrand(String test) {","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"nighoggDatatype"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"nighoggDatatype"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"     * Returns true if a given string is a valid carType.","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"nighoggDatatype"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":"    public static boolean isValidCarType(String test) {","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"nighoggDatatype"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":"     * Compares carBrand and carType strings.","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"OhJunMing"},"content":"     * @param otherCar","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":"     * @return Boolean result","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"    public boolean isSameCarBrandAndCarType(Car otherCar) {","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"        return isSameCarBrand(otherCar) \u0026\u0026 isSameCarType(otherCar);","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"OhJunMing"},"content":"     * Compares carBrand string.","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":"     * @param otherCar","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"OhJunMing"},"content":"     * @return Boolean result","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"OhJunMing"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"OhJunMing"},"content":"    public boolean isSameCarBrand(Car otherCar) {","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"OhJunMing"},"content":"        return this.carBrand.equals(otherCar.carBrand);","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"OhJunMing"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"OhJunMing"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"OhJunMing"},"content":"     * Compares carType string.","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"OhJunMing"},"content":"     * @param otherCar","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"OhJunMing"},"content":"     * @return Boolean result","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"OhJunMing"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"OhJunMing"},"content":"    public boolean isSameCarType(Car otherCar) {","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"OhJunMing"},"content":"        return this.carType.equals(otherCar.carType);","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"OhJunMing"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"nighoggDatatype"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"nighoggDatatype"},"content":"    public String toString() {","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"OhJunMing"},"content":"        return carBrand + \",\" + carType;","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"nighoggDatatype"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"nighoggDatatype"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"nighoggDatatype"},"content":"        return other \u003d\u003d this; // Not checking carBrand or CarType since it shouldn\u0027t be unique","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"OhJunMing"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"OhJunMing"},"content":"     * Helps with comparing car Objects.","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"OhJunMing"},"content":"     * carBrand and carType attributes are essential to determine same attributes.","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"OhJunMing"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"nighoggDatatype"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"nighoggDatatype"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"OhJunMing"},"content":"        return Objects.hash(carBrand, carType);","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"rajobasu"},"content":"    public String getCarBrand() {","lastModifiedDate":"2021-04-01"},{"lineNumber":107,"author":{"gitId":"rajobasu"},"content":"        return carBrand;","lastModifiedDate":"2021-04-01"},{"lineNumber":108,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":110,"author":{"gitId":"rajobasu"},"content":"    public String getCarType() {","lastModifiedDate":"2021-04-01"},{"lineNumber":111,"author":{"gitId":"rajobasu"},"content":"        return carType;","lastModifiedDate":"2021-04-01"},{"lineNumber":112,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":113,"author":{"gitId":"nighoggDatatype"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"nighoggDatatype":47,"rajobasu":11,"OhJunMing":55}},{"path":"src/main/java/seedu/address/model/customer/CoeExpiry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":" * Represents a Person\u0027s CoeExpiry in the address book.","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCoeExpiry(String)}","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"public class CoeExpiry {","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Expiry dates should be of the format yyyy MM dd \"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":"            + \"EG:(2011 07 06 for 6th July, 2011)\";","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"nighoggDatatype"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy MM dd\");","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"    public final String expiryDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"nighoggDatatype"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"nighoggDatatype"},"content":"     * Constructs an {@code CoeExpiry}.","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"nighoggDatatype"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"nighoggDatatype"},"content":"     * @param coeExpiry A valid COE Expiry Date.","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"nighoggDatatype"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"nighoggDatatype"},"content":"    public CoeExpiry(String coeExpiry) {","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"nighoggDatatype"},"content":"        requireNonNull(coeExpiry);","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"nighoggDatatype"},"content":"        checkArgument(isValidCoeExpiry(coeExpiry), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"rajobasu"},"content":"        expiryDate \u003d coeExpiry;","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"nighoggDatatype"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"nighoggDatatype"},"content":"     * Returns if a given string is a valid COE Expiry Date.","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"nighoggDatatype"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"nighoggDatatype"},"content":"    public static boolean isValidCoeExpiry(String test) {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"nighoggDatatype"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"nighoggDatatype"},"content":"            LocalDate.parse(test, DATE_TIME_FORMATTER);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"nighoggDatatype"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"nighoggDatatype"},"content":"            return false;","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"nighoggDatatype"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"nighoggDatatype"},"content":"        return true;","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"nighoggDatatype"},"content":"    public LocalDate toDate() {","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"nighoggDatatype"},"content":"        return LocalDate.parse(expiryDate, DATE_TIME_FORMATTER);","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"nighoggDatatype"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"nighoggDatatype"},"content":"    public String toString() {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"rajobasu"},"content":"        return expiryDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"nighoggDatatype"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"nighoggDatatype"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"nighoggDatatype"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"nighoggDatatype"},"content":"                || (other instanceof CoeExpiry // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"rajobasu"},"content":"                \u0026\u0026 expiryDate.equals(((CoeExpiry) other).expiryDate)); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"nighoggDatatype"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"nighoggDatatype"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"rajobasu"},"content":"        return expiryDate.hashCode();","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"nighoggDatatype"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"nighoggDatatype":62,"rajobasu":5}},{"path":"src/main/java/seedu/address/model/customer/Customer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"import java.util.Map;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":" * Represents a customer in the address book. Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"rajobasu"},"content":" * immutable.","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":"public class Customer {","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"Shizheng001"},"content":"    private final Address address;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"nighoggDatatype"},"content":"    private final DateOfBirth dateOfBirth;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"rajobasu"},"content":"    private final Map\u003cCar, CoeExpiry\u003e carsOwned;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"    private final Set\u003cCar\u003e carsPreferred \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"nighoggDatatype"},"content":"    public Customer(Name name, Phone phone, Email email, Address address, DateOfBirth dateOfBirth,","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"                    Set\u003cTag\u003e tags, Map\u003cCar, CoeExpiry\u003e carsOwned, Set\u003cCar\u003e carsPreferred) {","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"Shizheng001"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"Shizheng001"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"nighoggDatatype"},"content":"        this.dateOfBirth \u003d dateOfBirth;","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"rajobasu"},"content":"        if (carsOwned \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"rajobasu"},"content":"            carsOwned \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"rajobasu"},"content":"        this.carsOwned \u003d carsOwned;","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"Shizheng001"},"content":"        if (carsPreferred !\u003d null) {","lastModifiedDate":"2021-04-02"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"            this.carsPreferred.addAll(carsPreferred);","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"Shizheng001"},"content":"    }","lastModifiedDate":"2021-04-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"Shizheng001"},"content":"    public Address getAddress() {","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"Shizheng001"},"content":"        return address;","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"Shizheng001"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"nighoggDatatype"},"content":"    public DateOfBirth getDateOfBirth() {","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"nighoggDatatype"},"content":"        return dateOfBirth;","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"rajobasu"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException} if modification is attempted.","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"rajobasu"},"content":"     * Returns an immutable Map of {car : corresponding CoeExpiry} key-value pairs","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"rajobasu"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"rajobasu"},"content":"     * @return - cars owned and their CoeExpiry","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"rajobasu"},"content":"    public Map\u003cCar, CoeExpiry\u003e getCarsOwned() {","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"rajobasu"},"content":"        return Collections.unmodifiableMap(carsOwned);","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"OhJunMing"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"OhJunMing"},"content":"     * Returns an mutable car set.","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"OhJunMing"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"OhJunMing"},"content":"    public Set\u003cCar\u003e getCarsPreferred() {","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"OhJunMing"},"content":"        return carsPreferred;","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"OhJunMing"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"rajobasu"},"content":"     * Returns true if both customer have the same name. This defines a weaker notion of equality between two","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"rajobasu"},"content":"     * customers.","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"rajobasu"},"content":"    public boolean isSameCustomer(Customer otherCustomer) {","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"rajobasu"},"content":"        if (otherCustomer \u003d\u003d this) {","lastModifiedDate":"2021-03-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"rajobasu"},"content":"        return otherCustomer !\u003d null","lastModifiedDate":"2021-03-12"},{"lineNumber":104,"author":{"gitId":"rajobasu"},"content":"            \u0026\u0026 otherCustomer.getName().equals(getName());","lastModifiedDate":"2021-03-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"rajobasu"},"content":"     * Returns true if both customers have the same identity and data fields. This defines a stronger notion of equality","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"rajobasu"},"content":"     * between two customers.","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"rajobasu"},"content":"        if (!(other instanceof Customer)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"rajobasu"},"content":"        Customer otherCustomer \u003d (Customer) other;","lastModifiedDate":"2021-03-12"},{"lineNumber":122,"author":{"gitId":"rajobasu"},"content":"        return otherCustomer.getName().equals(getName())","lastModifiedDate":"2021-03-12"},{"lineNumber":123,"author":{"gitId":"rajobasu"},"content":"            \u0026\u0026 otherCustomer.getPhone().equals(getPhone())","lastModifiedDate":"2021-03-12"},{"lineNumber":124,"author":{"gitId":"rajobasu"},"content":"            \u0026\u0026 otherCustomer.getEmail().equals(getEmail())","lastModifiedDate":"2021-03-12"},{"lineNumber":125,"author":{"gitId":"Shizheng001"},"content":"            \u0026\u0026 otherCustomer.getAddress().equals(getAddress())","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"nighoggDatatype"},"content":"            \u0026\u0026 otherCustomer.getDateOfBirth().equals(getDateOfBirth())","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"rajobasu"},"content":"            \u0026\u0026 otherCustomer.getTags().equals(getTags());","lastModifiedDate":"2021-03-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"Shizheng001"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":143,"author":{"gitId":"Shizheng001"},"content":"            .append(getEmail())","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"Shizheng001"},"content":"            .append(\"; Address: \")","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"nighoggDatatype"},"content":"            .append(getAddress())","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"nighoggDatatype"},"content":"            .append(\"; Date Of Birth: \")","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"nighoggDatatype"},"content":"            .append(getDateOfBirth());","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":154,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":155,"author":{"gitId":"rajobasu"},"content":"        if (!carsOwned.isEmpty()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":156,"author":{"gitId":"rajobasu"},"content":"            builder.append(\"; CarsOwned: \");","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"rajobasu"},"content":"            carsOwned.forEach((a, b) -\u003e builder.append(a + \" \"));","lastModifiedDate":"2021-03-16"},{"lineNumber":158,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":159,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"OhJunMing"},"content":"        Set\u003cCar\u003e cars \u003d getCarsPreferred();","lastModifiedDate":"2021-03-31"},{"lineNumber":161,"author":{"gitId":"OhJunMing"},"content":"        if (!cars.isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"OhJunMing"},"content":"            builder.append(\"; CarsPreferred:\");","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"OhJunMing"},"content":"            cars.forEach(builder::append);","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"OhJunMing"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":165,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nighoggDatatype":11,"Shizheng001":13,"rajobasu":42,"OhJunMing":15,"-":88}},{"path":"src/main/java/seedu/address/model/customer/DateOfBirth.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":" * Represents a Customer\u0027s DateOfBirth in the customer list. Guarantees: immutable; is valid as declared in {@link","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":" * #isValidDateOfBirth(String)}","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"public class DateOfBirth {","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Birth date should be of the format yyyy MM dd \"","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":"        + \"EG:(2011 07 06 for 6th July, 2011)\";","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"nighoggDatatype"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy MM dd\");","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"nighoggDatatype"},"content":"    public final String birthDate;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"nighoggDatatype"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"nighoggDatatype"},"content":"     * Constructs an {@code DateOfBirth}.","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"nighoggDatatype"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"nighoggDatatype"},"content":"     * @param dateOfBirth A valid date of birth.","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"nighoggDatatype"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"nighoggDatatype"},"content":"    public DateOfBirth(String dateOfBirth) {","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"nighoggDatatype"},"content":"        requireNonNull(dateOfBirth);","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"nighoggDatatype"},"content":"        checkArgument(isValidDateOfBirth(dateOfBirth), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"nighoggDatatype"},"content":"        birthDate \u003d dateOfBirth;","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"nighoggDatatype"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"nighoggDatatype"},"content":"     * Returns if a given string is a valid date of birth.","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"nighoggDatatype"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"nighoggDatatype"},"content":"    public static boolean isValidDateOfBirth(String test) {","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"nighoggDatatype"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"nighoggDatatype"},"content":"            LocalDate.parse(test, DATE_TIME_FORMATTER);","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"nighoggDatatype"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"nighoggDatatype"},"content":"            return false;","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"nighoggDatatype"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"nighoggDatatype"},"content":"        return true;","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"nighoggDatatype"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"nighoggDatatype"},"content":"    public String toString() {","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"nighoggDatatype"},"content":"        return birthDate;","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"nighoggDatatype"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"nighoggDatatype"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"nighoggDatatype"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"nighoggDatatype"},"content":"            || (other instanceof DateOfBirth // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"nighoggDatatype"},"content":"            \u0026\u0026 birthDate.equals(((DateOfBirth) other).birthDate)); // state check","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"nighoggDatatype"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"nighoggDatatype"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"nighoggDatatype"},"content":"        return birthDate.hashCode();","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"rajobasu"},"content":"    public String getBirthDate() {","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"rajobasu"},"content":"        return this.birthDate;","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"nighoggDatatype"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"nighoggDatatype":61,"rajobasu":6}},{"path":"src/main/java/seedu/address/model/customer/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":" * Represents a Customer\u0027s email in the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";","lastModifiedDate":"2018-02-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \") .\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. \"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    - be at least 2 characters long\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - start and end with alphanumeric characters\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - consist of alphanumeric characters, a period or a hyphen for the characters in between, if any.\";","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\"; // alphanumeric characters except underscore","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\"; // alphanumeric, period and hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]$\";","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\"","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + DOMAIN_FIRST_CHARACTER_REGEX + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX;","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"rajobasu"},"content":"    public String getEmailIdWithoutDomain() {","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"rajobasu"},"content":"        return this.value.split(\"\\\\.\")[0];","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rajobasu":5,"-":65}},{"path":"src/main/java/seedu/address/model/customer/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":" * Represents a Customer\u0027s name in the address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rajobasu":2,"-":57}},{"path":"src/main/java/seedu/address/model/customer/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":" * Tests that a {@code Customer}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cCustomer\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"rajobasu"},"content":"    public boolean test(Customer customer) {","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(customer.getName().fullName, keyword));","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"rajobasu":5,"-":26}},{"path":"src/main/java/seedu/address/model/customer/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":" * Represents a Customer\u0027s phone number in the address book. Guarantees: immutable; is valid as declared in {@link","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":" * #isValidPhone(String)}","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"rajobasu"},"content":"    public String getPhoneNumber() {","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"rajobasu"},"content":"        return value;","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rajobasu":6,"-":50}},{"path":"src/main/java/seedu/address/model/customer/UniqueCustomerList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.exceptions.CustomerNotFoundException;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.exceptions.DuplicateCustomerException;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":" * A list of customers that enforces uniqueness between its elements and does not allow nulls. A customer is considered","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"rajobasu"},"content":" * unique by comparing using {@code Customer#isSameCustomer(Customer)}. As such, adding and updating of customers uses","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"rajobasu"},"content":" * Customer#isSameCustomer(Customer) for equality so as to ensure that the customer being added or updated is unique in","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":" * terms of identity in the UniqueCustomerList. However, the removal of a customer uses Customer#equals(Object) so as to","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"rajobasu"},"content":" * ensure that the customer with exactly the same fields will be removed.","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"rajobasu"},"content":" * @see Customer#isSameCustomer(Customer)","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"rajobasu"},"content":"public class UniqueCustomerList implements Iterable\u003cCustomer\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"rajobasu"},"content":"    private final ObservableList\u003cCustomer\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"rajobasu"},"content":"    private final ObservableList\u003cCustomer\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"rajobasu"},"content":"     * Returns true if the list contains an equivalent customer as the given argument.","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"    public boolean contains(Customer toCheck) {","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"rajobasu"},"content":"        return internalList.stream().anyMatch(toCheck::isSameCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"     * Adds a customer to the list. The customer must not already exist in the list.","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"rajobasu"},"content":"    public void add(Customer toAdd) {","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"rajobasu"},"content":"            throw new DuplicateCustomerException();","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":51,"author":{"gitId":"rajobasu"},"content":"     * Replaces the customer {@code target} in the list with {@code editedCustomer}. {@code target} must exist in the","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"rajobasu"},"content":"     * list. The customer identity of {@code editedCustomer} must not be the same as another existing customer in the","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"rajobasu"},"content":"     * list.","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":55,"author":{"gitId":"rajobasu"},"content":"    public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"rajobasu"},"content":"        requireAllNonNull(target, editedCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"rajobasu"},"content":"            throw new CustomerNotFoundException();","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"rajobasu"},"content":"        if (!target.isSameCustomer(editedCustomer) \u0026\u0026 contains(editedCustomer)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"rajobasu"},"content":"            throw new DuplicateCustomerException();","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"rajobasu"},"content":"        internalList.set(index, editedCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"rajobasu"},"content":"     * Removes the equivalent customer from the list. The customer must exist in the list.","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"rajobasu"},"content":"    public void remove(Customer toRemove) {","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":76,"author":{"gitId":"rajobasu"},"content":"            throw new CustomerNotFoundException();","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"rajobasu"},"content":"    public void setCustomers(UniqueCustomerList replacement) {","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"rajobasu"},"content":"     * Replaces the contents of this list with {@code customers}. {@code customers} must not contain duplicate","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"rajobasu"},"content":"     * customers.","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"rajobasu"},"content":"    public void setCustomers(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"rajobasu"},"content":"        requireAllNonNull(customers);","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"rajobasu"},"content":"        if (!customersAreUnique(customers)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":92,"author":{"gitId":"rajobasu"},"content":"            throw new DuplicateCustomerException();","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"rajobasu"},"content":"        internalList.setAll(customers);","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"rajobasu"},"content":"    public ObservableList\u003cCustomer\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"rajobasu"},"content":"    public Iterator\u003cCustomer\u003e iterator() {","lastModifiedDate":"2021-03-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"rajobasu"},"content":"            || (other instanceof UniqueCustomerList // instanceof handles nulls","lastModifiedDate":"2021-03-12"},{"lineNumber":114,"author":{"gitId":"rajobasu"},"content":"            \u0026\u0026 internalList.equals(((UniqueCustomerList) other).internalList));","lastModifiedDate":"2021-03-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"rajobasu"},"content":"     * Returns true if {@code customers} contains only unique customers.","lastModifiedDate":"2021-03-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"rajobasu"},"content":"    private boolean customersAreUnique(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2021-03-12"},{"lineNumber":126,"author":{"gitId":"rajobasu"},"content":"        for (int i \u003d 0; i \u003c customers.size() - 1; i++) {","lastModifiedDate":"2021-03-12"},{"lineNumber":127,"author":{"gitId":"rajobasu"},"content":"            for (int j \u003d i + 1; j \u003c customers.size(); j++) {","lastModifiedDate":"2021-03-12"},{"lineNumber":128,"author":{"gitId":"rajobasu"},"content":"                if (customers.get(i).isSameCustomer(customers.get(j))) {","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rajobasu":48,"-":87}},{"path":"src/main/java/seedu/address/model/customer/exceptions/CustomerNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.model.customer.exceptions;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":" * Signals that the operation is unable to find the specified customer.","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"public class CustomerNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"rajobasu":6}},{"path":"src/main/java/seedu/address/model/customer/exceptions/DuplicateCustomerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.model.customer.exceptions;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":" * Signals that the operation will result in duplicate Customers (Customers are considered duplicates if they have the","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":" * same identity).","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"public class DuplicateCustomerException extends RuntimeException {","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"    public DuplicateCustomerException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"        super(\"Operation would result in duplicate customers\");","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"rajobasu":11}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"import seedu.address.model.customer.Address;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"import seedu.address.model.customer.Car;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"import seedu.address.model.customer.DateOfBirth;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"import seedu.address.model.customer.Email;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"import seedu.address.model.customer.Name;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"import seedu.address.model.customer.Phone;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":"//TODO : change the sample customers carsOwned to something meaningful","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"rajobasu"},"content":"    public static Customer[] getSampleCustomers() {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"rajobasu"},"content":"        return new Customer[] {","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"rajobasu"},"content":"            new Customer(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"nighoggDatatype"},"content":"                        new Address(\"Blk 30 Geylang Street 29, #06-40\"), new DateOfBirth(\"2000 07 21\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"                        getTagSet(\"friends\"), null, getCarSet(\"Tesla+sedan\", \"Honda+Sedan\")),","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"rajobasu"},"content":"            new Customer(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"nighoggDatatype"},"content":"                        new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new DateOfBirth(\"1999 06 11\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"                        getTagSet(\"colleagues\", \"friends\"), null,","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"                        getCarSet(\"Toyota+Sedan\", \"Honda+Sedan\")),","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"rajobasu"},"content":"            new Customer(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"nighoggDatatype"},"content":"                        new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new DateOfBirth(\"1981 12 01\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"                        getTagSet(\"neighbours\"), null,","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"                        getCarSet(\"Toyota+Sedan\", \"Honda+Sedan\", \"Tesla+Ev\")),","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"            new Customer(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"nighoggDatatype"},"content":"                        new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new DateOfBirth(\"1991 07 30\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"                        getTagSet(\"family\"), null, null),","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"rajobasu"},"content":"            new Customer(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"nighoggDatatype"},"content":"                        new Address(\"Blk 47 Tampines Street 20, #17-35\"), new DateOfBirth(\"1983 02 13\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"                        getTagSet(\"classmates\"), null, null),","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"rajobasu"},"content":"            new Customer(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"nighoggDatatype"},"content":"                        new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new DateOfBirth(\"2000 11 11\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"                        getTagSet(\"colleagues\"), null, null)","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":56,"author":{"gitId":"rajobasu"},"content":"        for (Customer sampleCustomer : getSampleCustomers()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"rajobasu"},"content":"            sampleAb.addCustomer(sampleCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"OhJunMing"},"content":"     * Returns a car set containing the list of strings given.","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"OhJunMing"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"OhJunMing"},"content":"    public static Set\u003cCar\u003e getCarSet(String... strings) {","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"OhJunMing"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"OhJunMing"},"content":"                .map(x -\u003e parseCar(x))","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"OhJunMing"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"OhJunMing"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"OhJunMing"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"OhJunMing"},"content":"     * Parses a {@code String car} into a {@code Car}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"OhJunMing"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"OhJunMing"},"content":"    public static Car parseCar(String car) {","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"OhJunMing"},"content":"        assert car !\u003d null : \"carPreferred should not be null\";","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"OhJunMing"},"content":"        String trimmedCar \u003d car.trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"OhJunMing"},"content":"        String[] carDetails \u003d trimmedCar.split(\"\\\\+\");","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"OhJunMing"},"content":"        String carBrand \u003d carDetails[0].trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"OhJunMing"},"content":"        String carType \u003d carDetails[1].trim();","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"OhJunMing"},"content":"        return new Car(carBrand, carType);","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"OhJunMing"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"nighoggDatatype":6,"rajobasu":12,"OhJunMing":39,"-":33}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedCar.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Car;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"public class JsonAdaptedCar {","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"    private final String carBrand;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"    private final String carType;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"rajobasu"},"content":"     * Constructs a {@code JsonAdaptedCar} with the given {@code carId}.","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"rajobasu"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"    public JsonAdaptedCar(@JsonProperty(\"carBrand\") String carBrand, @JsonProperty(\"carType\") String carType) {","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"        this.carBrand \u003d carBrand;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"        this.carType \u003d carType;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"rajobasu"},"content":"     * Converts a given {@code Car} into this class for Jackson use.","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"rajobasu"},"content":"    public JsonAdaptedCar(Car source) {","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"rajobasu"},"content":"        this.carBrand \u003d source.getCarBrand();","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"rajobasu"},"content":"        this.carType \u003d source.getCarType();","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"    public String getCarBrand() {","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"        return carBrand;","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"    public String getCarType() {","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"        return carType;","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"     * Converts this Jackson-friendly adapted car object into the model\u0027s {@code Car} object.","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"rajobasu"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"rajobasu"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted car.","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"rajobasu"},"content":"    public Car toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"        if (!Car.isValidCar(carBrand, carType)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"rajobasu"},"content":"            throw new IllegalValueException(Car.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"        return new Car(carBrand, carType);","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"rajobasu"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"rajobasu":37,"OhJunMing":15}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedCoeExpiry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.CoeExpiry;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"rajobasu"},"content":"public class JsonAdaptedCoeExpiry {","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":"    private final String expiryDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"rajobasu"},"content":"     * Constructs a {@code JsonAdaptedCoeExpiry} with the given {@code expiryDate}.","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"rajobasu"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"rajobasu"},"content":"    public JsonAdaptedCoeExpiry(String expiryDate) {","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"rajobasu"},"content":"     * Converts a given {@code CoeExpiry} into this class for Jackson use.","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"rajobasu"},"content":"    public JsonAdaptedCoeExpiry(CoeExpiry source) {","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"rajobasu"},"content":"        expiryDate \u003d source.expiryDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"rajobasu"},"content":"    @JsonValue","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"rajobasu"},"content":"    public String getCoeExpiryDate() {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"rajobasu"},"content":"        return expiryDate;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"     * Converts this Jackson-friendly adapted CoeExpiry object into the model\u0027s {@code CoeExpiry} object.","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"rajobasu"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"rajobasu"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted CoeExpiry.","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"rajobasu"},"content":"    public CoeExpiry toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"rajobasu"},"content":"        if (!CoeExpiry.isValidCoeExpiry(expiryDate)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"rajobasu"},"content":"        return new CoeExpiry(expiryDate);","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"rajobasu"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"rajobasu":45}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedCustomer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"import java.util.Map;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.model.customer.Address;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Car;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.CoeExpiry;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"nighoggDatatype"},"content":"import seedu.address.model.customer.DateOfBirth;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Email;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Name;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Phone;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"rajobasu"},"content":"//TODO: need to change this, but not needed immediately since it is more for testing.","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"rajobasu"},"content":"// need to include the CarsOwned tests as well. need to do in v1.2b","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"rajobasu"},"content":" * Jackson-friendly version of {@link Customer}.","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"rajobasu"},"content":"class JsonAdaptedCustomer {","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"rajobasu"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Customer\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"    public static final String CAR_COE_EXPIRY_LENGTH_MISMATCH \u003d \"The number of carsOwned and coeexpiries are not same\";","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"Shizheng001"},"content":"    private final String address;","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"nighoggDatatype"},"content":"    private final String dateOfBirth;","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"    private final List\u003cJsonAdaptedCar\u003e carsOwned \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"rajobasu"},"content":"    private final List\u003cJsonAdaptedCoeExpiry\u003e coeExpiries \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"    private final List\u003cJsonAdaptedCar\u003e carsPreferred \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"Shizheng001"},"content":"     * Constructs a {@code JsonAdaptedCustomer} with the given person details.","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"rajobasu"},"content":"    public JsonAdaptedCustomer(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"Shizheng001"},"content":"                               @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"nighoggDatatype"},"content":"                               @JsonProperty(\"dateOfBirth\") String dateOfBirth,","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"rajobasu"},"content":"                               @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"                               @JsonProperty(\"carsOwned\") List\u003cJsonAdaptedCar\u003e carsOwned,","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"                               @JsonProperty(\"coeExpiries\") List\u003cJsonAdaptedCoeExpiry\u003e coeExpiries,","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":"                               @JsonProperty(\"carsPreferred\") List\u003cJsonAdaptedCar\u003e carsPreferred) {","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"Shizheng001"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"nighoggDatatype"},"content":"        this.dateOfBirth \u003d dateOfBirth;","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"        if (carsOwned !\u003d null) {","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"            this.carsOwned.addAll(carsOwned);","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"rajobasu"},"content":"        if (coeExpiries !\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"rajobasu"},"content":"            this.coeExpiries.addAll(coeExpiries);","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":"        if (carsPreferred !\u003d null) {","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"OhJunMing"},"content":"            this.carsPreferred.addAll(carsPreferred);","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"OhJunMing"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"Shizheng001"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"rajobasu"},"content":"    public JsonAdaptedCustomer(Customer source) {","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"Shizheng001"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"nighoggDatatype"},"content":"        dateOfBirth \u003d source.getDateOfBirth().birthDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"OhJunMing"},"content":"        carsOwned.addAll(source.getCarsOwned().keySet().stream().map(JsonAdaptedCar::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"rajobasu"},"content":"        coeExpiries.addAll(","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"rajobasu"},"content":"            source.getCarsOwned().values().stream().map(JsonAdaptedCoeExpiry::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"OhJunMing"},"content":"        carsPreferred.addAll(source.getCarsPreferred().stream()","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"OhJunMing"},"content":"                .map(JsonAdaptedCar::new)","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"OhJunMing"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"OhJunMing"},"content":"     * Converts this Jackson-friendly adapted customer object into the model\u0027s {@code Customer} object.","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"OhJunMing"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted customer.","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"rajobasu"},"content":"    public Customer toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-12"},{"lineNumber":102,"author":{"gitId":"rajobasu"},"content":"        final List\u003cTag\u003e customerTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"rajobasu"},"content":"            customerTags.add(tag.toModelType());","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"OhJunMing"},"content":"        final List\u003cCar\u003e customerCarsPreferred \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"OhJunMing"},"content":"        for (JsonAdaptedCar car: carsPreferred) {","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"OhJunMing"},"content":"            customerCarsPreferred.add(car.toModelType());","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"OhJunMing"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"OhJunMing"},"content":"        final Map\u003cCar, CoeExpiry\u003e modelCarsOwned \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"OhJunMing"},"content":"        if (carsOwned.size() !\u003d coeExpiries.size()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"rajobasu"},"content":"            throw new IllegalValueException(CAR_COE_EXPIRY_LENGTH_MISMATCH);","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"OhJunMing"},"content":"        var iter1 \u003d carsOwned.iterator();","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"rajobasu"},"content":"        var iter2 \u003d coeExpiries.iterator();","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"rajobasu"},"content":"        for (; iter1.hasNext() \u0026\u0026 iter2.hasNext(); ) {","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"rajobasu"},"content":"            var car \u003d iter1.next().toModelType();","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"rajobasu"},"content":"            var coeExpiry \u003d iter2.next().toModelType();","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"OhJunMing"},"content":"            modelCarsOwned.put(car, coeExpiry);","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"Shizheng001"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":150,"author":{"gitId":"Shizheng001"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":151,"author":{"gitId":"Shizheng001"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":152,"author":{"gitId":"Shizheng001"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":153,"author":{"gitId":"Shizheng001"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":154,"author":{"gitId":"Shizheng001"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":155,"author":{"gitId":"Shizheng001"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2021-03-16"},{"lineNumber":156,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"nighoggDatatype"},"content":"        if (dateOfBirth \u003d\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"nighoggDatatype"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"nighoggDatatype"},"content":"                    DateOfBirth.class.getSimpleName()));","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"nighoggDatatype"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":161,"author":{"gitId":"nighoggDatatype"},"content":"        if (!DateOfBirth.isValidDateOfBirth(dateOfBirth)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"nighoggDatatype"},"content":"            throw new IllegalValueException(DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":163,"author":{"gitId":"nighoggDatatype"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"nighoggDatatype"},"content":"        final DateOfBirth modelDateOfBirth \u003d new DateOfBirth(dateOfBirth);","lastModifiedDate":"2021-03-29"},{"lineNumber":165,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"rajobasu"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(customerTags);","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"OhJunMing"},"content":"        final Set\u003cCar\u003e modelCarsPreferred \u003d new HashSet\u003c\u003e(customerCarsPreferred);","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"OhJunMing"},"content":"        return new Customer(modelName, modelPhone, modelEmail, modelAddress, modelDateOfBirth, modelTags,","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"OhJunMing"},"content":"                modelCarsOwned, modelCarsPreferred);","lastModifiedDate":"2021-03-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"nighoggDatatype":14,"Shizheng001":16,"rajobasu":36,"OhJunMing":29,"-":77}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"rajobasu"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOMER \u003d \"Customers list contains duplicate customer(s).\";","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"rajobasu"},"content":"    private final List\u003cJsonAdaptedCustomer\u003e customers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"rajobasu"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given customers.","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"rajobasu"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"customers\") List\u003cJsonAdaptedCustomer\u003e customers) {","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"rajobasu"},"content":"        this.customers.addAll(customers);","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"        customers.addAll(source.getCustomerList().stream().map(JsonAdaptedCustomer::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"rajobasu"},"content":"        for (JsonAdaptedCustomer jsonAdaptedCustomer : customers) {","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"rajobasu"},"content":"            Customer customer \u003d jsonAdaptedCustomer.toModelType();","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"rajobasu"},"content":"            if (addressBook.hasCustomer(customer)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"rajobasu"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"rajobasu"},"content":"            addressBook.addCustomer(customer);","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"rajobasu":12,"-":48}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":"    private final ArrayList\u003cString\u003e previousCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"rajobasu"},"content":"    private int past \u003d 0;","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"rajobasu"},"content":"        String commandText \u003d commandTextField.getText().trim();","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":48,"author":{"gitId":"rajobasu"},"content":"        if (commandText.trim().startsWith(\"/up\")) {","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"rajobasu"},"content":"            past++;","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"rajobasu"},"content":"            if (past \u003e\u003d previousCommands.size()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"rajobasu"},"content":"                commandTextField.setText(\"!!!\");","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"rajobasu"},"content":"                setStyleToIndicateCommandFailure();","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"rajobasu"},"content":"            } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"rajobasu"},"content":"                commandTextField.setText(previousCommands.get(previousCommands.size() - past));","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"rajobasu"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"rajobasu"},"content":"            return;","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"rajobasu"},"content":"        past \u003d 0;","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"rajobasu"},"content":"        previousCommands.add(commandText);","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"rajobasu":20,"-":83}},{"path":"src/main/java/seedu/address/ui/CustomerCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"import java.util.Map;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Car;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.CoeExpiry;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"rajobasu"},"content":" * An UI component that displays information of a {@code Customer}.","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"rajobasu"},"content":"public class CustomerCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"    private static final String FXML \u003d \"CustomerListCard.fxml\";","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"    private static final String DATE_OF_BIRTH \u003d \"DOB: \";","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"rajobasu"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX. As a consequence, UI","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"rajobasu"},"content":"     * elements\u0027 variable names cannot be set to such keywords or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"rajobasu"},"content":"    public final Customer customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"Shizheng001"},"content":"    private Label address;","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Shizheng001"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"nighoggDatatype"},"content":"    private Label dateOfBirth;","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"nighoggDatatype"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"    private Label carsOwned;","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"    @FXML","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"    private Label carsPreferred;","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"rajobasu"},"content":"    @FXML","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"rajobasu"},"content":"     * Creates a {@code CustomerCode} with the given {@code Customer} and index to display.","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"rajobasu"},"content":"    public CustomerCard(Customer customer, int displayedIndex) {","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"rajobasu"},"content":"        this.customer \u003d customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"rajobasu"},"content":"        name.setText(customer.getName().fullName);","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"rajobasu"},"content":"        phone.setText(customer.getPhone().value);","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"rajobasu"},"content":"        email.setText(customer.getEmail().value);","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"rajobasu"},"content":"        address.setText(customer.getAddress().value);","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"        dateOfBirth.setText(DATE_OF_BIRTH + customer.getDateOfBirth().birthDate);","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"rajobasu"},"content":"        customer.getTags().stream()","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":"        carsOwned.setText(getCarsAsTextRepresentation(customer.getCarsOwned()));","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"OhJunMing"},"content":"        carsPreferred.setText(getCarsPreferredAsTextRepresentation(customer.getCarsPreferred()));","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"OhJunMing"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"OhJunMing"},"content":"     * Returns carsOwned attribute as a String.","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"OhJunMing"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"OhJunMing"},"content":"     * @param cars","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"OhJunMing"},"content":"     * @return String","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"OhJunMing"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"rajobasu"},"content":"    private String getCarsAsTextRepresentation(Map\u003cCar, CoeExpiry\u003e cars) {","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"OhJunMing"},"content":"        StringBuilder sb \u003d new StringBuilder(\"CarsOwned: \");","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"rajobasu"},"content":"        if (cars \u003d\u003d null || cars.isEmpty()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"rajobasu"},"content":"            sb.append(\"None\");","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"rajobasu"},"content":"        } else {","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"rajobasu"},"content":"        cars.keySet().forEach(x -\u003e sb.append(x + \" \"));","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"rajobasu"},"content":"        return sb.toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"OhJunMing"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"OhJunMing"},"content":"     * Returns carsPreferred attribute as a String.","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"OhJunMing"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"OhJunMing"},"content":"     * @param cars","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"OhJunMing"},"content":"     * @return String","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"OhJunMing"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"OhJunMing"},"content":"    private String getCarsPreferredAsTextRepresentation(Set\u003cCar\u003e cars) {","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"OhJunMing"},"content":"        StringBuilder sb \u003d new StringBuilder(\"CarsPreferred: \");","lastModifiedDate":"2021-03-31"},{"lineNumber":97,"author":{"gitId":"OhJunMing"},"content":"        if (cars \u003d\u003d null || cars.isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":98,"author":{"gitId":"OhJunMing"},"content":"            sb.append(\"None\");","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"OhJunMing"},"content":"        } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"OhJunMing"},"content":"            cars.forEach(x -\u003e sb.append(x + \" \"));","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"OhJunMing"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":102,"author":{"gitId":"OhJunMing"},"content":"        return sb.toString();","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"OhJunMing"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":114,"author":{"gitId":"rajobasu"},"content":"        if (!(other instanceof CustomerCard)) {","lastModifiedDate":"2021-03-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":119,"author":{"gitId":"rajobasu"},"content":"        CustomerCard card \u003d (CustomerCard) other;","lastModifiedDate":"2021-03-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":121,"author":{"gitId":"rajobasu"},"content":"            \u0026\u0026 customer.equals(card.customer);","lastModifiedDate":"2021-03-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"nighoggDatatype":2,"Shizheng001":2,"rajobasu":32,"OhJunMing":31,"-":56}},{"path":"src/main/java/seedu/address/ui/CustomerListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"rajobasu"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"rajobasu"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"rajobasu"},"content":" * Panel containing the list of customers.","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"rajobasu"},"content":"public class CustomerListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"rajobasu"},"content":"    private static final String FXML \u003d \"CustomerListPanel.fxml\";","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CustomerListPanel.class);","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":"    @FXML","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"    private ListView\u003cCustomer\u003e customerListView;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"rajobasu"},"content":"     * Creates a {@code CustomerListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"rajobasu"},"content":"    public CustomerListPanel(ObservableList\u003cCustomer\u003e customerList) {","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"rajobasu"},"content":"        super(FXML);","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"rajobasu"},"content":"        customerListView.setItems(customerList);","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"rajobasu"},"content":"        customerListView.setCellFactory(listView -\u003e new CustomerListViewCell());","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"rajobasu"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Customer} using a {@code CustomerCard}.","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"rajobasu"},"content":"    class CustomerListViewCell extends ListCell\u003cCustomer\u003e {","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"rajobasu"},"content":"        @Override","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"rajobasu"},"content":"        protected void updateItem(Customer customer, boolean empty) {","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"rajobasu"},"content":"            super.updateItem(customer, empty);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"            if (empty || customer \u003d\u003d null) {","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"rajobasu"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"rajobasu"},"content":"                setText(null);","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"rajobasu"},"content":"            } else {","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"rajobasu"},"content":"                setGraphic(new CustomerCard(customer, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"rajobasu"},"content":"            }","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"rajobasu"},"content":"        }","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"rajobasu"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"rajobasu":49}},{"path":"src/main/java/seedu/address/ui/EmailWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"import java.util.Properties;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":"import javax.mail.MessagingException;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":"import javax.mail.PasswordAuthentication;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":"import javax.mail.Session;","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"Shizheng001"},"content":"import javax.mail.Transport;","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Shizheng001"},"content":"import javax.mail.internet.InternetAddress;","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":"import javax.mail.internet.MimeMessage;","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"Shizheng001"},"content":"import javafx.scene.control.PasswordField;","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"Shizheng001"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Shizheng001"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"Shizheng001"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"Shizheng001"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"Shizheng001"},"content":"public class EmailWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"Shizheng001"},"content":"    private static final String FXML \u003d \"EmailWindow.fxml\";","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"Shizheng001"},"content":"    private static final String ACCESS_URL \u003d \"https://myaccount.google.com/intro/security\";","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"Shizheng001"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(EmailWindow.class);","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"Shizheng001"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"Shizheng001"},"content":"    private TextField emailToField;","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"Shizheng001"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"Shizheng001"},"content":"    private TextField emailFromField;","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"Shizheng001"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"Shizheng001"},"content":"    private TextArea emailMessageField;","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"Shizheng001"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"Shizheng001"},"content":"    private TextField emailSubjectField;","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"Shizheng001"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"Shizheng001"},"content":"    private PasswordField emailPasswordField;","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"Shizheng001"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"Shizheng001"},"content":"    private Label sentBoolValue;","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"Shizheng001"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"Shizheng001"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"Shizheng001"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"Shizheng001"},"content":"     * @param root Stage to use as the root of the EmailWindow.","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"Shizheng001"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"Shizheng001"},"content":"    public EmailWindow(Stage root) {","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"Shizheng001"},"content":"        super(FXML, root);","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"Shizheng001"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"Shizheng001"},"content":"    public EmailWindow() {","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"Shizheng001"},"content":"        this(new Stage());","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"Shizheng001"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"Shizheng001"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"Shizheng001"},"content":"     * Shows the help window.","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"Shizheng001"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"Shizheng001"},"content":"     * @throws IllegalStateException \u003cul\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"Shizheng001"},"content":"     * \u003cli\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"Shizheng001"},"content":"     *     if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"Shizheng001"},"content":"     * \u003c/li\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"Shizheng001"},"content":"     * \u003cli\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"Shizheng001"},"content":"     *     if this method is called during animation or layout processing.","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"Shizheng001"},"content":"     * \u003c/li\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"Shizheng001"},"content":"     * \u003cli\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"Shizheng001"},"content":"     *     if this method is called on the primary stage.","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"Shizheng001"},"content":"     * \u003c/li\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":65,"author":{"gitId":"Shizheng001"},"content":"     * \u003cli\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"Shizheng001"},"content":"     *     if {@code dialogStage} is already showing.","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"Shizheng001"},"content":"     * \u003c/li\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"Shizheng001"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"Shizheng001"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"Shizheng001"},"content":"    public void show() {","lastModifiedDate":"2021-04-01"},{"lineNumber":71,"author":{"gitId":"Shizheng001"},"content":"        logger.fine(\"Showing email page\");","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"Shizheng001"},"content":"        getRoot().show();","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"Shizheng001"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"Shizheng001"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"Shizheng001"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"Shizheng001"},"content":"     * Returns true if the email window is currently being shown.","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"Shizheng001"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"Shizheng001"},"content":"    public boolean isShowing() {","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"Shizheng001"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2021-04-01"},{"lineNumber":81,"author":{"gitId":"Shizheng001"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":83,"author":{"gitId":"Shizheng001"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":84,"author":{"gitId":"Shizheng001"},"content":"     * Hides the email window.","lastModifiedDate":"2021-04-01"},{"lineNumber":85,"author":{"gitId":"Shizheng001"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":86,"author":{"gitId":"Shizheng001"},"content":"    public void hide() {","lastModifiedDate":"2021-04-01"},{"lineNumber":87,"author":{"gitId":"Shizheng001"},"content":"        getRoot().hide();","lastModifiedDate":"2021-04-01"},{"lineNumber":88,"author":{"gitId":"Shizheng001"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"Shizheng001"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"Shizheng001"},"content":"     * Focuses on the email window.","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"Shizheng001"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"Shizheng001"},"content":"    public void focus() {","lastModifiedDate":"2021-04-01"},{"lineNumber":94,"author":{"gitId":"Shizheng001"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2021-04-01"},{"lineNumber":95,"author":{"gitId":"Shizheng001"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":96,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":97,"author":{"gitId":"Shizheng001"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":98,"author":{"gitId":"Shizheng001"},"content":"     *","lastModifiedDate":"2021-04-02"},{"lineNumber":99,"author":{"gitId":"Shizheng001"},"content":"     *  Sends an email to the desired address.","lastModifiedDate":"2021-04-01"},{"lineNumber":100,"author":{"gitId":"Shizheng001"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    //@@author TheCodingByte","lastModifiedDate":"2021-04-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/TheCodingByte/SendEmailJFX","lastModifiedDate":"2021-04-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void sendEmail() {","lastModifiedDate":"2021-04-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String to \u003d emailToField.getText();","lastModifiedDate":"2021-04-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String from \u003d emailFromField.getText();","lastModifiedDate":"2021-04-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String host \u003d \"smtp.gmail.com\";","lastModifiedDate":"2021-04-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final String username \u003d emailFromField.getText();","lastModifiedDate":"2021-04-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final String password \u003d emailPasswordField.getText();","lastModifiedDate":"2021-04-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        //setup mail server","lastModifiedDate":"2021-04-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Properties props \u003d System.getProperties();","lastModifiedDate":"2021-04-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        props.put(\"mail.smtp.auth\", \"true\");","lastModifiedDate":"2021-04-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        props.put(\"mail.smtp.starttls.enable\", \"true\");","lastModifiedDate":"2021-04-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        props.put(\"mail.smtp.host\", host);","lastModifiedDate":"2021-04-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        props.put(\"mail.smtp.port\", \"587\");","lastModifiedDate":"2021-04-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Session session \u003d Session.getDefaultInstance(props, new javax.mail.Authenticator() {","lastModifiedDate":"2021-04-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2021-04-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            protected PasswordAuthentication getPasswordAuthentication() {","lastModifiedDate":"2021-04-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                return new PasswordAuthentication(username, password);","lastModifiedDate":"2021-04-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2021-04-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            //create mail","lastModifiedDate":"2021-04-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            MimeMessage m \u003d new MimeMessage(session);","lastModifiedDate":"2021-04-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            m.setFrom(new InternetAddress(from));","lastModifiedDate":"2021-04-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            m.addRecipient(MimeMessage.RecipientType.TO, new InternetAddress(to));","lastModifiedDate":"2021-04-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            m.setSubject(emailSubjectField.getText());","lastModifiedDate":"2021-04-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            m.setText(emailMessageField.getText());","lastModifiedDate":"2021-04-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            //send mail","lastModifiedDate":"2021-04-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            Transport.send(m);","lastModifiedDate":"2021-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            sentBoolValue.setVisible(true);","lastModifiedDate":"2021-04-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            System.out.println(\"Message sent!\");","lastModifiedDate":"2021-04-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        } catch (MessagingException e) {","lastModifiedDate":"2021-04-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-04-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    //@@author TheCodingByte","lastModifiedDate":"2021-04-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Copies the URL to the Google Security page to the clipboard for user to enable login access from the app.","lastModifiedDate":"2021-04-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void enableAccess() {","lastModifiedDate":"2021-04-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2021-04-01"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2021-04-01"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        url.putString(ACCESS_URL);","lastModifiedDate":"2021-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2021-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Shizheng001":100,"-":56}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Shizheng001"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103t-w12-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-04-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Shizheng001":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"    private CustomerListPanel customerListPanel;","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"Shizheng001"},"content":"    private EmailWindow emailWindow;","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"Shizheng001"},"content":"    private MenuItem emailMenuItem;","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"rajobasu"},"content":"    private StackPane customerListPanelPlaceholder;","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"Shizheng001"},"content":"    public MainWindow(Stage primaryStage, Logic logic) throws Exception {","lastModifiedDate":"2021-04-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"Shizheng001"},"content":"        emailWindow \u003d new EmailWindow();","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"rajobasu"},"content":"        customerListPanel \u003d new CustomerListPanel(logic.getFilteredCustomerList());","lastModifiedDate":"2021-03-12"},{"lineNumber":119,"author":{"gitId":"rajobasu"},"content":"        customerListPanelPlaceholder.getChildren().add(customerListPanel.getRoot());","lastModifiedDate":"2021-03-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"Shizheng001"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":156,"author":{"gitId":"Shizheng001"},"content":"     * Opens the email window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2021-04-01"},{"lineNumber":157,"author":{"gitId":"Shizheng001"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":158,"author":{"gitId":"Shizheng001"},"content":"    @FXML","lastModifiedDate":"2021-04-01"},{"lineNumber":159,"author":{"gitId":"Shizheng001"},"content":"    public void handleEmail() {","lastModifiedDate":"2021-04-01"},{"lineNumber":160,"author":{"gitId":"Shizheng001"},"content":"        if (!emailWindow.isShowing()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":161,"author":{"gitId":"Shizheng001"},"content":"            emailWindow.show();","lastModifiedDate":"2021-04-01"},{"lineNumber":162,"author":{"gitId":"Shizheng001"},"content":"        } else {","lastModifiedDate":"2021-04-01"},{"lineNumber":163,"author":{"gitId":"Shizheng001"},"content":"            emailWindow.focus();","lastModifiedDate":"2021-04-01"},{"lineNumber":164,"author":{"gitId":"Shizheng001"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":165,"author":{"gitId":"Shizheng001"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":166,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":183,"author":{"gitId":"rajobasu"},"content":"    public CustomerListPanel getCustomerListPanel() {","lastModifiedDate":"2021-03-12"},{"lineNumber":184,"author":{"gitId":"rajobasu"},"content":"        return customerListPanel;","lastModifiedDate":"2021-03-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"Shizheng001"},"content":"            if (commandResult.isEmail()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":203,"author":{"gitId":"Shizheng001"},"content":"                handleEmail();","lastModifiedDate":"2021-04-01"},{"lineNumber":204,"author":{"gitId":"Shizheng001"},"content":"            }","lastModifiedDate":"2021-04-01"},{"lineNumber":205,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Shizheng001":21,"rajobasu":6,"-":190}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"Shizheng001"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/car_leads_icon.png\";","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Shizheng001":1,"-":88}},{"path":"src/main/resources/view/CustomerListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"nighoggDatatype"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"nighoggDatatype"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"nighoggDatatype"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"nighoggDatatype"},"content":"      \u003cLabel fx:id\u003d\"dateOfBirth\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dateOfBirth\" /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"      \u003cLabel fx:id\u003d\"carsOwned\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$carsOwned\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"      \u003cLabel fx:id\u003d\"carsPreferred\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$carsPreferred\" /\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"nighoggDatatype"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"nighoggDatatype"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"nighoggDatatype"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nighoggDatatype":9,"OhJunMing":2,"-":32}},{"path":"src/main/resources/view/CustomerListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"  \u003cListView fx:id\u003d\"customerListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rajobasu":1,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"rajobasu"},"content":"#filterField, #customerListPanel, #customerWebpage {","lastModifiedDate":"2021-03-12"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"rajobasu":1,"-":351}},{"path":"src/main/resources/view/EmailWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":"\u003c?import javafx.scene.control.PasswordField?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"Shizheng001"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":9,"author":{"gitId":"Shizheng001"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Shizheng001"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"Shizheng001"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Email\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":"   \u003cscene\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"Shizheng001"},"content":"      \u003cScene\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":16,"author":{"gitId":"Shizheng001"},"content":"         \u003croot\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"Shizheng001"},"content":"            \u003cAnchorPane prefHeight\u003d\"423.0\" prefWidth\u003d\"600.0\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"Shizheng001"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"Shizheng001"},"content":"                    \u003cLabel layoutX\u003d\"94.0\" layoutY\u003d\"18.0\" text\u003d\"Send to\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"Shizheng001"},"content":"                    \u003cTextField fx:id\u003d\"emailToField\" layoutX\u003d\"217.0\" layoutY\u003d\"13.0\" prefHeight\u003d\"27.0\" prefWidth\u003d\"200.0\" promptText\u003d\"Example@example.com\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"Shizheng001"},"content":"                    \u003cLabel layoutX\u003d\"94.0\" layoutY\u003d\"57.0\" text\u003d\"Send from\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"Shizheng001"},"content":"                    \u003cTextField fx:id\u003d\"emailFromField\" layoutX\u003d\"217.0\" layoutY\u003d\"52.0\" prefHeight\u003d\"27.0\" prefWidth\u003d\"200.0\" promptText\u003d\"Example@gmail.com\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"Shizheng001"},"content":"                    \u003cLabel layoutX\u003d\"433.0\" layoutY\u003d\"53.0\" text\u003d\"Please use gmail only\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"Shizheng001"},"content":"                    \u003cLabel layoutX\u003d\"94.0\" layoutY\u003d\"92.0\" text\u003d\"Password\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"Shizheng001"},"content":"                    \u003cPasswordField fx:id\u003d\"emailPasswordField\" layoutX\u003d\"217.0\" layoutY\u003d\"87.0\" prefHeight\u003d\"27.0\" prefWidth\u003d\"200.0\" promptText\u003d\"Abcd@1234\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"Shizheng001"},"content":"                    \u003cLabel layoutX\u003d\"94.0\" layoutY\u003d\"144.0\" text\u003d\"Subject\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":27,"author":{"gitId":"Shizheng001"},"content":"                    \u003cTextField fx:id\u003d\"emailSubjectField\" layoutX\u003d\"217.0\" layoutY\u003d\"139.0\" prefHeight\u003d\"27.0\" prefWidth\u003d\"200.0\" promptText\u003d\"New Arrival\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"Shizheng001"},"content":"                    \u003cLabel layoutX\u003d\"94.0\" layoutY\u003d\"207.0\" text\u003d\"Message\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"Shizheng001"},"content":"                    \u003cTextArea fx:id\u003d\"emailMessageField\" layoutX\u003d\"217.0\" layoutY\u003d\"186.0\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" text\u003d\"Good Day, a car of your preference has newly arrived! Please feel free to contact me if you are interested in viewing!\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"Shizheng001"},"content":"                    \u003cButton fx:id\u003d\"sendEmailButton\" layoutX\u003d\"492.0\" layoutY\u003d\"259.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#sendEmail\" text\u003d\"Send\" textFill\u003d\"#121212\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"Shizheng001"},"content":"                    \u003cLabel fx:id\u003d\"sentBoolValue\" layoutX\u003d\"474.0\" layoutY\u003d\"338.0\" text\u003d\"Message Sent!\" visible\u003d\"false\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"Shizheng001"},"content":"                  \u003cLabel layoutX\u003d\"434.0\" layoutY\u003d\"62.0\" prefHeight\u003d\"118.0\" prefWidth\u003d\"143.0\" text\u003d\"If unable to send, please turn on \u0026quot;allow less secured apps access feature on google\" textFill\u003d\"#0062ff\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"Shizheng001"},"content":"                  \u003cButton fx:id\u003d\"enableAccessButton\" layoutX\u003d\"428.0\" layoutY\u003d\"161.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#enableAccess\" prefHeight\u003d\"26.0\" prefWidth\u003d\"149.0\" text\u003d\"URL to google security\" textFill\u003d\"#121212\"\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"Shizheng001"},"content":"                     \u003cfont\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"Shizheng001"},"content":"                        \u003cFont size\u003d\"11.0\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"Shizheng001"},"content":"                     \u003c/font\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"Shizheng001"},"content":"                  \u003c/Button\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"Shizheng001"},"content":"                \u003c/children\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"Shizheng001"},"content":"            \u003c/AnchorPane\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"Shizheng001"},"content":"         \u003c/root\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"Shizheng001"},"content":"      \u003c/Scene\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"Shizheng001"},"content":"   \u003c/scene\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"Shizheng001"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Shizheng001":43}},{"path":"src/main/resources/view/HelpTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":".root {","lastModifiedDate":"2021-04-01"},{"lineNumber":2,"author":{"gitId":"Shizheng001"},"content":"    -fx-background-color: #000000;","lastModifiedDate":"2021-04-01"},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Shizheng001"},"content":"}","lastModifiedDate":"2021-04-01"}],"authorContributionMap":{"Shizheng001":5}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"Shizheng001"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"Shizheng001"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":10,"author":{"gitId":"Shizheng001"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":11,"author":{"gitId":"Shizheng001"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"Shizheng001"},"content":"        \u003cstylesheets\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"Shizheng001"},"content":"            \u003cURL value\u003d\"@HelpTheme.css\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"Shizheng001"},"content":"        \u003c/stylesheets\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"Shizheng001"},"content":"         \u003cScrollPane\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"Shizheng001"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"Shizheng001"},"content":"               \u003cPane\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"Shizheng001"},"content":"                     \u003cAnchorPane layoutY\u003d\"14.0\" prefHeight\u003d\"640.0\" prefWidth\u003d\"720.0\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":28,"author":{"gitId":"Shizheng001"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"Shizheng001"},"content":"                           \u003cImageView fitHeight\u003d\"705.0\" fitWidth\u003d\"680.0\" layoutX\u003d\"10.0\" layoutY\u003d\"5.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"Shizheng001"},"content":"                              \u003cimage\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"Shizheng001"},"content":"                                 \u003cImage url\u003d\"images/help1.png\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"Shizheng001"},"content":"                              \u003c/image\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"Shizheng001"},"content":"                           \u003c/ImageView\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"Shizheng001"},"content":"                           \u003cImageView fitHeight\u003d\"639.0\" fitWidth\u003d\"680.0\" layoutX\u003d\"10.0\" layoutY\u003d\"650.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"Shizheng001"},"content":"                              \u003cimage\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"Shizheng001"},"content":"                                 \u003cImage url\u003d\"images/help2.png\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"Shizheng001"},"content":"                              \u003c/image\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"Shizheng001"},"content":"                           \u003c/ImageView\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"Shizheng001"},"content":"                            \u003cLabel fx:id\u003d\"helpMessage\" layoutX\u003d\"10.0\" layoutY\u003d\"1125.0\" text\u003d\"Label\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                            \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"Shizheng001"},"content":"                            \u003cButton fx:id\u003d\"copyButton\" layoutX\u003d\"10.0\" layoutY\u003d\"1145.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                            \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"Shizheng001"},"content":"                     \u003c/AnchorPane\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"Shizheng001"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"Shizheng001"},"content":"               \u003c/Pane\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"Shizheng001"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"Shizheng001"},"content":"         \u003c/ScrollPane\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"Shizheng001":31,"-":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"Shizheng001"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Car@Leads\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"Shizheng001"},"content":"    \u003cImage url\u003d\"@/images/car_leads_icon.png\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"Shizheng001"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Email\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"Shizheng001"},"content":"            \u003citems\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"Shizheng001"},"content":"              \u003cMenuItem fx:id\u003d\"emailMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleEmail\" text\u003d\"Email\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"Shizheng001"},"content":"            \u003c/items\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"Shizheng001"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"Shizheng001"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"Shizheng001"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"Shizheng001"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"Shizheng001"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":55,"author":{"gitId":"Shizheng001"},"content":"        \u003cVBox fx:id\u003d\"customerList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"Shizheng001"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"rajobasu"},"content":"          \u003cStackPane fx:id\u003d\"customerListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Shizheng001":14,"rajobasu":3,"-":49}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidCustomerAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"  \"customers\": [ {","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"    \"name\": \"Valid Customer\",","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"    \"dateOfBirth\": \"2000 01 31\"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"    \"name\": \"Customer With Invalid Phone Field\",","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"    \"dateOfBirth\": \"2000 01 31\"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"nighoggDatatype":4,"rajobasu":3,"-":8}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidCustomerAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"{","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"  \"customers\": [ {","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"    \"name\": \"Customer with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"    \"dateOfBirth\": \"2000 01 31\"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"  } ]","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"nighoggDatatype":2,"rajobasu":7}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateCustomerAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"  \"customers\": [ {","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"    \"dateOfBirth\": \"2000 01 31\",","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"    \"dateOfBirth\": \"2000 01 31\"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"nighoggDatatype":3,"rajobasu":1,"-":12}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidCustomerAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"  \"customers\": [ {","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"    \"dateOfBirth\": \"2000 13 31\"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"nighoggDatatype":2,"rajobasu":1,"-":6}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalCustomersAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"  \"_comment\": \"AddressBook save file which contains the same Customer values as in TypicalCustomers#getTypicalAddressBook()\",","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"  \"customers\" : [ {","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"    \"dateOfBirth\" : \"2000 01 31\",","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"    \"dateOfBirth\" : \"1999 12 13\",","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"nighoggDatatype"},"content":"    \"dateOfBirth\" : \"1999 01 30\",","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"nighoggDatatype"},"content":"    \"dateOfBirth\" : \"1999 07 30\",","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"nighoggDatatype"},"content":"    \"dateOfBirth\" : \"1993 07 30\",","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"nighoggDatatype"},"content":"    \"dateOfBirth\" : \"1993 12 31\",","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"nighoggDatatype"},"content":"    \"dateOfBirth\" : \"2000 01 01\",","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"nighoggDatatype":7,"rajobasu":2,"-":44}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"rajobasu"},"content":"        final Index fifthCustomerIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"rajobasu"},"content":"        assertTrue(fifthCustomerIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"rajobasu"},"content":"        assertTrue(fifthCustomerIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"rajobasu"},"content":"        assertTrue(fifthCustomerIndex.equals(fifthCustomerIndex));","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"rajobasu"},"content":"        assertFalse(fifthCustomerIndex.equals(null));","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"rajobasu"},"content":"        assertFalse(fifthCustomerIndex.equals(5.0f));","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"rajobasu"},"content":"        assertFalse(fifthCustomerIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"rajobasu":7,"-":53}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":"        assertNotNull(AppUtil.getImage(\"/images/car_leads_icon.png\"));","lastModifiedDate":"2021-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"Shizheng001":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NO_SUCH_NAME_IN_BOOK;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_OF_BIRTH_DESC_AMY;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalCustomers.AMY;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"import seedu.address.testutil.CustomerBuilder;","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"Shizheng001"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"Shizheng001"},"content":"        String deleteCommand \u003d \"delete JAAAAAAAAASON\";","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"Shizheng001"},"content":"        assertCommandException(deleteCommand, MESSAGE_NO_SUCH_NAME_IN_BOOK);","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"nighoggDatatype"},"content":"                + DATE_OF_BIRTH_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"rajobasu"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"rajobasu"},"content":"        expectedModel.addCustomer(expectedCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"rajobasu"},"content":"    public void getFilteredCustomerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"rajobasu"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredCustomerList().remove(0));","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"nighoggDatatype":2,"Shizheng001":4,"rajobasu":7,"-":150}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalCustomers.getTypicalAddressBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"rajobasu"},"content":"import seedu.address.testutil.CustomerBuilder;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"rajobasu"},"content":"    public void execute_newCustomer_success() {","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"rajobasu"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"rajobasu"},"content":"        expectedModel.addCustomer(validCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"rajobasu"},"content":"        assertCommandSuccess(new AddCommand(validCustomer), model,","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"rajobasu"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validCustomer), expectedModel);","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"    public void execute_duplicateCustomer_throwsCommandException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"rajobasu"},"content":"        Customer customerInList \u003d model.getAddressBook().getCustomerList().get(0);","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"rajobasu"},"content":"        assertCommandFailure(new AddCommand(customerInList), model, AddCommand.MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"rajobasu":11,"-":34}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"rajobasu"},"content":"import seedu.address.testutil.CustomerBuilder;","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"rajobasu"},"content":"    public void constructor_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"    public void execute_customerAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"rajobasu"},"content":"        ModelStubAcceptingCustomerAdded modelStub \u003d new ModelStubAcceptingCustomerAdded();","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"rajobasu"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"rajobasu"},"content":"        CommandResult commandResult \u003d new AddCommand(validCustomer).execute(modelStub);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validCustomer), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"rajobasu"},"content":"        assertEquals(Arrays.asList(validCustomer), modelStub.customersAdded);","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"rajobasu"},"content":"    public void execute_duplicateCustomer_throwsCommandException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"rajobasu"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"rajobasu"},"content":"        AddCommand addCommand \u003d new AddCommand(validCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"rajobasu"},"content":"        ModelStub modelStub \u003d new ModelStubWithCustomer(validCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"rajobasu"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_CUSTOMER, () -\u003e","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"rajobasu"},"content":"            addCommand.execute(modelStub));","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"rajobasu"},"content":"        Customer alice \u003d new CustomerBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"rajobasu"},"content":"        Customer bob \u003d new CustomerBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"rajobasu"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"rajobasu"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"rajobasu"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"rajobasu"},"content":"        public void addCustomer(Customer customer) {","lastModifiedDate":"2021-03-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"rajobasu"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-03-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"rajobasu"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-03-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"rajobasu"},"content":"        public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"rajobasu"},"content":"        public void deleteCustomer(Customer target) {","lastModifiedDate":"2021-03-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"rajobasu"},"content":"        public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2021-03-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"rajobasu"},"content":"        public ObservableList\u003cCustomer\u003e getFilteredCustomerList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"rajobasu"},"content":"        public void updateFilteredCustomerList(Predicate\u003cCustomer\u003e predicate) {","lastModifiedDate":"2021-03-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"rajobasu"},"content":"     * A Model stub that contains a single customer.","lastModifiedDate":"2021-03-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"rajobasu"},"content":"    private class ModelStubWithCustomer extends ModelStub {","lastModifiedDate":"2021-03-12"},{"lineNumber":157,"author":{"gitId":"rajobasu"},"content":"        private final Customer customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":159,"author":{"gitId":"rajobasu"},"content":"        ModelStubWithCustomer(Customer customer) {","lastModifiedDate":"2021-03-12"},{"lineNumber":160,"author":{"gitId":"rajobasu"},"content":"            requireNonNull(customer);","lastModifiedDate":"2021-03-12"},{"lineNumber":161,"author":{"gitId":"rajobasu"},"content":"            this.customer \u003d customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"rajobasu"},"content":"        public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2021-03-12"},{"lineNumber":166,"author":{"gitId":"rajobasu"},"content":"            requireNonNull(customer);","lastModifiedDate":"2021-03-12"},{"lineNumber":167,"author":{"gitId":"rajobasu"},"content":"            return this.customer.isSameCustomer(customer);","lastModifiedDate":"2021-03-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"rajobasu"},"content":"     * A Model stub that always accept the customer being added.","lastModifiedDate":"2021-03-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"rajobasu"},"content":"    private class ModelStubAcceptingCustomerAdded extends ModelStub {","lastModifiedDate":"2021-03-12"},{"lineNumber":175,"author":{"gitId":"rajobasu"},"content":"        final ArrayList\u003cCustomer\u003e customersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"rajobasu"},"content":"        public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2021-03-12"},{"lineNumber":179,"author":{"gitId":"rajobasu"},"content":"            requireNonNull(customer);","lastModifiedDate":"2021-03-12"},{"lineNumber":180,"author":{"gitId":"rajobasu"},"content":"            return customersAdded.stream().anyMatch(customer::isSameCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"rajobasu"},"content":"        public void addCustomer(Customer customer) {","lastModifiedDate":"2021-03-12"},{"lineNumber":185,"author":{"gitId":"rajobasu"},"content":"            requireNonNull(customer);","lastModifiedDate":"2021-03-12"},{"lineNumber":186,"author":{"gitId":"rajobasu"},"content":"            customersAdded.add(customer);","lastModifiedDate":"2021-03-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"rajobasu":46,"-":149}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalCustomers.getTypicalAddressBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"rajobasu":1,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"Shizheng001"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"Shizheng001"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"Shizheng001"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false)));","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"Shizheng001"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"Shizheng001"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false).hashCode());","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"Shizheng001":5,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"rajobasu"},"content":"import seedu.address.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"nighoggDatatype"},"content":"    public static final String VALID_DATE_OF_BIRTH_AMY \u003d \"2000 01 31\";","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"nighoggDatatype"},"content":"    public static final String VALID_DATE_OF_BIRTH_BOB \u003d \"1999 12 13\";","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"nighoggDatatype"},"content":"    public static final String DATE_OF_BIRTH_DESC_AMY \u003d \" \" + PREFIX_DOB + VALID_DATE_OF_BIRTH_AMY;","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"nighoggDatatype"},"content":"    public static final String DATE_OF_BIRTH_DESC_BOB \u003d \" \" + PREFIX_DOB + VALID_DATE_OF_BIRTH_BOB;","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"nighoggDatatype"},"content":"    public static final String INVALID_DATE_OF_BIRTH_DESC \u003d \" \" + PREFIX_DOB + \"2000 14 03\"; // 14th month is invalid","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"rajobasu"},"content":"    public static final EditCommand.EditCustomerDescriptor DESC_AMY;","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"rajobasu"},"content":"    public static final EditCommand.EditCustomerDescriptor DESC_BOB;","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"rajobasu"},"content":"        DESC_AMY \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"Shizheng001"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"Shizheng001"},"content":"        DESC_BOB \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"OhJunMing"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"rajobasu"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e - the returned {@link CommandResult} matches {@code","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"rajobasu"},"content":"     * expectedCommandResult} \u003cbr\u003e - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"rajobasu"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)} that takes a string","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"rajobasu"},"content":"     * {@code expectedMessage}.","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"rajobasu"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e - a {@code CommandException} is thrown \u003cbr\u003e - the","lastModifiedDate":"2021-03-12"},{"lineNumber":105,"author":{"gitId":"rajobasu"},"content":"     * CommandException message matches {@code expectedMessage} \u003cbr\u003e - the address book, filtered customer list and","lastModifiedDate":"2021-03-12"},{"lineNumber":106,"author":{"gitId":"rajobasu"},"content":"     * selected customer in {@code actualModel} remain unchanged","lastModifiedDate":"2021-03-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"rajobasu"},"content":"        List\u003cCustomer\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredCustomerList());","lastModifiedDate":"2021-03-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"rajobasu"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredCustomerList());","lastModifiedDate":"2021-03-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"rajobasu"},"content":"     * Updates {@code model}\u0027s filtered list to show only the customer at the given {@code targetIndex} in the {@code","lastModifiedDate":"2021-03-12"},{"lineNumber":121,"author":{"gitId":"rajobasu"},"content":"     * model}\u0027s address book.","lastModifiedDate":"2021-03-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":123,"author":{"gitId":"rajobasu"},"content":"    public static void showCustomerAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-12"},{"lineNumber":124,"author":{"gitId":"rajobasu"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredCustomerList().size());","lastModifiedDate":"2021-03-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"rajobasu"},"content":"        Customer customer \u003d model.getFilteredCustomerList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-12"},{"lineNumber":127,"author":{"gitId":"rajobasu"},"content":"        final String[] splitName \u003d customer.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-12"},{"lineNumber":128,"author":{"gitId":"rajobasu"},"content":"        model.updateFilteredCustomerList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"rajobasu"},"content":"        assertEquals(1, model.getFilteredCustomerList().size());","lastModifiedDate":"2021-03-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"nighoggDatatype":6,"Shizheng001":2,"rajobasu":24,"OhJunMing":1,"-":100}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalCustomers.getTypicalAddressBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"rajobasu"},"content":" * Contains integration tests (interaction with the Model) and unit tests for {@code DeleteCommand}.","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"Shizheng001"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"Shizheng001"},"content":"    public void execute_validNameUnfilteredList_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"rajobasu"},"content":"        Customer customerToDelete \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"Shizheng001"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(customerToDelete.getName().toString());","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"rajobasu"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_CUSTOMER_SUCCESS, customerToDelete);","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"rajobasu"},"content":"        expectedModel.deleteCustomer(customerToDelete);","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"Shizheng001"},"content":"    public void execute_invalidNameUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"Shizheng001"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INVALID_NAME);","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"Shizheng001"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_NO_SUCH_NAME_IN_BOOK);","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"Shizheng001"},"content":"    public void execute_validNameFilteredList_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"rajobasu"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"rajobasu"},"content":"        Customer customerToDelete \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"Shizheng001"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(customerToDelete.getName().toString());","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"rajobasu"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_CUSTOMER_SUCCESS, customerToDelete);","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"rajobasu"},"content":"        expectedModel.deleteCustomer(customerToDelete);","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"rajobasu"},"content":"        showNoCustomer(expectedModel);","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"Shizheng001"},"content":"    public void execute_invalidNameFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"rajobasu"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"rajobasu"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"rajobasu"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getCustomerList().size());","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"Shizheng001"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INVALID_NAME);","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"Shizheng001"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_NO_SUCH_NAME_IN_BOOK);","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"Shizheng001"},"content":"        Customer first \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"Shizheng001"},"content":"        Customer second \u003d model.getFilteredCustomerList().get(INDEX_SECOND_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"Shizheng001"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(first.getName().toString());","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"Shizheng001"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(second.getName().toString());","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"Shizheng001"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(first.getName().toString());","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"rajobasu"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"rajobasu"},"content":"    private void showNoCustomer(Model model) {","lastModifiedDate":"2021-03-12"},{"lineNumber":106,"author":{"gitId":"rajobasu"},"content":"        model.updateFilteredCustomerList(p -\u003e false);","lastModifiedDate":"2021-03-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"rajobasu"},"content":"        assertTrue(model.getFilteredCustomerList().isEmpty());","lastModifiedDate":"2021-03-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Shizheng001":17,"rajobasu":21,"-":72}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalCustomers.getTypicalAddressBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"import seedu.address.logic.commands.EditCommand.EditCustomerDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"rajobasu"},"content":"import seedu.address.testutil.CustomerBuilder;","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"rajobasu"},"content":"import seedu.address.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"rajobasu"},"content":"        Customer editedCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder(editedCustomer).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"rajobasu"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CUSTOMER, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"rajobasu"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"rajobasu"},"content":"        expectedModel.setCustomer(model.getFilteredCustomerList().get(0), editedCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"rajobasu"},"content":"        Index indexLastCustomer \u003d Index.fromOneBased(model.getFilteredCustomerList().size());","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"rajobasu"},"content":"        Customer lastCustomer \u003d model.getFilteredCustomerList().get(indexLastCustomer.getZeroBased());","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"rajobasu"},"content":"        CustomerBuilder customerInList \u003d new CustomerBuilder(lastCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"rajobasu"},"content":"        Customer editedCustomer \u003d customerInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"rajobasu"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"rajobasu"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastCustomer, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"rajobasu"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"rajobasu"},"content":"        expectedModel.setCustomer(lastCustomer, editedCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"rajobasu"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CUSTOMER, new EditCustomerDescriptor());","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"rajobasu"},"content":"        Customer editedCustomer \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"rajobasu"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"rajobasu"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"rajobasu"},"content":"        Customer customerInFilteredList \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"rajobasu"},"content":"        Customer editedCustomer \u003d new CustomerBuilder(customerInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"rajobasu"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CUSTOMER,","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"rajobasu"},"content":"            new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"rajobasu"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"rajobasu"},"content":"        expectedModel.setCustomer(model.getFilteredCustomerList().get(0), editedCustomer);","lastModifiedDate":"2021-03-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"rajobasu"},"content":"    public void execute_duplicateCustomerUnfilteredList_failure() {","lastModifiedDate":"2021-03-12"},{"lineNumber":103,"author":{"gitId":"rajobasu"},"content":"        Customer firstCustomer \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-12"},{"lineNumber":104,"author":{"gitId":"rajobasu"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder(firstCustomer).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":105,"author":{"gitId":"rajobasu"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_CUSTOMER, descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"rajobasu"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2021-03-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"rajobasu"},"content":"    public void execute_duplicateCustomerFilteredList_failure() {","lastModifiedDate":"2021-03-12"},{"lineNumber":112,"author":{"gitId":"rajobasu"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"rajobasu"},"content":"        // edit customer in filtered list into a duplicate in address book","lastModifiedDate":"2021-03-12"},{"lineNumber":115,"author":{"gitId":"rajobasu"},"content":"        Customer customerInList \u003d model.getAddressBook().getCustomerList().get(INDEX_SECOND_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-12"},{"lineNumber":116,"author":{"gitId":"rajobasu"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CUSTOMER,","lastModifiedDate":"2021-03-12"},{"lineNumber":117,"author":{"gitId":"rajobasu"},"content":"            new EditCustomerDescriptorBuilder(customerInList).build());","lastModifiedDate":"2021-03-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"rajobasu"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2021-03-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"rajobasu"},"content":"    public void execute_invalidCustomerIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-12"},{"lineNumber":124,"author":{"gitId":"rajobasu"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCustomerList().size() + 1);","lastModifiedDate":"2021-03-12"},{"lineNumber":125,"author":{"gitId":"rajobasu"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"rajobasu"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"rajobasu"},"content":"     * Edit filtered list where index is larger than size of filtered list, but smaller than size of address book","lastModifiedDate":"2021-03-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"rajobasu"},"content":"    public void execute_invalidCustomerIndexFilteredList_failure() {","lastModifiedDate":"2021-03-12"},{"lineNumber":136,"author":{"gitId":"rajobasu"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-12"},{"lineNumber":137,"author":{"gitId":"rajobasu"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2021-03-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"rajobasu"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getCustomerList().size());","lastModifiedDate":"2021-03-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"rajobasu"},"content":"            new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"rajobasu"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"rajobasu"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_CUSTOMER, DESC_AMY);","lastModifiedDate":"2021-03-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"rajobasu"},"content":"        EditCustomerDescriptor copyDescriptor \u003d new EditCustomerDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-12"},{"lineNumber":153,"author":{"gitId":"rajobasu"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_CUSTOMER, copyDescriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"rajobasu"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_CUSTOMER, DESC_AMY)));","lastModifiedDate":"2021-03-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"rajobasu"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_CUSTOMER, DESC_BOB)));","lastModifiedDate":"2021-03-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"rajobasu":59,"-":113}},{"path":"src/test/java/seedu/address/logic/commands/EditCustomerDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":"import seedu.address.logic.commands.EditCommand.EditCustomerDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"rajobasu"},"content":"import seedu.address.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":"public class EditCustomerDescriptorTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"rajobasu"},"content":"        EditCustomerDescriptor descriptorWithSameValues \u003d new EditCustomerDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"rajobasu"},"content":"        EditCustomerDescriptor editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"rajobasu"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"rajobasu"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"Shizheng001"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"rajobasu"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Shizheng001":1,"rajobasu":8,"-":48}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"Shizheng001"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Shizheng001":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":" * TODO : Add more tests.","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"   /* private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"rajobasu"},"content":"        /*NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"rajobasu"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));*/","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"rajobasu"},"content":"    /* }*/","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"rajobasu"},"content":"/*","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"rajobasu"},"content":"    public void execute_zeroKeywords_noCustomerFound() {","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CUSTOMERS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"rajobasu"},"content":"        expectedModel.updateFilteredCustomerList(predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"rajobasu"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredCustomerList());","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"rajobasu"},"content":"    }*/","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"rajobasu"},"content":"/*","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"rajobasu"},"content":"    public void execute_multipleKeywords_multipleCustomersFound() {","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"rajobasu"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CUSTOMERS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"rajobasu"},"content":"        expectedModel.updateFilteredCustomerList(predicate);","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"rajobasu"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredCustomerList());","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"rajobasu"},"content":"    }*/","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"rajobasu"},"content":"    /*","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"rajobasu"},"content":"     *//*","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"rajobasu"},"content":"    }*/","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"rajobasu":21,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"Shizheng001"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Shizheng001":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalCustomers.getTypicalAddressBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"rajobasu"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"rajobasu":4,"-":35}},{"path":"src/test/java/seedu/address/logic/filters/CoeExpiryFilterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package seedu.address.logic.filters;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"import seedu.address.model.customer.CoeExpiry;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"import seedu.address.testutil.CustomerBuilder;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"public class CoeExpiryFilterTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"    private LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"nighoggDatatype"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"nighoggDatatype"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"nighoggDatatype"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CoeExpiryFilter(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"nighoggDatatype"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"nighoggDatatype"},"content":"    public void constructor_invalidCoeExpiryFilter_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"nighoggDatatype"},"content":"        String emptyString \u003d \"\";","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"nighoggDatatype"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new CoeExpiryFilter(emptyString));","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"nighoggDatatype"},"content":"        String invalidStringArgument \u003d \"today\";","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"nighoggDatatype"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new CoeExpiryFilter(invalidStringArgument));","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"nighoggDatatype"},"content":"        String negativeNumber \u003d \"-1234\";","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"nighoggDatatype"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new CoeExpiryFilter(negativeNumber));","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"nighoggDatatype"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"nighoggDatatype"},"content":"    public void isValidFilter() {","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"nighoggDatatype"},"content":"        // null filter","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"nighoggDatatype"},"content":"        assertThrows(NullPointerException.class, () -\u003e CoeExpiryFilter.isValidFilter(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"nighoggDatatype"},"content":"        // invalid filter","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"nighoggDatatype"},"content":"        assertFalse(CoeExpiryFilter.isValidFilter(\"\")); // empty string","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"nighoggDatatype"},"content":"        assertFalse(CoeExpiryFilter.isValidFilter(\" \")); // spaces only","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"nighoggDatatype"},"content":"        assertFalse(CoeExpiryFilter.isValidFilter(\"today\")); // wrong string","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"nighoggDatatype"},"content":"        assertFalse(CoeExpiryFilter.isValidFilter(\"-1\")); // negative number","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"nighoggDatatype"},"content":"        // valid filter","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"nighoggDatatype"},"content":"        assertTrue(CoeExpiryFilter.isValidFilter(\"exp\")); // special keyword","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"nighoggDatatype"},"content":"        assertTrue(CoeExpiryFilter.isValidFilter(\"0\")); // zero is valid","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"nighoggDatatype"},"content":"        assertTrue(CoeExpiryFilter.isValidFilter(\"3\")); // long address","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"nighoggDatatype"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"nighoggDatatype"},"content":"    public void test_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"nighoggDatatype"},"content":"        CoeExpiryFilter filter \u003d new CoeExpiryFilter(\"exp\");","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"nighoggDatatype"},"content":"        assertThrows(NullPointerException.class, () -\u003e filter.test(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"nighoggDatatype"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"nighoggDatatype"},"content":"    public void test_expiredCustomer_true() {","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"nighoggDatatype"},"content":"        CoeExpiryFilter filterToday \u003d new CoeExpiryFilter(\"exp\");","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"nighoggDatatype"},"content":"        String yesterdayString \u003d now.minusDays(1).format(CoeExpiry.DATE_TIME_FORMATTER);","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"nighoggDatatype"},"content":"        String oneYearString \u003d now.plusYears(1).format(CoeExpiry.DATE_TIME_FORMATTER);","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"nighoggDatatype"},"content":"        Customer alice \u003d new CustomerBuilder()","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"nighoggDatatype"},"content":"                .withAdditionalCar(\"Honda\", \"Civic\", yesterdayString)","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"nighoggDatatype"},"content":"                .withAdditionalCar(\"Honda\", \"Civic\", oneYearString)","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"nighoggDatatype"},"content":"                .build();","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"nighoggDatatype"},"content":"        assertTrue(filterToday.test(alice));","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"nighoggDatatype"},"content":"        CoeExpiryFilter filterOneYear \u003d new CoeExpiryFilter(\"2\");","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"nighoggDatatype"},"content":"        Customer bob \u003d new CustomerBuilder()","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"nighoggDatatype"},"content":"                .withAdditionalCar(\"Honda\", \"Civic\", oneYearString)","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"nighoggDatatype"},"content":"                .build();","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"nighoggDatatype"},"content":"        assertTrue(filterOneYear.test(bob));","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"nighoggDatatype"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"nighoggDatatype"},"content":"    public void test_freshCustomer_false() {","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"nighoggDatatype"},"content":"        CoeExpiryFilter filter \u003d new CoeExpiryFilter(\"1\");","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"nighoggDatatype"},"content":"        String twoYearString \u003d now.plusYears(2).format(CoeExpiry.DATE_TIME_FORMATTER);","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"nighoggDatatype"},"content":"        String oneYearString \u003d now.plusYears(1).format(CoeExpiry.DATE_TIME_FORMATTER);","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"nighoggDatatype"},"content":"        Customer alice \u003d new CustomerBuilder()","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"nighoggDatatype"},"content":"                .withAdditionalCar(\"Honda\", \"Civic\", twoYearString)","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"nighoggDatatype"},"content":"                .withAdditionalCar(\"Honda\", \"Civic\", oneYearString)","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"nighoggDatatype"},"content":"                .build();","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"nighoggDatatype"},"content":"        assertFalse(filter.test(alice));","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"nighoggDatatype"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"nighoggDatatype"},"content":"    public void test_noCarCustomer_false() {","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"nighoggDatatype"},"content":"        CoeExpiryFilter filter \u003d new CoeExpiryFilter(\"exp\");","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"nighoggDatatype"},"content":"        Customer alice \u003d new CustomerBuilder().build();","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"nighoggDatatype"},"content":"        assertFalse(filter.test(alice));","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"nighoggDatatype"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"nighoggDatatype"},"content":"    public void equals() {","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"nighoggDatatype"},"content":"        CoeExpiryFilter immediateFilter \u003d new CoeExpiryFilter(\"exp\");","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"nighoggDatatype"},"content":"        CoeExpiryFilter oneYearFilter \u003d new CoeExpiryFilter(\"1\");","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"nighoggDatatype"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"nighoggDatatype"},"content":"        assertTrue(immediateFilter.equals(immediateFilter));","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"nighoggDatatype"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"nighoggDatatype"},"content":"        CoeExpiryFilter immediateFilterCopy \u003d new CoeExpiryFilter(\"exp\");","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"nighoggDatatype"},"content":"        assertTrue(immediateFilter.equals(immediateFilterCopy));","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"nighoggDatatype"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"nighoggDatatype"},"content":"        assertFalse(immediateFilter.equals(1));","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"nighoggDatatype"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"nighoggDatatype"},"content":"        assertFalse(immediateFilter.equals(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"nighoggDatatype"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"nighoggDatatype"},"content":"        assertFalse(immediateFilter.equals(oneYearFilter));","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"nighoggDatatype"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"nighoggDatatype":114}},{"path":"src/test/java/seedu/address/logic/filters/NameFilterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package seedu.address.logic.filters;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"public class NameFilterTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"        assertThrows(NullPointerException.class, () -\u003e new NameFilter(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":"    public void constructor_invalidCoeExpiryFilter_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"nighoggDatatype"},"content":"        String emptyString \u003d \"\";","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"nighoggDatatype"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new CoeExpiryFilter(emptyString));","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"nighoggDatatype"},"content":"        String withSpecialCharacter \u003d \"peter^\";","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"nighoggDatatype"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new CoeExpiryFilter(withSpecialCharacter));","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"nighoggDatatype"},"content":"        String spacesOnly \u003d \"   \";","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"nighoggDatatype"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new CoeExpiryFilter(spacesOnly));","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"nighoggDatatype"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"nighoggDatatype"},"content":"    public void isValidFilter() {","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"nighoggDatatype"},"content":"        // null filter","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"nighoggDatatype"},"content":"        assertThrows(NullPointerException.class, () -\u003e NameFilter.isValidFilter(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"nighoggDatatype"},"content":"        // invalid filter","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"nighoggDatatype"},"content":"        assertFalse(NameFilter.isValidFilter(\"\")); // empty string","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"nighoggDatatype"},"content":"        assertFalse(NameFilter.isValidFilter(\" \")); // spaces only","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"nighoggDatatype"},"content":"        assertFalse(NameFilter.isValidFilter(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"nighoggDatatype"},"content":"        assertFalse(NameFilter.isValidFilter(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"nighoggDatatype"},"content":"        // valid filter","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"nighoggDatatype"},"content":"        assertTrue(NameFilter.isValidFilter(\"peter jack\")); // alphabets only","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"nighoggDatatype"},"content":"        assertTrue(NameFilter.isValidFilter(\"12345\")); // numbers only","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"nighoggDatatype"},"content":"        assertTrue(NameFilter.isValidFilter(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"nighoggDatatype"},"content":"        assertTrue(NameFilter.isValidFilter(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"nighoggDatatype"},"content":"        assertTrue(NameFilter.isValidFilter(\"David Roger Jackson Ray Jr 2nd\")); // long searches","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"nighoggDatatype"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"nighoggDatatype"},"content":"    public void test_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"nighoggDatatype"},"content":"        NameFilter filter \u003d new NameFilter(\"peter\");","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"nighoggDatatype"},"content":"        assertThrows(NullPointerException.class, () -\u003e filter.test(null));","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"nighoggDatatype"},"content":"    //TODO: Add additional tests for true/false criteria of filter.test","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"nighoggDatatype"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"nighoggDatatype":51}},{"path":"src/test/java/seedu/address/logic/filters/combinator/FilterCombinatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.logic.filters.combinator;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"public class FilterCombinatorTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"    public void filterCombinatorTest1() {","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"        String expression \u003d \"O1 /AND O2 /OR /NOT O3\";","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"rajobasu"},"content":"        System.out.println(expression);","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":"        FilterCombinator filterCombinator \u003d new FilterCombinator(expression);","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"        System.out.println(filterCombinator);","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"rajobasu":15}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_OF_BIRTH_DESC_AMY;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_OF_BIRTH_DESC_BOB;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_OF_BIRTH_DESC;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"nighoggDatatype"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_OF_BIRTH_BOB;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalCustomers.AMY;","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalCustomers.BOB;","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.model.customer.Address;","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"nighoggDatatype"},"content":"import seedu.address.model.customer.DateOfBirth;","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Email;","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Name;","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Phone;","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"rajobasu"},"content":"import seedu.address.testutil.CustomerBuilder;","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"rajobasu"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"nighoggDatatype"},"content":"            + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedCustomer));","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"nighoggDatatype"},"content":"            + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedCustomer));","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"nighoggDatatype"},"content":"            + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedCustomer));","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"nighoggDatatype"},"content":"            + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedCustomer));","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"nighoggDatatype"},"content":"                + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedCustomer));","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"nighoggDatatype"},"content":"        // multiple date of births - last date of births accepted","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"nighoggDatatype"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"nighoggDatatype"},"content":"                + DATE_OF_BIRTH_DESC_AMY + DATE_OF_BIRTH_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedCustomer));","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"rajobasu"},"content":"        Customer expectedCustomerMultipleTags \u003d new CustomerBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"nighoggDatatype"},"content":"            + DATE_OF_BIRTH_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"nighoggDatatype"},"content":"            new AddCommand(expectedCustomerMultipleTags));","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"rajobasu"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"nighoggDatatype"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"nighoggDatatype"},"content":"            + DATE_OF_BIRTH_DESC_AMY, new AddCommand(expectedCustomer));","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"nighoggDatatype"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"nighoggDatatype"},"content":"            + DATE_OF_BIRTH_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"nighoggDatatype"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"nighoggDatatype"},"content":"            + DATE_OF_BIRTH_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"nighoggDatatype"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"nighoggDatatype"},"content":"            + DATE_OF_BIRTH_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"nighoggDatatype"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"nighoggDatatype"},"content":"            + DATE_OF_BIRTH_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"nighoggDatatype"},"content":"        // missing date of birth prefix","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"nighoggDatatype"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"nighoggDatatype"},"content":"            + VALID_DATE_OF_BIRTH_BOB, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"nighoggDatatype"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"nighoggDatatype"},"content":"            + VALID_DATE_OF_BIRTH_BOB, expectedMessage);","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":128,"author":{"gitId":"nighoggDatatype"},"content":"            + DATE_OF_BIRTH_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":132,"author":{"gitId":"nighoggDatatype"},"content":"            + DATE_OF_BIRTH_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"nighoggDatatype"},"content":"            + DATE_OF_BIRTH_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"nighoggDatatype"},"content":"            + DATE_OF_BIRTH_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"nighoggDatatype"},"content":"        // invalid date of birth","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"nighoggDatatype"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"nighoggDatatype"},"content":"            + INVALID_DATE_OF_BIRTH_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":148,"author":{"gitId":"nighoggDatatype"},"content":"            + DATE_OF_BIRTH_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"nighoggDatatype"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"nighoggDatatype"},"content":"            + DATE_OF_BIRTH_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":156,"author":{"gitId":"nighoggDatatype"},"content":"                + ADDRESS_DESC_BOB + DATE_OF_BIRTH_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"nighoggDatatype":44,"Shizheng001":1,"rajobasu":10,"-":104}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"rajobasu"},"content":"import seedu.address.logic.commands.EditCommand.EditCustomerDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"rajobasu"},"content":"import seedu.address.testutil.CustomerBuilder;","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"rajobasu"},"content":"import seedu.address.testutil.CustomerUtil;","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"rajobasu"},"content":"import seedu.address.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"Shizheng001"},"content":"    private static final String VALID_NAME \u003d \"abc\";","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"rajobasu"},"content":"        Customer customer \u003d new CustomerBuilder().build();","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(CustomerUtil.getAddCommand(customer));","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"rajobasu"},"content":"        assertEquals(new AddCommand(customer), command);","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"Shizheng001"},"content":"            DeleteCommand.COMMAND_WORD + \" \" + VALID_NAME);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"Shizheng001"},"content":"        assertEquals(new DeleteCommand(VALID_NAME), command);","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"rajobasu"},"content":"        Customer customer \u003d new CustomerBuilder().build();","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"rajobasu"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder(customer).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"rajobasu"},"content":"            + INDEX_FIRST_CUSTOMER.getOneBased() + \" \" + CustomerUtil.getEditCustomerDescriptorDetails(descriptor));","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"rajobasu"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_CUSTOMER, descriptor), command);","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"rajobasu"},"content":"    /* @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"rajobasu"},"content":"    }*/","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Shizheng001":5,"rajobasu":15,"-":78}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"Shizheng001"},"content":"    private static final String VALID_NAME \u003d \"abc\";","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"Shizheng001"},"content":"        assertParseSuccess(parser, \"abc\", new DeleteCommand(VALID_NAME));","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"Shizheng001"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Shizheng001":3,"-":29}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_CUSTOMER;","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"rajobasu"},"content":"import seedu.address.logic.commands.EditCommand.EditCustomerDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.model.customer.Address;","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Email;","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Name;","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Phone;","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"rajobasu"},"content":"import seedu.address.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"rajobasu"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Customer} being edited,","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"rajobasu"},"content":"        Index targetIndex \u003d INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2021-03-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"Shizheng001"},"content":"        EditCommand.EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"rajobasu"},"content":"        Index targetIndex \u003d INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"rajobasu"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"rajobasu"},"content":"        Index targetIndex \u003d INDEX_THIRD_CUSTOMER;","lastModifiedDate":"2021-03-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"Shizheng001"},"content":"        EditCommand.EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"Shizheng001"},"content":"                                                                                           .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"rajobasu"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"rajobasu"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2021-03-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-16"},{"lineNumber":158,"author":{"gitId":"Shizheng001"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"rajobasu"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":171,"author":{"gitId":"rajobasu"},"content":"        Index targetIndex \u003d INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"rajobasu"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"rajobasu"},"content":"        Index targetIndex \u003d INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":189,"author":{"gitId":"Shizheng001"},"content":"        EditCommand.EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-16"},{"lineNumber":190,"author":{"gitId":"Shizheng001"},"content":"                                                                                           .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":197,"author":{"gitId":"rajobasu"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":205,"author":{"gitId":"rajobasu"},"content":"        Index targetIndex \u003d INDEX_THIRD_CUSTOMER;","lastModifiedDate":"2021-03-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"Shizheng001"},"content":"        EditCommand.EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Shizheng001":8,"rajobasu":21,"-":184}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"/*","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"    }*/","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"rajobasu":2,"-":21}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.model.customer.Address;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Email;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Name;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Phone;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"rajobasu"},"content":"        assertEquals(INDEX_FIRST_CUSTOMER, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"rajobasu"},"content":"        assertEquals(INDEX_FIRST_CUSTOMER, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2021-03-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Shizheng001":1,"rajobasu":6,"-":189}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalCustomers.getTypicalAddressBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.model.customer.exceptions.DuplicateCustomerException;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.testutil.CustomerBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"rajobasu"},"content":"        assertEquals(Collections.emptyList(), addressBook.getCustomerList());","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"Shizheng001"},"content":"    public void resetData_withDuplicateCustomers_throwsDuplicateCustomerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"Shizheng001"},"content":"        // Two customers with the same identity fields","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"Shizheng001"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"Shizheng001"},"content":"        List\u003cCustomer\u003e newCustomers \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"Shizheng001"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newCustomers);","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"Shizheng001"},"content":"        assertThrows(DuplicateCustomerException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"rajobasu"},"content":"    public void hasCustomer_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"rajobasu"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasCustomer(null));","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"rajobasu"},"content":"    public void hasCustomer_customerNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"rajobasu"},"content":"        assertFalse(addressBook.hasCustomer(ALICE));","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"rajobasu"},"content":"    public void hasCustomer_customerInAddressBook_returnsTrue() {","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"rajobasu"},"content":"        addressBook.addCustomer(ALICE);","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"rajobasu"},"content":"        assertTrue(addressBook.hasCustomer(ALICE));","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"Shizheng001"},"content":"    public void hasCustomer_customerWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"Shizheng001"},"content":"        addressBook.addCustomer(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"Shizheng001"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"Shizheng001"},"content":"        assertTrue(addressBook.hasCustomer(editedAlice));","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"rajobasu"},"content":"    public void getCustomerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"rajobasu"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getCustomerList().remove(0));","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"rajobasu"},"content":"     * A stub ReadOnlyAddressBook whose customers list can violate interface constraints.","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"rajobasu"},"content":"        private final ObservableList\u003cCustomer\u003e customers \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"rajobasu"},"content":"        AddressBookStub(Collection\u003cCustomer\u003e customers) {","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"rajobasu"},"content":"            this.customers.setAll(customers);","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"rajobasu"},"content":"        public ObservableList\u003cCustomer\u003e getCustomerList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"rajobasu"},"content":"            return customers;","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Shizheng001":12,"rajobasu":19,"-":71}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalCustomers.BENSON;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"rajobasu"},"content":"    public void hasCustomer_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"rajobasu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasCustomer(null));","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"rajobasu"},"content":"    public void hasCustomer_customerNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"rajobasu"},"content":"        assertFalse(modelManager.hasCustomer(ALICE));","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"rajobasu"},"content":"    public void hasCustomer_customerInAddressBook_returnsTrue() {","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"rajobasu"},"content":"        modelManager.addCustomer(ALICE);","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"rajobasu"},"content":"        assertTrue(modelManager.hasCustomer(ALICE));","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"rajobasu"},"content":"    public void getFilteredCustomerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"rajobasu"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredCustomerList().remove(0));","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"rajobasu"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withCustomer(ALICE).withCustomer(BENSON).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"rajobasu"},"content":"        modelManager.updateFilteredCustomerList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-03-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"rajobasu"},"content":"        modelManager.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2021-03-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"rajobasu":16,"-":116}},{"path":"src/test/java/seedu/address/model/customer/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Shizheng001"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"Shizheng001":1,"-":35}},{"path":"src/test/java/seedu/address/model/customer/CustomerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalCustomers.BOB;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"rajobasu"},"content":"import seedu.address.testutil.CustomerBuilder;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":"public class CustomerTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"rajobasu"},"content":"        Customer customer \u003d new CustomerBuilder().build();","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"rajobasu"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e customer.getTags().remove(0));","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"rajobasu"},"content":"    public void isSameCustomer() {","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"rajobasu"},"content":"        assertTrue(ALICE.isSameCustomer(ALICE));","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"rajobasu"},"content":"        assertFalse(ALICE.isSameCustomer(null));","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"rajobasu"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"rajobasu"},"content":"        assertTrue(ALICE.isSameCustomer(editedAlice));","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"rajobasu"},"content":"        assertFalse(ALICE.isSameCustomer(editedAlice));","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"rajobasu"},"content":"        Customer editedBob \u003d new CustomerBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"rajobasu"},"content":"        assertFalse(BOB.isSameCustomer(editedBob));","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"rajobasu"},"content":"        editedBob \u003d new CustomerBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"rajobasu"},"content":"        assertFalse(BOB.isSameCustomer(editedBob));","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"rajobasu"},"content":"        Customer aliceCopy \u003d new CustomerBuilder(ALICE).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"rajobasu"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"rajobasu"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"rajobasu"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"rajobasu"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"Shizheng001"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"rajobasu"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Shizheng001":1,"rajobasu":24,"-":65}},{"path":"src/test/java/seedu/address/model/customer/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\"));","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"!#$%\u0026\u0027*+/\u003d?`{|}~^.-@example.org\")); // special characters local part","lastModifiedDate":"2018-02-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be!@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"rajobasu":1,"-":60}},{"path":"src/test/java/seedu/address/model/customer/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"import seedu.address.testutil.CustomerBuilder;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"rajobasu"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"rajobasu"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"rajobasu"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"rajobasu"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"rajobasu"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"rajobasu"},"content":"        assertFalse(predicate.test(new CustomerBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"rajobasu"},"content":"        assertFalse(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"rajobasu"},"content":"        assertFalse(predicate.test(new CustomerBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"rajobasu":10,"-":65}},{"path":"src/test/java/seedu/address/model/customer/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"rajobasu":1,"-":39}},{"path":"src/test/java/seedu/address/model/customer/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"rajobasu":1,"-":39}},{"path":"src/test/java/seedu/address/model/customer/UniqueCustomerListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.model.customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"Shizheng001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalCustomers.BOB;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"rajobasu"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-12"},{"lineNumber":13,"author":{"gitId":"rajobasu"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"rajobasu"},"content":"import java.util.List;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"rajobasu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.exceptions.CustomerNotFoundException;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.exceptions.DuplicateCustomerException;","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":"import seedu.address.testutil.CustomerBuilder;","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"rajobasu"},"content":"public class UniqueCustomerListTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"rajobasu"},"content":"    private final UniqueCustomerList uniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"rajobasu"},"content":"    public void contains_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"rajobasu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.contains(null));","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"rajobasu"},"content":"    public void contains_customerNotInList_returnsFalse() {","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"rajobasu"},"content":"        assertFalse(uniqueCustomerList.contains(ALICE));","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"rajobasu"},"content":"    public void contains_customerInList_returnsTrue() {","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"rajobasu"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"rajobasu"},"content":"        assertTrue(uniqueCustomerList.contains(ALICE));","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"rajobasu"},"content":"    public void contains_customerWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"rajobasu"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"Shizheng001"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"rajobasu"},"content":"            .build();","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"rajobasu"},"content":"        assertTrue(uniqueCustomerList.contains(editedAlice));","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"rajobasu"},"content":"    public void add_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"rajobasu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.add(null));","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"rajobasu"},"content":"    public void add_duplicateCustomer_throwsDuplicateCustomerException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"rajobasu"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"rajobasu"},"content":"        assertThrows(DuplicateCustomerException.class, () -\u003e uniqueCustomerList.add(ALICE));","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"rajobasu"},"content":"    public void setCustomer_nullTargetCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"rajobasu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setCustomer(null, ALICE));","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"rajobasu"},"content":"    public void setCustomer_nullEditedCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"rajobasu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setCustomer(ALICE, null));","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":72,"author":{"gitId":"rajobasu"},"content":"    public void setCustomer_targetCustomerNotInList_throwsCustomerNotFoundException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":73,"author":{"gitId":"rajobasu"},"content":"        assertThrows(CustomerNotFoundException.class, () -\u003e uniqueCustomerList.setCustomer(ALICE, ALICE));","lastModifiedDate":"2021-03-12"},{"lineNumber":74,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"rajobasu"},"content":"    public void setCustomer_editedCustomerIsSameCustomer_success() {","lastModifiedDate":"2021-03-12"},{"lineNumber":78,"author":{"gitId":"rajobasu"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"rajobasu"},"content":"        uniqueCustomerList.setCustomer(ALICE, ALICE);","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"rajobasu"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-12"},{"lineNumber":81,"author":{"gitId":"rajobasu"},"content":"        expectedUniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-12"},{"lineNumber":82,"author":{"gitId":"rajobasu"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"rajobasu"},"content":"    public void setCustomer_editedCustomerHasSameIdentity_success() {","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"rajobasu"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"Shizheng001"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"rajobasu"},"content":"            .build();","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"rajobasu"},"content":"        uniqueCustomerList.setCustomer(ALICE, editedAlice);","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"rajobasu"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-12"},{"lineNumber":92,"author":{"gitId":"rajobasu"},"content":"        expectedUniqueCustomerList.add(editedAlice);","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"rajobasu"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":97,"author":{"gitId":"rajobasu"},"content":"    public void setCustomer_editedCustomerHasDifferentIdentity_success() {","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"rajobasu"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-12"},{"lineNumber":99,"author":{"gitId":"rajobasu"},"content":"        uniqueCustomerList.setCustomer(ALICE, BOB);","lastModifiedDate":"2021-03-12"},{"lineNumber":100,"author":{"gitId":"rajobasu"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-12"},{"lineNumber":101,"author":{"gitId":"rajobasu"},"content":"        expectedUniqueCustomerList.add(BOB);","lastModifiedDate":"2021-03-12"},{"lineNumber":102,"author":{"gitId":"rajobasu"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2021-03-12"},{"lineNumber":103,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":104,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":105,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":106,"author":{"gitId":"rajobasu"},"content":"    public void setCustomer_editedCustomerHasNonUniqueIdentity_throwsDuplicateCustomerException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":107,"author":{"gitId":"rajobasu"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-12"},{"lineNumber":108,"author":{"gitId":"rajobasu"},"content":"        uniqueCustomerList.add(BOB);","lastModifiedDate":"2021-03-12"},{"lineNumber":109,"author":{"gitId":"rajobasu"},"content":"        assertThrows(DuplicateCustomerException.class, () -\u003e uniqueCustomerList.setCustomer(ALICE, BOB));","lastModifiedDate":"2021-03-12"},{"lineNumber":110,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":111,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":112,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":113,"author":{"gitId":"rajobasu"},"content":"    public void remove_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":114,"author":{"gitId":"rajobasu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.remove(null));","lastModifiedDate":"2021-03-12"},{"lineNumber":115,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":116,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":117,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":118,"author":{"gitId":"rajobasu"},"content":"    public void remove_customerDoesNotExist_throwsCustomerNotFoundException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":119,"author":{"gitId":"rajobasu"},"content":"        assertThrows(CustomerNotFoundException.class, () -\u003e uniqueCustomerList.remove(ALICE));","lastModifiedDate":"2021-03-12"},{"lineNumber":120,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":121,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":122,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":123,"author":{"gitId":"rajobasu"},"content":"    public void remove_existingCustomer_removesCustomer() {","lastModifiedDate":"2021-03-12"},{"lineNumber":124,"author":{"gitId":"rajobasu"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-12"},{"lineNumber":125,"author":{"gitId":"rajobasu"},"content":"        uniqueCustomerList.remove(ALICE);","lastModifiedDate":"2021-03-12"},{"lineNumber":126,"author":{"gitId":"rajobasu"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-12"},{"lineNumber":127,"author":{"gitId":"rajobasu"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2021-03-12"},{"lineNumber":128,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":129,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":130,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":131,"author":{"gitId":"rajobasu"},"content":"    public void setCustomers_nullUniqueCustomerList_throwsNullPointerException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":132,"author":{"gitId":"rajobasu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setCustomers((UniqueCustomerList) null));","lastModifiedDate":"2021-03-12"},{"lineNumber":133,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":134,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":135,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":136,"author":{"gitId":"rajobasu"},"content":"    public void setCustomers_uniqueCustomerList_replacesOwnListWithProvidedUniqueCustomerList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":137,"author":{"gitId":"rajobasu"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-12"},{"lineNumber":138,"author":{"gitId":"rajobasu"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-12"},{"lineNumber":139,"author":{"gitId":"rajobasu"},"content":"        expectedUniqueCustomerList.add(BOB);","lastModifiedDate":"2021-03-12"},{"lineNumber":140,"author":{"gitId":"rajobasu"},"content":"        uniqueCustomerList.setCustomers(expectedUniqueCustomerList);","lastModifiedDate":"2021-03-12"},{"lineNumber":141,"author":{"gitId":"rajobasu"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2021-03-12"},{"lineNumber":142,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":143,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":144,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":145,"author":{"gitId":"rajobasu"},"content":"    public void setCustomers_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":146,"author":{"gitId":"rajobasu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setCustomers((List\u003cCustomer\u003e) null));","lastModifiedDate":"2021-03-12"},{"lineNumber":147,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":148,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":149,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":150,"author":{"gitId":"rajobasu"},"content":"    public void setCustomers_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-12"},{"lineNumber":151,"author":{"gitId":"rajobasu"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-12"},{"lineNumber":152,"author":{"gitId":"rajobasu"},"content":"        List\u003cCustomer\u003e customerList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-03-12"},{"lineNumber":153,"author":{"gitId":"rajobasu"},"content":"        uniqueCustomerList.setCustomers(customerList);","lastModifiedDate":"2021-03-12"},{"lineNumber":154,"author":{"gitId":"rajobasu"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-12"},{"lineNumber":155,"author":{"gitId":"rajobasu"},"content":"        expectedUniqueCustomerList.add(BOB);","lastModifiedDate":"2021-03-12"},{"lineNumber":156,"author":{"gitId":"rajobasu"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2021-03-12"},{"lineNumber":157,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":158,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":159,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":160,"author":{"gitId":"rajobasu"},"content":"    public void setCustomers_listWithDuplicateCustomers_throwsDuplicateCustomerException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":161,"author":{"gitId":"rajobasu"},"content":"        List\u003cCustomer\u003e listWithDuplicateCustomers \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-03-12"},{"lineNumber":162,"author":{"gitId":"rajobasu"},"content":"        assertThrows(DuplicateCustomerException.class, ()","lastModifiedDate":"2021-03-12"},{"lineNumber":163,"author":{"gitId":"rajobasu"},"content":"            -\u003e uniqueCustomerList.setCustomers(listWithDuplicateCustomers));","lastModifiedDate":"2021-03-12"},{"lineNumber":164,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":165,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":166,"author":{"gitId":"rajobasu"},"content":"    @Test","lastModifiedDate":"2021-03-12"},{"lineNumber":167,"author":{"gitId":"rajobasu"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":168,"author":{"gitId":"rajobasu"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-03-12"},{"lineNumber":169,"author":{"gitId":"rajobasu"},"content":"            -\u003e uniqueCustomerList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-03-12"},{"lineNumber":170,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":171,"author":{"gitId":"rajobasu"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"Shizheng001":3,"rajobasu":168}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedCustomerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.storage.JsonAdaptedCustomer.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalCustomers.BENSON;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.model.customer.Address;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Email;","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Name;","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Phone;","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":"//TODO fix this class","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"public class JsonAdaptedCustomerTest {","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"nighoggDatatype"},"content":"    private static final String VALID_DATE_OF_BIRTH \u003d BENSON.getDateOfBirth().toString();","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"rajobasu"},"content":"    public void toModelType_validCustomerDetails_returnsCustomer() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"rajobasu"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(BENSON);","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"        assertEquals(BENSON, customer.toModelType());","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"rajobasu"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"nighoggDatatype"},"content":"            new JsonAdaptedCustomer(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_DATE_OF_BIRTH,","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"                VALID_TAGS, null, null, null);","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"rajobasu"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Shizheng001"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"            VALID_ADDRESS, VALID_DATE_OF_BIRTH, VALID_TAGS, null, null, null);","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"rajobasu"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"rajobasu"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"nighoggDatatype"},"content":"            new JsonAdaptedCustomer(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_DATE_OF_BIRTH,","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"                VALID_TAGS, null, null, null);","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"rajobasu"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"Shizheng001"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"OhJunMing"},"content":"            VALID_ADDRESS, VALID_DATE_OF_BIRTH, VALID_TAGS, null, null, null);","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"rajobasu"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"rajobasu"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2021-03-12"},{"lineNumber":80,"author":{"gitId":"nighoggDatatype"},"content":"            new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_DATE_OF_BIRTH,","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"OhJunMing"},"content":"                VALID_TAGS, null, null, null);","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"rajobasu"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"Shizheng001"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"OhJunMing"},"content":"            null, VALID_ADDRESS, VALID_DATE_OF_BIRTH, VALID_TAGS, null, null, null);","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"rajobasu"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"Shizheng001"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"nighoggDatatype"},"content":"            new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_DATE_OF_BIRTH,","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"OhJunMing"},"content":"                VALID_TAGS, null, null, null);","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"Shizheng001"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"rajobasu"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"nighoggDatatype"},"content":"            new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_DATE_OF_BIRTH,","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"OhJunMing"},"content":"                    VALID_TAGS, null, null, null);","lastModifiedDate":"2021-03-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"Shizheng001"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"rajobasu"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2021-03-12"},{"lineNumber":117,"author":{"gitId":"nighoggDatatype"},"content":"            new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_DATE_OF_BIRTH,","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"OhJunMing"},"content":"                    invalidTags, null, null, null);","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"rajobasu"},"content":"        assertThrows(IllegalValueException.class, customer::toModelType);","lastModifiedDate":"2021-03-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"nighoggDatatype":7,"Shizheng001":7,"rajobasu":22,"OhJunMing":9,"-":77}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalCustomers.HOON;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalCustomers.IDA;","lastModifiedDate":"2021-03-12"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalCustomers.getTypicalAddressBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"rajobasu"},"content":"    public void readAddressBook_invalidCustomerAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"rajobasu"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidCustomerAddressBook.json\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"rajobasu"},"content":"    public void readAddressBook_invalidAndValidCustomerAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"rajobasu"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidCustomerAddressBook.json\"));","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"rajobasu"},"content":"        original.addCustomer(HOON);","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"rajobasu"},"content":"        original.removeCustomer(ALICE);","lastModifiedDate":"2021-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"rajobasu"},"content":"        original.addCustomer(IDA);","lastModifiedDate":"2021-03-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"rajobasu":11,"-":99}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"rajobasu"},"content":"import seedu.address.testutil.TypicalCustomers;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"rajobasu"},"content":"    private static final Path TYPICAL_CUSTOMERS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalCustomersAddressBook.json\");","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":"    private static final Path INVALID_CUSTOMER_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidCustomerAddressBook.json\");","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"    private static final Path DUPLICATE_CUSTOMER_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateCustomerAddressBook.json\");","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"rajobasu"},"content":"    public void toModelType_typicalCustomersFile_success() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"rajobasu"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CUSTOMERS_FILE,","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"rajobasu"},"content":"        AddressBook typicalCustomersAddressBook \u003d TypicalCustomers.getTypicalAddressBook();","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"rajobasu"},"content":"        assertEquals(addressBookFromFile, typicalCustomersAddressBook);","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"rajobasu"},"content":"    public void toModelType_invalidCustomerFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CUSTOMER_FILE,","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"    public void toModelType_duplicateCustomers_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"rajobasu"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CUSTOMER_FILE,","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"rajobasu"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_CUSTOMER,","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"rajobasu":13,"-":34}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"import static seedu.address.testutil.TypicalCustomers.getTypicalAddressBook;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rajobasu":1,"-":67}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withCustomer(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"rajobasu"},"content":"     * Adds a new {@code Customer} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"rajobasu"},"content":"    public AddressBookBuilder withCustomer(Customer customer) {","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"rajobasu"},"content":"        addressBook.addCustomer(customer);","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rajobasu":5,"-":29}},{"path":"src/test/java/seedu/address/testutil/CustomerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"import java.util.Map;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.model.customer.Address;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Car;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.CoeExpiry;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"import seedu.address.model.customer.DateOfBirth;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Email;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Name;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Phone;","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":" * A utility class to help with building Customer objects.","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"rajobasu"},"content":"public class CustomerBuilder {","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"Shizheng001"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"nighoggDatatype"},"content":"    public static final String DEFAULT_DATE_OF_BIRTH \u003d \"2020 01 31\";","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"Shizheng001"},"content":"    private Address address;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"nighoggDatatype"},"content":"    private DateOfBirth dateOfBirth;","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"rajobasu"},"content":"    private Map\u003cCar, CoeExpiry\u003e carsOwned;","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"    private Set\u003cCar\u003e carsPreferred;","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"rajobasu"},"content":"     * Creates a {@code CustomerBuilder} with the default details.","lastModifiedDate":"2021-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"rajobasu"},"content":"    public CustomerBuilder() {","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"Shizheng001"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"nighoggDatatype"},"content":"        dateOfBirth \u003d new DateOfBirth(DEFAULT_DATE_OF_BIRTH);","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"rajobasu"},"content":"        carsOwned \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"        carsPreferred \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"rajobasu"},"content":"     * Initializes the CustomerBuilder with the data of {@code customerToCopy}.","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"rajobasu"},"content":"    public CustomerBuilder(Customer customerToCopy) {","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"rajobasu"},"content":"        name \u003d customerToCopy.getName();","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"rajobasu"},"content":"        phone \u003d customerToCopy.getPhone();","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"rajobasu"},"content":"        email \u003d customerToCopy.getEmail();","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"Shizheng001"},"content":"        address \u003d customerToCopy.getAddress();","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"nighoggDatatype"},"content":"        dateOfBirth \u003d customerToCopy.getDateOfBirth();","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"rajobasu"},"content":"        tags \u003d new HashSet\u003c\u003e(customerToCopy.getTags());","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"rajobasu"},"content":"        carsOwned \u003d new HashMap\u003c\u003e(customerToCopy.getCarsOwned());","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"        carsPreferred \u003d new HashSet\u003c\u003e(customerToCopy.getCarsPreferred());","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"rajobasu"},"content":"     * Sets the {@code Name} of the {@code Customer} that we are building.","lastModifiedDate":"2021-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"rajobasu"},"content":"    public CustomerBuilder withName(String name) {","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"rajobasu"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Customer} that we are building.","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"rajobasu"},"content":"    public CustomerBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"Shizheng001"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"Shizheng001"},"content":"     * Sets the {@code Address} of the {@code Customer} that we are building.","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"Shizheng001"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"Shizheng001"},"content":"    public CustomerBuilder withAddress(String address) {","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"Shizheng001"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"Shizheng001"},"content":"        return this;","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"Shizheng001"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"rajobasu"},"content":"     * Sets the {@code Phone} of the {@code Customer} that we are building.","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"rajobasu"},"content":"    public CustomerBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"rajobasu"},"content":"     * Sets the {@code Email} of the {@code Customer} that we are building.","lastModifiedDate":"2021-03-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"rajobasu"},"content":"    public CustomerBuilder withEmail(String email) {","lastModifiedDate":"2021-03-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"nighoggDatatype"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"nighoggDatatype"},"content":"     * Sets the {@code DateOfBirth} of the {@code Customer} that we are building.","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"nighoggDatatype"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"nighoggDatatype"},"content":"    public CustomerBuilder withDateOfBirth(String dateOfBirth) {","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"nighoggDatatype"},"content":"        this.dateOfBirth \u003d new DateOfBirth(dateOfBirth);","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"nighoggDatatype"},"content":"        return this;","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"nighoggDatatype"},"content":"     * Adds a new pairing of {@code Car} and {@code CoeExpiry} to the","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"nighoggDatatype"},"content":"     * {@code Customer} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"nighoggDatatype"},"content":"    public CustomerBuilder withAdditionalCar(String carBrand, String carType, String coeExpiry) {","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"nighoggDatatype"},"content":"        this.carsOwned.put(new Car(carBrand, carType), new CoeExpiry(coeExpiry));","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"rajobasu"},"content":"        return this;","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"OhJunMing"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":124,"author":{"gitId":"OhJunMing"},"content":"     * Parses the {@code cars} into a {@code Set\u003cCar\u003e} and set it to the {@code Customer} that we are building.","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"OhJunMing"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":126,"author":{"gitId":"OhJunMing"},"content":"    public CustomerBuilder withCarsPreferred(String... cars) {","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"OhJunMing"},"content":"        this.carsPreferred \u003d SampleDataUtil.getCarSet(cars);","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"OhJunMing"},"content":"        return this;","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"OhJunMing"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"OhJunMing"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"rajobasu"},"content":"    public Customer build() {","lastModifiedDate":"2021-03-12"},{"lineNumber":132,"author":{"gitId":"OhJunMing"},"content":"        return new Customer(name, phone, email, address, dateOfBirth, tags, carsOwned, carsPreferred);","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"nighoggDatatype":16,"Shizheng001":14,"rajobasu":34,"OhJunMing":12,"-":59}},{"path":"src/test/java/seedu/address/testutil/CustomerUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"rajobasu"},"content":"import seedu.address.logic.commands.EditCommand.EditCustomerDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":14,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":" * A utility class for Customer.","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":"public class CustomerUtil {","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"rajobasu"},"content":"     * Returns an add command string for adding the {@code customer}.","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"rajobasu"},"content":"    public static String getAddCommand(Customer customer) {","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"rajobasu"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getCustomerDetails(customer);","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"rajobasu"},"content":"     * Returns the part of command string for the given {@code customer}\u0027s details.","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"rajobasu"},"content":"    public static String getCustomerDetails(Customer customer) {","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"        sb.append(PREFIX_NAME + customer.getName().fullName + \" \");","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"rajobasu"},"content":"        sb.append(PREFIX_PHONE + customer.getPhone().value + \" \");","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"rajobasu"},"content":"        sb.append(PREFIX_EMAIL + customer.getEmail().value + \" \");","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"Shizheng001"},"content":"        sb.append(PREFIX_ADDRESS + customer.getAddress().value + \" \");","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"nighoggDatatype"},"content":"        sb.append(PREFIX_DOB + customer.getDateOfBirth().birthDate + \" \");","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"rajobasu"},"content":"        customer.getTags().stream().forEach(","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"rajobasu"},"content":"     * Returns the part of command string for the given {@code EditCustomerDescriptor}\u0027s details.","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"rajobasu"},"content":"    public static String getEditCustomerDescriptorDetails(EditCustomerDescriptor descriptor) {","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"nighoggDatatype"},"content":"        descriptor.getDateOfBirth().ifPresent(dateOfBirth -\u003e sb.append(PREFIX_DOB).append(dateOfBirth.birthDate)","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"nighoggDatatype"},"content":"                .append(\" \"));","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"nighoggDatatype":4,"Shizheng001":1,"rajobasu":15,"-":46}},{"path":"src/test/java/seedu/address/testutil/EditCustomerDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rajobasu"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-12"},{"lineNumber":2,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":3,"author":{"gitId":"rajobasu"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-12"},{"lineNumber":4,"author":{"gitId":"rajobasu"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-12"},{"lineNumber":5,"author":{"gitId":"rajobasu"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-12"},{"lineNumber":6,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"rajobasu"},"content":"import seedu.address.logic.commands.EditCommand.EditCustomerDescriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":8,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.model.customer.Address;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"import seedu.address.model.customer.DateOfBirth;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.model.customer.Email;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.model.customer.Name;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"Shizheng001"},"content":"import seedu.address.model.customer.Phone;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-12"},{"lineNumber":15,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":16,"author":{"gitId":"rajobasu"},"content":"/**","lastModifiedDate":"2021-03-12"},{"lineNumber":17,"author":{"gitId":"rajobasu"},"content":" * A utility class to help with building EditCustomerDescriptor objects.","lastModifiedDate":"2021-03-12"},{"lineNumber":18,"author":{"gitId":"rajobasu"},"content":" */","lastModifiedDate":"2021-03-12"},{"lineNumber":19,"author":{"gitId":"rajobasu"},"content":"public class EditCustomerDescriptorBuilder {","lastModifiedDate":"2021-03-12"},{"lineNumber":20,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"    private EditCustomerDescriptor descriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":23,"author":{"gitId":"rajobasu"},"content":"    public EditCustomerDescriptorBuilder() {","lastModifiedDate":"2021-03-12"},{"lineNumber":24,"author":{"gitId":"rajobasu"},"content":"        descriptor \u003d new EditCustomerDescriptor();","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":26,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"rajobasu"},"content":"    public EditCustomerDescriptorBuilder(EditCustomerDescriptor descriptor) {","lastModifiedDate":"2021-03-12"},{"lineNumber":28,"author":{"gitId":"rajobasu"},"content":"        this.descriptor \u003d new EditCustomerDescriptor(descriptor);","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":30,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"rajobasu"},"content":"     * Returns an {@code EditCustomerDescriptor} with fields containing {@code customer}\u0027s details","lastModifiedDate":"2021-03-12"},{"lineNumber":33,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"    public EditCustomerDescriptorBuilder(Customer customer) {","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"rajobasu"},"content":"        descriptor \u003d new EditCustomerDescriptor();","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"rajobasu"},"content":"        descriptor.setName(customer.getName());","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"rajobasu"},"content":"        descriptor.setPhone(customer.getPhone());","lastModifiedDate":"2021-03-12"},{"lineNumber":38,"author":{"gitId":"rajobasu"},"content":"        descriptor.setEmail(customer.getEmail());","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"nighoggDatatype"},"content":"        descriptor.setDateOfBirth(customer.getDateOfBirth());","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"nighoggDatatype"},"content":"        //TODO: Add Cars here","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"rajobasu"},"content":"        descriptor.setTags(customer.getTags());","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":43,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":45,"author":{"gitId":"rajobasu"},"content":"     * Sets the {@code Name} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2021-03-12"},{"lineNumber":46,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"rajobasu"},"content":"    public EditCustomerDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"rajobasu"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-03-12"},{"lineNumber":49,"author":{"gitId":"rajobasu"},"content":"        return this;","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"rajobasu"},"content":"     * Sets the {@code Phone} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":55,"author":{"gitId":"rajobasu"},"content":"    public EditCustomerDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-12"},{"lineNumber":56,"author":{"gitId":"rajobasu"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"rajobasu"},"content":"        return this;","lastModifiedDate":"2021-03-12"},{"lineNumber":58,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":59,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":60,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":61,"author":{"gitId":"rajobasu"},"content":"     * Sets the {@code Email} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2021-03-12"},{"lineNumber":62,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"rajobasu"},"content":"    public EditCustomerDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-03-12"},{"lineNumber":64,"author":{"gitId":"rajobasu"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2021-03-12"},{"lineNumber":65,"author":{"gitId":"rajobasu"},"content":"        return this;","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":67,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":68,"author":{"gitId":"Shizheng001"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"Shizheng001"},"content":"     * Sets the {@code Address} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"Shizheng001"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"Shizheng001"},"content":"    public EditCustomerDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"Shizheng001"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"Shizheng001"},"content":"        return this;","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"Shizheng001"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"nighoggDatatype"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"nighoggDatatype"},"content":"     * Sets the {@code DateOfBirth} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"nighoggDatatype"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"nighoggDatatype"},"content":"    public EditCustomerDescriptorBuilder withDateOfBirth(String dateOfBirth) {","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"nighoggDatatype"},"content":"        descriptor.setDateOfBirth(new DateOfBirth(dateOfBirth));","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"nighoggDatatype"},"content":"        return this;","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"nighoggDatatype"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"nighoggDatatype"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"rajobasu"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":85,"author":{"gitId":"rajobasu"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditCustomerDescriptor} that we are","lastModifiedDate":"2021-03-12"},{"lineNumber":86,"author":{"gitId":"rajobasu"},"content":"     * building.","lastModifiedDate":"2021-03-12"},{"lineNumber":87,"author":{"gitId":"rajobasu"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"rajobasu"},"content":"    public EditCustomerDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-12"},{"lineNumber":89,"author":{"gitId":"rajobasu"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-03-12"},{"lineNumber":90,"author":{"gitId":"rajobasu"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-03-12"},{"lineNumber":91,"author":{"gitId":"rajobasu"},"content":"        return this;","lastModifiedDate":"2021-03-12"},{"lineNumber":92,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":93,"author":{"gitId":"rajobasu"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":94,"author":{"gitId":"rajobasu"},"content":"    public EditCustomerDescriptor build() {","lastModifiedDate":"2021-03-12"},{"lineNumber":95,"author":{"gitId":"rajobasu"},"content":"        return descriptor;","lastModifiedDate":"2021-03-12"},{"lineNumber":96,"author":{"gitId":"rajobasu"},"content":"    }","lastModifiedDate":"2021-03-12"},{"lineNumber":97,"author":{"gitId":"Shizheng001"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"rajobasu"},"content":"}","lastModifiedDate":"2021-03-12"}],"authorContributionMap":{"nighoggDatatype":11,"Shizheng001":14,"rajobasu":73}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"rajobasu"},"content":"     * Returns the middle index of the customer in the {@code model}\u0027s customer list.","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"rajobasu"},"content":"        return Index.fromOneBased(model.getFilteredCustomerList().size() / 2);","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"rajobasu"},"content":"     * Returns the last index of the customer in the {@code model}\u0027s customer list.","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"rajobasu"},"content":"        return Index.fromOneBased(model.getFilteredCustomerList().size());","lastModifiedDate":"2021-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"rajobasu"},"content":"     * Returns the customer in the {@code model}\u0027s customer list at {@code index}.","lastModifiedDate":"2021-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"rajobasu"},"content":"    public static Customer getCustomer(Model model, Index index) {","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"rajobasu"},"content":"        return model.getFilteredCustomerList().get(index.getZeroBased());","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rajobasu":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalCustomers.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"Shizheng001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"Shizheng001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_OF_BIRTH_AMY;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_OF_BIRTH_BOB;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"rajobasu"},"content":"import seedu.address.model.customer.Customer;","lastModifiedDate":"2021-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"Shizheng001"},"content":" * A utility class containing a list of {@code customer} objects to be used in tests.","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"rajobasu"},"content":"public class TypicalCustomers {","lastModifiedDate":"2021-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"rajobasu"},"content":"    public static final Customer ALICE \u003d new CustomerBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-03-12"},{"lineNumber":29,"author":{"gitId":"Shizheng001"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"nighoggDatatype"},"content":"            .withPhone(\"94351253\").withDateOfBirth(\"2000 01 31\").withTags(\"friends\").build();","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"rajobasu"},"content":"    public static final Customer BENSON \u003d new CustomerBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-03-12"},{"lineNumber":32,"author":{"gitId":"nighoggDatatype"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"nighoggDatatype"},"content":"            .withDateOfBirth(\"1999 12 13\").withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"rajobasu"},"content":"    public static final Customer CARL \u003d new CustomerBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-03-12"},{"lineNumber":35,"author":{"gitId":"nighoggDatatype"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withDateOfBirth(\"1999 01 30\").build();","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"rajobasu"},"content":"    public static final Customer DANIEL \u003d new CustomerBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"nighoggDatatype"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"nighoggDatatype"},"content":"            .withDateOfBirth(\"1999 07 30\").withTags(\"friends\").build();","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"rajobasu"},"content":"    public static final Customer ELLE \u003d new CustomerBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2021-03-12"},{"lineNumber":40,"author":{"gitId":"nighoggDatatype"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withDateOfBirth(\"1993 07 30\").build();","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"rajobasu"},"content":"    public static final Customer FIONA \u003d new CustomerBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2021-03-12"},{"lineNumber":42,"author":{"gitId":"nighoggDatatype"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withDateOfBirth(\"1993 12 31\").build();","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"rajobasu"},"content":"    public static final Customer GEORGE \u003d new CustomerBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2021-03-12"},{"lineNumber":44,"author":{"gitId":"nighoggDatatype"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withDateOfBirth(\"2000 01 01\").build();","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"rajobasu"},"content":"    public static final Customer HOON \u003d new CustomerBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-03-12"},{"lineNumber":48,"author":{"gitId":"Shizheng001"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"rajobasu"},"content":"    public static final Customer IDA \u003d new CustomerBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"Shizheng001"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"rajobasu"},"content":"    // Manually added - Customer\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-03-12"},{"lineNumber":53,"author":{"gitId":"rajobasu"},"content":"    public static final Customer AMY \u003d new CustomerBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-03-12"},{"lineNumber":54,"author":{"gitId":"nighoggDatatype"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withDateOfBirth(VALID_DATE_OF_BIRTH_AMY)","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"nighoggDatatype"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"rajobasu"},"content":"    public static final Customer BOB \u003d new CustomerBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-12"},{"lineNumber":57,"author":{"gitId":"nighoggDatatype"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withDateOfBirth(VALID_DATE_OF_BIRTH_BOB)","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"nighoggDatatype"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":62,"author":{"gitId":"rajobasu"},"content":"    private TypicalCustomers() {} // prevents instantiation","lastModifiedDate":"2021-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"rajobasu"},"content":"     * Returns an {@code AddressBook} with all the typical customers.","lastModifiedDate":"2021-03-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"rajobasu"},"content":"        for (Customer customer : getTypicalCustomers()) {","lastModifiedDate":"2021-03-12"},{"lineNumber":70,"author":{"gitId":"rajobasu"},"content":"            ab.addCustomer(customer);","lastModifiedDate":"2021-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":75,"author":{"gitId":"rajobasu"},"content":"    public static List\u003cCustomer\u003e getTypicalCustomers() {","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"nighoggDatatype":15,"Shizheng001":6,"rajobasu":19,"-":38}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"rajobasu"},"content":"    public static final Index INDEX_FIRST_CUSTOMER \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-12"},{"lineNumber":10,"author":{"gitId":"rajobasu"},"content":"    public static final Index INDEX_SECOND_CUSTOMER \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-12"},{"lineNumber":11,"author":{"gitId":"rajobasu"},"content":"    public static final Index INDEX_THIRD_CUSTOMER \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"rajobasu":3,"-":9}}]
